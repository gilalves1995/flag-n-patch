/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(1);


/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.store = undefined;

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _reactDom = __webpack_require__(159);

	var _reactDom2 = _interopRequireDefault(_reactDom);

	var _reactRedux = __webpack_require__(160);

	var _redux = __webpack_require__(166);

	var _reduxThunk = __webpack_require__(199);

	var _reduxThunk2 = _interopRequireDefault(_reduxThunk);

	var _reduxPromiseMiddleware = __webpack_require__(200);

	var _reduxPromiseMiddleware2 = _interopRequireDefault(_reduxPromiseMiddleware);

	var _app = __webpack_require__(202);

	var _app2 = _interopRequireDefault(_app);

	var _reducers = __webpack_require__(641);

	var _reducers2 = _interopRequireDefault(_reducers);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	// Internal Modules
	// 3rd Party
	var createStoreWithMiddleware = (0, _redux.applyMiddleware)((0, _reduxPromiseMiddleware2.default)(), _reduxThunk2.default)(_redux.createStore);
	var store = exports.store = createStoreWithMiddleware(_reducers2.default);

	/*
	    Ponto de entrada da aplicação.

	    'Desenha' a aplicação no elemento da DOM com id #app.

	    O primeiro componente que engloba toda a aplicação é o Provider.
	    Este recebe a store e torna-a disponível a toda a aplicação.
	    Nota: Estar disponível a toda a aplicação não quer dizer que possa ser directamente
	    acedida. Os componentes devem mostrar a sua intenção de ler valores da store a partir
	    do connector 'connect' e os valores da mesma só se alteram a partir do dispatching
	    de acções, as quais chegarão aos reducers.
	*/
	_reactDom2.default.render(_react2.default.createElement(
	    _reactRedux.Provider,
	    { store: store },
	    _react2.default.createElement(_app2.default, null)
	), document.getElementById('app'));

/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	module.exports = __webpack_require__(3);


/***/ }),
/* 3 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule React
	 */

	'use strict';

	var ReactDOM = __webpack_require__(4);
	var ReactDOMServer = __webpack_require__(149);
	var ReactIsomorphic = __webpack_require__(153);

	var assign = __webpack_require__(40);
	var deprecated = __webpack_require__(158);

	// `version` will be added here by ReactIsomorphic.
	var React = {};

	assign(React, ReactIsomorphic);

	assign(React, {
	  // ReactDOM
	  findDOMNode: deprecated('findDOMNode', 'ReactDOM', 'react-dom', ReactDOM, ReactDOM.findDOMNode),
	  render: deprecated('render', 'ReactDOM', 'react-dom', ReactDOM, ReactDOM.render),
	  unmountComponentAtNode: deprecated('unmountComponentAtNode', 'ReactDOM', 'react-dom', ReactDOM, ReactDOM.unmountComponentAtNode),

	  // ReactDOMServer
	  renderToString: deprecated('renderToString', 'ReactDOMServer', 'react-dom/server', ReactDOMServer, ReactDOMServer.renderToString),
	  renderToStaticMarkup: deprecated('renderToStaticMarkup', 'ReactDOMServer', 'react-dom/server', ReactDOMServer, ReactDOMServer.renderToStaticMarkup)
	});

	React.__SECRET_DOM_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = ReactDOM;
	React.__SECRET_DOM_SERVER_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = ReactDOMServer;

	module.exports = React;

/***/ }),
/* 4 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOM
	 */

	/* globals __REACT_DEVTOOLS_GLOBAL_HOOK__*/

	'use strict';

	var ReactCurrentOwner = __webpack_require__(6);
	var ReactDOMTextComponent = __webpack_require__(7);
	var ReactDefaultInjection = __webpack_require__(72);
	var ReactInstanceHandles = __webpack_require__(46);
	var ReactMount = __webpack_require__(29);
	var ReactPerf = __webpack_require__(19);
	var ReactReconciler = __webpack_require__(51);
	var ReactUpdates = __webpack_require__(55);
	var ReactVersion = __webpack_require__(147);

	var findDOMNode = __webpack_require__(92);
	var renderSubtreeIntoContainer = __webpack_require__(148);
	var warning = __webpack_require__(26);

	ReactDefaultInjection.inject();

	var render = ReactPerf.measure('React', 'render', ReactMount.render);

	var React = {
	  findDOMNode: findDOMNode,
	  render: render,
	  unmountComponentAtNode: ReactMount.unmountComponentAtNode,
	  version: ReactVersion,

	  /* eslint-disable camelcase */
	  unstable_batchedUpdates: ReactUpdates.batchedUpdates,
	  unstable_renderSubtreeIntoContainer: renderSubtreeIntoContainer
	};

	// Inject the runtime into a devtools global hook regardless of browser.
	// Allows for debugging when the hook is injected on the page.
	/* eslint-enable camelcase */
	if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.inject === 'function') {
	  __REACT_DEVTOOLS_GLOBAL_HOOK__.inject({
	    CurrentOwner: ReactCurrentOwner,
	    InstanceHandles: ReactInstanceHandles,
	    Mount: ReactMount,
	    Reconciler: ReactReconciler,
	    TextComponent: ReactDOMTextComponent
	  });
	}

	if (process.env.NODE_ENV !== 'production') {
	  var ExecutionEnvironment = __webpack_require__(10);
	  if (ExecutionEnvironment.canUseDOM && window.top === window.self) {

	    // First check if devtools is not installed
	    if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined') {
	      // If we're in Chrome or Firefox, provide a download link if not installed.
	      if (navigator.userAgent.indexOf('Chrome') > -1 && navigator.userAgent.indexOf('Edge') === -1 || navigator.userAgent.indexOf('Firefox') > -1) {
	        console.debug('Download the React DevTools for a better development experience: ' + 'https://fb.me/react-devtools');
	      }
	    }

	    // If we're in IE8, check to see if we are in compatibility mode and provide
	    // information on preventing compatibility mode
	    var ieCompatibilityMode = document.documentMode && document.documentMode < 8;

	    process.env.NODE_ENV !== 'production' ? warning(!ieCompatibilityMode, 'Internet Explorer is running in compatibility mode; please add the ' + 'following tag to your HTML to prevent this from happening: ' + '<meta http-equiv="X-UA-Compatible" content="IE=edge" />') : undefined;

	    var expectedFeatures = [
	    // shims
	    Array.isArray, Array.prototype.every, Array.prototype.forEach, Array.prototype.indexOf, Array.prototype.map, Date.now, Function.prototype.bind, Object.keys, String.prototype.split, String.prototype.trim,

	    // shams
	    Object.create, Object.freeze];

	    for (var i = 0; i < expectedFeatures.length; i++) {
	      if (!expectedFeatures[i]) {
	        console.error('One or more ES5 shim/shams expected by React are not available: ' + 'https://fb.me/react-warning-polyfills');
	        break;
	      }
	    }
	  }
	}

	module.exports = React;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)))

/***/ }),
/* 5 */
/***/ (function(module, exports) {

	// shim for using process in browser
	var process = module.exports = {};

	// cached from whatever global is present so that test runners that stub it
	// don't break things.  But we need to wrap it in a try catch in case it is
	// wrapped in strict mode code which doesn't define any globals.  It's inside a
	// function because try/catches deoptimize in certain engines.

	var cachedSetTimeout;
	var cachedClearTimeout;

	function defaultSetTimout() {
	    throw new Error('setTimeout has not been defined');
	}
	function defaultClearTimeout () {
	    throw new Error('clearTimeout has not been defined');
	}
	(function () {
	    try {
	        if (typeof setTimeout === 'function') {
	            cachedSetTimeout = setTimeout;
	        } else {
	            cachedSetTimeout = defaultSetTimout;
	        }
	    } catch (e) {
	        cachedSetTimeout = defaultSetTimout;
	    }
	    try {
	        if (typeof clearTimeout === 'function') {
	            cachedClearTimeout = clearTimeout;
	        } else {
	            cachedClearTimeout = defaultClearTimeout;
	        }
	    } catch (e) {
	        cachedClearTimeout = defaultClearTimeout;
	    }
	} ())
	function runTimeout(fun) {
	    if (cachedSetTimeout === setTimeout) {
	        //normal enviroments in sane situations
	        return setTimeout(fun, 0);
	    }
	    // if setTimeout wasn't available but was latter defined
	    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
	        cachedSetTimeout = setTimeout;
	        return setTimeout(fun, 0);
	    }
	    try {
	        // when when somebody has screwed with setTimeout but no I.E. maddness
	        return cachedSetTimeout(fun, 0);
	    } catch(e){
	        try {
	            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
	            return cachedSetTimeout.call(null, fun, 0);
	        } catch(e){
	            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
	            return cachedSetTimeout.call(this, fun, 0);
	        }
	    }


	}
	function runClearTimeout(marker) {
	    if (cachedClearTimeout === clearTimeout) {
	        //normal enviroments in sane situations
	        return clearTimeout(marker);
	    }
	    // if clearTimeout wasn't available but was latter defined
	    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
	        cachedClearTimeout = clearTimeout;
	        return clearTimeout(marker);
	    }
	    try {
	        // when when somebody has screwed with setTimeout but no I.E. maddness
	        return cachedClearTimeout(marker);
	    } catch (e){
	        try {
	            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
	            return cachedClearTimeout.call(null, marker);
	        } catch (e){
	            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
	            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
	            return cachedClearTimeout.call(this, marker);
	        }
	    }



	}
	var queue = [];
	var draining = false;
	var currentQueue;
	var queueIndex = -1;

	function cleanUpNextTick() {
	    if (!draining || !currentQueue) {
	        return;
	    }
	    draining = false;
	    if (currentQueue.length) {
	        queue = currentQueue.concat(queue);
	    } else {
	        queueIndex = -1;
	    }
	    if (queue.length) {
	        drainQueue();
	    }
	}

	function drainQueue() {
	    if (draining) {
	        return;
	    }
	    var timeout = runTimeout(cleanUpNextTick);
	    draining = true;

	    var len = queue.length;
	    while(len) {
	        currentQueue = queue;
	        queue = [];
	        while (++queueIndex < len) {
	            if (currentQueue) {
	                currentQueue[queueIndex].run();
	            }
	        }
	        queueIndex = -1;
	        len = queue.length;
	    }
	    currentQueue = null;
	    draining = false;
	    runClearTimeout(timeout);
	}

	process.nextTick = function (fun) {
	    var args = new Array(arguments.length - 1);
	    if (arguments.length > 1) {
	        for (var i = 1; i < arguments.length; i++) {
	            args[i - 1] = arguments[i];
	        }
	    }
	    queue.push(new Item(fun, args));
	    if (queue.length === 1 && !draining) {
	        runTimeout(drainQueue);
	    }
	};

	// v8 likes predictible objects
	function Item(fun, array) {
	    this.fun = fun;
	    this.array = array;
	}
	Item.prototype.run = function () {
	    this.fun.apply(null, this.array);
	};
	process.title = 'browser';
	process.browser = true;
	process.env = {};
	process.argv = [];
	process.version = ''; // empty string to avoid regexp issues
	process.versions = {};

	function noop() {}

	process.on = noop;
	process.addListener = noop;
	process.once = noop;
	process.off = noop;
	process.removeListener = noop;
	process.removeAllListeners = noop;
	process.emit = noop;
	process.prependListener = noop;
	process.prependOnceListener = noop;

	process.listeners = function (name) { return [] }

	process.binding = function (name) {
	    throw new Error('process.binding is not supported');
	};

	process.cwd = function () { return '/' };
	process.chdir = function (dir) {
	    throw new Error('process.chdir is not supported');
	};
	process.umask = function() { return 0; };


/***/ }),
/* 6 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactCurrentOwner
	 */

	'use strict';

	/**
	 * Keeps track of the current owner.
	 *
	 * The current owner is the component who should own any components that are
	 * currently being constructed.
	 */
	var ReactCurrentOwner = {

	  /**
	   * @internal
	   * @type {ReactComponent}
	   */
	  current: null

	};

	module.exports = ReactCurrentOwner;

/***/ }),
/* 7 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMTextComponent
	 * @typechecks static-only
	 */

	'use strict';

	var DOMChildrenOperations = __webpack_require__(8);
	var DOMPropertyOperations = __webpack_require__(23);
	var ReactComponentBrowserEnvironment = __webpack_require__(27);
	var ReactMount = __webpack_require__(29);

	var assign = __webpack_require__(40);
	var escapeTextContentForBrowser = __webpack_require__(22);
	var setTextContent = __webpack_require__(21);
	var validateDOMNesting = __webpack_require__(71);

	/**
	 * Text nodes violate a couple assumptions that React makes about components:
	 *
	 *  - When mounting text into the DOM, adjacent text nodes are merged.
	 *  - Text nodes cannot be assigned a React root ID.
	 *
	 * This component is used to wrap strings in elements so that they can undergo
	 * the same reconciliation that is applied to elements.
	 *
	 * TODO: Investigate representing React components in the DOM with text nodes.
	 *
	 * @class ReactDOMTextComponent
	 * @extends ReactComponent
	 * @internal
	 */
	var ReactDOMTextComponent = function (props) {
	  // This constructor and its argument is currently used by mocks.
	};

	assign(ReactDOMTextComponent.prototype, {

	  /**
	   * @param {ReactText} text
	   * @internal
	   */
	  construct: function (text) {
	    // TODO: This is really a ReactText (ReactNode), not a ReactElement
	    this._currentElement = text;
	    this._stringText = '' + text;

	    // Properties
	    this._rootNodeID = null;
	    this._mountIndex = 0;
	  },

	  /**
	   * Creates the markup for this text node. This node is not intended to have
	   * any features besides containing text content.
	   *
	   * @param {string} rootID DOM ID of the root node.
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @return {string} Markup for this text node.
	   * @internal
	   */
	  mountComponent: function (rootID, transaction, context) {
	    if (process.env.NODE_ENV !== 'production') {
	      if (context[validateDOMNesting.ancestorInfoContextKey]) {
	        validateDOMNesting('span', null, context[validateDOMNesting.ancestorInfoContextKey]);
	      }
	    }

	    this._rootNodeID = rootID;
	    if (transaction.useCreateElement) {
	      var ownerDocument = context[ReactMount.ownerDocumentContextKey];
	      var el = ownerDocument.createElement('span');
	      DOMPropertyOperations.setAttributeForID(el, rootID);
	      // Populate node cache
	      ReactMount.getID(el);
	      setTextContent(el, this._stringText);
	      return el;
	    } else {
	      var escapedText = escapeTextContentForBrowser(this._stringText);

	      if (transaction.renderToStaticMarkup) {
	        // Normally we'd wrap this in a `span` for the reasons stated above, but
	        // since this is a situation where React won't take over (static pages),
	        // we can simply return the text as it is.
	        return escapedText;
	      }

	      return '<span ' + DOMPropertyOperations.createMarkupForID(rootID) + '>' + escapedText + '</span>';
	    }
	  },

	  /**
	   * Updates this component by updating the text content.
	   *
	   * @param {ReactText} nextText The next text content
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   */
	  receiveComponent: function (nextText, transaction) {
	    if (nextText !== this._currentElement) {
	      this._currentElement = nextText;
	      var nextStringText = '' + nextText;
	      if (nextStringText !== this._stringText) {
	        // TODO: Save this as pending props and use performUpdateIfNecessary
	        // and/or updateComponent to do the actual update for consistency with
	        // other component types?
	        this._stringText = nextStringText;
	        var node = ReactMount.getNode(this._rootNodeID);
	        DOMChildrenOperations.updateTextContent(node, nextStringText);
	      }
	    }
	  },

	  unmountComponent: function () {
	    ReactComponentBrowserEnvironment.unmountIDFromEnvironment(this._rootNodeID);
	  }

	});

	module.exports = ReactDOMTextComponent;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)))

/***/ }),
/* 8 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule DOMChildrenOperations
	 * @typechecks static-only
	 */

	'use strict';

	var Danger = __webpack_require__(9);
	var ReactMultiChildUpdateTypes = __webpack_require__(17);
	var ReactPerf = __webpack_require__(19);

	var setInnerHTML = __webpack_require__(20);
	var setTextContent = __webpack_require__(21);
	var invariant = __webpack_require__(14);

	/**
	 * Inserts `childNode` as a child of `parentNode` at the `index`.
	 *
	 * @param {DOMElement} parentNode Parent node in which to insert.
	 * @param {DOMElement} childNode Child node to insert.
	 * @param {number} index Index at which to insert the child.
	 * @internal
	 */
	function insertChildAt(parentNode, childNode, index) {
	  // By exploiting arrays returning `undefined` for an undefined index, we can
	  // rely exclusively on `insertBefore(node, null)` instead of also using
	  // `appendChild(node)`. However, using `undefined` is not allowed by all
	  // browsers so we must replace it with `null`.

	  // fix render order error in safari
	  // IE8 will throw error when index out of list size.
	  var beforeChild = index >= parentNode.childNodes.length ? null : parentNode.childNodes.item(index);

	  parentNode.insertBefore(childNode, beforeChild);
	}

	/**
	 * Operations for updating with DOM children.
	 */
	var DOMChildrenOperations = {

	  dangerouslyReplaceNodeWithMarkup: Danger.dangerouslyReplaceNodeWithMarkup,

	  updateTextContent: setTextContent,

	  /**
	   * Updates a component's children by processing a series of updates. The
	   * update configurations are each expected to have a `parentNode` property.
	   *
	   * @param {array<object>} updates List of update configurations.
	   * @param {array<string>} markupList List of markup strings.
	   * @internal
	   */
	  processUpdates: function (updates, markupList) {
	    var update;
	    // Mapping from parent IDs to initial child orderings.
	    var initialChildren = null;
	    // List of children that will be moved or removed.
	    var updatedChildren = null;

	    for (var i = 0; i < updates.length; i++) {
	      update = updates[i];
	      if (update.type === ReactMultiChildUpdateTypes.MOVE_EXISTING || update.type === ReactMultiChildUpdateTypes.REMOVE_NODE) {
	        var updatedIndex = update.fromIndex;
	        var updatedChild = update.parentNode.childNodes[updatedIndex];
	        var parentID = update.parentID;

	        !updatedChild ? process.env.NODE_ENV !== 'production' ? invariant(false, 'processUpdates(): Unable to find child %s of element. This ' + 'probably means the DOM was unexpectedly mutated (e.g., by the ' + 'browser), usually due to forgetting a <tbody> when using tables, ' + 'nesting tags like <form>, <p>, or <a>, or using non-SVG elements ' + 'in an <svg> parent. Try inspecting the child nodes of the element ' + 'with React ID `%s`.', updatedIndex, parentID) : invariant(false) : undefined;

	        initialChildren = initialChildren || {};
	        initialChildren[parentID] = initialChildren[parentID] || [];
	        initialChildren[parentID][updatedIndex] = updatedChild;

	        updatedChildren = updatedChildren || [];
	        updatedChildren.push(updatedChild);
	      }
	    }

	    var renderedMarkup;
	    // markupList is either a list of markup or just a list of elements
	    if (markupList.length && typeof markupList[0] === 'string') {
	      renderedMarkup = Danger.dangerouslyRenderMarkup(markupList);
	    } else {
	      renderedMarkup = markupList;
	    }

	    // Remove updated children first so that `toIndex` is consistent.
	    if (updatedChildren) {
	      for (var j = 0; j < updatedChildren.length; j++) {
	        updatedChildren[j].parentNode.removeChild(updatedChildren[j]);
	      }
	    }

	    for (var k = 0; k < updates.length; k++) {
	      update = updates[k];
	      switch (update.type) {
	        case ReactMultiChildUpdateTypes.INSERT_MARKUP:
	          insertChildAt(update.parentNode, renderedMarkup[update.markupIndex], update.toIndex);
	          break;
	        case ReactMultiChildUpdateTypes.MOVE_EXISTING:
	          insertChildAt(update.parentNode, initialChildren[update.parentID][update.fromIndex], update.toIndex);
	          break;
	        case ReactMultiChildUpdateTypes.SET_MARKUP:
	          setInnerHTML(update.parentNode, update.content);
	          break;
	        case ReactMultiChildUpdateTypes.TEXT_CONTENT:
	          setTextContent(update.parentNode, update.content);
	          break;
	        case ReactMultiChildUpdateTypes.REMOVE_NODE:
	          // Already removed by the for-loop above.
	          break;
	      }
	    }
	  }

	};

	ReactPerf.measureMethods(DOMChildrenOperations, 'DOMChildrenOperations', {
	  updateTextContent: 'updateTextContent'
	});

	module.exports = DOMChildrenOperations;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)))

/***/ }),
/* 9 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule Danger
	 * @typechecks static-only
	 */

	'use strict';

	var ExecutionEnvironment = __webpack_require__(10);

	var createNodesFromMarkup = __webpack_require__(11);
	var emptyFunction = __webpack_require__(16);
	var getMarkupWrap = __webpack_require__(15);
	var invariant = __webpack_require__(14);

	var OPEN_TAG_NAME_EXP = /^(<[^ \/>]+)/;
	var RESULT_INDEX_ATTR = 'data-danger-index';

	/**
	 * Extracts the `nodeName` from a string of markup.
	 *
	 * NOTE: Extracting the `nodeName` does not require a regular expression match
	 * because we make assumptions about React-generated markup (i.e. there are no
	 * spaces surrounding the opening tag and there is at least one attribute).
	 *
	 * @param {string} markup String of markup.
	 * @return {string} Node name of the supplied markup.
	 * @see http://jsperf.com/extract-nodename
	 */
	function getNodeName(markup) {
	  return markup.substring(1, markup.indexOf(' '));
	}

	var Danger = {

	  /**
	   * Renders markup into an array of nodes. The markup is expected to render
	   * into a list of root nodes. Also, the length of `resultList` and
	   * `markupList` should be the same.
	   *
	   * @param {array<string>} markupList List of markup strings to render.
	   * @return {array<DOMElement>} List of rendered nodes.
	   * @internal
	   */
	  dangerouslyRenderMarkup: function (markupList) {
	    !ExecutionEnvironment.canUseDOM ? process.env.NODE_ENV !== 'production' ? invariant(false, 'dangerouslyRenderMarkup(...): Cannot render markup in a worker ' + 'thread. Make sure `window` and `document` are available globally ' + 'before requiring React when unit testing or use ' + 'ReactDOMServer.renderToString for server rendering.') : invariant(false) : undefined;
	    var nodeName;
	    var markupByNodeName = {};
	    // Group markup by `nodeName` if a wrap is necessary, else by '*'.
	    for (var i = 0; i < markupList.length; i++) {
	      !markupList[i] ? process.env.NODE_ENV !== 'production' ? invariant(false, 'dangerouslyRenderMarkup(...): Missing markup.') : invariant(false) : undefined;
	      nodeName = getNodeName(markupList[i]);
	      nodeName = getMarkupWrap(nodeName) ? nodeName : '*';
	      markupByNodeName[nodeName] = markupByNodeName[nodeName] || [];
	      markupByNodeName[nodeName][i] = markupList[i];
	    }
	    var resultList = [];
	    var resultListAssignmentCount = 0;
	    for (nodeName in markupByNodeName) {
	      if (!markupByNodeName.hasOwnProperty(nodeName)) {
	        continue;
	      }
	      var markupListByNodeName = markupByNodeName[nodeName];

	      // This for-in loop skips the holes of the sparse array. The order of
	      // iteration should follow the order of assignment, which happens to match
	      // numerical index order, but we don't rely on that.
	      var resultIndex;
	      for (resultIndex in markupListByNodeName) {
	        if (markupListByNodeName.hasOwnProperty(resultIndex)) {
	          var markup = markupListByNodeName[resultIndex];

	          // Push the requested markup with an additional RESULT_INDEX_ATTR
	          // attribute.  If the markup does not start with a < character, it
	          // will be discarded below (with an appropriate console.error).
	          markupListByNodeName[resultIndex] = markup.replace(OPEN_TAG_NAME_EXP,
	          // This index will be parsed back out below.
	          '$1 ' + RESULT_INDEX_ATTR + '="' + resultIndex + '" ');
	        }
	      }

	      // Render each group of markup with similar wrapping `nodeName`.
	      var renderNodes = createNodesFromMarkup(markupListByNodeName.join(''), emptyFunction // Do nothing special with <script> tags.
	      );

	      for (var j = 0; j < renderNodes.length; ++j) {
	        var renderNode = renderNodes[j];
	        if (renderNode.hasAttribute && renderNode.hasAttribute(RESULT_INDEX_ATTR)) {

	          resultIndex = +renderNode.getAttribute(RESULT_INDEX_ATTR);
	          renderNode.removeAttribute(RESULT_INDEX_ATTR);

	          !!resultList.hasOwnProperty(resultIndex) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Danger: Assigning to an already-occupied result index.') : invariant(false) : undefined;

	          resultList[resultIndex] = renderNode;

	          // This should match resultList.length and markupList.length when
	          // we're done.
	          resultListAssignmentCount += 1;
	        } else if (process.env.NODE_ENV !== 'production') {
	          console.error('Danger: Discarding unexpected node:', renderNode);
	        }
	      }
	    }

	    // Although resultList was populated out of order, it should now be a dense
	    // array.
	    !(resultListAssignmentCount === resultList.length) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Danger: Did not assign to every index of resultList.') : invariant(false) : undefined;

	    !(resultList.length === markupList.length) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Danger: Expected markup to render %s nodes, but rendered %s.', markupList.length, resultList.length) : invariant(false) : undefined;

	    return resultList;
	  },

	  /**
	   * Replaces a node with a string of markup at its current position within its
	   * parent. The markup must render into a single root node.
	   *
	   * @param {DOMElement} oldChild Child node to replace.
	   * @param {string} markup Markup to render in place of the child node.
	   * @internal
	   */
	  dangerouslyReplaceNodeWithMarkup: function (oldChild, markup) {
	    !ExecutionEnvironment.canUseDOM ? process.env.NODE_ENV !== 'production' ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Cannot render markup in a ' + 'worker thread. Make sure `window` and `document` are available ' + 'globally before requiring React when unit testing or use ' + 'ReactDOMServer.renderToString() for server rendering.') : invariant(false) : undefined;
	    !markup ? process.env.NODE_ENV !== 'production' ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Missing markup.') : invariant(false) : undefined;
	    !(oldChild.tagName.toLowerCase() !== 'html') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Cannot replace markup of the ' + '<html> node. This is because browser quirks make this unreliable ' + 'and/or slow. If you want to render to the root you must use ' + 'server rendering. See ReactDOMServer.renderToString().') : invariant(false) : undefined;

	    var newChild;
	    if (typeof markup === 'string') {
	      newChild = createNodesFromMarkup(markup, emptyFunction)[0];
	    } else {
	      newChild = markup;
	    }
	    oldChild.parentNode.replaceChild(newChild, oldChild);
	  }

	};

	module.exports = Danger;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)))

/***/ }),
/* 10 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ExecutionEnvironment
	 */

	'use strict';

	var canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);

	/**
	 * Simple, lightweight module assisting with the detection and context of
	 * Worker. Helps avoid circular dependencies and allows code to reason about
	 * whether or not they are in a Worker, even if they never include the main
	 * `ReactWorker` dependency.
	 */
	var ExecutionEnvironment = {

	  canUseDOM: canUseDOM,

	  canUseWorkers: typeof Worker !== 'undefined',

	  canUseEventListeners: canUseDOM && !!(window.addEventListener || window.attachEvent),

	  canUseViewport: canUseDOM && !!window.screen,

	  isInWorker: !canUseDOM // For now, this is true - might change in the future.

	};

	module.exports = ExecutionEnvironment;

/***/ }),
/* 11 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule createNodesFromMarkup
	 * @typechecks
	 */

	/*eslint-disable fb-www/unsafe-html*/

	'use strict';

	var ExecutionEnvironment = __webpack_require__(10);

	var createArrayFromMixed = __webpack_require__(12);
	var getMarkupWrap = __webpack_require__(15);
	var invariant = __webpack_require__(14);

	/**
	 * Dummy container used to render all markup.
	 */
	var dummyNode = ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;

	/**
	 * Pattern used by `getNodeName`.
	 */
	var nodeNamePattern = /^\s*<(\w+)/;

	/**
	 * Extracts the `nodeName` of the first element in a string of markup.
	 *
	 * @param {string} markup String of markup.
	 * @return {?string} Node name of the supplied markup.
	 */
	function getNodeName(markup) {
	  var nodeNameMatch = markup.match(nodeNamePattern);
	  return nodeNameMatch && nodeNameMatch[1].toLowerCase();
	}

	/**
	 * Creates an array containing the nodes rendered from the supplied markup. The
	 * optionally supplied `handleScript` function will be invoked once for each
	 * <script> element that is rendered. If no `handleScript` function is supplied,
	 * an exception is thrown if any <script> elements are rendered.
	 *
	 * @param {string} markup A string of valid HTML markup.
	 * @param {?function} handleScript Invoked once for each rendered <script>.
	 * @return {array<DOMElement|DOMTextNode>} An array of rendered nodes.
	 */
	function createNodesFromMarkup(markup, handleScript) {
	  var node = dummyNode;
	  !!!dummyNode ? process.env.NODE_ENV !== 'production' ? invariant(false, 'createNodesFromMarkup dummy not initialized') : invariant(false) : undefined;
	  var nodeName = getNodeName(markup);

	  var wrap = nodeName && getMarkupWrap(nodeName);
	  if (wrap) {
	    node.innerHTML = wrap[1] + markup + wrap[2];

	    var wrapDepth = wrap[0];
	    while (wrapDepth--) {
	      node = node.lastChild;
	    }
	  } else {
	    node.innerHTML = markup;
	  }

	  var scripts = node.getElementsByTagName('script');
	  if (scripts.length) {
	    !handleScript ? process.env.NODE_ENV !== 'production' ? invariant(false, 'createNodesFromMarkup(...): Unexpected <script> element rendered.') : invariant(false) : undefined;
	    createArrayFromMixed(scripts).forEach(handleScript);
	  }

	  var nodes = createArrayFromMixed(node.childNodes);
	  while (node.lastChild) {
	    node.removeChild(node.lastChild);
	  }
	  return nodes;
	}

	module.exports = createNodesFromMarkup;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)))

/***/ }),
/* 12 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule createArrayFromMixed
	 * @typechecks
	 */

	'use strict';

	var toArray = __webpack_require__(13);

	/**
	 * Perform a heuristic test to determine if an object is "array-like".
	 *
	 *   A monk asked Joshu, a Zen master, "Has a dog Buddha nature?"
	 *   Joshu replied: "Mu."
	 *
	 * This function determines if its argument has "array nature": it returns
	 * true if the argument is an actual array, an `arguments' object, or an
	 * HTMLCollection (e.g. node.childNodes or node.getElementsByTagName()).
	 *
	 * It will return false for other array-like objects like Filelist.
	 *
	 * @param {*} obj
	 * @return {boolean}
	 */
	function hasArrayNature(obj) {
	  return(
	    // not null/false
	    !!obj && (
	    // arrays are objects, NodeLists are functions in Safari
	    typeof obj == 'object' || typeof obj == 'function') &&
	    // quacks like an array
	    'length' in obj &&
	    // not window
	    !('setInterval' in obj) &&
	    // no DOM node should be considered an array-like
	    // a 'select' element has 'length' and 'item' properties on IE8
	    typeof obj.nodeType != 'number' && (
	    // a real array
	    Array.isArray(obj) ||
	    // arguments
	    'callee' in obj ||
	    // HTMLCollection/NodeList
	    'item' in obj)
	  );
	}

	/**
	 * Ensure that the argument is an array by wrapping it in an array if it is not.
	 * Creates a copy of the argument if it is already an array.
	 *
	 * This is mostly useful idiomatically:
	 *
	 *   var createArrayFromMixed = require('createArrayFromMixed');
	 *
	 *   function takesOneOrMoreThings(things) {
	 *     things = createArrayFromMixed(things);
	 *     ...
	 *   }
	 *
	 * This allows you to treat `things' as an array, but accept scalars in the API.
	 *
	 * If you need to convert an array-like object, like `arguments`, into an array
	 * use toArray instead.
	 *
	 * @param {*} obj
	 * @return {array}
	 */
	function createArrayFromMixed(obj) {
	  if (!hasArrayNature(obj)) {
	    return [obj];
	  } else if (Array.isArray(obj)) {
	    return obj.slice();
	  } else {
	    return toArray(obj);
	  }
	}

	module.exports = createArrayFromMixed;

/***/ }),
/* 13 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule toArray
	 * @typechecks
	 */

	'use strict';

	var invariant = __webpack_require__(14);

	/**
	 * Convert array-like objects to arrays.
	 *
	 * This API assumes the caller knows the contents of the data type. For less
	 * well defined inputs use createArrayFromMixed.
	 *
	 * @param {object|function|filelist} obj
	 * @return {array}
	 */
	function toArray(obj) {
	  var length = obj.length;

	  // Some browse builtin objects can report typeof 'function' (e.g. NodeList in
	  // old versions of Safari).
	  !(!Array.isArray(obj) && (typeof obj === 'object' || typeof obj === 'function')) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'toArray: Array-like object expected') : invariant(false) : undefined;

	  !(typeof length === 'number') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'toArray: Object needs a length property') : invariant(false) : undefined;

	  !(length === 0 || length - 1 in obj) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'toArray: Object should have keys for indices') : invariant(false) : undefined;

	  // Old IE doesn't give collections access to hasOwnProperty. Assume inputs
	  // without method will throw during the slice call and skip straight to the
	  // fallback.
	  if (obj.hasOwnProperty) {
	    try {
	      return Array.prototype.slice.call(obj);
	    } catch (e) {
	      // IE < 9 does not support Array#slice on collections objects
	    }
	  }

	  // Fall back to copying key by key. This assumes all keys have a value,
	  // so will not preserve sparsely populated inputs.
	  var ret = Array(length);
	  for (var ii = 0; ii < length; ii++) {
	    ret[ii] = obj[ii];
	  }
	  return ret;
	}

	module.exports = toArray;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)))

/***/ }),
/* 14 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule invariant
	 */

	'use strict';

	/**
	 * Use invariant() to assert state which your program assumes to be true.
	 *
	 * Provide sprintf-style format (only %s is supported) and arguments
	 * to provide information about what broke and what you were
	 * expecting.
	 *
	 * The invariant message will be stripped in production, but the invariant
	 * will remain to ensure logic does not differ in production.
	 */

	function invariant(condition, format, a, b, c, d, e, f) {
	  if (process.env.NODE_ENV !== 'production') {
	    if (format === undefined) {
	      throw new Error('invariant requires an error message argument');
	    }
	  }

	  if (!condition) {
	    var error;
	    if (format === undefined) {
	      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');
	    } else {
	      var args = [a, b, c, d, e, f];
	      var argIndex = 0;
	      error = new Error(format.replace(/%s/g, function () {
	        return args[argIndex++];
	      }));
	      error.name = 'Invariant Violation';
	    }

	    error.framesToPop = 1; // we don't care about invariant's own frame
	    throw error;
	  }
	}

	module.exports = invariant;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)))

/***/ }),
/* 15 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getMarkupWrap
	 */

	/*eslint-disable fb-www/unsafe-html */

	'use strict';

	var ExecutionEnvironment = __webpack_require__(10);

	var invariant = __webpack_require__(14);

	/**
	 * Dummy container used to detect which wraps are necessary.
	 */
	var dummyNode = ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;

	/**
	 * Some browsers cannot use `innerHTML` to render certain elements standalone,
	 * so we wrap them, render the wrapped nodes, then extract the desired node.
	 *
	 * In IE8, certain elements cannot render alone, so wrap all elements ('*').
	 */

	var shouldWrap = {};

	var selectWrap = [1, '<select multiple="true">', '</select>'];
	var tableWrap = [1, '<table>', '</table>'];
	var trWrap = [3, '<table><tbody><tr>', '</tr></tbody></table>'];

	var svgWrap = [1, '<svg xmlns="http://www.w3.org/2000/svg">', '</svg>'];

	var markupWrap = {
	  '*': [1, '?<div>', '</div>'],

	  'area': [1, '<map>', '</map>'],
	  'col': [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>'],
	  'legend': [1, '<fieldset>', '</fieldset>'],
	  'param': [1, '<object>', '</object>'],
	  'tr': [2, '<table><tbody>', '</tbody></table>'],

	  'optgroup': selectWrap,
	  'option': selectWrap,

	  'caption': tableWrap,
	  'colgroup': tableWrap,
	  'tbody': tableWrap,
	  'tfoot': tableWrap,
	  'thead': tableWrap,

	  'td': trWrap,
	  'th': trWrap
	};

	// Initialize the SVG elements since we know they'll always need to be wrapped
	// consistently. If they are created inside a <div> they will be initialized in
	// the wrong namespace (and will not display).
	var svgElements = ['circle', 'clipPath', 'defs', 'ellipse', 'g', 'image', 'line', 'linearGradient', 'mask', 'path', 'pattern', 'polygon', 'polyline', 'radialGradient', 'rect', 'stop', 'text', 'tspan'];
	svgElements.forEach(function (nodeName) {
	  markupWrap[nodeName] = svgWrap;
	  shouldWrap[nodeName] = true;
	});

	/**
	 * Gets the markup wrap configuration for the supplied `nodeName`.
	 *
	 * NOTE: This lazily detects which wraps are necessary for the current browser.
	 *
	 * @param {string} nodeName Lowercase `nodeName`.
	 * @return {?array} Markup wrap configuration, if applicable.
	 */
	function getMarkupWrap(nodeName) {
	  !!!dummyNode ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Markup wrapping node not initialized') : invariant(false) : undefined;
	  if (!markupWrap.hasOwnProperty(nodeName)) {
	    nodeName = '*';
	  }
	  if (!shouldWrap.hasOwnProperty(nodeName)) {
	    if (nodeName === '*') {
	      dummyNode.innerHTML = '<link />';
	    } else {
	      dummyNode.innerHTML = '<' + nodeName + '></' + nodeName + '>';
	    }
	    shouldWrap[nodeName] = !dummyNode.firstChild;
	  }
	  return shouldWrap[nodeName] ? markupWrap[nodeName] : null;
	}

	module.exports = getMarkupWrap;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)))

/***/ }),
/* 16 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule emptyFunction
	 */

	"use strict";

	function makeEmptyFunction(arg) {
	  return function () {
	    return arg;
	  };
	}

	/**
	 * This function accepts and discards inputs; it has no side effects. This is
	 * primarily useful idiomatically for overridable function endpoints which
	 * always need to be callable, since JS lacks a null-call idiom ala Cocoa.
	 */
	function emptyFunction() {}

	emptyFunction.thatReturns = makeEmptyFunction;
	emptyFunction.thatReturnsFalse = makeEmptyFunction(false);
	emptyFunction.thatReturnsTrue = makeEmptyFunction(true);
	emptyFunction.thatReturnsNull = makeEmptyFunction(null);
	emptyFunction.thatReturnsThis = function () {
	  return this;
	};
	emptyFunction.thatReturnsArgument = function (arg) {
	  return arg;
	};

	module.exports = emptyFunction;

/***/ }),
/* 17 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactMultiChildUpdateTypes
	 */

	'use strict';

	var keyMirror = __webpack_require__(18);

	/**
	 * When a component's children are updated, a series of update configuration
	 * objects are created in order to batch and serialize the required changes.
	 *
	 * Enumerates all the possible types of update configurations.
	 *
	 * @internal
	 */
	var ReactMultiChildUpdateTypes = keyMirror({
	  INSERT_MARKUP: null,
	  MOVE_EXISTING: null,
	  REMOVE_NODE: null,
	  SET_MARKUP: null,
	  TEXT_CONTENT: null
	});

	module.exports = ReactMultiChildUpdateTypes;

/***/ }),
/* 18 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule keyMirror
	 * @typechecks static-only
	 */

	'use strict';

	var invariant = __webpack_require__(14);

	/**
	 * Constructs an enumeration with keys equal to their value.
	 *
	 * For example:
	 *
	 *   var COLORS = keyMirror({blue: null, red: null});
	 *   var myColor = COLORS.blue;
	 *   var isColorValid = !!COLORS[myColor];
	 *
	 * The last line could not be performed if the values of the generated enum were
	 * not equal to their keys.
	 *
	 *   Input:  {key1: val1, key2: val2}
	 *   Output: {key1: key1, key2: key2}
	 *
	 * @param {object} obj
	 * @return {object}
	 */
	var keyMirror = function (obj) {
	  var ret = {};
	  var key;
	  !(obj instanceof Object && !Array.isArray(obj)) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'keyMirror(...): Argument must be an object.') : invariant(false) : undefined;
	  for (key in obj) {
	    if (!obj.hasOwnProperty(key)) {
	      continue;
	    }
	    ret[key] = key;
	  }
	  return ret;
	};

	module.exports = keyMirror;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)))

/***/ }),
/* 19 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactPerf
	 * @typechecks static-only
	 */

	'use strict';

	/**
	 * ReactPerf is a general AOP system designed to measure performance. This
	 * module only has the hooks: see ReactDefaultPerf for the analysis tool.
	 */
	var ReactPerf = {
	  /**
	   * Boolean to enable/disable measurement. Set to false by default to prevent
	   * accidental logging and perf loss.
	   */
	  enableMeasure: false,

	  /**
	   * Holds onto the measure function in use. By default, don't measure
	   * anything, but we'll override this if we inject a measure function.
	   */
	  storedMeasure: _noMeasure,

	  /**
	   * @param {object} object
	   * @param {string} objectName
	   * @param {object<string>} methodNames
	   */
	  measureMethods: function (object, objectName, methodNames) {
	    if (process.env.NODE_ENV !== 'production') {
	      for (var key in methodNames) {
	        if (!methodNames.hasOwnProperty(key)) {
	          continue;
	        }
	        object[key] = ReactPerf.measure(objectName, methodNames[key], object[key]);
	      }
	    }
	  },

	  /**
	   * Use this to wrap methods you want to measure. Zero overhead in production.
	   *
	   * @param {string} objName
	   * @param {string} fnName
	   * @param {function} func
	   * @return {function}
	   */
	  measure: function (objName, fnName, func) {
	    if (process.env.NODE_ENV !== 'production') {
	      var measuredFunc = null;
	      var wrapper = function () {
	        if (ReactPerf.enableMeasure) {
	          if (!measuredFunc) {
	            measuredFunc = ReactPerf.storedMeasure(objName, fnName, func);
	          }
	          return measuredFunc.apply(this, arguments);
	        }
	        return func.apply(this, arguments);
	      };
	      wrapper.displayName = objName + '_' + fnName;
	      return wrapper;
	    }
	    return func;
	  },

	  injection: {
	    /**
	     * @param {function} measure
	     */
	    injectMeasure: function (measure) {
	      ReactPerf.storedMeasure = measure;
	    }
	  }
	};

	/**
	 * Simply passes through the measured function, without measuring it.
	 *
	 * @param {string} objName
	 * @param {string} fnName
	 * @param {function} func
	 * @return {function}
	 */
	function _noMeasure(objName, fnName, func) {
	  return func;
	}

	module.exports = ReactPerf;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)))

/***/ }),
/* 20 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule setInnerHTML
	 */

	/* globals MSApp */

	'use strict';

	var ExecutionEnvironment = __webpack_require__(10);

	var WHITESPACE_TEST = /^[ \r\n\t\f]/;
	var NONVISIBLE_TEST = /<(!--|link|noscript|meta|script|style)[ \r\n\t\f\/>]/;

	/**
	 * Set the innerHTML property of a node, ensuring that whitespace is preserved
	 * even in IE8.
	 *
	 * @param {DOMElement} node
	 * @param {string} html
	 * @internal
	 */
	var setInnerHTML = function (node, html) {
	  node.innerHTML = html;
	};

	// Win8 apps: Allow all html to be inserted
	if (typeof MSApp !== 'undefined' && MSApp.execUnsafeLocalFunction) {
	  setInnerHTML = function (node, html) {
	    MSApp.execUnsafeLocalFunction(function () {
	      node.innerHTML = html;
	    });
	  };
	}

	if (ExecutionEnvironment.canUseDOM) {
	  // IE8: When updating a just created node with innerHTML only leading
	  // whitespace is removed. When updating an existing node with innerHTML
	  // whitespace in root TextNodes is also collapsed.
	  // @see quirksmode.org/bugreports/archives/2004/11/innerhtml_and_t.html

	  // Feature detection; only IE8 is known to behave improperly like this.
	  var testElement = document.createElement('div');
	  testElement.innerHTML = ' ';
	  if (testElement.innerHTML === '') {
	    setInnerHTML = function (node, html) {
	      // Magic theory: IE8 supposedly differentiates between added and updated
	      // nodes when processing innerHTML, innerHTML on updated nodes suffers
	      // from worse whitespace behavior. Re-adding a node like this triggers
	      // the initial and more favorable whitespace behavior.
	      // TODO: What to do on a detached node?
	      if (node.parentNode) {
	        node.parentNode.replaceChild(node, node);
	      }

	      // We also implement a workaround for non-visible tags disappearing into
	      // thin air on IE8, this only happens if there is no visible text
	      // in-front of the non-visible tags. Piggyback on the whitespace fix
	      // and simply check if any non-visible tags appear in the source.
	      if (WHITESPACE_TEST.test(html) || html[0] === '<' && NONVISIBLE_TEST.test(html)) {
	        // Recover leading whitespace by temporarily prepending any character.
	        // \uFEFF has the potential advantage of being zero-width/invisible.
	        // UglifyJS drops U+FEFF chars when parsing, so use String.fromCharCode
	        // in hopes that this is preserved even if "\uFEFF" is transformed to
	        // the actual Unicode character (by Babel, for example).
	        // https://github.com/mishoo/UglifyJS2/blob/v2.4.20/lib/parse.js#L216
	        node.innerHTML = String.fromCharCode(0xFEFF) + html;

	        // deleteData leaves an empty `TextNode` which offsets the index of all
	        // children. Definitely want to avoid this.
	        var textNode = node.firstChild;
	        if (textNode.data.length === 1) {
	          node.removeChild(textNode);
	        } else {
	          textNode.deleteData(0, 1);
	        }
	      } else {
	        node.innerHTML = html;
	      }
	    };
	  }
	}

	module.exports = setInnerHTML;

/***/ }),
/* 21 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule setTextContent
	 */

	'use strict';

	var ExecutionEnvironment = __webpack_require__(10);
	var escapeTextContentForBrowser = __webpack_require__(22);
	var setInnerHTML = __webpack_require__(20);

	/**
	 * Set the textContent property of a node, ensuring that whitespace is preserved
	 * even in IE8. innerText is a poor substitute for textContent and, among many
	 * issues, inserts <br> instead of the literal newline chars. innerHTML behaves
	 * as it should.
	 *
	 * @param {DOMElement} node
	 * @param {string} text
	 * @internal
	 */
	var setTextContent = function (node, text) {
	  node.textContent = text;
	};

	if (ExecutionEnvironment.canUseDOM) {
	  if (!('textContent' in document.documentElement)) {
	    setTextContent = function (node, text) {
	      setInnerHTML(node, escapeTextContentForBrowser(text));
	    };
	  }
	}

	module.exports = setTextContent;

/***/ }),
/* 22 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule escapeTextContentForBrowser
	 */

	'use strict';

	var ESCAPE_LOOKUP = {
	  '&': '&amp;',
	  '>': '&gt;',
	  '<': '&lt;',
	  '"': '&quot;',
	  '\'': '&#x27;'
	};

	var ESCAPE_REGEX = /[&><"']/g;

	function escaper(match) {
	  return ESCAPE_LOOKUP[match];
	}

	/**
	 * Escapes text to prevent scripting attacks.
	 *
	 * @param {*} text Text value to escape.
	 * @return {string} An escaped string.
	 */
	function escapeTextContentForBrowser(text) {
	  return ('' + text).replace(ESCAPE_REGEX, escaper);
	}

	module.exports = escapeTextContentForBrowser;

/***/ }),
/* 23 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule DOMPropertyOperations
	 * @typechecks static-only
	 */

	'use strict';

	var DOMProperty = __webpack_require__(24);
	var ReactPerf = __webpack_require__(19);

	var quoteAttributeValueForBrowser = __webpack_require__(25);
	var warning = __webpack_require__(26);

	// Simplified subset
	var VALID_ATTRIBUTE_NAME_REGEX = /^[a-zA-Z_][\w\.\-]*$/;
	var illegalAttributeNameCache = {};
	var validatedAttributeNameCache = {};

	function isAttributeNameSafe(attributeName) {
	  if (validatedAttributeNameCache.hasOwnProperty(attributeName)) {
	    return true;
	  }
	  if (illegalAttributeNameCache.hasOwnProperty(attributeName)) {
	    return false;
	  }
	  if (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName)) {
	    validatedAttributeNameCache[attributeName] = true;
	    return true;
	  }
	  illegalAttributeNameCache[attributeName] = true;
	  process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid attribute name: `%s`', attributeName) : undefined;
	  return false;
	}

	function shouldIgnoreValue(propertyInfo, value) {
	  return value == null || propertyInfo.hasBooleanValue && !value || propertyInfo.hasNumericValue && isNaN(value) || propertyInfo.hasPositiveNumericValue && value < 1 || propertyInfo.hasOverloadedBooleanValue && value === false;
	}

	if (process.env.NODE_ENV !== 'production') {
	  var reactProps = {
	    children: true,
	    dangerouslySetInnerHTML: true,
	    key: true,
	    ref: true
	  };
	  var warnedProperties = {};

	  var warnUnknownProperty = function (name) {
	    if (reactProps.hasOwnProperty(name) && reactProps[name] || warnedProperties.hasOwnProperty(name) && warnedProperties[name]) {
	      return;
	    }

	    warnedProperties[name] = true;
	    var lowerCasedName = name.toLowerCase();

	    // data-* attributes should be lowercase; suggest the lowercase version
	    var standardName = DOMProperty.isCustomAttribute(lowerCasedName) ? lowerCasedName : DOMProperty.getPossibleStandardName.hasOwnProperty(lowerCasedName) ? DOMProperty.getPossibleStandardName[lowerCasedName] : null;

	    // For now, only warn when we have a suggested correction. This prevents
	    // logging too much when using transferPropsTo.
	    process.env.NODE_ENV !== 'production' ? warning(standardName == null, 'Unknown DOM property %s. Did you mean %s?', name, standardName) : undefined;
	  };
	}

	/**
	 * Operations for dealing with DOM properties.
	 */
	var DOMPropertyOperations = {

	  /**
	   * Creates markup for the ID property.
	   *
	   * @param {string} id Unescaped ID.
	   * @return {string} Markup string.
	   */
	  createMarkupForID: function (id) {
	    return DOMProperty.ID_ATTRIBUTE_NAME + '=' + quoteAttributeValueForBrowser(id);
	  },

	  setAttributeForID: function (node, id) {
	    node.setAttribute(DOMProperty.ID_ATTRIBUTE_NAME, id);
	  },

	  /**
	   * Creates markup for a property.
	   *
	   * @param {string} name
	   * @param {*} value
	   * @return {?string} Markup string, or null if the property was invalid.
	   */
	  createMarkupForProperty: function (name, value) {
	    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
	    if (propertyInfo) {
	      if (shouldIgnoreValue(propertyInfo, value)) {
	        return '';
	      }
	      var attributeName = propertyInfo.attributeName;
	      if (propertyInfo.hasBooleanValue || propertyInfo.hasOverloadedBooleanValue && value === true) {
	        return attributeName + '=""';
	      }
	      return attributeName + '=' + quoteAttributeValueForBrowser(value);
	    } else if (DOMProperty.isCustomAttribute(name)) {
	      if (value == null) {
	        return '';
	      }
	      return name + '=' + quoteAttributeValueForBrowser(value);
	    } else if (process.env.NODE_ENV !== 'production') {
	      warnUnknownProperty(name);
	    }
	    return null;
	  },

	  /**
	   * Creates markup for a custom property.
	   *
	   * @param {string} name
	   * @param {*} value
	   * @return {string} Markup string, or empty string if the property was invalid.
	   */
	  createMarkupForCustomAttribute: function (name, value) {
	    if (!isAttributeNameSafe(name) || value == null) {
	      return '';
	    }
	    return name + '=' + quoteAttributeValueForBrowser(value);
	  },

	  /**
	   * Sets the value for a property on a node.
	   *
	   * @param {DOMElement} node
	   * @param {string} name
	   * @param {*} value
	   */
	  setValueForProperty: function (node, name, value) {
	    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
	    if (propertyInfo) {
	      var mutationMethod = propertyInfo.mutationMethod;
	      if (mutationMethod) {
	        mutationMethod(node, value);
	      } else if (shouldIgnoreValue(propertyInfo, value)) {
	        this.deleteValueForProperty(node, name);
	      } else if (propertyInfo.mustUseAttribute) {
	        var attributeName = propertyInfo.attributeName;
	        var namespace = propertyInfo.attributeNamespace;
	        // `setAttribute` with objects becomes only `[object]` in IE8/9,
	        // ('' + value) makes it output the correct toString()-value.
	        if (namespace) {
	          node.setAttributeNS(namespace, attributeName, '' + value);
	        } else if (propertyInfo.hasBooleanValue || propertyInfo.hasOverloadedBooleanValue && value === true) {
	          node.setAttribute(attributeName, '');
	        } else {
	          node.setAttribute(attributeName, '' + value);
	        }
	      } else {
	        var propName = propertyInfo.propertyName;
	        // Must explicitly cast values for HAS_SIDE_EFFECTS-properties to the
	        // property type before comparing; only `value` does and is string.
	        if (!propertyInfo.hasSideEffects || '' + node[propName] !== '' + value) {
	          // Contrary to `setAttribute`, object properties are properly
	          // `toString`ed by IE8/9.
	          node[propName] = value;
	        }
	      }
	    } else if (DOMProperty.isCustomAttribute(name)) {
	      DOMPropertyOperations.setValueForAttribute(node, name, value);
	    } else if (process.env.NODE_ENV !== 'production') {
	      warnUnknownProperty(name);
	    }
	  },

	  setValueForAttribute: function (node, name, value) {
	    if (!isAttributeNameSafe(name)) {
	      return;
	    }
	    if (value == null) {
	      node.removeAttribute(name);
	    } else {
	      node.setAttribute(name, '' + value);
	    }
	  },

	  /**
	   * Deletes the value for a property on a node.
	   *
	   * @param {DOMElement} node
	   * @param {string} name
	   */
	  deleteValueForProperty: function (node, name) {
	    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
	    if (propertyInfo) {
	      var mutationMethod = propertyInfo.mutationMethod;
	      if (mutationMethod) {
	        mutationMethod(node, undefined);
	      } else if (propertyInfo.mustUseAttribute) {
	        node.removeAttribute(propertyInfo.attributeName);
	      } else {
	        var propName = propertyInfo.propertyName;
	        var defaultValue = DOMProperty.getDefaultValueForProperty(node.nodeName, propName);
	        if (!propertyInfo.hasSideEffects || '' + node[propName] !== defaultValue) {
	          node[propName] = defaultValue;
	        }
	      }
	    } else if (DOMProperty.isCustomAttribute(name)) {
	      node.removeAttribute(name);
	    } else if (process.env.NODE_ENV !== 'production') {
	      warnUnknownProperty(name);
	    }
	  }

	};

	ReactPerf.measureMethods(DOMPropertyOperations, 'DOMPropertyOperations', {
	  setValueForProperty: 'setValueForProperty',
	  setValueForAttribute: 'setValueForAttribute',
	  deleteValueForProperty: 'deleteValueForProperty'
	});

	module.exports = DOMPropertyOperations;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)))

/***/ }),
/* 24 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule DOMProperty
	 * @typechecks static-only
	 */

	'use strict';

	var invariant = __webpack_require__(14);

	function checkMask(value, bitmask) {
	  return (value & bitmask) === bitmask;
	}

	var DOMPropertyInjection = {
	  /**
	   * Mapping from normalized, camelcased property names to a configuration that
	   * specifies how the associated DOM property should be accessed or rendered.
	   */
	  MUST_USE_ATTRIBUTE: 0x1,
	  MUST_USE_PROPERTY: 0x2,
	  HAS_SIDE_EFFECTS: 0x4,
	  HAS_BOOLEAN_VALUE: 0x8,
	  HAS_NUMERIC_VALUE: 0x10,
	  HAS_POSITIVE_NUMERIC_VALUE: 0x20 | 0x10,
	  HAS_OVERLOADED_BOOLEAN_VALUE: 0x40,

	  /**
	   * Inject some specialized knowledge about the DOM. This takes a config object
	   * with the following properties:
	   *
	   * isCustomAttribute: function that given an attribute name will return true
	   * if it can be inserted into the DOM verbatim. Useful for data-* or aria-*
	   * attributes where it's impossible to enumerate all of the possible
	   * attribute names,
	   *
	   * Properties: object mapping DOM property name to one of the
	   * DOMPropertyInjection constants or null. If your attribute isn't in here,
	   * it won't get written to the DOM.
	   *
	   * DOMAttributeNames: object mapping React attribute name to the DOM
	   * attribute name. Attribute names not specified use the **lowercase**
	   * normalized name.
	   *
	   * DOMAttributeNamespaces: object mapping React attribute name to the DOM
	   * attribute namespace URL. (Attribute names not specified use no namespace.)
	   *
	   * DOMPropertyNames: similar to DOMAttributeNames but for DOM properties.
	   * Property names not specified use the normalized name.
	   *
	   * DOMMutationMethods: Properties that require special mutation methods. If
	   * `value` is undefined, the mutation method should unset the property.
	   *
	   * @param {object} domPropertyConfig the config as described above.
	   */
	  injectDOMPropertyConfig: function (domPropertyConfig) {
	    var Injection = DOMPropertyInjection;
	    var Properties = domPropertyConfig.Properties || {};
	    var DOMAttributeNamespaces = domPropertyConfig.DOMAttributeNamespaces || {};
	    var DOMAttributeNames = domPropertyConfig.DOMAttributeNames || {};
	    var DOMPropertyNames = domPropertyConfig.DOMPropertyNames || {};
	    var DOMMutationMethods = domPropertyConfig.DOMMutationMethods || {};

	    if (domPropertyConfig.isCustomAttribute) {
	      DOMProperty._isCustomAttributeFunctions.push(domPropertyConfig.isCustomAttribute);
	    }

	    for (var propName in Properties) {
	      !!DOMProperty.properties.hasOwnProperty(propName) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'injectDOMPropertyConfig(...): You\'re trying to inject DOM property ' + '\'%s\' which has already been injected. You may be accidentally ' + 'injecting the same DOM property config twice, or you may be ' + 'injecting two configs that have conflicting property names.', propName) : invariant(false) : undefined;

	      var lowerCased = propName.toLowerCase();
	      var propConfig = Properties[propName];

	      var propertyInfo = {
	        attributeName: lowerCased,
	        attributeNamespace: null,
	        propertyName: propName,
	        mutationMethod: null,

	        mustUseAttribute: checkMask(propConfig, Injection.MUST_USE_ATTRIBUTE),
	        mustUseProperty: checkMask(propConfig, Injection.MUST_USE_PROPERTY),
	        hasSideEffects: checkMask(propConfig, Injection.HAS_SIDE_EFFECTS),
	        hasBooleanValue: checkMask(propConfig, Injection.HAS_BOOLEAN_VALUE),
	        hasNumericValue: checkMask(propConfig, Injection.HAS_NUMERIC_VALUE),
	        hasPositiveNumericValue: checkMask(propConfig, Injection.HAS_POSITIVE_NUMERIC_VALUE),
	        hasOverloadedBooleanValue: checkMask(propConfig, Injection.HAS_OVERLOADED_BOOLEAN_VALUE)
	      };

	      !(!propertyInfo.mustUseAttribute || !propertyInfo.mustUseProperty) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'DOMProperty: Cannot require using both attribute and property: %s', propName) : invariant(false) : undefined;
	      !(propertyInfo.mustUseProperty || !propertyInfo.hasSideEffects) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'DOMProperty: Properties that have side effects must use property: %s', propName) : invariant(false) : undefined;
	      !(propertyInfo.hasBooleanValue + propertyInfo.hasNumericValue + propertyInfo.hasOverloadedBooleanValue <= 1) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'DOMProperty: Value can be one of boolean, overloaded boolean, or ' + 'numeric value, but not a combination: %s', propName) : invariant(false) : undefined;

	      if (process.env.NODE_ENV !== 'production') {
	        DOMProperty.getPossibleStandardName[lowerCased] = propName;
	      }

	      if (DOMAttributeNames.hasOwnProperty(propName)) {
	        var attributeName = DOMAttributeNames[propName];
	        propertyInfo.attributeName = attributeName;
	        if (process.env.NODE_ENV !== 'production') {
	          DOMProperty.getPossibleStandardName[attributeName] = propName;
	        }
	      }

	      if (DOMAttributeNamespaces.hasOwnProperty(propName)) {
	        propertyInfo.attributeNamespace = DOMAttributeNamespaces[propName];
	      }

	      if (DOMPropertyNames.hasOwnProperty(propName)) {
	        propertyInfo.propertyName = DOMPropertyNames[propName];
	      }

	      if (DOMMutationMethods.hasOwnProperty(propName)) {
	        propertyInfo.mutationMethod = DOMMutationMethods[propName];
	      }

	      DOMProperty.properties[propName] = propertyInfo;
	    }
	  }
	};
	var defaultValueCache = {};

	/**
	 * DOMProperty exports lookup objects that can be used like functions:
	 *
	 *   > DOMProperty.isValid['id']
	 *   true
	 *   > DOMProperty.isValid['foobar']
	 *   undefined
	 *
	 * Although this may be confusing, it performs better in general.
	 *
	 * @see http://jsperf.com/key-exists
	 * @see http://jsperf.com/key-missing
	 */
	var DOMProperty = {

	  ID_ATTRIBUTE_NAME: 'data-reactid',

	  /**
	   * Map from property "standard name" to an object with info about how to set
	   * the property in the DOM. Each object contains:
	   *
	   * attributeName:
	   *   Used when rendering markup or with `*Attribute()`.
	   * attributeNamespace
	   * propertyName:
	   *   Used on DOM node instances. (This includes properties that mutate due to
	   *   external factors.)
	   * mutationMethod:
	   *   If non-null, used instead of the property or `setAttribute()` after
	   *   initial render.
	   * mustUseAttribute:
	   *   Whether the property must be accessed and mutated using `*Attribute()`.
	   *   (This includes anything that fails `<propName> in <element>`.)
	   * mustUseProperty:
	   *   Whether the property must be accessed and mutated as an object property.
	   * hasSideEffects:
	   *   Whether or not setting a value causes side effects such as triggering
	   *   resources to be loaded or text selection changes. If true, we read from
	   *   the DOM before updating to ensure that the value is only set if it has
	   *   changed.
	   * hasBooleanValue:
	   *   Whether the property should be removed when set to a falsey value.
	   * hasNumericValue:
	   *   Whether the property must be numeric or parse as a numeric and should be
	   *   removed when set to a falsey value.
	   * hasPositiveNumericValue:
	   *   Whether the property must be positive numeric or parse as a positive
	   *   numeric and should be removed when set to a falsey value.
	   * hasOverloadedBooleanValue:
	   *   Whether the property can be used as a flag as well as with a value.
	   *   Removed when strictly equal to false; present without a value when
	   *   strictly equal to true; present with a value otherwise.
	   */
	  properties: {},

	  /**
	   * Mapping from lowercase property names to the properly cased version, used
	   * to warn in the case of missing properties. Available only in __DEV__.
	   * @type {Object}
	   */
	  getPossibleStandardName: process.env.NODE_ENV !== 'production' ? {} : null,

	  /**
	   * All of the isCustomAttribute() functions that have been injected.
	   */
	  _isCustomAttributeFunctions: [],

	  /**
	   * Checks whether a property name is a custom attribute.
	   * @method
	   */
	  isCustomAttribute: function (attributeName) {
	    for (var i = 0; i < DOMProperty._isCustomAttributeFunctions.length; i++) {
	      var isCustomAttributeFn = DOMProperty._isCustomAttributeFunctions[i];
	      if (isCustomAttributeFn(attributeName)) {
	        return true;
	      }
	    }
	    return false;
	  },

	  /**
	   * Returns the default property value for a DOM property (i.e., not an
	   * attribute). Most default values are '' or false, but not all. Worse yet,
	   * some (in particular, `type`) vary depending on the type of element.
	   *
	   * TODO: Is it better to grab all the possible properties when creating an
	   * element to avoid having to create the same element twice?
	   */
	  getDefaultValueForProperty: function (nodeName, prop) {
	    var nodeDefaults = defaultValueCache[nodeName];
	    var testElement;
	    if (!nodeDefaults) {
	      defaultValueCache[nodeName] = nodeDefaults = {};
	    }
	    if (!(prop in nodeDefaults)) {
	      testElement = document.createElement(nodeName);
	      nodeDefaults[prop] = testElement[prop];
	    }
	    return nodeDefaults[prop];
	  },

	  injection: DOMPropertyInjection
	};

	module.exports = DOMProperty;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)))

/***/ }),
/* 25 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule quoteAttributeValueForBrowser
	 */

	'use strict';

	var escapeTextContentForBrowser = __webpack_require__(22);

	/**
	 * Escapes attribute value to prevent scripting attacks.
	 *
	 * @param {*} value Value to escape.
	 * @return {string} An escaped string.
	 */
	function quoteAttributeValueForBrowser(value) {
	  return '"' + escapeTextContentForBrowser(value) + '"';
	}

	module.exports = quoteAttributeValueForBrowser;

/***/ }),
/* 26 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule warning
	 */

	'use strict';

	var emptyFunction = __webpack_require__(16);

	/**
	 * Similar to invariant but only logs a warning if the condition is not met.
	 * This can be used to log issues in development environments in critical
	 * paths. Removing the logging code for production environments will keep the
	 * same logic and follow the same code paths.
	 */

	var warning = emptyFunction;

	if (process.env.NODE_ENV !== 'production') {
	  warning = function (condition, format) {
	    for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
	      args[_key - 2] = arguments[_key];
	    }

	    if (format === undefined) {
	      throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');
	    }

	    if (format.indexOf('Failed Composite propType: ') === 0) {
	      return; // Ignore CompositeComponent proptype check.
	    }

	    if (!condition) {
	      var argIndex = 0;
	      var message = 'Warning: ' + format.replace(/%s/g, function () {
	        return args[argIndex++];
	      });
	      if (typeof console !== 'undefined') {
	        console.error(message);
	      }
	      try {
	        // --- Welcome to debugging React ---
	        // This error was thrown as a convenience so that you can use this stack
	        // to find the callsite that caused this warning to fire.
	        throw new Error(message);
	      } catch (x) {}
	    }
	  };
	}

	module.exports = warning;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)))

/***/ }),
/* 27 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactComponentBrowserEnvironment
	 */

	'use strict';

	var ReactDOMIDOperations = __webpack_require__(28);
	var ReactMount = __webpack_require__(29);

	/**
	 * Abstracts away all functionality of the reconciler that requires knowledge of
	 * the browser context. TODO: These callers should be refactored to avoid the
	 * need for this injection.
	 */
	var ReactComponentBrowserEnvironment = {

	  processChildrenUpdates: ReactDOMIDOperations.dangerouslyProcessChildrenUpdates,

	  replaceNodeWithMarkupByID: ReactDOMIDOperations.dangerouslyReplaceNodeWithMarkupByID,

	  /**
	   * If a particular environment requires that some resources be cleaned up,
	   * specify this in the injected Mixin. In the DOM, we would likely want to
	   * purge any cached node ID lookups.
	   *
	   * @private
	   */
	  unmountIDFromEnvironment: function (rootNodeID) {
	    ReactMount.purgeID(rootNodeID);
	  }

	};

	module.exports = ReactComponentBrowserEnvironment;

/***/ }),
/* 28 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMIDOperations
	 * @typechecks static-only
	 */

	'use strict';

	var DOMChildrenOperations = __webpack_require__(8);
	var DOMPropertyOperations = __webpack_require__(23);
	var ReactMount = __webpack_require__(29);
	var ReactPerf = __webpack_require__(19);

	var invariant = __webpack_require__(14);

	/**
	 * Errors for properties that should not be updated with `updatePropertyByID()`.
	 *
	 * @type {object}
	 * @private
	 */
	var INVALID_PROPERTY_ERRORS = {
	  dangerouslySetInnerHTML: '`dangerouslySetInnerHTML` must be set using `updateInnerHTMLByID()`.',
	  style: '`style` must be set using `updateStylesByID()`.'
	};

	/**
	 * Operations used to process updates to DOM nodes.
	 */
	var ReactDOMIDOperations = {

	  /**
	   * Updates a DOM node with new property values. This should only be used to
	   * update DOM properties in `DOMProperty`.
	   *
	   * @param {string} id ID of the node to update.
	   * @param {string} name A valid property name, see `DOMProperty`.
	   * @param {*} value New value of the property.
	   * @internal
	   */
	  updatePropertyByID: function (id, name, value) {
	    var node = ReactMount.getNode(id);
	    !!INVALID_PROPERTY_ERRORS.hasOwnProperty(name) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'updatePropertyByID(...): %s', INVALID_PROPERTY_ERRORS[name]) : invariant(false) : undefined;

	    // If we're updating to null or undefined, we should remove the property
	    // from the DOM node instead of inadvertantly setting to a string. This
	    // brings us in line with the same behavior we have on initial render.
	    if (value != null) {
	      DOMPropertyOperations.setValueForProperty(node, name, value);
	    } else {
	      DOMPropertyOperations.deleteValueForProperty(node, name);
	    }
	  },

	  /**
	   * Replaces a DOM node that exists in the document with markup.
	   *
	   * @param {string} id ID of child to be replaced.
	   * @param {string} markup Dangerous markup to inject in place of child.
	   * @internal
	   * @see {Danger.dangerouslyReplaceNodeWithMarkup}
	   */
	  dangerouslyReplaceNodeWithMarkupByID: function (id, markup) {
	    var node = ReactMount.getNode(id);
	    DOMChildrenOperations.dangerouslyReplaceNodeWithMarkup(node, markup);
	  },

	  /**
	   * Updates a component's children by processing a series of updates.
	   *
	   * @param {array<object>} updates List of update configurations.
	   * @param {array<string>} markup List of markup strings.
	   * @internal
	   */
	  dangerouslyProcessChildrenUpdates: function (updates, markup) {
	    for (var i = 0; i < updates.length; i++) {
	      updates[i].parentNode = ReactMount.getNode(updates[i].parentID);
	    }
	    DOMChildrenOperations.processUpdates(updates, markup);
	  }
	};

	ReactPerf.measureMethods(ReactDOMIDOperations, 'ReactDOMIDOperations', {
	  dangerouslyReplaceNodeWithMarkupByID: 'dangerouslyReplaceNodeWithMarkupByID',
	  dangerouslyProcessChildrenUpdates: 'dangerouslyProcessChildrenUpdates'
	});

	module.exports = ReactDOMIDOperations;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)))

/***/ }),
/* 29 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactMount
	 */

	'use strict';

	var DOMProperty = __webpack_require__(24);
	var ReactBrowserEventEmitter = __webpack_require__(30);
	var ReactCurrentOwner = __webpack_require__(6);
	var ReactDOMFeatureFlags = __webpack_require__(42);
	var ReactElement = __webpack_require__(43);
	var ReactEmptyComponentRegistry = __webpack_require__(45);
	var ReactInstanceHandles = __webpack_require__(46);
	var ReactInstanceMap = __webpack_require__(48);
	var ReactMarkupChecksum = __webpack_require__(49);
	var ReactPerf = __webpack_require__(19);
	var ReactReconciler = __webpack_require__(51);
	var ReactUpdateQueue = __webpack_require__(54);
	var ReactUpdates = __webpack_require__(55);

	var assign = __webpack_require__(40);
	var emptyObject = __webpack_require__(59);
	var containsNode = __webpack_require__(60);
	var instantiateReactComponent = __webpack_require__(63);
	var invariant = __webpack_require__(14);
	var setInnerHTML = __webpack_require__(20);
	var shouldUpdateReactComponent = __webpack_require__(68);
	var validateDOMNesting = __webpack_require__(71);
	var warning = __webpack_require__(26);

	var ATTR_NAME = DOMProperty.ID_ATTRIBUTE_NAME;
	var nodeCache = {};

	var ELEMENT_NODE_TYPE = 1;
	var DOC_NODE_TYPE = 9;
	var DOCUMENT_FRAGMENT_NODE_TYPE = 11;

	var ownerDocumentContextKey = '__ReactMount_ownerDocument$' + Math.random().toString(36).slice(2);

	/** Mapping from reactRootID to React component instance. */
	var instancesByReactRootID = {};

	/** Mapping from reactRootID to `container` nodes. */
	var containersByReactRootID = {};

	if (process.env.NODE_ENV !== 'production') {
	  /** __DEV__-only mapping from reactRootID to root elements. */
	  var rootElementsByReactRootID = {};
	}

	// Used to store breadth-first search state in findComponentRoot.
	var findComponentRootReusableArray = [];

	/**
	 * Finds the index of the first character
	 * that's not common between the two given strings.
	 *
	 * @return {number} the index of the character where the strings diverge
	 */
	function firstDifferenceIndex(string1, string2) {
	  var minLen = Math.min(string1.length, string2.length);
	  for (var i = 0; i < minLen; i++) {
	    if (string1.charAt(i) !== string2.charAt(i)) {
	      return i;
	    }
	  }
	  return string1.length === string2.length ? -1 : minLen;
	}

	/**
	 * @param {DOMElement|DOMDocument} container DOM element that may contain
	 * a React component
	 * @return {?*} DOM element that may have the reactRoot ID, or null.
	 */
	function getReactRootElementInContainer(container) {
	  if (!container) {
	    return null;
	  }

	  if (container.nodeType === DOC_NODE_TYPE) {
	    return container.documentElement;
	  } else {
	    return container.firstChild;
	  }
	}

	/**
	 * @param {DOMElement} container DOM element that may contain a React component.
	 * @return {?string} A "reactRoot" ID, if a React component is rendered.
	 */
	function getReactRootID(container) {
	  var rootElement = getReactRootElementInContainer(container);
	  return rootElement && ReactMount.getID(rootElement);
	}

	/**
	 * Accessing node[ATTR_NAME] or calling getAttribute(ATTR_NAME) on a form
	 * element can return its control whose name or ID equals ATTR_NAME. All
	 * DOM nodes support `getAttributeNode` but this can also get called on
	 * other objects so just return '' if we're given something other than a
	 * DOM node (such as window).
	 *
	 * @param {?DOMElement|DOMWindow|DOMDocument|DOMTextNode} node DOM node.
	 * @return {string} ID of the supplied `domNode`.
	 */
	function getID(node) {
	  var id = internalGetID(node);
	  if (id) {
	    if (nodeCache.hasOwnProperty(id)) {
	      var cached = nodeCache[id];
	      if (cached !== node) {
	        !!isValid(cached, id) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactMount: Two valid but unequal nodes with the same `%s`: %s', ATTR_NAME, id) : invariant(false) : undefined;

	        nodeCache[id] = node;
	      }
	    } else {
	      nodeCache[id] = node;
	    }
	  }

	  return id;
	}

	function internalGetID(node) {
	  // If node is something like a window, document, or text node, none of
	  // which support attributes or a .getAttribute method, gracefully return
	  // the empty string, as if the attribute were missing.
	  return node && node.getAttribute && node.getAttribute(ATTR_NAME) || '';
	}

	/**
	 * Sets the React-specific ID of the given node.
	 *
	 * @param {DOMElement} node The DOM node whose ID will be set.
	 * @param {string} id The value of the ID attribute.
	 */
	function setID(node, id) {
	  var oldID = internalGetID(node);
	  if (oldID !== id) {
	    delete nodeCache[oldID];
	  }
	  node.setAttribute(ATTR_NAME, id);
	  nodeCache[id] = node;
	}

	/**
	 * Finds the node with the supplied React-generated DOM ID.
	 *
	 * @param {string} id A React-generated DOM ID.
	 * @return {DOMElement} DOM node with the suppled `id`.
	 * @internal
	 */
	function getNode(id) {
	  if (!nodeCache.hasOwnProperty(id) || !isValid(nodeCache[id], id)) {
	    nodeCache[id] = ReactMount.findReactNodeByID(id);
	  }
	  return nodeCache[id];
	}

	/**
	 * Finds the node with the supplied public React instance.
	 *
	 * @param {*} instance A public React instance.
	 * @return {?DOMElement} DOM node with the suppled `id`.
	 * @internal
	 */
	function getNodeFromInstance(instance) {
	  var id = ReactInstanceMap.get(instance)._rootNodeID;
	  if (ReactEmptyComponentRegistry.isNullComponentID(id)) {
	    return null;
	  }
	  if (!nodeCache.hasOwnProperty(id) || !isValid(nodeCache[id], id)) {
	    nodeCache[id] = ReactMount.findReactNodeByID(id);
	  }
	  return nodeCache[id];
	}

	/**
	 * A node is "valid" if it is contained by a currently mounted container.
	 *
	 * This means that the node does not have to be contained by a document in
	 * order to be considered valid.
	 *
	 * @param {?DOMElement} node The candidate DOM node.
	 * @param {string} id The expected ID of the node.
	 * @return {boolean} Whether the node is contained by a mounted container.
	 */
	function isValid(node, id) {
	  if (node) {
	    !(internalGetID(node) === id) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactMount: Unexpected modification of `%s`', ATTR_NAME) : invariant(false) : undefined;

	    var container = ReactMount.findReactContainerForID(id);
	    if (container && containsNode(container, node)) {
	      return true;
	    }
	  }

	  return false;
	}

	/**
	 * Causes the cache to forget about one React-specific ID.
	 *
	 * @param {string} id The ID to forget.
	 */
	function purgeID(id) {
	  delete nodeCache[id];
	}

	var deepestNodeSoFar = null;
	function findDeepestCachedAncestorImpl(ancestorID) {
	  var ancestor = nodeCache[ancestorID];
	  if (ancestor && isValid(ancestor, ancestorID)) {
	    deepestNodeSoFar = ancestor;
	  } else {
	    // This node isn't populated in the cache, so presumably none of its
	    // descendants are. Break out of the loop.
	    return false;
	  }
	}

	/**
	 * Return the deepest cached node whose ID is a prefix of `targetID`.
	 */
	function findDeepestCachedAncestor(targetID) {
	  deepestNodeSoFar = null;
	  ReactInstanceHandles.traverseAncestors(targetID, findDeepestCachedAncestorImpl);

	  var foundNode = deepestNodeSoFar;
	  deepestNodeSoFar = null;
	  return foundNode;
	}

	/**
	 * Mounts this component and inserts it into the DOM.
	 *
	 * @param {ReactComponent} componentInstance The instance to mount.
	 * @param {string} rootID DOM ID of the root node.
	 * @param {DOMElement} container DOM element to mount into.
	 * @param {ReactReconcileTransaction} transaction
	 * @param {boolean} shouldReuseMarkup If true, do not insert markup
	 */
	function mountComponentIntoNode(componentInstance, rootID, container, transaction, shouldReuseMarkup, context) {
	  if (ReactDOMFeatureFlags.useCreateElement) {
	    context = assign({}, context);
	    if (container.nodeType === DOC_NODE_TYPE) {
	      context[ownerDocumentContextKey] = container;
	    } else {
	      context[ownerDocumentContextKey] = container.ownerDocument;
	    }
	  }
	  if (process.env.NODE_ENV !== 'production') {
	    if (context === emptyObject) {
	      context = {};
	    }
	    var tag = container.nodeName.toLowerCase();
	    context[validateDOMNesting.ancestorInfoContextKey] = validateDOMNesting.updatedAncestorInfo(null, tag, null);
	  }
	  var markup = ReactReconciler.mountComponent(componentInstance, rootID, transaction, context);
	  componentInstance._renderedComponent._topLevelWrapper = componentInstance;
	  ReactMount._mountImageIntoNode(markup, container, shouldReuseMarkup, transaction);
	}

	/**
	 * Batched mount.
	 *
	 * @param {ReactComponent} componentInstance The instance to mount.
	 * @param {string} rootID DOM ID of the root node.
	 * @param {DOMElement} container DOM element to mount into.
	 * @param {boolean} shouldReuseMarkup If true, do not insert markup
	 */
	function batchedMountComponentIntoNode(componentInstance, rootID, container, shouldReuseMarkup, context) {
	  var transaction = ReactUpdates.ReactReconcileTransaction.getPooled(
	  /* forceHTML */shouldReuseMarkup);
	  transaction.perform(mountComponentIntoNode, null, componentInstance, rootID, container, transaction, shouldReuseMarkup, context);
	  ReactUpdates.ReactReconcileTransaction.release(transaction);
	}

	/**
	 * Unmounts a component and removes it from the DOM.
	 *
	 * @param {ReactComponent} instance React component instance.
	 * @param {DOMElement} container DOM element to unmount from.
	 * @final
	 * @internal
	 * @see {ReactMount.unmountComponentAtNode}
	 */
	function unmountComponentFromNode(instance, container) {
	  ReactReconciler.unmountComponent(instance);

	  if (container.nodeType === DOC_NODE_TYPE) {
	    container = container.documentElement;
	  }

	  // http://jsperf.com/emptying-a-node
	  while (container.lastChild) {
	    container.removeChild(container.lastChild);
	  }
	}

	/**
	 * True if the supplied DOM node has a direct React-rendered child that is
	 * not a React root element. Useful for warning in `render`,
	 * `unmountComponentAtNode`, etc.
	 *
	 * @param {?DOMElement} node The candidate DOM node.
	 * @return {boolean} True if the DOM element contains a direct child that was
	 * rendered by React but is not a root element.
	 * @internal
	 */
	function hasNonRootReactChild(node) {
	  var reactRootID = getReactRootID(node);
	  return reactRootID ? reactRootID !== ReactInstanceHandles.getReactRootIDFromNodeID(reactRootID) : false;
	}

	/**
	 * Returns the first (deepest) ancestor of a node which is rendered by this copy
	 * of React.
	 */
	function findFirstReactDOMImpl(node) {
	  // This node might be from another React instance, so we make sure not to
	  // examine the node cache here
	  for (; node && node.parentNode !== node; node = node.parentNode) {
	    if (node.nodeType !== 1) {
	      // Not a DOMElement, therefore not a React component
	      continue;
	    }
	    var nodeID = internalGetID(node);
	    if (!nodeID) {
	      continue;
	    }
	    var reactRootID = ReactInstanceHandles.getReactRootIDFromNodeID(nodeID);

	    // If containersByReactRootID contains the container we find by crawling up
	    // the tree, we know that this instance of React rendered the node.
	    // nb. isValid's strategy (with containsNode) does not work because render
	    // trees may be nested and we don't want a false positive in that case.
	    var current = node;
	    var lastID;
	    do {
	      lastID = internalGetID(current);
	      current = current.parentNode;
	      if (current == null) {
	        // The passed-in node has been detached from the container it was
	        // originally rendered into.
	        return null;
	      }
	    } while (lastID !== reactRootID);

	    if (current === containersByReactRootID[reactRootID]) {
	      return node;
	    }
	  }
	  return null;
	}

	/**
	 * Temporary (?) hack so that we can store all top-level pending updates on
	 * composites instead of having to worry about different types of components
	 * here.
	 */
	var TopLevelWrapper = function () {};
	TopLevelWrapper.prototype.isReactComponent = {};
	if (process.env.NODE_ENV !== 'production') {
	  TopLevelWrapper.displayName = 'TopLevelWrapper';
	}
	TopLevelWrapper.prototype.render = function () {
	  // this.props is actually a ReactElement
	  return this.props;
	};

	/**
	 * Mounting is the process of initializing a React component by creating its
	 * representative DOM elements and inserting them into a supplied `container`.
	 * Any prior content inside `container` is destroyed in the process.
	 *
	 *   ReactMount.render(
	 *     component,
	 *     document.getElementById('container')
	 *   );
	 *
	 *   <div id="container">                   <-- Supplied `container`.
	 *     <div data-reactid=".3">              <-- Rendered reactRoot of React
	 *       // ...                                 component.
	 *     </div>
	 *   </div>
	 *
	 * Inside of `container`, the first element rendered is the "reactRoot".
	 */
	var ReactMount = {

	  TopLevelWrapper: TopLevelWrapper,

	  /** Exposed for debugging purposes **/
	  _instancesByReactRootID: instancesByReactRootID,

	  /**
	   * This is a hook provided to support rendering React components while
	   * ensuring that the apparent scroll position of its `container` does not
	   * change.
	   *
	   * @param {DOMElement} container The `container` being rendered into.
	   * @param {function} renderCallback This must be called once to do the render.
	   */
	  scrollMonitor: function (container, renderCallback) {
	    renderCallback();
	  },

	  /**
	   * Take a component that's already mounted into the DOM and replace its props
	   * @param {ReactComponent} prevComponent component instance already in the DOM
	   * @param {ReactElement} nextElement component instance to render
	   * @param {DOMElement} container container to render into
	   * @param {?function} callback function triggered on completion
	   */
	  _updateRootComponent: function (prevComponent, nextElement, container, callback) {
	    ReactMount.scrollMonitor(container, function () {
	      ReactUpdateQueue.enqueueElementInternal(prevComponent, nextElement);
	      if (callback) {
	        ReactUpdateQueue.enqueueCallbackInternal(prevComponent, callback);
	      }
	    });

	    if (process.env.NODE_ENV !== 'production') {
	      // Record the root element in case it later gets transplanted.
	      rootElementsByReactRootID[getReactRootID(container)] = getReactRootElementInContainer(container);
	    }

	    return prevComponent;
	  },

	  /**
	   * Register a component into the instance map and starts scroll value
	   * monitoring
	   * @param {ReactComponent} nextComponent component instance to render
	   * @param {DOMElement} container container to render into
	   * @return {string} reactRoot ID prefix
	   */
	  _registerComponent: function (nextComponent, container) {
	    !(container && (container.nodeType === ELEMENT_NODE_TYPE || container.nodeType === DOC_NODE_TYPE || container.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '_registerComponent(...): Target container is not a DOM element.') : invariant(false) : undefined;

	    ReactBrowserEventEmitter.ensureScrollValueMonitoring();

	    var reactRootID = ReactMount.registerContainer(container);
	    instancesByReactRootID[reactRootID] = nextComponent;
	    return reactRootID;
	  },

	  /**
	   * Render a new component into the DOM.
	   * @param {ReactElement} nextElement element to render
	   * @param {DOMElement} container container to render into
	   * @param {boolean} shouldReuseMarkup if we should skip the markup insertion
	   * @return {ReactComponent} nextComponent
	   */
	  _renderNewRootComponent: function (nextElement, container, shouldReuseMarkup, context) {
	    // Various parts of our code (such as ReactCompositeComponent's
	    // _renderValidatedComponent) assume that calls to render aren't nested;
	    // verify that that's the case.
	    process.env.NODE_ENV !== 'production' ? warning(ReactCurrentOwner.current == null, '_renderNewRootComponent(): Render methods should be a pure function ' + 'of props and state; triggering nested component updates from ' + 'render is not allowed. If necessary, trigger nested updates in ' + 'componentDidUpdate. Check the render method of %s.', ReactCurrentOwner.current && ReactCurrentOwner.current.getName() || 'ReactCompositeComponent') : undefined;

	    var componentInstance = instantiateReactComponent(nextElement, null);
	    var reactRootID = ReactMount._registerComponent(componentInstance, container);

	    // The initial render is synchronous but any updates that happen during
	    // rendering, in componentWillMount or componentDidMount, will be batched
	    // according to the current batching strategy.

	    ReactUpdates.batchedUpdates(batchedMountComponentIntoNode, componentInstance, reactRootID, container, shouldReuseMarkup, context);

	    if (process.env.NODE_ENV !== 'production') {
	      // Record the root element in case it later gets transplanted.
	      rootElementsByReactRootID[reactRootID] = getReactRootElementInContainer(container);
	    }

	    return componentInstance;
	  },

	  /**
	   * Renders a React component into the DOM in the supplied `container`.
	   *
	   * If the React component was previously rendered into `container`, this will
	   * perform an update on it and only mutate the DOM as necessary to reflect the
	   * latest React component.
	   *
	   * @param {ReactComponent} parentComponent The conceptual parent of this render tree.
	   * @param {ReactElement} nextElement Component element to render.
	   * @param {DOMElement} container DOM element to render into.
	   * @param {?function} callback function triggered on completion
	   * @return {ReactComponent} Component instance rendered in `container`.
	   */
	  renderSubtreeIntoContainer: function (parentComponent, nextElement, container, callback) {
	    !(parentComponent != null && parentComponent._reactInternalInstance != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'parentComponent must be a valid React Component') : invariant(false) : undefined;
	    return ReactMount._renderSubtreeIntoContainer(parentComponent, nextElement, container, callback);
	  },

	  _renderSubtreeIntoContainer: function (parentComponent, nextElement, container, callback) {
	    !ReactElement.isValidElement(nextElement) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactDOM.render(): Invalid component element.%s', typeof nextElement === 'string' ? ' Instead of passing an element string, make sure to instantiate ' + 'it by passing it to React.createElement.' : typeof nextElement === 'function' ? ' Instead of passing a component class, make sure to instantiate ' + 'it by passing it to React.createElement.' :
	    // Check if it quacks like an element
	    nextElement != null && nextElement.props !== undefined ? ' This may be caused by unintentionally loading two independent ' + 'copies of React.' : '') : invariant(false) : undefined;

	    process.env.NODE_ENV !== 'production' ? warning(!container || !container.tagName || container.tagName.toUpperCase() !== 'BODY', 'render(): Rendering components directly into document.body is ' + 'discouraged, since its children are often manipulated by third-party ' + 'scripts and browser extensions. This may lead to subtle ' + 'reconciliation issues. Try rendering into a container element created ' + 'for your app.') : undefined;

	    var nextWrappedElement = new ReactElement(TopLevelWrapper, null, null, null, null, null, nextElement);

	    var prevComponent = instancesByReactRootID[getReactRootID(container)];

	    if (prevComponent) {
	      var prevWrappedElement = prevComponent._currentElement;
	      var prevElement = prevWrappedElement.props;
	      if (shouldUpdateReactComponent(prevElement, nextElement)) {
	        var publicInst = prevComponent._renderedComponent.getPublicInstance();
	        var updatedCallback = callback && function () {
	          callback.call(publicInst);
	        };
	        ReactMount._updateRootComponent(prevComponent, nextWrappedElement, container, updatedCallback);
	        return publicInst;
	      } else {
	        ReactMount.unmountComponentAtNode(container);
	      }
	    }

	    var reactRootElement = getReactRootElementInContainer(container);
	    var containerHasReactMarkup = reactRootElement && !!internalGetID(reactRootElement);
	    var containerHasNonRootReactChild = hasNonRootReactChild(container);

	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(!containerHasNonRootReactChild, 'render(...): Replacing React-rendered children with a new root ' + 'component. If you intended to update the children of this node, ' + 'you should instead have the existing children update their state ' + 'and render the new components instead of calling ReactDOM.render.') : undefined;

	      if (!containerHasReactMarkup || reactRootElement.nextSibling) {
	        var rootElementSibling = reactRootElement;
	        while (rootElementSibling) {
	          if (internalGetID(rootElementSibling)) {
	            process.env.NODE_ENV !== 'production' ? warning(false, 'render(): Target node has markup rendered by React, but there ' + 'are unrelated nodes as well. This is most commonly caused by ' + 'white-space inserted around server-rendered markup.') : undefined;
	            break;
	          }
	          rootElementSibling = rootElementSibling.nextSibling;
	        }
	      }
	    }

	    var shouldReuseMarkup = containerHasReactMarkup && !prevComponent && !containerHasNonRootReactChild;
	    var component = ReactMount._renderNewRootComponent(nextWrappedElement, container, shouldReuseMarkup, parentComponent != null ? parentComponent._reactInternalInstance._processChildContext(parentComponent._reactInternalInstance._context) : emptyObject)._renderedComponent.getPublicInstance();
	    if (callback) {
	      callback.call(component);
	    }
	    return component;
	  },

	  /**
	   * Renders a React component into the DOM in the supplied `container`.
	   *
	   * If the React component was previously rendered into `container`, this will
	   * perform an update on it and only mutate the DOM as necessary to reflect the
	   * latest React component.
	   *
	   * @param {ReactElement} nextElement Component element to render.
	   * @param {DOMElement} container DOM element to render into.
	   * @param {?function} callback function triggered on completion
	   * @return {ReactComponent} Component instance rendered in `container`.
	   */
	  render: function (nextElement, container, callback) {
	    return ReactMount._renderSubtreeIntoContainer(null, nextElement, container, callback);
	  },

	  /**
	   * Registers a container node into which React components will be rendered.
	   * This also creates the "reactRoot" ID that will be assigned to the element
	   * rendered within.
	   *
	   * @param {DOMElement} container DOM element to register as a container.
	   * @return {string} The "reactRoot" ID of elements rendered within.
	   */
	  registerContainer: function (container) {
	    var reactRootID = getReactRootID(container);
	    if (reactRootID) {
	      // If one exists, make sure it is a valid "reactRoot" ID.
	      reactRootID = ReactInstanceHandles.getReactRootIDFromNodeID(reactRootID);
	    }
	    if (!reactRootID) {
	      // No valid "reactRoot" ID found, create one.
	      reactRootID = ReactInstanceHandles.createReactRootID();
	    }
	    containersByReactRootID[reactRootID] = container;
	    return reactRootID;
	  },

	  /**
	   * Unmounts and destroys the React component rendered in the `container`.
	   *
	   * @param {DOMElement} container DOM element containing a React component.
	   * @return {boolean} True if a component was found in and unmounted from
	   *                   `container`
	   */
	  unmountComponentAtNode: function (container) {
	    // Various parts of our code (such as ReactCompositeComponent's
	    // _renderValidatedComponent) assume that calls to render aren't nested;
	    // verify that that's the case. (Strictly speaking, unmounting won't cause a
	    // render but we still don't expect to be in a render call here.)
	    process.env.NODE_ENV !== 'production' ? warning(ReactCurrentOwner.current == null, 'unmountComponentAtNode(): Render methods should be a pure function ' + 'of props and state; triggering nested component updates from render ' + 'is not allowed. If necessary, trigger nested updates in ' + 'componentDidUpdate. Check the render method of %s.', ReactCurrentOwner.current && ReactCurrentOwner.current.getName() || 'ReactCompositeComponent') : undefined;

	    !(container && (container.nodeType === ELEMENT_NODE_TYPE || container.nodeType === DOC_NODE_TYPE || container.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE)) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'unmountComponentAtNode(...): Target container is not a DOM element.') : invariant(false) : undefined;

	    var reactRootID = getReactRootID(container);
	    var component = instancesByReactRootID[reactRootID];
	    if (!component) {
	      // Check if the node being unmounted was rendered by React, but isn't a
	      // root node.
	      var containerHasNonRootReactChild = hasNonRootReactChild(container);

	      // Check if the container itself is a React root node.
	      var containerID = internalGetID(container);
	      var isContainerReactRoot = containerID && containerID === ReactInstanceHandles.getReactRootIDFromNodeID(containerID);

	      if (process.env.NODE_ENV !== 'production') {
	        process.env.NODE_ENV !== 'production' ? warning(!containerHasNonRootReactChild, 'unmountComponentAtNode(): The node you\'re attempting to unmount ' + 'was rendered by React and is not a top-level container. %s', isContainerReactRoot ? 'You may have accidentally passed in a React root node instead ' + 'of its container.' : 'Instead, have the parent component update its state and ' + 'rerender in order to remove this component.') : undefined;
	      }

	      return false;
	    }
	    ReactUpdates.batchedUpdates(unmountComponentFromNode, component, container);
	    delete instancesByReactRootID[reactRootID];
	    delete containersByReactRootID[reactRootID];
	    if (process.env.NODE_ENV !== 'production') {
	      delete rootElementsByReactRootID[reactRootID];
	    }
	    return true;
	  },

	  /**
	   * Finds the container DOM element that contains React component to which the
	   * supplied DOM `id` belongs.
	   *
	   * @param {string} id The ID of an element rendered by a React component.
	   * @return {?DOMElement} DOM element that contains the `id`.
	   */
	  findReactContainerForID: function (id) {
	    var reactRootID = ReactInstanceHandles.getReactRootIDFromNodeID(id);
	    var container = containersByReactRootID[reactRootID];

	    if (process.env.NODE_ENV !== 'production') {
	      var rootElement = rootElementsByReactRootID[reactRootID];
	      if (rootElement && rootElement.parentNode !== container) {
	        process.env.NODE_ENV !== 'production' ? warning(
	        // Call internalGetID here because getID calls isValid which calls
	        // findReactContainerForID (this function).
	        internalGetID(rootElement) === reactRootID, 'ReactMount: Root element ID differed from reactRootID.') : undefined;
	        var containerChild = container.firstChild;
	        if (containerChild && reactRootID === internalGetID(containerChild)) {
	          // If the container has a new child with the same ID as the old
	          // root element, then rootElementsByReactRootID[reactRootID] is
	          // just stale and needs to be updated. The case that deserves a
	          // warning is when the container is empty.
	          rootElementsByReactRootID[reactRootID] = containerChild;
	        } else {
	          process.env.NODE_ENV !== 'production' ? warning(false, 'ReactMount: Root element has been removed from its original ' + 'container. New container: %s', rootElement.parentNode) : undefined;
	        }
	      }
	    }

	    return container;
	  },

	  /**
	   * Finds an element rendered by React with the supplied ID.
	   *
	   * @param {string} id ID of a DOM node in the React component.
	   * @return {DOMElement} Root DOM node of the React component.
	   */
	  findReactNodeByID: function (id) {
	    var reactRoot = ReactMount.findReactContainerForID(id);
	    return ReactMount.findComponentRoot(reactRoot, id);
	  },

	  /**
	   * Traverses up the ancestors of the supplied node to find a node that is a
	   * DOM representation of a React component rendered by this copy of React.
	   *
	   * @param {*} node
	   * @return {?DOMEventTarget}
	   * @internal
	   */
	  getFirstReactDOM: function (node) {
	    return findFirstReactDOMImpl(node);
	  },

	  /**
	   * Finds a node with the supplied `targetID` inside of the supplied
	   * `ancestorNode`.  Exploits the ID naming scheme to perform the search
	   * quickly.
	   *
	   * @param {DOMEventTarget} ancestorNode Search from this root.
	   * @pararm {string} targetID ID of the DOM representation of the component.
	   * @return {DOMEventTarget} DOM node with the supplied `targetID`.
	   * @internal
	   */
	  findComponentRoot: function (ancestorNode, targetID) {
	    var firstChildren = findComponentRootReusableArray;
	    var childIndex = 0;

	    var deepestAncestor = findDeepestCachedAncestor(targetID) || ancestorNode;

	    if (process.env.NODE_ENV !== 'production') {
	      // This will throw on the next line; give an early warning
	      process.env.NODE_ENV !== 'production' ? warning(deepestAncestor != null, 'React can\'t find the root component node for data-reactid value ' + '`%s`. If you\'re seeing this message, it probably means that ' + 'you\'ve loaded two copies of React on the page. At this time, only ' + 'a single copy of React can be loaded at a time.', targetID) : undefined;
	    }

	    firstChildren[0] = deepestAncestor.firstChild;
	    firstChildren.length = 1;

	    while (childIndex < firstChildren.length) {
	      var child = firstChildren[childIndex++];
	      var targetChild;

	      while (child) {
	        var childID = ReactMount.getID(child);
	        if (childID) {
	          // Even if we find the node we're looking for, we finish looping
	          // through its siblings to ensure they're cached so that we don't have
	          // to revisit this node again. Otherwise, we make n^2 calls to getID
	          // when visiting the many children of a single node in order.

	          if (targetID === childID) {
	            targetChild = child;
	          } else if (ReactInstanceHandles.isAncestorIDOf(childID, targetID)) {
	            // If we find a child whose ID is an ancestor of the given ID,
	            // then we can be sure that we only want to search the subtree
	            // rooted at this child, so we can throw out the rest of the
	            // search state.
	            firstChildren.length = childIndex = 0;
	            firstChildren.push(child.firstChild);
	          }
	        } else {
	          // If this child had no ID, then there's a chance that it was
	          // injected automatically by the browser, as when a `<table>`
	          // element sprouts an extra `<tbody>` child as a side effect of
	          // `.innerHTML` parsing. Optimistically continue down this
	          // branch, but not before examining the other siblings.
	          firstChildren.push(child.firstChild);
	        }

	        child = child.nextSibling;
	      }

	      if (targetChild) {
	        // Emptying firstChildren/findComponentRootReusableArray is
	        // not necessary for correctness, but it helps the GC reclaim
	        // any nodes that were left at the end of the search.
	        firstChildren.length = 0;

	        return targetChild;
	      }
	    }

	    firstChildren.length = 0;

	     true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'findComponentRoot(..., %s): Unable to find element. This probably ' + 'means the DOM was unexpectedly mutated (e.g., by the browser), ' + 'usually due to forgetting a <tbody> when using tables, nesting tags ' + 'like <form>, <p>, or <a>, or using non-SVG elements in an <svg> ' + 'parent. ' + 'Try inspecting the child nodes of the element with React ID `%s`.', targetID, ReactMount.getID(ancestorNode)) : invariant(false) : undefined;
	  },

	  _mountImageIntoNode: function (markup, container, shouldReuseMarkup, transaction) {
	    !(container && (container.nodeType === ELEMENT_NODE_TYPE || container.nodeType === DOC_NODE_TYPE || container.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE)) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'mountComponentIntoNode(...): Target container is not valid.') : invariant(false) : undefined;

	    if (shouldReuseMarkup) {
	      var rootElement = getReactRootElementInContainer(container);
	      if (ReactMarkupChecksum.canReuseMarkup(markup, rootElement)) {
	        return;
	      } else {
	        var checksum = rootElement.getAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);
	        rootElement.removeAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);

	        var rootMarkup = rootElement.outerHTML;
	        rootElement.setAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME, checksum);

	        var normalizedMarkup = markup;
	        if (process.env.NODE_ENV !== 'production') {
	          // because rootMarkup is retrieved from the DOM, various normalizations
	          // will have occurred which will not be present in `markup`. Here,
	          // insert markup into a <div> or <iframe> depending on the container
	          // type to perform the same normalizations before comparing.
	          var normalizer;
	          if (container.nodeType === ELEMENT_NODE_TYPE) {
	            normalizer = document.createElement('div');
	            normalizer.innerHTML = markup;
	            normalizedMarkup = normalizer.innerHTML;
	          } else {
	            normalizer = document.createElement('iframe');
	            document.body.appendChild(normalizer);
	            normalizer.contentDocument.write(markup);
	            normalizedMarkup = normalizer.contentDocument.documentElement.outerHTML;
	            document.body.removeChild(normalizer);
	          }
	        }

	        var diffIndex = firstDifferenceIndex(normalizedMarkup, rootMarkup);
	        var difference = ' (client) ' + normalizedMarkup.substring(diffIndex - 20, diffIndex + 20) + '\n (server) ' + rootMarkup.substring(diffIndex - 20, diffIndex + 20);

	        !(container.nodeType !== DOC_NODE_TYPE) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'You\'re trying to render a component to the document using ' + 'server rendering but the checksum was invalid. This usually ' + 'means you rendered a different component type or props on ' + 'the client from the one on the server, or your render() ' + 'methods are impure. React cannot handle this case due to ' + 'cross-browser quirks by rendering at the document root. You ' + 'should look for environment dependent code in your components ' + 'and ensure the props are the same client and server side:\n%s', difference) : invariant(false) : undefined;

	        if (process.env.NODE_ENV !== 'production') {
	          process.env.NODE_ENV !== 'production' ? warning(false, 'React attempted to reuse markup in a container but the ' + 'checksum was invalid. This generally means that you are ' + 'using server rendering and the markup generated on the ' + 'server was not what the client was expecting. React injected ' + 'new markup to compensate which works but you have lost many ' + 'of the benefits of server rendering. Instead, figure out ' + 'why the markup being generated is different on the client ' + 'or server:\n%s', difference) : undefined;
	        }
	      }
	    }

	    !(container.nodeType !== DOC_NODE_TYPE) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'You\'re trying to render a component to the document but ' + 'you didn\'t use server rendering. We can\'t do this ' + 'without using server rendering due to cross-browser quirks. ' + 'See ReactDOMServer.renderToString() for server rendering.') : invariant(false) : undefined;

	    if (transaction.useCreateElement) {
	      while (container.lastChild) {
	        container.removeChild(container.lastChild);
	      }
	      container.appendChild(markup);
	    } else {
	      setInnerHTML(container, markup);
	    }
	  },

	  ownerDocumentContextKey: ownerDocumentContextKey,

	  /**
	   * React ID utilities.
	   */

	  getReactRootID: getReactRootID,

	  getID: getID,

	  setID: setID,

	  getNode: getNode,

	  getNodeFromInstance: getNodeFromInstance,

	  isValid: isValid,

	  purgeID: purgeID
	};

	ReactPerf.measureMethods(ReactMount, 'ReactMount', {
	  _renderNewRootComponent: '_renderNewRootComponent',
	  _mountImageIntoNode: '_mountImageIntoNode'
	});

	module.exports = ReactMount;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)))

/***/ }),
/* 30 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactBrowserEventEmitter
	 * @typechecks static-only
	 */

	'use strict';

	var EventConstants = __webpack_require__(31);
	var EventPluginHub = __webpack_require__(32);
	var EventPluginRegistry = __webpack_require__(33);
	var ReactEventEmitterMixin = __webpack_require__(38);
	var ReactPerf = __webpack_require__(19);
	var ViewportMetrics = __webpack_require__(39);

	var assign = __webpack_require__(40);
	var isEventSupported = __webpack_require__(41);

	/**
	 * Summary of `ReactBrowserEventEmitter` event handling:
	 *
	 *  - Top-level delegation is used to trap most native browser events. This
	 *    may only occur in the main thread and is the responsibility of
	 *    ReactEventListener, which is injected and can therefore support pluggable
	 *    event sources. This is the only work that occurs in the main thread.
	 *
	 *  - We normalize and de-duplicate events to account for browser quirks. This
	 *    may be done in the worker thread.
	 *
	 *  - Forward these native events (with the associated top-level type used to
	 *    trap it) to `EventPluginHub`, which in turn will ask plugins if they want
	 *    to extract any synthetic events.
	 *
	 *  - The `EventPluginHub` will then process each event by annotating them with
	 *    "dispatches", a sequence of listeners and IDs that care about that event.
	 *
	 *  - The `EventPluginHub` then dispatches the events.
	 *
	 * Overview of React and the event system:
	 *
	 * +------------+    .
	 * |    DOM     |    .
	 * +------------+    .
	 *       |           .
	 *       v           .
	 * +------------+    .
	 * | ReactEvent |    .
	 * |  Listener  |    .
	 * +------------+    .                         +-----------+
	 *       |           .               +--------+|SimpleEvent|
	 *       |           .               |         |Plugin     |
	 * +-----|------+    .               v         +-----------+
	 * |     |      |    .    +--------------+                    +------------+
	 * |     +-----------.--->|EventPluginHub|                    |    Event   |
	 * |            |    .    |              |     +-----------+  | Propagators|
	 * | ReactEvent |    .    |              |     |TapEvent   |  |------------|
	 * |  Emitter   |    .    |              |<---+|Plugin     |  |other plugin|
	 * |            |    .    |              |     +-----------+  |  utilities |
	 * |     +-----------.--->|              |                    +------------+
	 * |     |      |    .    +--------------+
	 * +-----|------+    .                ^        +-----------+
	 *       |           .                |        |Enter/Leave|
	 *       +           .                +-------+|Plugin     |
	 * +-------------+   .                         +-----------+
	 * | application |   .
	 * |-------------|   .
	 * |             |   .
	 * |             |   .
	 * +-------------+   .
	 *                   .
	 *    React Core     .  General Purpose Event Plugin System
	 */

	var alreadyListeningTo = {};
	var isMonitoringScrollValue = false;
	var reactTopListenersCounter = 0;

	// For events like 'submit' which don't consistently bubble (which we trap at a
	// lower node than `document`), binding at `document` would cause duplicate
	// events so we don't include them here
	var topEventMapping = {
	  topAbort: 'abort',
	  topBlur: 'blur',
	  topCanPlay: 'canplay',
	  topCanPlayThrough: 'canplaythrough',
	  topChange: 'change',
	  topClick: 'click',
	  topCompositionEnd: 'compositionend',
	  topCompositionStart: 'compositionstart',
	  topCompositionUpdate: 'compositionupdate',
	  topContextMenu: 'contextmenu',
	  topCopy: 'copy',
	  topCut: 'cut',
	  topDoubleClick: 'dblclick',
	  topDrag: 'drag',
	  topDragEnd: 'dragend',
	  topDragEnter: 'dragenter',
	  topDragExit: 'dragexit',
	  topDragLeave: 'dragleave',
	  topDragOver: 'dragover',
	  topDragStart: 'dragstart',
	  topDrop: 'drop',
	  topDurationChange: 'durationchange',
	  topEmptied: 'emptied',
	  topEncrypted: 'encrypted',
	  topEnded: 'ended',
	  topError: 'error',
	  topFocus: 'focus',
	  topInput: 'input',
	  topKeyDown: 'keydown',
	  topKeyPress: 'keypress',
	  topKeyUp: 'keyup',
	  topLoadedData: 'loadeddata',
	  topLoadedMetadata: 'loadedmetadata',
	  topLoadStart: 'loadstart',
	  topMouseDown: 'mousedown',
	  topMouseMove: 'mousemove',
	  topMouseOut: 'mouseout',
	  topMouseOver: 'mouseover',
	  topMouseUp: 'mouseup',
	  topPaste: 'paste',
	  topPause: 'pause',
	  topPlay: 'play',
	  topPlaying: 'playing',
	  topProgress: 'progress',
	  topRateChange: 'ratechange',
	  topScroll: 'scroll',
	  topSeeked: 'seeked',
	  topSeeking: 'seeking',
	  topSelectionChange: 'selectionchange',
	  topStalled: 'stalled',
	  topSuspend: 'suspend',
	  topTextInput: 'textInput',
	  topTimeUpdate: 'timeupdate',
	  topTouchCancel: 'touchcancel',
	  topTouchEnd: 'touchend',
	  topTouchMove: 'touchmove',
	  topTouchStart: 'touchstart',
	  topVolumeChange: 'volumechange',
	  topWaiting: 'waiting',
	  topWheel: 'wheel'
	};

	/**
	 * To ensure no conflicts with other potential React instances on the page
	 */
	var topListenersIDKey = '_reactListenersID' + String(Math.random()).slice(2);

	function getListeningForDocument(mountAt) {
	  // In IE8, `mountAt` is a host object and doesn't have `hasOwnProperty`
	  // directly.
	  if (!Object.prototype.hasOwnProperty.call(mountAt, topListenersIDKey)) {
	    mountAt[topListenersIDKey] = reactTopListenersCounter++;
	    alreadyListeningTo[mountAt[topListenersIDKey]] = {};
	  }
	  return alreadyListeningTo[mountAt[topListenersIDKey]];
	}

	/**
	 * `ReactBrowserEventEmitter` is used to attach top-level event listeners. For
	 * example:
	 *
	 *   ReactBrowserEventEmitter.putListener('myID', 'onClick', myFunction);
	 *
	 * This would allocate a "registration" of `('onClick', myFunction)` on 'myID'.
	 *
	 * @internal
	 */
	var ReactBrowserEventEmitter = assign({}, ReactEventEmitterMixin, {

	  /**
	   * Injectable event backend
	   */
	  ReactEventListener: null,

	  injection: {
	    /**
	     * @param {object} ReactEventListener
	     */
	    injectReactEventListener: function (ReactEventListener) {
	      ReactEventListener.setHandleTopLevel(ReactBrowserEventEmitter.handleTopLevel);
	      ReactBrowserEventEmitter.ReactEventListener = ReactEventListener;
	    }
	  },

	  /**
	   * Sets whether or not any created callbacks should be enabled.
	   *
	   * @param {boolean} enabled True if callbacks should be enabled.
	   */
	  setEnabled: function (enabled) {
	    if (ReactBrowserEventEmitter.ReactEventListener) {
	      ReactBrowserEventEmitter.ReactEventListener.setEnabled(enabled);
	    }
	  },

	  /**
	   * @return {boolean} True if callbacks are enabled.
	   */
	  isEnabled: function () {
	    return !!(ReactBrowserEventEmitter.ReactEventListener && ReactBrowserEventEmitter.ReactEventListener.isEnabled());
	  },

	  /**
	   * We listen for bubbled touch events on the document object.
	   *
	   * Firefox v8.01 (and possibly others) exhibited strange behavior when
	   * mounting `onmousemove` events at some node that was not the document
	   * element. The symptoms were that if your mouse is not moving over something
	   * contained within that mount point (for example on the background) the
	   * top-level listeners for `onmousemove` won't be called. However, if you
	   * register the `mousemove` on the document object, then it will of course
	   * catch all `mousemove`s. This along with iOS quirks, justifies restricting
	   * top-level listeners to the document object only, at least for these
	   * movement types of events and possibly all events.
	   *
	   * @see http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html
	   *
	   * Also, `keyup`/`keypress`/`keydown` do not bubble to the window on IE, but
	   * they bubble to document.
	   *
	   * @param {string} registrationName Name of listener (e.g. `onClick`).
	   * @param {object} contentDocumentHandle Document which owns the container
	   */
	  listenTo: function (registrationName, contentDocumentHandle) {
	    var mountAt = contentDocumentHandle;
	    var isListening = getListeningForDocument(mountAt);
	    var dependencies = EventPluginRegistry.registrationNameDependencies[registrationName];

	    var topLevelTypes = EventConstants.topLevelTypes;
	    for (var i = 0; i < dependencies.length; i++) {
	      var dependency = dependencies[i];
	      if (!(isListening.hasOwnProperty(dependency) && isListening[dependency])) {
	        if (dependency === topLevelTypes.topWheel) {
	          if (isEventSupported('wheel')) {
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topWheel, 'wheel', mountAt);
	          } else if (isEventSupported('mousewheel')) {
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topWheel, 'mousewheel', mountAt);
	          } else {
	            // Firefox needs to capture a different mouse scroll event.
	            // @see http://www.quirksmode.org/dom/events/tests/scroll.html
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topWheel, 'DOMMouseScroll', mountAt);
	          }
	        } else if (dependency === topLevelTypes.topScroll) {

	          if (isEventSupported('scroll', true)) {
	            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelTypes.topScroll, 'scroll', mountAt);
	          } else {
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topScroll, 'scroll', ReactBrowserEventEmitter.ReactEventListener.WINDOW_HANDLE);
	          }
	        } else if (dependency === topLevelTypes.topFocus || dependency === topLevelTypes.topBlur) {

	          if (isEventSupported('focus', true)) {
	            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelTypes.topFocus, 'focus', mountAt);
	            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelTypes.topBlur, 'blur', mountAt);
	          } else if (isEventSupported('focusin')) {
	            // IE has `focusin` and `focusout` events which bubble.
	            // @see http://www.quirksmode.org/blog/archives/2008/04/delegating_the.html
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topFocus, 'focusin', mountAt);
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topBlur, 'focusout', mountAt);
	          }

	          // to make sure blur and focus event listeners are only attached once
	          isListening[topLevelTypes.topBlur] = true;
	          isListening[topLevelTypes.topFocus] = true;
	        } else if (topEventMapping.hasOwnProperty(dependency)) {
	          ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(dependency, topEventMapping[dependency], mountAt);
	        }

	        isListening[dependency] = true;
	      }
	    }
	  },

	  trapBubbledEvent: function (topLevelType, handlerBaseName, handle) {
	    return ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelType, handlerBaseName, handle);
	  },

	  trapCapturedEvent: function (topLevelType, handlerBaseName, handle) {
	    return ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelType, handlerBaseName, handle);
	  },

	  /**
	   * Listens to window scroll and resize events. We cache scroll values so that
	   * application code can access them without triggering reflows.
	   *
	   * NOTE: Scroll events do not bubble.
	   *
	   * @see http://www.quirksmode.org/dom/events/scroll.html
	   */
	  ensureScrollValueMonitoring: function () {
	    if (!isMonitoringScrollValue) {
	      var refresh = ViewportMetrics.refreshScrollValues;
	      ReactBrowserEventEmitter.ReactEventListener.monitorScrollValue(refresh);
	      isMonitoringScrollValue = true;
	    }
	  },

	  eventNameDispatchConfigs: EventPluginHub.eventNameDispatchConfigs,

	  registrationNameModules: EventPluginHub.registrationNameModules,

	  putListener: EventPluginHub.putListener,

	  getListener: EventPluginHub.getListener,

	  deleteListener: EventPluginHub.deleteListener,

	  deleteAllListeners: EventPluginHub.deleteAllListeners

	});

	ReactPerf.measureMethods(ReactBrowserEventEmitter, 'ReactBrowserEventEmitter', {
	  putListener: 'putListener',
	  deleteListener: 'deleteListener'
	});

	module.exports = ReactBrowserEventEmitter;

/***/ }),
/* 31 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule EventConstants
	 */

	'use strict';

	var keyMirror = __webpack_require__(18);

	var PropagationPhases = keyMirror({ bubbled: null, captured: null });

	/**
	 * Types of raw signals from the browser caught at the top level.
	 */
	var topLevelTypes = keyMirror({
	  topAbort: null,
	  topBlur: null,
	  topCanPlay: null,
	  topCanPlayThrough: null,
	  topChange: null,
	  topClick: null,
	  topCompositionEnd: null,
	  topCompositionStart: null,
	  topCompositionUpdate: null,
	  topContextMenu: null,
	  topCopy: null,
	  topCut: null,
	  topDoubleClick: null,
	  topDrag: null,
	  topDragEnd: null,
	  topDragEnter: null,
	  topDragExit: null,
	  topDragLeave: null,
	  topDragOver: null,
	  topDragStart: null,
	  topDrop: null,
	  topDurationChange: null,
	  topEmptied: null,
	  topEncrypted: null,
	  topEnded: null,
	  topError: null,
	  topFocus: null,
	  topInput: null,
	  topKeyDown: null,
	  topKeyPress: null,
	  topKeyUp: null,
	  topLoad: null,
	  topLoadedData: null,
	  topLoadedMetadata: null,
	  topLoadStart: null,
	  topMouseDown: null,
	  topMouseMove: null,
	  topMouseOut: null,
	  topMouseOver: null,
	  topMouseUp: null,
	  topPaste: null,
	  topPause: null,
	  topPlay: null,
	  topPlaying: null,
	  topProgress: null,
	  topRateChange: null,
	  topReset: null,
	  topScroll: null,
	  topSeeked: null,
	  topSeeking: null,
	  topSelectionChange: null,
	  topStalled: null,
	  topSubmit: null,
	  topSuspend: null,
	  topTextInput: null,
	  topTimeUpdate: null,
	  topTouchCancel: null,
	  topTouchEnd: null,
	  topTouchMove: null,
	  topTouchStart: null,
	  topVolumeChange: null,
	  topWaiting: null,
	  topWheel: null
	});

	var EventConstants = {
	  topLevelTypes: topLevelTypes,
	  PropagationPhases: PropagationPhases
	};

	module.exports = EventConstants;

/***/ }),
/* 32 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule EventPluginHub
	 */

	'use strict';

	var EventPluginRegistry = __webpack_require__(33);
	var EventPluginUtils = __webpack_require__(34);
	var ReactErrorUtils = __webpack_require__(35);

	var accumulateInto = __webpack_require__(36);
	var forEachAccumulated = __webpack_require__(37);
	var invariant = __webpack_require__(14);
	var warning = __webpack_require__(26);

	/**
	 * Internal store for event listeners
	 */
	var listenerBank = {};

	/**
	 * Internal queue of events that have accumulated their dispatches and are
	 * waiting to have their dispatches executed.
	 */
	var eventQueue = null;

	/**
	 * Dispatches an event and releases it back into the pool, unless persistent.
	 *
	 * @param {?object} event Synthetic event to be dispatched.
	 * @param {boolean} simulated If the event is simulated (changes exn behavior)
	 * @private
	 */
	var executeDispatchesAndRelease = function (event, simulated) {
	  if (event) {
	    EventPluginUtils.executeDispatchesInOrder(event, simulated);

	    if (!event.isPersistent()) {
	      event.constructor.release(event);
	    }
	  }
	};
	var executeDispatchesAndReleaseSimulated = function (e) {
	  return executeDispatchesAndRelease(e, true);
	};
	var executeDispatchesAndReleaseTopLevel = function (e) {
	  return executeDispatchesAndRelease(e, false);
	};

	/**
	 * - `InstanceHandle`: [required] Module that performs logical traversals of DOM
	 *   hierarchy given ids of the logical DOM elements involved.
	 */
	var InstanceHandle = null;

	function validateInstanceHandle() {
	  var valid = InstanceHandle && InstanceHandle.traverseTwoPhase && InstanceHandle.traverseEnterLeave;
	  process.env.NODE_ENV !== 'production' ? warning(valid, 'InstanceHandle not injected before use!') : undefined;
	}

	/**
	 * This is a unified interface for event plugins to be installed and configured.
	 *
	 * Event plugins can implement the following properties:
	 *
	 *   `extractEvents` {function(string, DOMEventTarget, string, object): *}
	 *     Required. When a top-level event is fired, this method is expected to
	 *     extract synthetic events that will in turn be queued and dispatched.
	 *
	 *   `eventTypes` {object}
	 *     Optional, plugins that fire events must publish a mapping of registration
	 *     names that are used to register listeners. Values of this mapping must
	 *     be objects that contain `registrationName` or `phasedRegistrationNames`.
	 *
	 *   `executeDispatch` {function(object, function, string)}
	 *     Optional, allows plugins to override how an event gets dispatched. By
	 *     default, the listener is simply invoked.
	 *
	 * Each plugin that is injected into `EventsPluginHub` is immediately operable.
	 *
	 * @public
	 */
	var EventPluginHub = {

	  /**
	   * Methods for injecting dependencies.
	   */
	  injection: {

	    /**
	     * @param {object} InjectedMount
	     * @public
	     */
	    injectMount: EventPluginUtils.injection.injectMount,

	    /**
	     * @param {object} InjectedInstanceHandle
	     * @public
	     */
	    injectInstanceHandle: function (InjectedInstanceHandle) {
	      InstanceHandle = InjectedInstanceHandle;
	      if (process.env.NODE_ENV !== 'production') {
	        validateInstanceHandle();
	      }
	    },

	    getInstanceHandle: function () {
	      if (process.env.NODE_ENV !== 'production') {
	        validateInstanceHandle();
	      }
	      return InstanceHandle;
	    },

	    /**
	     * @param {array} InjectedEventPluginOrder
	     * @public
	     */
	    injectEventPluginOrder: EventPluginRegistry.injectEventPluginOrder,

	    /**
	     * @param {object} injectedNamesToPlugins Map from names to plugin modules.
	     */
	    injectEventPluginsByName: EventPluginRegistry.injectEventPluginsByName

	  },

	  eventNameDispatchConfigs: EventPluginRegistry.eventNameDispatchConfigs,

	  registrationNameModules: EventPluginRegistry.registrationNameModules,

	  /**
	   * Stores `listener` at `listenerBank[registrationName][id]`. Is idempotent.
	   *
	   * @param {string} id ID of the DOM element.
	   * @param {string} registrationName Name of listener (e.g. `onClick`).
	   * @param {?function} listener The callback to store.
	   */
	  putListener: function (id, registrationName, listener) {
	    !(typeof listener === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected %s listener to be a function, instead got type %s', registrationName, typeof listener) : invariant(false) : undefined;

	    var bankForRegistrationName = listenerBank[registrationName] || (listenerBank[registrationName] = {});
	    bankForRegistrationName[id] = listener;

	    var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
	    if (PluginModule && PluginModule.didPutListener) {
	      PluginModule.didPutListener(id, registrationName, listener);
	    }
	  },

	  /**
	   * @param {string} id ID of the DOM element.
	   * @param {string} registrationName Name of listener (e.g. `onClick`).
	   * @return {?function} The stored callback.
	   */
	  getListener: function (id, registrationName) {
	    var bankForRegistrationName = listenerBank[registrationName];
	    return bankForRegistrationName && bankForRegistrationName[id];
	  },

	  /**
	   * Deletes a listener from the registration bank.
	   *
	   * @param {string} id ID of the DOM element.
	   * @param {string} registrationName Name of listener (e.g. `onClick`).
	   */
	  deleteListener: function (id, registrationName) {
	    var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
	    if (PluginModule && PluginModule.willDeleteListener) {
	      PluginModule.willDeleteListener(id, registrationName);
	    }

	    var bankForRegistrationName = listenerBank[registrationName];
	    // TODO: This should never be null -- when is it?
	    if (bankForRegistrationName) {
	      delete bankForRegistrationName[id];
	    }
	  },

	  /**
	   * Deletes all listeners for the DOM element with the supplied ID.
	   *
	   * @param {string} id ID of the DOM element.
	   */
	  deleteAllListeners: function (id) {
	    for (var registrationName in listenerBank) {
	      if (!listenerBank[registrationName][id]) {
	        continue;
	      }

	      var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
	      if (PluginModule && PluginModule.willDeleteListener) {
	        PluginModule.willDeleteListener(id, registrationName);
	      }

	      delete listenerBank[registrationName][id];
	    }
	  },

	  /**
	   * Allows registered plugins an opportunity to extract events from top-level
	   * native browser events.
	   *
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {DOMEventTarget} topLevelTarget The listening component root node.
	   * @param {string} topLevelTargetID ID of `topLevelTarget`.
	   * @param {object} nativeEvent Native browser event.
	   * @return {*} An accumulation of synthetic events.
	   * @internal
	   */
	  extractEvents: function (topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget) {
	    var events;
	    var plugins = EventPluginRegistry.plugins;
	    for (var i = 0; i < plugins.length; i++) {
	      // Not every plugin in the ordering may be loaded at runtime.
	      var possiblePlugin = plugins[i];
	      if (possiblePlugin) {
	        var extractedEvents = possiblePlugin.extractEvents(topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget);
	        if (extractedEvents) {
	          events = accumulateInto(events, extractedEvents);
	        }
	      }
	    }
	    return events;
	  },

	  /**
	   * Enqueues a synthetic event that should be dispatched when
	   * `processEventQueue` is invoked.
	   *
	   * @param {*} events An accumulation of synthetic events.
	   * @internal
	   */
	  enqueueEvents: function (events) {
	    if (events) {
	      eventQueue = accumulateInto(eventQueue, events);
	    }
	  },

	  /**
	   * Dispatches all synthetic events on the event queue.
	   *
	   * @internal
	   */
	  processEventQueue: function (simulated) {
	    // Set `eventQueue` to null before processing it so that we can tell if more
	    // events get enqueued while processing.
	    var processingEventQueue = eventQueue;
	    eventQueue = null;
	    if (simulated) {
	      forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseSimulated);
	    } else {
	      forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseTopLevel);
	    }
	    !!eventQueue ? process.env.NODE_ENV !== 'production' ? invariant(false, 'processEventQueue(): Additional events were enqueued while processing ' + 'an event queue. Support for this has not yet been implemented.') : invariant(false) : undefined;
	    // This would be a good time to rethrow if any of the event handlers threw.
	    ReactErrorUtils.rethrowCaughtError();
	  },

	  /**
	   * These are needed for tests only. Do not use!
	   */
	  __purge: function () {
	    listenerBank = {};
	  },

	  __getListenerBank: function () {
	    return listenerBank;
	  }

	};

	module.exports = EventPluginHub;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)))

/***/ }),
/* 33 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule EventPluginRegistry
	 * @typechecks static-only
	 */

	'use strict';

	var invariant = __webpack_require__(14);

	/**
	 * Injectable ordering of event plugins.
	 */
	var EventPluginOrder = null;

	/**
	 * Injectable mapping from names to event plugin modules.
	 */
	var namesToPlugins = {};

	/**
	 * Recomputes the plugin list using the injected plugins and plugin ordering.
	 *
	 * @private
	 */
	function recomputePluginOrdering() {
	  if (!EventPluginOrder) {
	    // Wait until an `EventPluginOrder` is injected.
	    return;
	  }
	  for (var pluginName in namesToPlugins) {
	    var PluginModule = namesToPlugins[pluginName];
	    var pluginIndex = EventPluginOrder.indexOf(pluginName);
	    !(pluginIndex > -1) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Cannot inject event plugins that do not exist in ' + 'the plugin ordering, `%s`.', pluginName) : invariant(false) : undefined;
	    if (EventPluginRegistry.plugins[pluginIndex]) {
	      continue;
	    }
	    !PluginModule.extractEvents ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Event plugins must implement an `extractEvents` ' + 'method, but `%s` does not.', pluginName) : invariant(false) : undefined;
	    EventPluginRegistry.plugins[pluginIndex] = PluginModule;
	    var publishedEvents = PluginModule.eventTypes;
	    for (var eventName in publishedEvents) {
	      !publishEventForPlugin(publishedEvents[eventName], PluginModule, eventName) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Failed to publish event `%s` for plugin `%s`.', eventName, pluginName) : invariant(false) : undefined;
	    }
	  }
	}

	/**
	 * Publishes an event so that it can be dispatched by the supplied plugin.
	 *
	 * @param {object} dispatchConfig Dispatch configuration for the event.
	 * @param {object} PluginModule Plugin publishing the event.
	 * @return {boolean} True if the event was successfully published.
	 * @private
	 */
	function publishEventForPlugin(dispatchConfig, PluginModule, eventName) {
	  !!EventPluginRegistry.eventNameDispatchConfigs.hasOwnProperty(eventName) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same ' + 'event name, `%s`.', eventName) : invariant(false) : undefined;
	  EventPluginRegistry.eventNameDispatchConfigs[eventName] = dispatchConfig;

	  var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;
	  if (phasedRegistrationNames) {
	    for (var phaseName in phasedRegistrationNames) {
	      if (phasedRegistrationNames.hasOwnProperty(phaseName)) {
	        var phasedRegistrationName = phasedRegistrationNames[phaseName];
	        publishRegistrationName(phasedRegistrationName, PluginModule, eventName);
	      }
	    }
	    return true;
	  } else if (dispatchConfig.registrationName) {
	    publishRegistrationName(dispatchConfig.registrationName, PluginModule, eventName);
	    return true;
	  }
	  return false;
	}

	/**
	 * Publishes a registration name that is used to identify dispatched events and
	 * can be used with `EventPluginHub.putListener` to register listeners.
	 *
	 * @param {string} registrationName Registration name to add.
	 * @param {object} PluginModule Plugin publishing the event.
	 * @private
	 */
	function publishRegistrationName(registrationName, PluginModule, eventName) {
	  !!EventPluginRegistry.registrationNameModules[registrationName] ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same ' + 'registration name, `%s`.', registrationName) : invariant(false) : undefined;
	  EventPluginRegistry.registrationNameModules[registrationName] = PluginModule;
	  EventPluginRegistry.registrationNameDependencies[registrationName] = PluginModule.eventTypes[eventName].dependencies;
	}

	/**
	 * Registers plugins so that they can extract and dispatch events.
	 *
	 * @see {EventPluginHub}
	 */
	var EventPluginRegistry = {

	  /**
	   * Ordered list of injected plugins.
	   */
	  plugins: [],

	  /**
	   * Mapping from event name to dispatch config
	   */
	  eventNameDispatchConfigs: {},

	  /**
	   * Mapping from registration name to plugin module
	   */
	  registrationNameModules: {},

	  /**
	   * Mapping from registration name to event name
	   */
	  registrationNameDependencies: {},

	  /**
	   * Injects an ordering of plugins (by plugin name). This allows the ordering
	   * to be decoupled from injection of the actual plugins so that ordering is
	   * always deterministic regardless of packaging, on-the-fly injection, etc.
	   *
	   * @param {array} InjectedEventPluginOrder
	   * @internal
	   * @see {EventPluginHub.injection.injectEventPluginOrder}
	   */
	  injectEventPluginOrder: function (InjectedEventPluginOrder) {
	    !!EventPluginOrder ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Cannot inject event plugin ordering more than ' + 'once. You are likely trying to load more than one copy of React.') : invariant(false) : undefined;
	    // Clone the ordering so it cannot be dynamically mutated.
	    EventPluginOrder = Array.prototype.slice.call(InjectedEventPluginOrder);
	    recomputePluginOrdering();
	  },

	  /**
	   * Injects plugins to be used by `EventPluginHub`. The plugin names must be
	   * in the ordering injected by `injectEventPluginOrder`.
	   *
	   * Plugins can be injected as part of page initialization or on-the-fly.
	   *
	   * @param {object} injectedNamesToPlugins Map from names to plugin modules.
	   * @internal
	   * @see {EventPluginHub.injection.injectEventPluginsByName}
	   */
	  injectEventPluginsByName: function (injectedNamesToPlugins) {
	    var isOrderingDirty = false;
	    for (var pluginName in injectedNamesToPlugins) {
	      if (!injectedNamesToPlugins.hasOwnProperty(pluginName)) {
	        continue;
	      }
	      var PluginModule = injectedNamesToPlugins[pluginName];
	      if (!namesToPlugins.hasOwnProperty(pluginName) || namesToPlugins[pluginName] !== PluginModule) {
	        !!namesToPlugins[pluginName] ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Cannot inject two different event plugins ' + 'using the same name, `%s`.', pluginName) : invariant(false) : undefined;
	        namesToPlugins[pluginName] = PluginModule;
	        isOrderingDirty = true;
	      }
	    }
	    if (isOrderingDirty) {
	      recomputePluginOrdering();
	    }
	  },

	  /**
	   * Looks up the plugin for the supplied event.
	   *
	   * @param {object} event A synthetic event.
	   * @return {?object} The plugin that created the supplied event.
	   * @internal
	   */
	  getPluginModuleForEvent: function (event) {
	    var dispatchConfig = event.dispatchConfig;
	    if (dispatchConfig.registrationName) {
	      return EventPluginRegistry.registrationNameModules[dispatchConfig.registrationName] || null;
	    }
	    for (var phase in dispatchConfig.phasedRegistrationNames) {
	      if (!dispatchConfig.phasedRegistrationNames.hasOwnProperty(phase)) {
	        continue;
	      }
	      var PluginModule = EventPluginRegistry.registrationNameModules[dispatchConfig.phasedRegistrationNames[phase]];
	      if (PluginModule) {
	        return PluginModule;
	      }
	    }
	    return null;
	  },

	  /**
	   * Exposed for unit testing.
	   * @private
	   */
	  _resetEventPlugins: function () {
	    EventPluginOrder = null;
	    for (var pluginName in namesToPlugins) {
	      if (namesToPlugins.hasOwnProperty(pluginName)) {
	        delete namesToPlugins[pluginName];
	      }
	    }
	    EventPluginRegistry.plugins.length = 0;

	    var eventNameDispatchConfigs = EventPluginRegistry.eventNameDispatchConfigs;
	    for (var eventName in eventNameDispatchConfigs) {
	      if (eventNameDispatchConfigs.hasOwnProperty(eventName)) {
	        delete eventNameDispatchConfigs[eventName];
	      }
	    }

	    var registrationNameModules = EventPluginRegistry.registrationNameModules;
	    for (var registrationName in registrationNameModules) {
	      if (registrationNameModules.hasOwnProperty(registrationName)) {
	        delete registrationNameModules[registrationName];
	      }
	    }
	  }

	};

	module.exports = EventPluginRegistry;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)))

/***/ }),
/* 34 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule EventPluginUtils
	 */

	'use strict';

	var EventConstants = __webpack_require__(31);
	var ReactErrorUtils = __webpack_require__(35);

	var invariant = __webpack_require__(14);
	var warning = __webpack_require__(26);

	/**
	 * Injected dependencies:
	 */

	/**
	 * - `Mount`: [required] Module that can convert between React dom IDs and
	 *   actual node references.
	 */
	var injection = {
	  Mount: null,
	  injectMount: function (InjectedMount) {
	    injection.Mount = InjectedMount;
	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(InjectedMount && InjectedMount.getNode && InjectedMount.getID, 'EventPluginUtils.injection.injectMount(...): Injected Mount ' + 'module is missing getNode or getID.') : undefined;
	    }
	  }
	};

	var topLevelTypes = EventConstants.topLevelTypes;

	function isEndish(topLevelType) {
	  return topLevelType === topLevelTypes.topMouseUp || topLevelType === topLevelTypes.topTouchEnd || topLevelType === topLevelTypes.topTouchCancel;
	}

	function isMoveish(topLevelType) {
	  return topLevelType === topLevelTypes.topMouseMove || topLevelType === topLevelTypes.topTouchMove;
	}
	function isStartish(topLevelType) {
	  return topLevelType === topLevelTypes.topMouseDown || topLevelType === topLevelTypes.topTouchStart;
	}

	var validateEventDispatches;
	if (process.env.NODE_ENV !== 'production') {
	  validateEventDispatches = function (event) {
	    var dispatchListeners = event._dispatchListeners;
	    var dispatchIDs = event._dispatchIDs;

	    var listenersIsArr = Array.isArray(dispatchListeners);
	    var idsIsArr = Array.isArray(dispatchIDs);
	    var IDsLen = idsIsArr ? dispatchIDs.length : dispatchIDs ? 1 : 0;
	    var listenersLen = listenersIsArr ? dispatchListeners.length : dispatchListeners ? 1 : 0;

	    process.env.NODE_ENV !== 'production' ? warning(idsIsArr === listenersIsArr && IDsLen === listenersLen, 'EventPluginUtils: Invalid `event`.') : undefined;
	  };
	}

	/**
	 * Dispatch the event to the listener.
	 * @param {SyntheticEvent} event SyntheticEvent to handle
	 * @param {boolean} simulated If the event is simulated (changes exn behavior)
	 * @param {function} listener Application-level callback
	 * @param {string} domID DOM id to pass to the callback.
	 */
	function executeDispatch(event, simulated, listener, domID) {
	  var type = event.type || 'unknown-event';
	  event.currentTarget = injection.Mount.getNode(domID);
	  if (simulated) {
	    ReactErrorUtils.invokeGuardedCallbackWithCatch(type, listener, event, domID);
	  } else {
	    ReactErrorUtils.invokeGuardedCallback(type, listener, event, domID);
	  }
	  event.currentTarget = null;
	}

	/**
	 * Standard/simple iteration through an event's collected dispatches.
	 */
	function executeDispatchesInOrder(event, simulated) {
	  var dispatchListeners = event._dispatchListeners;
	  var dispatchIDs = event._dispatchIDs;
	  if (process.env.NODE_ENV !== 'production') {
	    validateEventDispatches(event);
	  }
	  if (Array.isArray(dispatchListeners)) {
	    for (var i = 0; i < dispatchListeners.length; i++) {
	      if (event.isPropagationStopped()) {
	        break;
	      }
	      // Listeners and IDs are two parallel arrays that are always in sync.
	      executeDispatch(event, simulated, dispatchListeners[i], dispatchIDs[i]);
	    }
	  } else if (dispatchListeners) {
	    executeDispatch(event, simulated, dispatchListeners, dispatchIDs);
	  }
	  event._dispatchListeners = null;
	  event._dispatchIDs = null;
	}

	/**
	 * Standard/simple iteration through an event's collected dispatches, but stops
	 * at the first dispatch execution returning true, and returns that id.
	 *
	 * @return {?string} id of the first dispatch execution who's listener returns
	 * true, or null if no listener returned true.
	 */
	function executeDispatchesInOrderStopAtTrueImpl(event) {
	  var dispatchListeners = event._dispatchListeners;
	  var dispatchIDs = event._dispatchIDs;
	  if (process.env.NODE_ENV !== 'production') {
	    validateEventDispatches(event);
	  }
	  if (Array.isArray(dispatchListeners)) {
	    for (var i = 0; i < dispatchListeners.length; i++) {
	      if (event.isPropagationStopped()) {
	        break;
	      }
	      // Listeners and IDs are two parallel arrays that are always in sync.
	      if (dispatchListeners[i](event, dispatchIDs[i])) {
	        return dispatchIDs[i];
	      }
	    }
	  } else if (dispatchListeners) {
	    if (dispatchListeners(event, dispatchIDs)) {
	      return dispatchIDs;
	    }
	  }
	  return null;
	}

	/**
	 * @see executeDispatchesInOrderStopAtTrueImpl
	 */
	function executeDispatchesInOrderStopAtTrue(event) {
	  var ret = executeDispatchesInOrderStopAtTrueImpl(event);
	  event._dispatchIDs = null;
	  event._dispatchListeners = null;
	  return ret;
	}

	/**
	 * Execution of a "direct" dispatch - there must be at most one dispatch
	 * accumulated on the event or it is considered an error. It doesn't really make
	 * sense for an event with multiple dispatches (bubbled) to keep track of the
	 * return values at each dispatch execution, but it does tend to make sense when
	 * dealing with "direct" dispatches.
	 *
	 * @return {*} The return value of executing the single dispatch.
	 */
	function executeDirectDispatch(event) {
	  if (process.env.NODE_ENV !== 'production') {
	    validateEventDispatches(event);
	  }
	  var dispatchListener = event._dispatchListeners;
	  var dispatchID = event._dispatchIDs;
	  !!Array.isArray(dispatchListener) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'executeDirectDispatch(...): Invalid `event`.') : invariant(false) : undefined;
	  var res = dispatchListener ? dispatchListener(event, dispatchID) : null;
	  event._dispatchListeners = null;
	  event._dispatchIDs = null;
	  return res;
	}

	/**
	 * @param {SyntheticEvent} event
	 * @return {boolean} True iff number of dispatches accumulated is greater than 0.
	 */
	function hasDispatches(event) {
	  return !!event._dispatchListeners;
	}

	/**
	 * General utilities that are useful in creating custom Event Plugins.
	 */
	var EventPluginUtils = {
	  isEndish: isEndish,
	  isMoveish: isMoveish,
	  isStartish: isStartish,

	  executeDirectDispatch: executeDirectDispatch,
	  executeDispatchesInOrder: executeDispatchesInOrder,
	  executeDispatchesInOrderStopAtTrue: executeDispatchesInOrderStopAtTrue,
	  hasDispatches: hasDispatches,

	  getNode: function (id) {
	    return injection.Mount.getNode(id);
	  },
	  getID: function (node) {
	    return injection.Mount.getID(node);
	  },

	  injection: injection
	};

	module.exports = EventPluginUtils;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)))

/***/ }),
/* 35 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactErrorUtils
	 * @typechecks
	 */

	'use strict';

	var caughtError = null;

	/**
	 * Call a function while guarding against errors that happens within it.
	 *
	 * @param {?String} name of the guard to use for logging or debugging
	 * @param {Function} func The function to invoke
	 * @param {*} a First argument
	 * @param {*} b Second argument
	 */
	function invokeGuardedCallback(name, func, a, b) {
	  try {
	    return func(a, b);
	  } catch (x) {
	    if (caughtError === null) {
	      caughtError = x;
	    }
	    return undefined;
	  }
	}

	var ReactErrorUtils = {
	  invokeGuardedCallback: invokeGuardedCallback,

	  /**
	   * Invoked by ReactTestUtils.Simulate so that any errors thrown by the event
	   * handler are sure to be rethrown by rethrowCaughtError.
	   */
	  invokeGuardedCallbackWithCatch: invokeGuardedCallback,

	  /**
	   * During execution of guarded functions we will capture the first error which
	   * we will rethrow to be handled by the top level error handler.
	   */
	  rethrowCaughtError: function () {
	    if (caughtError) {
	      var error = caughtError;
	      caughtError = null;
	      throw error;
	    }
	  }
	};

	if (process.env.NODE_ENV !== 'production') {
	  /**
	   * To help development we can get better devtools integration by simulating a
	   * real browser event.
	   */
	  if (typeof window !== 'undefined' && typeof window.dispatchEvent === 'function' && typeof document !== 'undefined' && typeof document.createEvent === 'function') {
	    var fakeNode = document.createElement('react');
	    ReactErrorUtils.invokeGuardedCallback = function (name, func, a, b) {
	      var boundFunc = func.bind(null, a, b);
	      var evtType = 'react-' + name;
	      fakeNode.addEventListener(evtType, boundFunc, false);
	      var evt = document.createEvent('Event');
	      evt.initEvent(evtType, false, false);
	      fakeNode.dispatchEvent(evt);
	      fakeNode.removeEventListener(evtType, boundFunc, false);
	    };
	  }
	}

	module.exports = ReactErrorUtils;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)))

/***/ }),
/* 36 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule accumulateInto
	 */

	'use strict';

	var invariant = __webpack_require__(14);

	/**
	 *
	 * Accumulates items that must not be null or undefined into the first one. This
	 * is used to conserve memory by avoiding array allocations, and thus sacrifices
	 * API cleanness. Since `current` can be null before being passed in and not
	 * null after this function, make sure to assign it back to `current`:
	 *
	 * `a = accumulateInto(a, b);`
	 *
	 * This API should be sparingly used. Try `accumulate` for something cleaner.
	 *
	 * @return {*|array<*>} An accumulation of items.
	 */

	function accumulateInto(current, next) {
	  !(next != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'accumulateInto(...): Accumulated items must not be null or undefined.') : invariant(false) : undefined;
	  if (current == null) {
	    return next;
	  }

	  // Both are not empty. Warning: Never call x.concat(y) when you are not
	  // certain that x is an Array (x could be a string with concat method).
	  var currentIsArray = Array.isArray(current);
	  var nextIsArray = Array.isArray(next);

	  if (currentIsArray && nextIsArray) {
	    current.push.apply(current, next);
	    return current;
	  }

	  if (currentIsArray) {
	    current.push(next);
	    return current;
	  }

	  if (nextIsArray) {
	    // A bit too dangerous to mutate `next`.
	    return [current].concat(next);
	  }

	  return [current, next];
	}

	module.exports = accumulateInto;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)))

/***/ }),
/* 37 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule forEachAccumulated
	 */

	'use strict';

	/**
	 * @param {array} arr an "accumulation" of items which is either an Array or
	 * a single item. Useful when paired with the `accumulate` module. This is a
	 * simple utility that allows us to reason about a collection of items, but
	 * handling the case when there is exactly one item (and we do not need to
	 * allocate an array).
	 */
	var forEachAccumulated = function (arr, cb, scope) {
	  if (Array.isArray(arr)) {
	    arr.forEach(cb, scope);
	  } else if (arr) {
	    cb.call(scope, arr);
	  }
	};

	module.exports = forEachAccumulated;

/***/ }),
/* 38 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactEventEmitterMixin
	 */

	'use strict';

	var EventPluginHub = __webpack_require__(32);

	function runEventQueueInBatch(events) {
	  EventPluginHub.enqueueEvents(events);
	  EventPluginHub.processEventQueue(false);
	}

	var ReactEventEmitterMixin = {

	  /**
	   * Streams a fired top-level event to `EventPluginHub` where plugins have the
	   * opportunity to create `ReactEvent`s to be dispatched.
	   *
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {object} topLevelTarget The listening component root node.
	   * @param {string} topLevelTargetID ID of `topLevelTarget`.
	   * @param {object} nativeEvent Native environment event.
	   */
	  handleTopLevel: function (topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget) {
	    var events = EventPluginHub.extractEvents(topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget);
	    runEventQueueInBatch(events);
	  }
	};

	module.exports = ReactEventEmitterMixin;

/***/ }),
/* 39 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ViewportMetrics
	 */

	'use strict';

	var ViewportMetrics = {

	  currentScrollLeft: 0,

	  currentScrollTop: 0,

	  refreshScrollValues: function (scrollPosition) {
	    ViewportMetrics.currentScrollLeft = scrollPosition.x;
	    ViewportMetrics.currentScrollTop = scrollPosition.y;
	  }

	};

	module.exports = ViewportMetrics;

/***/ }),
/* 40 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule Object.assign
	 */

	// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.assign

	'use strict';

	function assign(target, sources) {
	  if (target == null) {
	    throw new TypeError('Object.assign target cannot be null or undefined');
	  }

	  var to = Object(target);
	  var hasOwnProperty = Object.prototype.hasOwnProperty;

	  for (var nextIndex = 1; nextIndex < arguments.length; nextIndex++) {
	    var nextSource = arguments[nextIndex];
	    if (nextSource == null) {
	      continue;
	    }

	    var from = Object(nextSource);

	    // We don't currently support accessors nor proxies. Therefore this
	    // copy cannot throw. If we ever supported this then we must handle
	    // exceptions and side-effects. We don't support symbols so they won't
	    // be transferred.

	    for (var key in from) {
	      if (hasOwnProperty.call(from, key)) {
	        to[key] = from[key];
	      }
	    }
	  }

	  return to;
	}

	module.exports = assign;

/***/ }),
/* 41 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule isEventSupported
	 */

	'use strict';

	var ExecutionEnvironment = __webpack_require__(10);

	var useHasFeature;
	if (ExecutionEnvironment.canUseDOM) {
	  useHasFeature = document.implementation && document.implementation.hasFeature &&
	  // always returns true in newer browsers as per the standard.
	  // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature
	  document.implementation.hasFeature('', '') !== true;
	}

	/**
	 * Checks if an event is supported in the current execution environment.
	 *
	 * NOTE: This will not work correctly for non-generic events such as `change`,
	 * `reset`, `load`, `error`, and `select`.
	 *
	 * Borrows from Modernizr.
	 *
	 * @param {string} eventNameSuffix Event name, e.g. "click".
	 * @param {?boolean} capture Check if the capture phase is supported.
	 * @return {boolean} True if the event is supported.
	 * @internal
	 * @license Modernizr 3.0.0pre (Custom Build) | MIT
	 */
	function isEventSupported(eventNameSuffix, capture) {
	  if (!ExecutionEnvironment.canUseDOM || capture && !('addEventListener' in document)) {
	    return false;
	  }

	  var eventName = 'on' + eventNameSuffix;
	  var isSupported = (eventName in document);

	  if (!isSupported) {
	    var element = document.createElement('div');
	    element.setAttribute(eventName, 'return;');
	    isSupported = typeof element[eventName] === 'function';
	  }

	  if (!isSupported && useHasFeature && eventNameSuffix === 'wheel') {
	    // This is the only way to test support for the `wheel` event in IE9+.
	    isSupported = document.implementation.hasFeature('Events.wheel', '3.0');
	  }

	  return isSupported;
	}

	module.exports = isEventSupported;

/***/ }),
/* 42 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMFeatureFlags
	 */

	'use strict';

	var ReactDOMFeatureFlags = {
	  useCreateElement: false
	};

	module.exports = ReactDOMFeatureFlags;

/***/ }),
/* 43 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactElement
	 */

	'use strict';

	var ReactCurrentOwner = __webpack_require__(6);

	var assign = __webpack_require__(40);
	var canDefineProperty = __webpack_require__(44);

	// The Symbol used to tag the ReactElement type. If there is no native Symbol
	// nor polyfill, then a plain number is used for performance.
	var REACT_ELEMENT_TYPE = typeof Symbol === 'function' && Symbol['for'] && Symbol['for']('react.element') || 0xeac7;

	var RESERVED_PROPS = {
	  key: true,
	  ref: true,
	  __self: true,
	  __source: true
	};

	/**
	 * Base constructor for all React elements. This is only used to make this
	 * work with a dynamic instanceof check. Nothing should live on this prototype.
	 *
	 * @param {*} type
	 * @param {*} key
	 * @param {string|object} ref
	 * @param {*} self A *temporary* helper to detect places where `this` is
	 * different from the `owner` when React.createElement is called, so that we
	 * can warn. We want to get rid of owner and replace string `ref`s with arrow
	 * functions, and as long as `this` and owner are the same, there will be no
	 * change in behavior.
	 * @param {*} source An annotation object (added by a transpiler or otherwise)
	 * indicating filename, line number, and/or other information.
	 * @param {*} owner
	 * @param {*} props
	 * @internal
	 */
	var ReactElement = function (type, key, ref, self, source, owner, props) {
	  var element = {
	    // This tag allow us to uniquely identify this as a React Element
	    $$typeof: REACT_ELEMENT_TYPE,

	    // Built-in properties that belong on the element
	    type: type,
	    key: key,
	    ref: ref,
	    props: props,

	    // Record the component responsible for creating this element.
	    _owner: owner
	  };

	  if (process.env.NODE_ENV !== 'production') {
	    // The validation flag is currently mutative. We put it on
	    // an external backing store so that we can freeze the whole object.
	    // This can be replaced with a WeakMap once they are implemented in
	    // commonly used development environments.
	    element._store = {};

	    // To make comparing ReactElements easier for testing purposes, we make
	    // the validation flag non-enumerable (where possible, which should
	    // include every environment we run tests in), so the test framework
	    // ignores it.
	    if (canDefineProperty) {
	      Object.defineProperty(element._store, 'validated', {
	        configurable: false,
	        enumerable: false,
	        writable: true,
	        value: false
	      });
	      // self and source are DEV only properties.
	      Object.defineProperty(element, '_self', {
	        configurable: false,
	        enumerable: false,
	        writable: false,
	        value: self
	      });
	      // Two elements created in two different places should be considered
	      // equal for testing purposes and therefore we hide it from enumeration.
	      Object.defineProperty(element, '_source', {
	        configurable: false,
	        enumerable: false,
	        writable: false,
	        value: source
	      });
	    } else {
	      element._store.validated = false;
	      element._self = self;
	      element._source = source;
	    }
	    Object.freeze(element.props);
	    Object.freeze(element);
	  }

	  return element;
	};

	ReactElement.createElement = function (type, config, children) {
	  var propName;

	  // Reserved names are extracted
	  var props = {};

	  var key = null;
	  var ref = null;
	  var self = null;
	  var source = null;

	  if (config != null) {
	    ref = config.ref === undefined ? null : config.ref;
	    key = config.key === undefined ? null : '' + config.key;
	    self = config.__self === undefined ? null : config.__self;
	    source = config.__source === undefined ? null : config.__source;
	    // Remaining properties are added to a new props object
	    for (propName in config) {
	      if (config.hasOwnProperty(propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
	        props[propName] = config[propName];
	      }
	    }
	  }

	  // Children can be more than one argument, and those are transferred onto
	  // the newly allocated props object.
	  var childrenLength = arguments.length - 2;
	  if (childrenLength === 1) {
	    props.children = children;
	  } else if (childrenLength > 1) {
	    var childArray = Array(childrenLength);
	    for (var i = 0; i < childrenLength; i++) {
	      childArray[i] = arguments[i + 2];
	    }
	    props.children = childArray;
	  }

	  // Resolve default props
	  if (type && type.defaultProps) {
	    var defaultProps = type.defaultProps;
	    for (propName in defaultProps) {
	      if (typeof props[propName] === 'undefined') {
	        props[propName] = defaultProps[propName];
	      }
	    }
	  }

	  return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);
	};

	ReactElement.createFactory = function (type) {
	  var factory = ReactElement.createElement.bind(null, type);
	  // Expose the type on the factory and the prototype so that it can be
	  // easily accessed on elements. E.g. `<Foo />.type === Foo`.
	  // This should not be named `constructor` since this may not be the function
	  // that created the element, and it may not even be a constructor.
	  // Legacy hook TODO: Warn if this is accessed
	  factory.type = type;
	  return factory;
	};

	ReactElement.cloneAndReplaceKey = function (oldElement, newKey) {
	  var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);

	  return newElement;
	};

	ReactElement.cloneAndReplaceProps = function (oldElement, newProps) {
	  var newElement = ReactElement(oldElement.type, oldElement.key, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, newProps);

	  if (process.env.NODE_ENV !== 'production') {
	    // If the key on the original is valid, then the clone is valid
	    newElement._store.validated = oldElement._store.validated;
	  }

	  return newElement;
	};

	ReactElement.cloneElement = function (element, config, children) {
	  var propName;

	  // Original props are copied
	  var props = assign({}, element.props);

	  // Reserved names are extracted
	  var key = element.key;
	  var ref = element.ref;
	  // Self is preserved since the owner is preserved.
	  var self = element._self;
	  // Source is preserved since cloneElement is unlikely to be targeted by a
	  // transpiler, and the original source is probably a better indicator of the
	  // true owner.
	  var source = element._source;

	  // Owner will be preserved, unless ref is overridden
	  var owner = element._owner;

	  if (config != null) {
	    if (config.ref !== undefined) {
	      // Silently steal the ref from the parent.
	      ref = config.ref;
	      owner = ReactCurrentOwner.current;
	    }
	    if (config.key !== undefined) {
	      key = '' + config.key;
	    }
	    // Remaining properties override existing props
	    for (propName in config) {
	      if (config.hasOwnProperty(propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
	        props[propName] = config[propName];
	      }
	    }
	  }

	  // Children can be more than one argument, and those are transferred onto
	  // the newly allocated props object.
	  var childrenLength = arguments.length - 2;
	  if (childrenLength === 1) {
	    props.children = children;
	  } else if (childrenLength > 1) {
	    var childArray = Array(childrenLength);
	    for (var i = 0; i < childrenLength; i++) {
	      childArray[i] = arguments[i + 2];
	    }
	    props.children = childArray;
	  }

	  return ReactElement(element.type, key, ref, self, source, owner, props);
	};

	/**
	 * @param {?object} object
	 * @return {boolean} True if `object` is a valid component.
	 * @final
	 */
	ReactElement.isValidElement = function (object) {
	  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
	};

	module.exports = ReactElement;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)))

/***/ }),
/* 44 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule canDefineProperty
	 */

	'use strict';

	var canDefineProperty = false;
	if (process.env.NODE_ENV !== 'production') {
	  try {
	    Object.defineProperty({}, 'x', { get: function () {} });
	    canDefineProperty = true;
	  } catch (x) {
	    // IE will fail on defineProperty
	  }
	}

	module.exports = canDefineProperty;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)))

/***/ }),
/* 45 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactEmptyComponentRegistry
	 */

	'use strict';

	// This registry keeps track of the React IDs of the components that rendered to
	// `null` (in reality a placeholder such as `noscript`)
	var nullComponentIDsRegistry = {};

	/**
	 * @param {string} id Component's `_rootNodeID`.
	 * @return {boolean} True if the component is rendered to null.
	 */
	function isNullComponentID(id) {
	  return !!nullComponentIDsRegistry[id];
	}

	/**
	 * Mark the component as having rendered to null.
	 * @param {string} id Component's `_rootNodeID`.
	 */
	function registerNullComponentID(id) {
	  nullComponentIDsRegistry[id] = true;
	}

	/**
	 * Unmark the component as having rendered to null: it renders to something now.
	 * @param {string} id Component's `_rootNodeID`.
	 */
	function deregisterNullComponentID(id) {
	  delete nullComponentIDsRegistry[id];
	}

	var ReactEmptyComponentRegistry = {
	  isNullComponentID: isNullComponentID,
	  registerNullComponentID: registerNullComponentID,
	  deregisterNullComponentID: deregisterNullComponentID
	};

	module.exports = ReactEmptyComponentRegistry;

/***/ }),
/* 46 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactInstanceHandles
	 * @typechecks static-only
	 */

	'use strict';

	var ReactRootIndex = __webpack_require__(47);

	var invariant = __webpack_require__(14);

	var SEPARATOR = '.';
	var SEPARATOR_LENGTH = SEPARATOR.length;

	/**
	 * Maximum depth of traversals before we consider the possibility of a bad ID.
	 */
	var MAX_TREE_DEPTH = 10000;

	/**
	 * Creates a DOM ID prefix to use when mounting React components.
	 *
	 * @param {number} index A unique integer
	 * @return {string} React root ID.
	 * @internal
	 */
	function getReactRootIDString(index) {
	  return SEPARATOR + index.toString(36);
	}

	/**
	 * Checks if a character in the supplied ID is a separator or the end.
	 *
	 * @param {string} id A React DOM ID.
	 * @param {number} index Index of the character to check.
	 * @return {boolean} True if the character is a separator or end of the ID.
	 * @private
	 */
	function isBoundary(id, index) {
	  return id.charAt(index) === SEPARATOR || index === id.length;
	}

	/**
	 * Checks if the supplied string is a valid React DOM ID.
	 *
	 * @param {string} id A React DOM ID, maybe.
	 * @return {boolean} True if the string is a valid React DOM ID.
	 * @private
	 */
	function isValidID(id) {
	  return id === '' || id.charAt(0) === SEPARATOR && id.charAt(id.length - 1) !== SEPARATOR;
	}

	/**
	 * Checks if the first ID is an ancestor of or equal to the second ID.
	 *
	 * @param {string} ancestorID
	 * @param {string} descendantID
	 * @return {boolean} True if `ancestorID` is an ancestor of `descendantID`.
	 * @internal
	 */
	function isAncestorIDOf(ancestorID, descendantID) {
	  return descendantID.indexOf(ancestorID) === 0 && isBoundary(descendantID, ancestorID.length);
	}

	/**
	 * Gets the parent ID of the supplied React DOM ID, `id`.
	 *
	 * @param {string} id ID of a component.
	 * @return {string} ID of the parent, or an empty string.
	 * @private
	 */
	function getParentID(id) {
	  return id ? id.substr(0, id.lastIndexOf(SEPARATOR)) : '';
	}

	/**
	 * Gets the next DOM ID on the tree path from the supplied `ancestorID` to the
	 * supplied `destinationID`. If they are equal, the ID is returned.
	 *
	 * @param {string} ancestorID ID of an ancestor node of `destinationID`.
	 * @param {string} destinationID ID of the destination node.
	 * @return {string} Next ID on the path from `ancestorID` to `destinationID`.
	 * @private
	 */
	function getNextDescendantID(ancestorID, destinationID) {
	  !(isValidID(ancestorID) && isValidID(destinationID)) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'getNextDescendantID(%s, %s): Received an invalid React DOM ID.', ancestorID, destinationID) : invariant(false) : undefined;
	  !isAncestorIDOf(ancestorID, destinationID) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'getNextDescendantID(...): React has made an invalid assumption about ' + 'the DOM hierarchy. Expected `%s` to be an ancestor of `%s`.', ancestorID, destinationID) : invariant(false) : undefined;
	  if (ancestorID === destinationID) {
	    return ancestorID;
	  }
	  // Skip over the ancestor and the immediate separator. Traverse until we hit
	  // another separator or we reach the end of `destinationID`.
	  var start = ancestorID.length + SEPARATOR_LENGTH;
	  var i;
	  for (i = start; i < destinationID.length; i++) {
	    if (isBoundary(destinationID, i)) {
	      break;
	    }
	  }
	  return destinationID.substr(0, i);
	}

	/**
	 * Gets the nearest common ancestor ID of two IDs.
	 *
	 * Using this ID scheme, the nearest common ancestor ID is the longest common
	 * prefix of the two IDs that immediately preceded a "marker" in both strings.
	 *
	 * @param {string} oneID
	 * @param {string} twoID
	 * @return {string} Nearest common ancestor ID, or the empty string if none.
	 * @private
	 */
	function getFirstCommonAncestorID(oneID, twoID) {
	  var minLength = Math.min(oneID.length, twoID.length);
	  if (minLength === 0) {
	    return '';
	  }
	  var lastCommonMarkerIndex = 0;
	  // Use `<=` to traverse until the "EOL" of the shorter string.
	  for (var i = 0; i <= minLength; i++) {
	    if (isBoundary(oneID, i) && isBoundary(twoID, i)) {
	      lastCommonMarkerIndex = i;
	    } else if (oneID.charAt(i) !== twoID.charAt(i)) {
	      break;
	    }
	  }
	  var longestCommonID = oneID.substr(0, lastCommonMarkerIndex);
	  !isValidID(longestCommonID) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'getFirstCommonAncestorID(%s, %s): Expected a valid React DOM ID: %s', oneID, twoID, longestCommonID) : invariant(false) : undefined;
	  return longestCommonID;
	}

	/**
	 * Traverses the parent path between two IDs (either up or down). The IDs must
	 * not be the same, and there must exist a parent path between them. If the
	 * callback returns `false`, traversal is stopped.
	 *
	 * @param {?string} start ID at which to start traversal.
	 * @param {?string} stop ID at which to end traversal.
	 * @param {function} cb Callback to invoke each ID with.
	 * @param {*} arg Argument to invoke the callback with.
	 * @param {?boolean} skipFirst Whether or not to skip the first node.
	 * @param {?boolean} skipLast Whether or not to skip the last node.
	 * @private
	 */
	function traverseParentPath(start, stop, cb, arg, skipFirst, skipLast) {
	  start = start || '';
	  stop = stop || '';
	  !(start !== stop) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'traverseParentPath(...): Cannot traverse from and to the same ID, `%s`.', start) : invariant(false) : undefined;
	  var traverseUp = isAncestorIDOf(stop, start);
	  !(traverseUp || isAncestorIDOf(start, stop)) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'traverseParentPath(%s, %s, ...): Cannot traverse from two IDs that do ' + 'not have a parent path.', start, stop) : invariant(false) : undefined;
	  // Traverse from `start` to `stop` one depth at a time.
	  var depth = 0;
	  var traverse = traverseUp ? getParentID : getNextDescendantID;
	  for (var id = start;; /* until break */id = traverse(id, stop)) {
	    var ret;
	    if ((!skipFirst || id !== start) && (!skipLast || id !== stop)) {
	      ret = cb(id, traverseUp, arg);
	    }
	    if (ret === false || id === stop) {
	      // Only break //after// visiting `stop`.
	      break;
	    }
	    !(depth++ < MAX_TREE_DEPTH) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'traverseParentPath(%s, %s, ...): Detected an infinite loop while ' + 'traversing the React DOM ID tree. This may be due to malformed IDs: %s', start, stop, id) : invariant(false) : undefined;
	  }
	}

	/**
	 * Manages the IDs assigned to DOM representations of React components. This
	 * uses a specific scheme in order to traverse the DOM efficiently (e.g. in
	 * order to simulate events).
	 *
	 * @internal
	 */
	var ReactInstanceHandles = {

	  /**
	   * Constructs a React root ID
	   * @return {string} A React root ID.
	   */
	  createReactRootID: function () {
	    return getReactRootIDString(ReactRootIndex.createReactRootIndex());
	  },

	  /**
	   * Constructs a React ID by joining a root ID with a name.
	   *
	   * @param {string} rootID Root ID of a parent component.
	   * @param {string} name A component's name (as flattened children).
	   * @return {string} A React ID.
	   * @internal
	   */
	  createReactID: function (rootID, name) {
	    return rootID + name;
	  },

	  /**
	   * Gets the DOM ID of the React component that is the root of the tree that
	   * contains the React component with the supplied DOM ID.
	   *
	   * @param {string} id DOM ID of a React component.
	   * @return {?string} DOM ID of the React component that is the root.
	   * @internal
	   */
	  getReactRootIDFromNodeID: function (id) {
	    if (id && id.charAt(0) === SEPARATOR && id.length > 1) {
	      var index = id.indexOf(SEPARATOR, 1);
	      return index > -1 ? id.substr(0, index) : id;
	    }
	    return null;
	  },

	  /**
	   * Traverses the ID hierarchy and invokes the supplied `cb` on any IDs that
	   * should would receive a `mouseEnter` or `mouseLeave` event.
	   *
	   * NOTE: Does not invoke the callback on the nearest common ancestor because
	   * nothing "entered" or "left" that element.
	   *
	   * @param {string} leaveID ID being left.
	   * @param {string} enterID ID being entered.
	   * @param {function} cb Callback to invoke on each entered/left ID.
	   * @param {*} upArg Argument to invoke the callback with on left IDs.
	   * @param {*} downArg Argument to invoke the callback with on entered IDs.
	   * @internal
	   */
	  traverseEnterLeave: function (leaveID, enterID, cb, upArg, downArg) {
	    var ancestorID = getFirstCommonAncestorID(leaveID, enterID);
	    if (ancestorID !== leaveID) {
	      traverseParentPath(leaveID, ancestorID, cb, upArg, false, true);
	    }
	    if (ancestorID !== enterID) {
	      traverseParentPath(ancestorID, enterID, cb, downArg, true, false);
	    }
	  },

	  /**
	   * Simulates the traversal of a two-phase, capture/bubble event dispatch.
	   *
	   * NOTE: This traversal happens on IDs without touching the DOM.
	   *
	   * @param {string} targetID ID of the target node.
	   * @param {function} cb Callback to invoke.
	   * @param {*} arg Argument to invoke the callback with.
	   * @internal
	   */
	  traverseTwoPhase: function (targetID, cb, arg) {
	    if (targetID) {
	      traverseParentPath('', targetID, cb, arg, true, false);
	      traverseParentPath(targetID, '', cb, arg, false, true);
	    }
	  },

	  /**
	   * Same as `traverseTwoPhase` but skips the `targetID`.
	   */
	  traverseTwoPhaseSkipTarget: function (targetID, cb, arg) {
	    if (targetID) {
	      traverseParentPath('', targetID, cb, arg, true, true);
	      traverseParentPath(targetID, '', cb, arg, true, true);
	    }
	  },

	  /**
	   * Traverse a node ID, calling the supplied `cb` for each ancestor ID. For
	   * example, passing `.0.$row-0.1` would result in `cb` getting called
	   * with `.0`, `.0.$row-0`, and `.0.$row-0.1`.
	   *
	   * NOTE: This traversal happens on IDs without touching the DOM.
	   *
	   * @param {string} targetID ID of the target node.
	   * @param {function} cb Callback to invoke.
	   * @param {*} arg Argument to invoke the callback with.
	   * @internal
	   */
	  traverseAncestors: function (targetID, cb, arg) {
	    traverseParentPath('', targetID, cb, arg, true, false);
	  },

	  getFirstCommonAncestorID: getFirstCommonAncestorID,

	  /**
	   * Exposed for unit testing.
	   * @private
	   */
	  _getNextDescendantID: getNextDescendantID,

	  isAncestorIDOf: isAncestorIDOf,

	  SEPARATOR: SEPARATOR

	};

	module.exports = ReactInstanceHandles;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)))

/***/ }),
/* 47 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactRootIndex
	 * @typechecks
	 */

	'use strict';

	var ReactRootIndexInjection = {
	  /**
	   * @param {function} _createReactRootIndex
	   */
	  injectCreateReactRootIndex: function (_createReactRootIndex) {
	    ReactRootIndex.createReactRootIndex = _createReactRootIndex;
	  }
	};

	var ReactRootIndex = {
	  createReactRootIndex: null,
	  injection: ReactRootIndexInjection
	};

	module.exports = ReactRootIndex;

/***/ }),
/* 48 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactInstanceMap
	 */

	'use strict';

	/**
	 * `ReactInstanceMap` maintains a mapping from a public facing stateful
	 * instance (key) and the internal representation (value). This allows public
	 * methods to accept the user facing instance as an argument and map them back
	 * to internal methods.
	 */

	// TODO: Replace this with ES6: var ReactInstanceMap = new Map();
	var ReactInstanceMap = {

	  /**
	   * This API should be called `delete` but we'd have to make sure to always
	   * transform these to strings for IE support. When this transform is fully
	   * supported we can rename it.
	   */
	  remove: function (key) {
	    key._reactInternalInstance = undefined;
	  },

	  get: function (key) {
	    return key._reactInternalInstance;
	  },

	  has: function (key) {
	    return key._reactInternalInstance !== undefined;
	  },

	  set: function (key, value) {
	    key._reactInternalInstance = value;
	  }

	};

	module.exports = ReactInstanceMap;

/***/ }),
/* 49 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactMarkupChecksum
	 */

	'use strict';

	var adler32 = __webpack_require__(50);

	var TAG_END = /\/?>/;

	var ReactMarkupChecksum = {
	  CHECKSUM_ATTR_NAME: 'data-react-checksum',

	  /**
	   * @param {string} markup Markup string
	   * @return {string} Markup string with checksum attribute attached
	   */
	  addChecksumToMarkup: function (markup) {
	    var checksum = adler32(markup);

	    // Add checksum (handle both parent tags and self-closing tags)
	    return markup.replace(TAG_END, ' ' + ReactMarkupChecksum.CHECKSUM_ATTR_NAME + '="' + checksum + '"$&');
	  },

	  /**
	   * @param {string} markup to use
	   * @param {DOMElement} element root React element
	   * @returns {boolean} whether or not the markup is the same
	   */
	  canReuseMarkup: function (markup, element) {
	    var existingChecksum = element.getAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);
	    existingChecksum = existingChecksum && parseInt(existingChecksum, 10);
	    var markupChecksum = adler32(markup);
	    return markupChecksum === existingChecksum;
	  }
	};

	module.exports = ReactMarkupChecksum;

/***/ }),
/* 50 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule adler32
	 */

	'use strict';

	var MOD = 65521;

	// adler32 is not cryptographically strong, and is only used to sanity check that
	// markup generated on the server matches the markup generated on the client.
	// This implementation (a modified version of the SheetJS version) has been optimized
	// for our use case, at the expense of conforming to the adler32 specification
	// for non-ascii inputs.
	function adler32(data) {
	  var a = 1;
	  var b = 0;
	  var i = 0;
	  var l = data.length;
	  var m = l & ~0x3;
	  while (i < m) {
	    for (; i < Math.min(i + 4096, m); i += 4) {
	      b += (a += data.charCodeAt(i)) + (a += data.charCodeAt(i + 1)) + (a += data.charCodeAt(i + 2)) + (a += data.charCodeAt(i + 3));
	    }
	    a %= MOD;
	    b %= MOD;
	  }
	  for (; i < l; i++) {
	    b += a += data.charCodeAt(i);
	  }
	  a %= MOD;
	  b %= MOD;
	  return a | b << 16;
	}

	module.exports = adler32;

/***/ }),
/* 51 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactReconciler
	 */

	'use strict';

	var ReactRef = __webpack_require__(52);

	/**
	 * Helper to call ReactRef.attachRefs with this composite component, split out
	 * to avoid allocations in the transaction mount-ready queue.
	 */
	function attachRefs() {
	  ReactRef.attachRefs(this, this._currentElement);
	}

	var ReactReconciler = {

	  /**
	   * Initializes the component, renders markup, and registers event listeners.
	   *
	   * @param {ReactComponent} internalInstance
	   * @param {string} rootID DOM ID of the root node.
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @return {?string} Rendered markup to be inserted into the DOM.
	   * @final
	   * @internal
	   */
	  mountComponent: function (internalInstance, rootID, transaction, context) {
	    var markup = internalInstance.mountComponent(rootID, transaction, context);
	    if (internalInstance._currentElement && internalInstance._currentElement.ref != null) {
	      transaction.getReactMountReady().enqueue(attachRefs, internalInstance);
	    }
	    return markup;
	  },

	  /**
	   * Releases any resources allocated by `mountComponent`.
	   *
	   * @final
	   * @internal
	   */
	  unmountComponent: function (internalInstance) {
	    ReactRef.detachRefs(internalInstance, internalInstance._currentElement);
	    internalInstance.unmountComponent();
	  },

	  /**
	   * Update a component using a new element.
	   *
	   * @param {ReactComponent} internalInstance
	   * @param {ReactElement} nextElement
	   * @param {ReactReconcileTransaction} transaction
	   * @param {object} context
	   * @internal
	   */
	  receiveComponent: function (internalInstance, nextElement, transaction, context) {
	    var prevElement = internalInstance._currentElement;

	    if (nextElement === prevElement && context === internalInstance._context) {
	      // Since elements are immutable after the owner is rendered,
	      // we can do a cheap identity compare here to determine if this is a
	      // superfluous reconcile. It's possible for state to be mutable but such
	      // change should trigger an update of the owner which would recreate
	      // the element. We explicitly check for the existence of an owner since
	      // it's possible for an element created outside a composite to be
	      // deeply mutated and reused.

	      // TODO: Bailing out early is just a perf optimization right?
	      // TODO: Removing the return statement should affect correctness?
	      return;
	    }

	    var refsChanged = ReactRef.shouldUpdateRefs(prevElement, nextElement);

	    if (refsChanged) {
	      ReactRef.detachRefs(internalInstance, prevElement);
	    }

	    internalInstance.receiveComponent(nextElement, transaction, context);

	    if (refsChanged && internalInstance._currentElement && internalInstance._currentElement.ref != null) {
	      transaction.getReactMountReady().enqueue(attachRefs, internalInstance);
	    }
	  },

	  /**
	   * Flush any dirty changes in a component.
	   *
	   * @param {ReactComponent} internalInstance
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   */
	  performUpdateIfNecessary: function (internalInstance, transaction) {
	    internalInstance.performUpdateIfNecessary(transaction);
	  }

	};

	module.exports = ReactReconciler;

/***/ }),
/* 52 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactRef
	 */

	'use strict';

	var ReactOwner = __webpack_require__(53);

	var ReactRef = {};

	function attachRef(ref, component, owner) {
	  if (typeof ref === 'function') {
	    ref(component.getPublicInstance());
	  } else {
	    // Legacy ref
	    ReactOwner.addComponentAsRefTo(component, ref, owner);
	  }
	}

	function detachRef(ref, component, owner) {
	  if (typeof ref === 'function') {
	    ref(null);
	  } else {
	    // Legacy ref
	    ReactOwner.removeComponentAsRefFrom(component, ref, owner);
	  }
	}

	ReactRef.attachRefs = function (instance, element) {
	  if (element === null || element === false) {
	    return;
	  }
	  var ref = element.ref;
	  if (ref != null) {
	    attachRef(ref, instance, element._owner);
	  }
	};

	ReactRef.shouldUpdateRefs = function (prevElement, nextElement) {
	  // If either the owner or a `ref` has changed, make sure the newest owner
	  // has stored a reference to `this`, and the previous owner (if different)
	  // has forgotten the reference to `this`. We use the element instead
	  // of the public this.props because the post processing cannot determine
	  // a ref. The ref conceptually lives on the element.

	  // TODO: Should this even be possible? The owner cannot change because
	  // it's forbidden by shouldUpdateReactComponent. The ref can change
	  // if you swap the keys of but not the refs. Reconsider where this check
	  // is made. It probably belongs where the key checking and
	  // instantiateReactComponent is done.

	  var prevEmpty = prevElement === null || prevElement === false;
	  var nextEmpty = nextElement === null || nextElement === false;

	  return(
	    // This has a few false positives w/r/t empty components.
	    prevEmpty || nextEmpty || nextElement._owner !== prevElement._owner || nextElement.ref !== prevElement.ref
	  );
	};

	ReactRef.detachRefs = function (instance, element) {
	  if (element === null || element === false) {
	    return;
	  }
	  var ref = element.ref;
	  if (ref != null) {
	    detachRef(ref, instance, element._owner);
	  }
	};

	module.exports = ReactRef;

/***/ }),
/* 53 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactOwner
	 */

	'use strict';

	var invariant = __webpack_require__(14);

	/**
	 * ReactOwners are capable of storing references to owned components.
	 *
	 * All components are capable of //being// referenced by owner components, but
	 * only ReactOwner components are capable of //referencing// owned components.
	 * The named reference is known as a "ref".
	 *
	 * Refs are available when mounted and updated during reconciliation.
	 *
	 *   var MyComponent = React.createClass({
	 *     render: function() {
	 *       return (
	 *         <div onClick={this.handleClick}>
	 *           <CustomComponent ref="custom" />
	 *         </div>
	 *       );
	 *     },
	 *     handleClick: function() {
	 *       this.refs.custom.handleClick();
	 *     },
	 *     componentDidMount: function() {
	 *       this.refs.custom.initialize();
	 *     }
	 *   });
	 *
	 * Refs should rarely be used. When refs are used, they should only be done to
	 * control data that is not handled by React's data flow.
	 *
	 * @class ReactOwner
	 */
	var ReactOwner = {

	  /**
	   * @param {?object} object
	   * @return {boolean} True if `object` is a valid owner.
	   * @final
	   */
	  isValidOwner: function (object) {
	    return !!(object && typeof object.attachRef === 'function' && typeof object.detachRef === 'function');
	  },

	  /**
	   * Adds a component by ref to an owner component.
	   *
	   * @param {ReactComponent} component Component to reference.
	   * @param {string} ref Name by which to refer to the component.
	   * @param {ReactOwner} owner Component on which to record the ref.
	   * @final
	   * @internal
	   */
	  addComponentAsRefTo: function (component, ref, owner) {
	    !ReactOwner.isValidOwner(owner) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'addComponentAsRefTo(...): Only a ReactOwner can have refs. You might ' + 'be adding a ref to a component that was not created inside a component\'s ' + '`render` method, or you have multiple copies of React loaded ' + '(details: https://fb.me/react-refs-must-have-owner).') : invariant(false) : undefined;
	    owner.attachRef(ref, component);
	  },

	  /**
	   * Removes a component by ref from an owner component.
	   *
	   * @param {ReactComponent} component Component to dereference.
	   * @param {string} ref Name of the ref to remove.
	   * @param {ReactOwner} owner Component on which the ref is recorded.
	   * @final
	   * @internal
	   */
	  removeComponentAsRefFrom: function (component, ref, owner) {
	    !ReactOwner.isValidOwner(owner) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'removeComponentAsRefFrom(...): Only a ReactOwner can have refs. You might ' + 'be removing a ref to a component that was not created inside a component\'s ' + '`render` method, or you have multiple copies of React loaded ' + '(details: https://fb.me/react-refs-must-have-owner).') : invariant(false) : undefined;
	    // Check that `component` is still the current ref because we do not want to
	    // detach the ref if another component stole it.
	    if (owner.getPublicInstance().refs[ref] === component.getPublicInstance()) {
	      owner.detachRef(ref);
	    }
	  }

	};

	module.exports = ReactOwner;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)))

/***/ }),
/* 54 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactUpdateQueue
	 */

	'use strict';

	var ReactCurrentOwner = __webpack_require__(6);
	var ReactElement = __webpack_require__(43);
	var ReactInstanceMap = __webpack_require__(48);
	var ReactUpdates = __webpack_require__(55);

	var assign = __webpack_require__(40);
	var invariant = __webpack_require__(14);
	var warning = __webpack_require__(26);

	function enqueueUpdate(internalInstance) {
	  ReactUpdates.enqueueUpdate(internalInstance);
	}

	function getInternalInstanceReadyForUpdate(publicInstance, callerName) {
	  var internalInstance = ReactInstanceMap.get(publicInstance);
	  if (!internalInstance) {
	    if (process.env.NODE_ENV !== 'production') {
	      // Only warn when we have a callerName. Otherwise we should be silent.
	      // We're probably calling from enqueueCallback. We don't want to warn
	      // there because we already warned for the corresponding lifecycle method.
	      process.env.NODE_ENV !== 'production' ? warning(!callerName, '%s(...): Can only update a mounted or mounting component. ' + 'This usually means you called %s() on an unmounted component. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, publicInstance.constructor.displayName) : undefined;
	    }
	    return null;
	  }

	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(ReactCurrentOwner.current == null, '%s(...): Cannot update during an existing state transition ' + '(such as within `render`). Render methods should be a pure function ' + 'of props and state.', callerName) : undefined;
	  }

	  return internalInstance;
	}

	/**
	 * ReactUpdateQueue allows for state updates to be scheduled into a later
	 * reconciliation step.
	 */
	var ReactUpdateQueue = {

	  /**
	   * Checks whether or not this composite component is mounted.
	   * @param {ReactClass} publicInstance The instance we want to test.
	   * @return {boolean} True if mounted, false otherwise.
	   * @protected
	   * @final
	   */
	  isMounted: function (publicInstance) {
	    if (process.env.NODE_ENV !== 'production') {
	      var owner = ReactCurrentOwner.current;
	      if (owner !== null) {
	        process.env.NODE_ENV !== 'production' ? warning(owner._warnedAboutRefsInRender, '%s is accessing isMounted inside its render() function. ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', owner.getName() || 'A component') : undefined;
	        owner._warnedAboutRefsInRender = true;
	      }
	    }
	    var internalInstance = ReactInstanceMap.get(publicInstance);
	    if (internalInstance) {
	      // During componentWillMount and render this will still be null but after
	      // that will always render to something. At least for now. So we can use
	      // this hack.
	      return !!internalInstance._renderedComponent;
	    } else {
	      return false;
	    }
	  },

	  /**
	   * Enqueue a callback that will be executed after all the pending updates
	   * have processed.
	   *
	   * @param {ReactClass} publicInstance The instance to use as `this` context.
	   * @param {?function} callback Called after state is updated.
	   * @internal
	   */
	  enqueueCallback: function (publicInstance, callback) {
	    !(typeof callback === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'enqueueCallback(...): You called `setProps`, `replaceProps`, ' + '`setState`, `replaceState`, or `forceUpdate` with a callback that ' + 'isn\'t callable.') : invariant(false) : undefined;
	    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance);

	    // Previously we would throw an error if we didn't have an internal
	    // instance. Since we want to make it a no-op instead, we mirror the same
	    // behavior we have in other enqueue* methods.
	    // We also need to ignore callbacks in componentWillMount. See
	    // enqueueUpdates.
	    if (!internalInstance) {
	      return null;
	    }

	    if (internalInstance._pendingCallbacks) {
	      internalInstance._pendingCallbacks.push(callback);
	    } else {
	      internalInstance._pendingCallbacks = [callback];
	    }
	    // TODO: The callback here is ignored when setState is called from
	    // componentWillMount. Either fix it or disallow doing so completely in
	    // favor of getInitialState. Alternatively, we can disallow
	    // componentWillMount during server-side rendering.
	    enqueueUpdate(internalInstance);
	  },

	  enqueueCallbackInternal: function (internalInstance, callback) {
	    !(typeof callback === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'enqueueCallback(...): You called `setProps`, `replaceProps`, ' + '`setState`, `replaceState`, or `forceUpdate` with a callback that ' + 'isn\'t callable.') : invariant(false) : undefined;
	    if (internalInstance._pendingCallbacks) {
	      internalInstance._pendingCallbacks.push(callback);
	    } else {
	      internalInstance._pendingCallbacks = [callback];
	    }
	    enqueueUpdate(internalInstance);
	  },

	  /**
	   * Forces an update. This should only be invoked when it is known with
	   * certainty that we are **not** in a DOM transaction.
	   *
	   * You may want to call this when you know that some deeper aspect of the
	   * component's state has changed but `setState` was not called.
	   *
	   * This will not invoke `shouldComponentUpdate`, but it will invoke
	   * `componentWillUpdate` and `componentDidUpdate`.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @internal
	   */
	  enqueueForceUpdate: function (publicInstance) {
	    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'forceUpdate');

	    if (!internalInstance) {
	      return;
	    }

	    internalInstance._pendingForceUpdate = true;

	    enqueueUpdate(internalInstance);
	  },

	  /**
	   * Replaces all of the state. Always use this or `setState` to mutate state.
	   * You should treat `this.state` as immutable.
	   *
	   * There is no guarantee that `this.state` will be immediately updated, so
	   * accessing `this.state` after calling this method may return the old value.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} completeState Next state.
	   * @internal
	   */
	  enqueueReplaceState: function (publicInstance, completeState) {
	    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'replaceState');

	    if (!internalInstance) {
	      return;
	    }

	    internalInstance._pendingStateQueue = [completeState];
	    internalInstance._pendingReplaceState = true;

	    enqueueUpdate(internalInstance);
	  },

	  /**
	   * Sets a subset of the state. This only exists because _pendingState is
	   * internal. This provides a merging strategy that is not available to deep
	   * properties which is confusing. TODO: Expose pendingState or don't use it
	   * during the merge.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} partialState Next partial state to be merged with state.
	   * @internal
	   */
	  enqueueSetState: function (publicInstance, partialState) {
	    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'setState');

	    if (!internalInstance) {
	      return;
	    }

	    var queue = internalInstance._pendingStateQueue || (internalInstance._pendingStateQueue = []);
	    queue.push(partialState);

	    enqueueUpdate(internalInstance);
	  },

	  /**
	   * Sets a subset of the props.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} partialProps Subset of the next props.
	   * @internal
	   */
	  enqueueSetProps: function (publicInstance, partialProps) {
	    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'setProps');
	    if (!internalInstance) {
	      return;
	    }
	    ReactUpdateQueue.enqueueSetPropsInternal(internalInstance, partialProps);
	  },

	  enqueueSetPropsInternal: function (internalInstance, partialProps) {
	    var topLevelWrapper = internalInstance._topLevelWrapper;
	    !topLevelWrapper ? process.env.NODE_ENV !== 'production' ? invariant(false, 'setProps(...): You called `setProps` on a ' + 'component with a parent. This is an anti-pattern since props will ' + 'get reactively updated when rendered. Instead, change the owner\'s ' + '`render` method to pass the correct value as props to the component ' + 'where it is created.') : invariant(false) : undefined;

	    // Merge with the pending element if it exists, otherwise with existing
	    // element props.
	    var wrapElement = topLevelWrapper._pendingElement || topLevelWrapper._currentElement;
	    var element = wrapElement.props;
	    var props = assign({}, element.props, partialProps);
	    topLevelWrapper._pendingElement = ReactElement.cloneAndReplaceProps(wrapElement, ReactElement.cloneAndReplaceProps(element, props));

	    enqueueUpdate(topLevelWrapper);
	  },

	  /**
	   * Replaces all of the props.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} props New props.
	   * @internal
	   */
	  enqueueReplaceProps: function (publicInstance, props) {
	    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'replaceProps');
	    if (!internalInstance) {
	      return;
	    }
	    ReactUpdateQueue.enqueueReplacePropsInternal(internalInstance, props);
	  },

	  enqueueReplacePropsInternal: function (internalInstance, props) {
	    var topLevelWrapper = internalInstance._topLevelWrapper;
	    !topLevelWrapper ? process.env.NODE_ENV !== 'production' ? invariant(false, 'replaceProps(...): You called `replaceProps` on a ' + 'component with a parent. This is an anti-pattern since props will ' + 'get reactively updated when rendered. Instead, change the owner\'s ' + '`render` method to pass the correct value as props to the component ' + 'where it is created.') : invariant(false) : undefined;

	    // Merge with the pending element if it exists, otherwise with existing
	    // element props.
	    var wrapElement = topLevelWrapper._pendingElement || topLevelWrapper._currentElement;
	    var element = wrapElement.props;
	    topLevelWrapper._pendingElement = ReactElement.cloneAndReplaceProps(wrapElement, ReactElement.cloneAndReplaceProps(element, props));

	    enqueueUpdate(topLevelWrapper);
	  },

	  enqueueElementInternal: function (internalInstance, newElement) {
	    internalInstance._pendingElement = newElement;
	    enqueueUpdate(internalInstance);
	  }

	};

	module.exports = ReactUpdateQueue;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)))

/***/ }),
/* 55 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactUpdates
	 */

	'use strict';

	var CallbackQueue = __webpack_require__(56);
	var PooledClass = __webpack_require__(57);
	var ReactPerf = __webpack_require__(19);
	var ReactReconciler = __webpack_require__(51);
	var Transaction = __webpack_require__(58);

	var assign = __webpack_require__(40);
	var invariant = __webpack_require__(14);

	var dirtyComponents = [];
	var asapCallbackQueue = CallbackQueue.getPooled();
	var asapEnqueued = false;

	var batchingStrategy = null;

	function ensureInjected() {
	  !(ReactUpdates.ReactReconcileTransaction && batchingStrategy) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must inject a reconcile transaction class and batching ' + 'strategy') : invariant(false) : undefined;
	}

	var NESTED_UPDATES = {
	  initialize: function () {
	    this.dirtyComponentsLength = dirtyComponents.length;
	  },
	  close: function () {
	    if (this.dirtyComponentsLength !== dirtyComponents.length) {
	      // Additional updates were enqueued by componentDidUpdate handlers or
	      // similar; before our own UPDATE_QUEUEING wrapper closes, we want to run
	      // these new updates so that if A's componentDidUpdate calls setState on
	      // B, B will update before the callback A's updater provided when calling
	      // setState.
	      dirtyComponents.splice(0, this.dirtyComponentsLength);
	      flushBatchedUpdates();
	    } else {
	      dirtyComponents.length = 0;
	    }
	  }
	};

	var UPDATE_QUEUEING = {
	  initialize: function () {
	    this.callbackQueue.reset();
	  },
	  close: function () {
	    this.callbackQueue.notifyAll();
	  }
	};

	var TRANSACTION_WRAPPERS = [NESTED_UPDATES, UPDATE_QUEUEING];

	function ReactUpdatesFlushTransaction() {
	  this.reinitializeTransaction();
	  this.dirtyComponentsLength = null;
	  this.callbackQueue = CallbackQueue.getPooled();
	  this.reconcileTransaction = ReactUpdates.ReactReconcileTransaction.getPooled( /* forceHTML */false);
	}

	assign(ReactUpdatesFlushTransaction.prototype, Transaction.Mixin, {
	  getTransactionWrappers: function () {
	    return TRANSACTION_WRAPPERS;
	  },

	  destructor: function () {
	    this.dirtyComponentsLength = null;
	    CallbackQueue.release(this.callbackQueue);
	    this.callbackQueue = null;
	    ReactUpdates.ReactReconcileTransaction.release(this.reconcileTransaction);
	    this.reconcileTransaction = null;
	  },

	  perform: function (method, scope, a) {
	    // Essentially calls `this.reconcileTransaction.perform(method, scope, a)`
	    // with this transaction's wrappers around it.
	    return Transaction.Mixin.perform.call(this, this.reconcileTransaction.perform, this.reconcileTransaction, method, scope, a);
	  }
	});

	PooledClass.addPoolingTo(ReactUpdatesFlushTransaction);

	function batchedUpdates(callback, a, b, c, d, e) {
	  ensureInjected();
	  batchingStrategy.batchedUpdates(callback, a, b, c, d, e);
	}

	/**
	 * Array comparator for ReactComponents by mount ordering.
	 *
	 * @param {ReactComponent} c1 first component you're comparing
	 * @param {ReactComponent} c2 second component you're comparing
	 * @return {number} Return value usable by Array.prototype.sort().
	 */
	function mountOrderComparator(c1, c2) {
	  return c1._mountOrder - c2._mountOrder;
	}

	function runBatchedUpdates(transaction) {
	  var len = transaction.dirtyComponentsLength;
	  !(len === dirtyComponents.length) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected flush transaction\'s stored dirty-components length (%s) to ' + 'match dirty-components array length (%s).', len, dirtyComponents.length) : invariant(false) : undefined;

	  // Since reconciling a component higher in the owner hierarchy usually (not
	  // always -- see shouldComponentUpdate()) will reconcile children, reconcile
	  // them before their children by sorting the array.
	  dirtyComponents.sort(mountOrderComparator);

	  for (var i = 0; i < len; i++) {
	    // If a component is unmounted before pending changes apply, it will still
	    // be here, but we assume that it has cleared its _pendingCallbacks and
	    // that performUpdateIfNecessary is a noop.
	    var component = dirtyComponents[i];

	    // If performUpdateIfNecessary happens to enqueue any new updates, we
	    // shouldn't execute the callbacks until the next render happens, so
	    // stash the callbacks first
	    var callbacks = component._pendingCallbacks;
	    component._pendingCallbacks = null;

	    ReactReconciler.performUpdateIfNecessary(component, transaction.reconcileTransaction);

	    if (callbacks) {
	      for (var j = 0; j < callbacks.length; j++) {
	        transaction.callbackQueue.enqueue(callbacks[j], component.getPublicInstance());
	      }
	    }
	  }
	}

	var flushBatchedUpdates = function () {
	  // ReactUpdatesFlushTransaction's wrappers will clear the dirtyComponents
	  // array and perform any updates enqueued by mount-ready handlers (i.e.,
	  // componentDidUpdate) but we need to check here too in order to catch
	  // updates enqueued by setState callbacks and asap calls.
	  while (dirtyComponents.length || asapEnqueued) {
	    if (dirtyComponents.length) {
	      var transaction = ReactUpdatesFlushTransaction.getPooled();
	      transaction.perform(runBatchedUpdates, null, transaction);
	      ReactUpdatesFlushTransaction.release(transaction);
	    }

	    if (asapEnqueued) {
	      asapEnqueued = false;
	      var queue = asapCallbackQueue;
	      asapCallbackQueue = CallbackQueue.getPooled();
	      queue.notifyAll();
	      CallbackQueue.release(queue);
	    }
	  }
	};
	flushBatchedUpdates = ReactPerf.measure('ReactUpdates', 'flushBatchedUpdates', flushBatchedUpdates);

	/**
	 * Mark a component as needing a rerender, adding an optional callback to a
	 * list of functions which will be executed once the rerender occurs.
	 */
	function enqueueUpdate(component) {
	  ensureInjected();

	  // Various parts of our code (such as ReactCompositeComponent's
	  // _renderValidatedComponent) assume that calls to render aren't nested;
	  // verify that that's the case. (This is called by each top-level update
	  // function, like setProps, setState, forceUpdate, etc.; creation and
	  // destruction of top-level components is guarded in ReactMount.)

	  if (!batchingStrategy.isBatchingUpdates) {
	    batchingStrategy.batchedUpdates(enqueueUpdate, component);
	    return;
	  }

	  dirtyComponents.push(component);
	}

	/**
	 * Enqueue a callback to be run at the end of the current batching cycle. Throws
	 * if no updates are currently being performed.
	 */
	function asap(callback, context) {
	  !batchingStrategy.isBatchingUpdates ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates.asap: Can\'t enqueue an asap callback in a context where' + 'updates are not being batched.') : invariant(false) : undefined;
	  asapCallbackQueue.enqueue(callback, context);
	  asapEnqueued = true;
	}

	var ReactUpdatesInjection = {
	  injectReconcileTransaction: function (ReconcileTransaction) {
	    !ReconcileTransaction ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must provide a reconcile transaction class') : invariant(false) : undefined;
	    ReactUpdates.ReactReconcileTransaction = ReconcileTransaction;
	  },

	  injectBatchingStrategy: function (_batchingStrategy) {
	    !_batchingStrategy ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must provide a batching strategy') : invariant(false) : undefined;
	    !(typeof _batchingStrategy.batchedUpdates === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must provide a batchedUpdates() function') : invariant(false) : undefined;
	    !(typeof _batchingStrategy.isBatchingUpdates === 'boolean') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must provide an isBatchingUpdates boolean attribute') : invariant(false) : undefined;
	    batchingStrategy = _batchingStrategy;
	  }
	};

	var ReactUpdates = {
	  /**
	   * React references `ReactReconcileTransaction` using this property in order
	   * to allow dependency injection.
	   *
	   * @internal
	   */
	  ReactReconcileTransaction: null,

	  batchedUpdates: batchedUpdates,
	  enqueueUpdate: enqueueUpdate,
	  flushBatchedUpdates: flushBatchedUpdates,
	  injection: ReactUpdatesInjection,
	  asap: asap
	};

	module.exports = ReactUpdates;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)))

/***/ }),
/* 56 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule CallbackQueue
	 */

	'use strict';

	var PooledClass = __webpack_require__(57);

	var assign = __webpack_require__(40);
	var invariant = __webpack_require__(14);

	/**
	 * A specialized pseudo-event module to help keep track of components waiting to
	 * be notified when their DOM representations are available for use.
	 *
	 * This implements `PooledClass`, so you should never need to instantiate this.
	 * Instead, use `CallbackQueue.getPooled()`.
	 *
	 * @class ReactMountReady
	 * @implements PooledClass
	 * @internal
	 */
	function CallbackQueue() {
	  this._callbacks = null;
	  this._contexts = null;
	}

	assign(CallbackQueue.prototype, {

	  /**
	   * Enqueues a callback to be invoked when `notifyAll` is invoked.
	   *
	   * @param {function} callback Invoked when `notifyAll` is invoked.
	   * @param {?object} context Context to call `callback` with.
	   * @internal
	   */
	  enqueue: function (callback, context) {
	    this._callbacks = this._callbacks || [];
	    this._contexts = this._contexts || [];
	    this._callbacks.push(callback);
	    this._contexts.push(context);
	  },

	  /**
	   * Invokes all enqueued callbacks and clears the queue. This is invoked after
	   * the DOM representation of a component has been created or updated.
	   *
	   * @internal
	   */
	  notifyAll: function () {
	    var callbacks = this._callbacks;
	    var contexts = this._contexts;
	    if (callbacks) {
	      !(callbacks.length === contexts.length) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Mismatched list of contexts in callback queue') : invariant(false) : undefined;
	      this._callbacks = null;
	      this._contexts = null;
	      for (var i = 0; i < callbacks.length; i++) {
	        callbacks[i].call(contexts[i]);
	      }
	      callbacks.length = 0;
	      contexts.length = 0;
	    }
	  },

	  /**
	   * Resets the internal queue.
	   *
	   * @internal
	   */
	  reset: function () {
	    this._callbacks = null;
	    this._contexts = null;
	  },

	  /**
	   * `PooledClass` looks for this.
	   */
	  destructor: function () {
	    this.reset();
	  }

	});

	PooledClass.addPoolingTo(CallbackQueue);

	module.exports = CallbackQueue;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)))

/***/ }),
/* 57 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule PooledClass
	 */

	'use strict';

	var invariant = __webpack_require__(14);

	/**
	 * Static poolers. Several custom versions for each potential number of
	 * arguments. A completely generic pooler is easy to implement, but would
	 * require accessing the `arguments` object. In each of these, `this` refers to
	 * the Class itself, not an instance. If any others are needed, simply add them
	 * here, or in their own files.
	 */
	var oneArgumentPooler = function (copyFieldsFrom) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, copyFieldsFrom);
	    return instance;
	  } else {
	    return new Klass(copyFieldsFrom);
	  }
	};

	var twoArgumentPooler = function (a1, a2) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2);
	    return instance;
	  } else {
	    return new Klass(a1, a2);
	  }
	};

	var threeArgumentPooler = function (a1, a2, a3) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2, a3);
	    return instance;
	  } else {
	    return new Klass(a1, a2, a3);
	  }
	};

	var fourArgumentPooler = function (a1, a2, a3, a4) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2, a3, a4);
	    return instance;
	  } else {
	    return new Klass(a1, a2, a3, a4);
	  }
	};

	var fiveArgumentPooler = function (a1, a2, a3, a4, a5) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2, a3, a4, a5);
	    return instance;
	  } else {
	    return new Klass(a1, a2, a3, a4, a5);
	  }
	};

	var standardReleaser = function (instance) {
	  var Klass = this;
	  !(instance instanceof Klass) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Trying to release an instance into a pool of a different type.') : invariant(false) : undefined;
	  instance.destructor();
	  if (Klass.instancePool.length < Klass.poolSize) {
	    Klass.instancePool.push(instance);
	  }
	};

	var DEFAULT_POOL_SIZE = 10;
	var DEFAULT_POOLER = oneArgumentPooler;

	/**
	 * Augments `CopyConstructor` to be a poolable class, augmenting only the class
	 * itself (statically) not adding any prototypical fields. Any CopyConstructor
	 * you give this may have a `poolSize` property, and will look for a
	 * prototypical `destructor` on instances (optional).
	 *
	 * @param {Function} CopyConstructor Constructor that can be used to reset.
	 * @param {Function} pooler Customizable pooler.
	 */
	var addPoolingTo = function (CopyConstructor, pooler) {
	  var NewKlass = CopyConstructor;
	  NewKlass.instancePool = [];
	  NewKlass.getPooled = pooler || DEFAULT_POOLER;
	  if (!NewKlass.poolSize) {
	    NewKlass.poolSize = DEFAULT_POOL_SIZE;
	  }
	  NewKlass.release = standardReleaser;
	  return NewKlass;
	};

	var PooledClass = {
	  addPoolingTo: addPoolingTo,
	  oneArgumentPooler: oneArgumentPooler,
	  twoArgumentPooler: twoArgumentPooler,
	  threeArgumentPooler: threeArgumentPooler,
	  fourArgumentPooler: fourArgumentPooler,
	  fiveArgumentPooler: fiveArgumentPooler
	};

	module.exports = PooledClass;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)))

/***/ }),
/* 58 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule Transaction
	 */

	'use strict';

	var invariant = __webpack_require__(14);

	/**
	 * `Transaction` creates a black box that is able to wrap any method such that
	 * certain invariants are maintained before and after the method is invoked
	 * (Even if an exception is thrown while invoking the wrapped method). Whoever
	 * instantiates a transaction can provide enforcers of the invariants at
	 * creation time. The `Transaction` class itself will supply one additional
	 * automatic invariant for you - the invariant that any transaction instance
	 * should not be run while it is already being run. You would typically create a
	 * single instance of a `Transaction` for reuse multiple times, that potentially
	 * is used to wrap several different methods. Wrappers are extremely simple -
	 * they only require implementing two methods.
	 *
	 * <pre>
	 *                       wrappers (injected at creation time)
	 *                                      +        +
	 *                                      |        |
	 *                    +-----------------|--------|--------------+
	 *                    |                 v        |              |
	 *                    |      +---------------+   |              |
	 *                    |   +--|    wrapper1   |---|----+         |
	 *                    |   |  +---------------+   v    |         |
	 *                    |   |          +-------------+  |         |
	 *                    |   |     +----|   wrapper2  |--------+   |
	 *                    |   |     |    +-------------+  |     |   |
	 *                    |   |     |                     |     |   |
	 *                    |   v     v                     v     v   | wrapper
	 *                    | +---+ +---+   +---------+   +---+ +---+ | invariants
	 * perform(anyMethod) | |   | |   |   |         |   |   | |   | | maintained
	 * +----------------->|-|---|-|---|-->|anyMethod|---|---|-|---|-|-------->
	 *                    | |   | |   |   |         |   |   | |   | |
	 *                    | |   | |   |   |         |   |   | |   | |
	 *                    | |   | |   |   |         |   |   | |   | |
	 *                    | +---+ +---+   +---------+   +---+ +---+ |
	 *                    |  initialize                    close    |
	 *                    +-----------------------------------------+
	 * </pre>
	 *
	 * Use cases:
	 * - Preserving the input selection ranges before/after reconciliation.
	 *   Restoring selection even in the event of an unexpected error.
	 * - Deactivating events while rearranging the DOM, preventing blurs/focuses,
	 *   while guaranteeing that afterwards, the event system is reactivated.
	 * - Flushing a queue of collected DOM mutations to the main UI thread after a
	 *   reconciliation takes place in a worker thread.
	 * - Invoking any collected `componentDidUpdate` callbacks after rendering new
	 *   content.
	 * - (Future use case): Wrapping particular flushes of the `ReactWorker` queue
	 *   to preserve the `scrollTop` (an automatic scroll aware DOM).
	 * - (Future use case): Layout calculations before and after DOM updates.
	 *
	 * Transactional plugin API:
	 * - A module that has an `initialize` method that returns any precomputation.
	 * - and a `close` method that accepts the precomputation. `close` is invoked
	 *   when the wrapped process is completed, or has failed.
	 *
	 * @param {Array<TransactionalWrapper>} transactionWrapper Wrapper modules
	 * that implement `initialize` and `close`.
	 * @return {Transaction} Single transaction for reuse in thread.
	 *
	 * @class Transaction
	 */
	var Mixin = {
	  /**
	   * Sets up this instance so that it is prepared for collecting metrics. Does
	   * so such that this setup method may be used on an instance that is already
	   * initialized, in a way that does not consume additional memory upon reuse.
	   * That can be useful if you decide to make your subclass of this mixin a
	   * "PooledClass".
	   */
	  reinitializeTransaction: function () {
	    this.transactionWrappers = this.getTransactionWrappers();
	    if (this.wrapperInitData) {
	      this.wrapperInitData.length = 0;
	    } else {
	      this.wrapperInitData = [];
	    }
	    this._isInTransaction = false;
	  },

	  _isInTransaction: false,

	  /**
	   * @abstract
	   * @return {Array<TransactionWrapper>} Array of transaction wrappers.
	   */
	  getTransactionWrappers: null,

	  isInTransaction: function () {
	    return !!this._isInTransaction;
	  },

	  /**
	   * Executes the function within a safety window. Use this for the top level
	   * methods that result in large amounts of computation/mutations that would
	   * need to be safety checked. The optional arguments helps prevent the need
	   * to bind in many cases.
	   *
	   * @param {function} method Member of scope to call.
	   * @param {Object} scope Scope to invoke from.
	   * @param {Object?=} a Argument to pass to the method.
	   * @param {Object?=} b Argument to pass to the method.
	   * @param {Object?=} c Argument to pass to the method.
	   * @param {Object?=} d Argument to pass to the method.
	   * @param {Object?=} e Argument to pass to the method.
	   * @param {Object?=} f Argument to pass to the method.
	   *
	   * @return {*} Return value from `method`.
	   */
	  perform: function (method, scope, a, b, c, d, e, f) {
	    !!this.isInTransaction() ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Transaction.perform(...): Cannot initialize a transaction when there ' + 'is already an outstanding transaction.') : invariant(false) : undefined;
	    var errorThrown;
	    var ret;
	    try {
	      this._isInTransaction = true;
	      // Catching errors makes debugging more difficult, so we start with
	      // errorThrown set to true before setting it to false after calling
	      // close -- if it's still set to true in the finally block, it means
	      // one of these calls threw.
	      errorThrown = true;
	      this.initializeAll(0);
	      ret = method.call(scope, a, b, c, d, e, f);
	      errorThrown = false;
	    } finally {
	      try {
	        if (errorThrown) {
	          // If `method` throws, prefer to show that stack trace over any thrown
	          // by invoking `closeAll`.
	          try {
	            this.closeAll(0);
	          } catch (err) {}
	        } else {
	          // Since `method` didn't throw, we don't want to silence the exception
	          // here.
	          this.closeAll(0);
	        }
	      } finally {
	        this._isInTransaction = false;
	      }
	    }
	    return ret;
	  },

	  initializeAll: function (startIndex) {
	    var transactionWrappers = this.transactionWrappers;
	    for (var i = startIndex; i < transactionWrappers.length; i++) {
	      var wrapper = transactionWrappers[i];
	      try {
	        // Catching errors makes debugging more difficult, so we start with the
	        // OBSERVED_ERROR state before overwriting it with the real return value
	        // of initialize -- if it's still set to OBSERVED_ERROR in the finally
	        // block, it means wrapper.initialize threw.
	        this.wrapperInitData[i] = Transaction.OBSERVED_ERROR;
	        this.wrapperInitData[i] = wrapper.initialize ? wrapper.initialize.call(this) : null;
	      } finally {
	        if (this.wrapperInitData[i] === Transaction.OBSERVED_ERROR) {
	          // The initializer for wrapper i threw an error; initialize the
	          // remaining wrappers but silence any exceptions from them to ensure
	          // that the first error is the one to bubble up.
	          try {
	            this.initializeAll(i + 1);
	          } catch (err) {}
	        }
	      }
	    }
	  },

	  /**
	   * Invokes each of `this.transactionWrappers.close[i]` functions, passing into
	   * them the respective return values of `this.transactionWrappers.init[i]`
	   * (`close`rs that correspond to initializers that failed will not be
	   * invoked).
	   */
	  closeAll: function (startIndex) {
	    !this.isInTransaction() ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Transaction.closeAll(): Cannot close transaction when none are open.') : invariant(false) : undefined;
	    var transactionWrappers = this.transactionWrappers;
	    for (var i = startIndex; i < transactionWrappers.length; i++) {
	      var wrapper = transactionWrappers[i];
	      var initData = this.wrapperInitData[i];
	      var errorThrown;
	      try {
	        // Catching errors makes debugging more difficult, so we start with
	        // errorThrown set to true before setting it to false after calling
	        // close -- if it's still set to true in the finally block, it means
	        // wrapper.close threw.
	        errorThrown = true;
	        if (initData !== Transaction.OBSERVED_ERROR && wrapper.close) {
	          wrapper.close.call(this, initData);
	        }
	        errorThrown = false;
	      } finally {
	        if (errorThrown) {
	          // The closer for wrapper i threw an error; close the remaining
	          // wrappers but silence any exceptions from them to ensure that the
	          // first error is the one to bubble up.
	          try {
	            this.closeAll(i + 1);
	          } catch (e) {}
	        }
	      }
	    }
	    this.wrapperInitData.length = 0;
	  }
	};

	var Transaction = {

	  Mixin: Mixin,

	  /**
	   * Token to look for to determine if an error occurred.
	   */
	  OBSERVED_ERROR: {}

	};

	module.exports = Transaction;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)))

/***/ }),
/* 59 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule emptyObject
	 */

	'use strict';

	var emptyObject = {};

	if (process.env.NODE_ENV !== 'production') {
	  Object.freeze(emptyObject);
	}

	module.exports = emptyObject;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)))

/***/ }),
/* 60 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule containsNode
	 * @typechecks
	 */

	'use strict';

	var isTextNode = __webpack_require__(61);

	/*eslint-disable no-bitwise */

	/**
	 * Checks if a given DOM node contains or is another DOM node.
	 *
	 * @param {?DOMNode} outerNode Outer DOM node.
	 * @param {?DOMNode} innerNode Inner DOM node.
	 * @return {boolean} True if `outerNode` contains or is `innerNode`.
	 */
	function containsNode(_x, _x2) {
	  var _again = true;

	  _function: while (_again) {
	    var outerNode = _x,
	        innerNode = _x2;
	    _again = false;

	    if (!outerNode || !innerNode) {
	      return false;
	    } else if (outerNode === innerNode) {
	      return true;
	    } else if (isTextNode(outerNode)) {
	      return false;
	    } else if (isTextNode(innerNode)) {
	      _x = outerNode;
	      _x2 = innerNode.parentNode;
	      _again = true;
	      continue _function;
	    } else if (outerNode.contains) {
	      return outerNode.contains(innerNode);
	    } else if (outerNode.compareDocumentPosition) {
	      return !!(outerNode.compareDocumentPosition(innerNode) & 16);
	    } else {
	      return false;
	    }
	  }
	}

	module.exports = containsNode;

/***/ }),
/* 61 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule isTextNode
	 * @typechecks
	 */

	'use strict';

	var isNode = __webpack_require__(62);

	/**
	 * @param {*} object The object to check.
	 * @return {boolean} Whether or not the object is a DOM text node.
	 */
	function isTextNode(object) {
	  return isNode(object) && object.nodeType == 3;
	}

	module.exports = isTextNode;

/***/ }),
/* 62 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule isNode
	 * @typechecks
	 */

	/**
	 * @param {*} object The object to check.
	 * @return {boolean} Whether or not the object is a DOM node.
	 */
	'use strict';

	function isNode(object) {
	  return !!(object && (typeof Node === 'function' ? object instanceof Node : typeof object === 'object' && typeof object.nodeType === 'number' && typeof object.nodeName === 'string'));
	}

	module.exports = isNode;

/***/ }),
/* 63 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule instantiateReactComponent
	 * @typechecks static-only
	 */

	'use strict';

	var ReactCompositeComponent = __webpack_require__(64);
	var ReactEmptyComponent = __webpack_require__(69);
	var ReactNativeComponent = __webpack_require__(70);

	var assign = __webpack_require__(40);
	var invariant = __webpack_require__(14);
	var warning = __webpack_require__(26);

	// To avoid a cyclic dependency, we create the final class in this module
	var ReactCompositeComponentWrapper = function () {};
	assign(ReactCompositeComponentWrapper.prototype, ReactCompositeComponent.Mixin, {
	  _instantiateReactComponent: instantiateReactComponent
	});

	function getDeclarationErrorAddendum(owner) {
	  if (owner) {
	    var name = owner.getName();
	    if (name) {
	      return ' Check the render method of `' + name + '`.';
	    }
	  }
	  return '';
	}

	/**
	 * Check if the type reference is a known internal type. I.e. not a user
	 * provided composite type.
	 *
	 * @param {function} type
	 * @return {boolean} Returns true if this is a valid internal type.
	 */
	function isInternalComponentType(type) {
	  return typeof type === 'function' && typeof type.prototype !== 'undefined' && typeof type.prototype.mountComponent === 'function' && typeof type.prototype.receiveComponent === 'function';
	}

	/**
	 * Given a ReactNode, create an instance that will actually be mounted.
	 *
	 * @param {ReactNode} node
	 * @return {object} A new instance of the element's constructor.
	 * @protected
	 */
	function instantiateReactComponent(node) {
	  var instance;

	  if (node === null || node === false) {
	    instance = new ReactEmptyComponent(instantiateReactComponent);
	  } else if (typeof node === 'object') {
	    var element = node;
	    !(element && (typeof element.type === 'function' || typeof element.type === 'string')) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Element type is invalid: expected a string (for built-in components) ' + 'or a class/function (for composite components) but got: %s.%s', element.type == null ? element.type : typeof element.type, getDeclarationErrorAddendum(element._owner)) : invariant(false) : undefined;

	    // Special case string values
	    if (typeof element.type === 'string') {
	      instance = ReactNativeComponent.createInternalComponent(element);
	    } else if (isInternalComponentType(element.type)) {
	      // This is temporarily available for custom components that are not string
	      // representations. I.e. ART. Once those are updated to use the string
	      // representation, we can drop this code path.
	      instance = new element.type(element);
	    } else {
	      instance = new ReactCompositeComponentWrapper();
	    }
	  } else if (typeof node === 'string' || typeof node === 'number') {
	    instance = ReactNativeComponent.createInstanceForText(node);
	  } else {
	     true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Encountered invalid React node of type %s', typeof node) : invariant(false) : undefined;
	  }

	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(typeof instance.construct === 'function' && typeof instance.mountComponent === 'function' && typeof instance.receiveComponent === 'function' && typeof instance.unmountComponent === 'function', 'Only React Components can be mounted.') : undefined;
	  }

	  // Sets up the instance. This can probably just move into the constructor now.
	  instance.construct(node);

	  // These two fields are used by the DOM and ART diffing algorithms
	  // respectively. Instead of using expandos on components, we should be
	  // storing the state needed by the diffing algorithms elsewhere.
	  instance._mountIndex = 0;
	  instance._mountImage = null;

	  if (process.env.NODE_ENV !== 'production') {
	    instance._isOwnerNecessary = false;
	    instance._warnedAboutRefsInRender = false;
	  }

	  // Internal instances should fully constructed at this point, so they should
	  // not get any new fields added to them at this point.
	  if (process.env.NODE_ENV !== 'production') {
	    if (Object.preventExtensions) {
	      Object.preventExtensions(instance);
	    }
	  }

	  return instance;
	}

	module.exports = instantiateReactComponent;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)))

/***/ }),
/* 64 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactCompositeComponent
	 */

	'use strict';

	var ReactComponentEnvironment = __webpack_require__(65);
	var ReactCurrentOwner = __webpack_require__(6);
	var ReactElement = __webpack_require__(43);
	var ReactInstanceMap = __webpack_require__(48);
	var ReactPerf = __webpack_require__(19);
	var ReactPropTypeLocations = __webpack_require__(66);
	var ReactPropTypeLocationNames = __webpack_require__(67);
	var ReactReconciler = __webpack_require__(51);
	var ReactUpdateQueue = __webpack_require__(54);

	var assign = __webpack_require__(40);
	var emptyObject = __webpack_require__(59);
	var invariant = __webpack_require__(14);
	var shouldUpdateReactComponent = __webpack_require__(68);
	var warning = __webpack_require__(26);

	function getDeclarationErrorAddendum(component) {
	  var owner = component._currentElement._owner || null;
	  if (owner) {
	    var name = owner.getName();
	    if (name) {
	      return ' Check the render method of `' + name + '`.';
	    }
	  }
	  return '';
	}

	function StatelessComponent(Component) {}
	StatelessComponent.prototype.render = function () {
	  var Component = ReactInstanceMap.get(this)._currentElement.type;
	  return Component(this.props, this.context, this.updater);
	};

	/**
	 * ------------------ The Life-Cycle of a Composite Component ------------------
	 *
	 * - constructor: Initialization of state. The instance is now retained.
	 *   - componentWillMount
	 *   - render
	 *   - [children's constructors]
	 *     - [children's componentWillMount and render]
	 *     - [children's componentDidMount]
	 *     - componentDidMount
	 *
	 *       Update Phases:
	 *       - componentWillReceiveProps (only called if parent updated)
	 *       - shouldComponentUpdate
	 *         - componentWillUpdate
	 *           - render
	 *           - [children's constructors or receive props phases]
	 *         - componentDidUpdate
	 *
	 *     - componentWillUnmount
	 *     - [children's componentWillUnmount]
	 *   - [children destroyed]
	 * - (destroyed): The instance is now blank, released by React and ready for GC.
	 *
	 * -----------------------------------------------------------------------------
	 */

	/**
	 * An incrementing ID assigned to each component when it is mounted. This is
	 * used to enforce the order in which `ReactUpdates` updates dirty components.
	 *
	 * @private
	 */
	var nextMountID = 1;

	/**
	 * @lends {ReactCompositeComponent.prototype}
	 */
	var ReactCompositeComponentMixin = {

	  /**
	   * Base constructor for all composite component.
	   *
	   * @param {ReactElement} element
	   * @final
	   * @internal
	   */
	  construct: function (element) {
	    this._currentElement = element;
	    this._rootNodeID = null;
	    this._instance = null;

	    // See ReactUpdateQueue
	    this._pendingElement = null;
	    this._pendingStateQueue = null;
	    this._pendingReplaceState = false;
	    this._pendingForceUpdate = false;

	    this._renderedComponent = null;

	    this._context = null;
	    this._mountOrder = 0;
	    this._topLevelWrapper = null;

	    // See ReactUpdates and ReactUpdateQueue.
	    this._pendingCallbacks = null;
	  },

	  /**
	   * Initializes the component, renders markup, and registers event listeners.
	   *
	   * @param {string} rootID DOM ID of the root node.
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @return {?string} Rendered markup to be inserted into the DOM.
	   * @final
	   * @internal
	   */
	  mountComponent: function (rootID, transaction, context) {
	    this._context = context;
	    this._mountOrder = nextMountID++;
	    this._rootNodeID = rootID;

	    var publicProps = this._processProps(this._currentElement.props);
	    var publicContext = this._processContext(context);

	    var Component = this._currentElement.type;

	    // Initialize the public class
	    var inst;
	    var renderedElement;

	    // This is a way to detect if Component is a stateless arrow function
	    // component, which is not newable. It might not be 100% reliable but is
	    // something we can do until we start detecting that Component extends
	    // React.Component. We already assume that typeof Component === 'function'.
	    var canInstantiate = ('prototype' in Component);

	    if (canInstantiate) {
	      if (process.env.NODE_ENV !== 'production') {
	        ReactCurrentOwner.current = this;
	        try {
	          inst = new Component(publicProps, publicContext, ReactUpdateQueue);
	        } finally {
	          ReactCurrentOwner.current = null;
	        }
	      } else {
	        inst = new Component(publicProps, publicContext, ReactUpdateQueue);
	      }
	    }

	    if (!canInstantiate || inst === null || inst === false || ReactElement.isValidElement(inst)) {
	      renderedElement = inst;
	      inst = new StatelessComponent(Component);
	    }

	    if (process.env.NODE_ENV !== 'production') {
	      // This will throw later in _renderValidatedComponent, but add an early
	      // warning now to help debugging
	      if (inst.render == null) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '%s(...): No `render` method found on the returned component ' + 'instance: you may have forgotten to define `render`, returned ' + 'null/false from a stateless component, or tried to render an ' + 'element whose type is a function that isn\'t a React component.', Component.displayName || Component.name || 'Component') : undefined;
	      } else {
	        // We support ES6 inheriting from React.Component, the module pattern,
	        // and stateless components, but not ES6 classes that don't extend
	        process.env.NODE_ENV !== 'production' ? warning(Component.prototype && Component.prototype.isReactComponent || !canInstantiate || !(inst instanceof Component), '%s(...): React component classes must extend React.Component.', Component.displayName || Component.name || 'Component') : undefined;
	      }
	    }

	    // These should be set up in the constructor, but as a convenience for
	    // simpler class abstractions, we set them up after the fact.
	    inst.props = publicProps;
	    inst.context = publicContext;
	    inst.refs = emptyObject;
	    inst.updater = ReactUpdateQueue;

	    this._instance = inst;

	    // Store a reference from the instance back to the internal representation
	    ReactInstanceMap.set(inst, this);

	    if (process.env.NODE_ENV !== 'production') {
	      // Since plain JS classes are defined without any special initialization
	      // logic, we can not catch common errors early. Therefore, we have to
	      // catch them here, at initialization time, instead.
	      process.env.NODE_ENV !== 'production' ? warning(!inst.getInitialState || inst.getInitialState.isReactClassApproved, 'getInitialState was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Did you mean to define a state property instead?', this.getName() || 'a component') : undefined;
	      process.env.NODE_ENV !== 'production' ? warning(!inst.getDefaultProps || inst.getDefaultProps.isReactClassApproved, 'getDefaultProps was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Use a static property to define defaultProps instead.', this.getName() || 'a component') : undefined;
	      process.env.NODE_ENV !== 'production' ? warning(!inst.propTypes, 'propTypes was defined as an instance property on %s. Use a static ' + 'property to define propTypes instead.', this.getName() || 'a component') : undefined;
	      process.env.NODE_ENV !== 'production' ? warning(!inst.contextTypes, 'contextTypes was defined as an instance property on %s. Use a ' + 'static property to define contextTypes instead.', this.getName() || 'a component') : undefined;
	      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentShouldUpdate !== 'function', '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', this.getName() || 'A component') : undefined;
	      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentDidUnmount !== 'function', '%s has a method called ' + 'componentDidUnmount(). But there is no such lifecycle method. ' + 'Did you mean componentWillUnmount()?', this.getName() || 'A component') : undefined;
	      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentWillRecieveProps !== 'function', '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', this.getName() || 'A component') : undefined;
	    }

	    var initialState = inst.state;
	    if (initialState === undefined) {
	      inst.state = initialState = null;
	    }
	    !(typeof initialState === 'object' && !Array.isArray(initialState)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.state: must be set to an object or null', this.getName() || 'ReactCompositeComponent') : invariant(false) : undefined;

	    this._pendingStateQueue = null;
	    this._pendingReplaceState = false;
	    this._pendingForceUpdate = false;

	    if (inst.componentWillMount) {
	      inst.componentWillMount();
	      // When mounting, calls to `setState` by `componentWillMount` will set
	      // `this._pendingStateQueue` without triggering a re-render.
	      if (this._pendingStateQueue) {
	        inst.state = this._processPendingState(inst.props, inst.context);
	      }
	    }

	    // If not a stateless component, we now render
	    if (renderedElement === undefined) {
	      renderedElement = this._renderValidatedComponent();
	    }

	    this._renderedComponent = this._instantiateReactComponent(renderedElement);

	    var markup = ReactReconciler.mountComponent(this._renderedComponent, rootID, transaction, this._processChildContext(context));
	    if (inst.componentDidMount) {
	      transaction.getReactMountReady().enqueue(inst.componentDidMount, inst);
	    }

	    return markup;
	  },

	  /**
	   * Releases any resources allocated by `mountComponent`.
	   *
	   * @final
	   * @internal
	   */
	  unmountComponent: function () {
	    var inst = this._instance;

	    if (inst.componentWillUnmount) {
	      inst.componentWillUnmount();
	    }

	    ReactReconciler.unmountComponent(this._renderedComponent);
	    this._renderedComponent = null;
	    this._instance = null;

	    // Reset pending fields
	    // Even if this component is scheduled for another update in ReactUpdates,
	    // it would still be ignored because these fields are reset.
	    this._pendingStateQueue = null;
	    this._pendingReplaceState = false;
	    this._pendingForceUpdate = false;
	    this._pendingCallbacks = null;
	    this._pendingElement = null;

	    // These fields do not really need to be reset since this object is no
	    // longer accessible.
	    this._context = null;
	    this._rootNodeID = null;
	    this._topLevelWrapper = null;

	    // Delete the reference from the instance to this internal representation
	    // which allow the internals to be properly cleaned up even if the user
	    // leaks a reference to the public instance.
	    ReactInstanceMap.remove(inst);

	    // Some existing components rely on inst.props even after they've been
	    // destroyed (in event handlers).
	    // TODO: inst.props = null;
	    // TODO: inst.state = null;
	    // TODO: inst.context = null;
	  },

	  /**
	   * Filters the context object to only contain keys specified in
	   * `contextTypes`
	   *
	   * @param {object} context
	   * @return {?object}
	   * @private
	   */
	  _maskContext: function (context) {
	    var maskedContext = null;
	    var Component = this._currentElement.type;
	    var contextTypes = Component.contextTypes;
	    if (!contextTypes) {
	      return emptyObject;
	    }
	    maskedContext = {};
	    for (var contextName in contextTypes) {
	      maskedContext[contextName] = context[contextName];
	    }
	    return maskedContext;
	  },

	  /**
	   * Filters the context object to only contain keys specified in
	   * `contextTypes`, and asserts that they are valid.
	   *
	   * @param {object} context
	   * @return {?object}
	   * @private
	   */
	  _processContext: function (context) {
	    var maskedContext = this._maskContext(context);
	    if (process.env.NODE_ENV !== 'production') {
	      var Component = this._currentElement.type;
	      if (Component.contextTypes) {
	        this._checkPropTypes(Component.contextTypes, maskedContext, ReactPropTypeLocations.context);
	      }
	    }
	    return maskedContext;
	  },

	  /**
	   * @param {object} currentContext
	   * @return {object}
	   * @private
	   */
	  _processChildContext: function (currentContext) {
	    var Component = this._currentElement.type;
	    var inst = this._instance;
	    var childContext = inst.getChildContext && inst.getChildContext();
	    if (childContext) {
	      !(typeof Component.childContextTypes === 'object') ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.getChildContext(): childContextTypes must be defined in order to ' + 'use getChildContext().', this.getName() || 'ReactCompositeComponent') : invariant(false) : undefined;
	      if (process.env.NODE_ENV !== 'production') {
	        this._checkPropTypes(Component.childContextTypes, childContext, ReactPropTypeLocations.childContext);
	      }
	      for (var name in childContext) {
	        !(name in Component.childContextTypes) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.getChildContext(): key "%s" is not defined in childContextTypes.', this.getName() || 'ReactCompositeComponent', name) : invariant(false) : undefined;
	      }
	      return assign({}, currentContext, childContext);
	    }
	    return currentContext;
	  },

	  /**
	   * Processes props by setting default values for unspecified props and
	   * asserting that the props are valid. Does not mutate its argument; returns
	   * a new props object with defaults merged in.
	   *
	   * @param {object} newProps
	   * @return {object}
	   * @private
	   */
	  _processProps: function (newProps) {
	    if (process.env.NODE_ENV !== 'production') {
	      var Component = this._currentElement.type;
	      if (Component.propTypes) {
	        this._checkPropTypes(Component.propTypes, newProps, ReactPropTypeLocations.prop);
	      }
	    }
	    return newProps;
	  },

	  /**
	   * Assert that the props are valid
	   *
	   * @param {object} propTypes Map of prop name to a ReactPropType
	   * @param {object} props
	   * @param {string} location e.g. "prop", "context", "child context"
	   * @private
	   */
	  _checkPropTypes: function (propTypes, props, location) {
	    // TODO: Stop validating prop types here and only use the element
	    // validation.
	    var componentName = this.getName();
	    for (var propName in propTypes) {
	      if (propTypes.hasOwnProperty(propName)) {
	        var error;
	        try {
	          // This is intentionally an invariant that gets caught. It's the same
	          // behavior as without this statement except with a better message.
	          !(typeof propTypes[propName] === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s: %s type `%s` is invalid; it must be a function, usually ' + 'from React.PropTypes.', componentName || 'React class', ReactPropTypeLocationNames[location], propName) : invariant(false) : undefined;
	          error = propTypes[propName](props, propName, componentName, location, null, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');
	        } catch (ex) {
	          error = ex;
	        }
	        if (error instanceof Error) {
	          // We may want to extend this logic for similar errors in
	          // top-level render calls, so I'm abstracting it away into
	          // a function to minimize refactoring in the future
	          var addendum = getDeclarationErrorAddendum(this);

	          if (location === ReactPropTypeLocations.prop) {
	            // Preface gives us something to blacklist in warning module
	            process.env.NODE_ENV !== 'production' ? warning(false, 'Failed Composite propType: %s%s', error.message, addendum) : undefined;
	          } else {
	            process.env.NODE_ENV !== 'production' ? warning(false, 'Failed Context Types: %s%s', error.message, addendum) : undefined;
	          }
	        }
	      }
	    }
	  },

	  receiveComponent: function (nextElement, transaction, nextContext) {
	    var prevElement = this._currentElement;
	    var prevContext = this._context;

	    this._pendingElement = null;

	    this.updateComponent(transaction, prevElement, nextElement, prevContext, nextContext);
	  },

	  /**
	   * If any of `_pendingElement`, `_pendingStateQueue`, or `_pendingForceUpdate`
	   * is set, update the component.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   */
	  performUpdateIfNecessary: function (transaction) {
	    if (this._pendingElement != null) {
	      ReactReconciler.receiveComponent(this, this._pendingElement || this._currentElement, transaction, this._context);
	    }

	    if (this._pendingStateQueue !== null || this._pendingForceUpdate) {
	      this.updateComponent(transaction, this._currentElement, this._currentElement, this._context, this._context);
	    }
	  },

	  /**
	   * Perform an update to a mounted component. The componentWillReceiveProps and
	   * shouldComponentUpdate methods are called, then (assuming the update isn't
	   * skipped) the remaining update lifecycle methods are called and the DOM
	   * representation is updated.
	   *
	   * By default, this implements React's rendering and reconciliation algorithm.
	   * Sophisticated clients may wish to override this.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @param {ReactElement} prevParentElement
	   * @param {ReactElement} nextParentElement
	   * @internal
	   * @overridable
	   */
	  updateComponent: function (transaction, prevParentElement, nextParentElement, prevUnmaskedContext, nextUnmaskedContext) {
	    var inst = this._instance;

	    var nextContext = this._context === nextUnmaskedContext ? inst.context : this._processContext(nextUnmaskedContext);
	    var nextProps;

	    // Distinguish between a props update versus a simple state update
	    if (prevParentElement === nextParentElement) {
	      // Skip checking prop types again -- we don't read inst.props to avoid
	      // warning for DOM component props in this upgrade
	      nextProps = nextParentElement.props;
	    } else {
	      nextProps = this._processProps(nextParentElement.props);
	      // An update here will schedule an update but immediately set
	      // _pendingStateQueue which will ensure that any state updates gets
	      // immediately reconciled instead of waiting for the next batch.

	      if (inst.componentWillReceiveProps) {
	        inst.componentWillReceiveProps(nextProps, nextContext);
	      }
	    }

	    var nextState = this._processPendingState(nextProps, nextContext);

	    var shouldUpdate = this._pendingForceUpdate || !inst.shouldComponentUpdate || inst.shouldComponentUpdate(nextProps, nextState, nextContext);

	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(typeof shouldUpdate !== 'undefined', '%s.shouldComponentUpdate(): Returned undefined instead of a ' + 'boolean value. Make sure to return true or false.', this.getName() || 'ReactCompositeComponent') : undefined;
	    }

	    if (shouldUpdate) {
	      this._pendingForceUpdate = false;
	      // Will set `this.props`, `this.state` and `this.context`.
	      this._performComponentUpdate(nextParentElement, nextProps, nextState, nextContext, transaction, nextUnmaskedContext);
	    } else {
	      // If it's determined that a component should not update, we still want
	      // to set props and state but we shortcut the rest of the update.
	      this._currentElement = nextParentElement;
	      this._context = nextUnmaskedContext;
	      inst.props = nextProps;
	      inst.state = nextState;
	      inst.context = nextContext;
	    }
	  },

	  _processPendingState: function (props, context) {
	    var inst = this._instance;
	    var queue = this._pendingStateQueue;
	    var replace = this._pendingReplaceState;
	    this._pendingReplaceState = false;
	    this._pendingStateQueue = null;

	    if (!queue) {
	      return inst.state;
	    }

	    if (replace && queue.length === 1) {
	      return queue[0];
	    }

	    var nextState = assign({}, replace ? queue[0] : inst.state);
	    for (var i = replace ? 1 : 0; i < queue.length; i++) {
	      var partial = queue[i];
	      assign(nextState, typeof partial === 'function' ? partial.call(inst, nextState, props, context) : partial);
	    }

	    return nextState;
	  },

	  /**
	   * Merges new props and state, notifies delegate methods of update and
	   * performs update.
	   *
	   * @param {ReactElement} nextElement Next element
	   * @param {object} nextProps Next public object to set as properties.
	   * @param {?object} nextState Next object to set as state.
	   * @param {?object} nextContext Next public object to set as context.
	   * @param {ReactReconcileTransaction} transaction
	   * @param {?object} unmaskedContext
	   * @private
	   */
	  _performComponentUpdate: function (nextElement, nextProps, nextState, nextContext, transaction, unmaskedContext) {
	    var inst = this._instance;

	    var hasComponentDidUpdate = Boolean(inst.componentDidUpdate);
	    var prevProps;
	    var prevState;
	    var prevContext;
	    if (hasComponentDidUpdate) {
	      prevProps = inst.props;
	      prevState = inst.state;
	      prevContext = inst.context;
	    }

	    if (inst.componentWillUpdate) {
	      inst.componentWillUpdate(nextProps, nextState, nextContext);
	    }

	    this._currentElement = nextElement;
	    this._context = unmaskedContext;
	    inst.props = nextProps;
	    inst.state = nextState;
	    inst.context = nextContext;

	    this._updateRenderedComponent(transaction, unmaskedContext);

	    if (hasComponentDidUpdate) {
	      transaction.getReactMountReady().enqueue(inst.componentDidUpdate.bind(inst, prevProps, prevState, prevContext), inst);
	    }
	  },

	  /**
	   * Call the component's `render` method and update the DOM accordingly.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   */
	  _updateRenderedComponent: function (transaction, context) {
	    var prevComponentInstance = this._renderedComponent;
	    var prevRenderedElement = prevComponentInstance._currentElement;
	    var nextRenderedElement = this._renderValidatedComponent();
	    if (shouldUpdateReactComponent(prevRenderedElement, nextRenderedElement)) {
	      ReactReconciler.receiveComponent(prevComponentInstance, nextRenderedElement, transaction, this._processChildContext(context));
	    } else {
	      // These two IDs are actually the same! But nothing should rely on that.
	      var thisID = this._rootNodeID;
	      var prevComponentID = prevComponentInstance._rootNodeID;
	      ReactReconciler.unmountComponent(prevComponentInstance);

	      this._renderedComponent = this._instantiateReactComponent(nextRenderedElement);
	      var nextMarkup = ReactReconciler.mountComponent(this._renderedComponent, thisID, transaction, this._processChildContext(context));
	      this._replaceNodeWithMarkupByID(prevComponentID, nextMarkup);
	    }
	  },

	  /**
	   * @protected
	   */
	  _replaceNodeWithMarkupByID: function (prevComponentID, nextMarkup) {
	    ReactComponentEnvironment.replaceNodeWithMarkupByID(prevComponentID, nextMarkup);
	  },

	  /**
	   * @protected
	   */
	  _renderValidatedComponentWithoutOwnerOrContext: function () {
	    var inst = this._instance;
	    var renderedComponent = inst.render();
	    if (process.env.NODE_ENV !== 'production') {
	      // We allow auto-mocks to proceed as if they're returning null.
	      if (typeof renderedComponent === 'undefined' && inst.render._isMockFunction) {
	        // This is probably bad practice. Consider warning here and
	        // deprecating this convenience.
	        renderedComponent = null;
	      }
	    }

	    return renderedComponent;
	  },

	  /**
	   * @private
	   */
	  _renderValidatedComponent: function () {
	    var renderedComponent;
	    ReactCurrentOwner.current = this;
	    try {
	      renderedComponent = this._renderValidatedComponentWithoutOwnerOrContext();
	    } finally {
	      ReactCurrentOwner.current = null;
	    }
	    !(
	    // TODO: An `isValidNode` function would probably be more appropriate
	    renderedComponent === null || renderedComponent === false || ReactElement.isValidElement(renderedComponent)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.render(): A valid ReactComponent must be returned. You may have ' + 'returned undefined, an array or some other invalid object.', this.getName() || 'ReactCompositeComponent') : invariant(false) : undefined;
	    return renderedComponent;
	  },

	  /**
	   * Lazily allocates the refs object and stores `component` as `ref`.
	   *
	   * @param {string} ref Reference name.
	   * @param {component} component Component to store as `ref`.
	   * @final
	   * @private
	   */
	  attachRef: function (ref, component) {
	    var inst = this.getPublicInstance();
	    !(inst != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Stateless function components cannot have refs.') : invariant(false) : undefined;
	    var publicComponentInstance = component.getPublicInstance();
	    if (process.env.NODE_ENV !== 'production') {
	      var componentName = component && component.getName ? component.getName() : 'a component';
	      process.env.NODE_ENV !== 'production' ? warning(publicComponentInstance != null, 'Stateless function components cannot be given refs ' + '(See ref "%s" in %s created by %s). ' + 'Attempts to access this ref will fail.', ref, componentName, this.getName()) : undefined;
	    }
	    var refs = inst.refs === emptyObject ? inst.refs = {} : inst.refs;
	    refs[ref] = publicComponentInstance;
	  },

	  /**
	   * Detaches a reference name.
	   *
	   * @param {string} ref Name to dereference.
	   * @final
	   * @private
	   */
	  detachRef: function (ref) {
	    var refs = this.getPublicInstance().refs;
	    delete refs[ref];
	  },

	  /**
	   * Get a text description of the component that can be used to identify it
	   * in error messages.
	   * @return {string} The name or null.
	   * @internal
	   */
	  getName: function () {
	    var type = this._currentElement.type;
	    var constructor = this._instance && this._instance.constructor;
	    return type.displayName || constructor && constructor.displayName || type.name || constructor && constructor.name || null;
	  },

	  /**
	   * Get the publicly accessible representation of this component - i.e. what
	   * is exposed by refs and returned by render. Can be null for stateless
	   * components.
	   *
	   * @return {ReactComponent} the public component instance.
	   * @internal
	   */
	  getPublicInstance: function () {
	    var inst = this._instance;
	    if (inst instanceof StatelessComponent) {
	      return null;
	    }
	    return inst;
	  },

	  // Stub
	  _instantiateReactComponent: null

	};

	ReactPerf.measureMethods(ReactCompositeComponentMixin, 'ReactCompositeComponent', {
	  mountComponent: 'mountComponent',
	  updateComponent: 'updateComponent',
	  _renderValidatedComponent: '_renderValidatedComponent'
	});

	var ReactCompositeComponent = {

	  Mixin: ReactCompositeComponentMixin

	};

	module.exports = ReactCompositeComponent;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)))

/***/ }),
/* 65 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactComponentEnvironment
	 */

	'use strict';

	var invariant = __webpack_require__(14);

	var injected = false;

	var ReactComponentEnvironment = {

	  /**
	   * Optionally injectable environment dependent cleanup hook. (server vs.
	   * browser etc). Example: A browser system caches DOM nodes based on component
	   * ID and must remove that cache entry when this instance is unmounted.
	   */
	  unmountIDFromEnvironment: null,

	  /**
	   * Optionally injectable hook for swapping out mount images in the middle of
	   * the tree.
	   */
	  replaceNodeWithMarkupByID: null,

	  /**
	   * Optionally injectable hook for processing a queue of child updates. Will
	   * later move into MultiChildComponents.
	   */
	  processChildrenUpdates: null,

	  injection: {
	    injectEnvironment: function (environment) {
	      !!injected ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactCompositeComponent: injectEnvironment() can only be called once.') : invariant(false) : undefined;
	      ReactComponentEnvironment.unmountIDFromEnvironment = environment.unmountIDFromEnvironment;
	      ReactComponentEnvironment.replaceNodeWithMarkupByID = environment.replaceNodeWithMarkupByID;
	      ReactComponentEnvironment.processChildrenUpdates = environment.processChildrenUpdates;
	      injected = true;
	    }
	  }

	};

	module.exports = ReactComponentEnvironment;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)))

/***/ }),
/* 66 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactPropTypeLocations
	 */

	'use strict';

	var keyMirror = __webpack_require__(18);

	var ReactPropTypeLocations = keyMirror({
	  prop: null,
	  context: null,
	  childContext: null
	});

	module.exports = ReactPropTypeLocations;

/***/ }),
/* 67 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactPropTypeLocationNames
	 */

	'use strict';

	var ReactPropTypeLocationNames = {};

	if (process.env.NODE_ENV !== 'production') {
	  ReactPropTypeLocationNames = {
	    prop: 'prop',
	    context: 'context',
	    childContext: 'child context'
	  };
	}

	module.exports = ReactPropTypeLocationNames;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)))

/***/ }),
/* 68 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule shouldUpdateReactComponent
	 * @typechecks static-only
	 */

	'use strict';

	/**
	 * Given a `prevElement` and `nextElement`, determines if the existing
	 * instance should be updated as opposed to being destroyed or replaced by a new
	 * instance. Both arguments are elements. This ensures that this logic can
	 * operate on stateless trees without any backing instance.
	 *
	 * @param {?object} prevElement
	 * @param {?object} nextElement
	 * @return {boolean} True if the existing instance should be updated.
	 * @protected
	 */
	function shouldUpdateReactComponent(prevElement, nextElement) {
	  var prevEmpty = prevElement === null || prevElement === false;
	  var nextEmpty = nextElement === null || nextElement === false;
	  if (prevEmpty || nextEmpty) {
	    return prevEmpty === nextEmpty;
	  }

	  var prevType = typeof prevElement;
	  var nextType = typeof nextElement;
	  if (prevType === 'string' || prevType === 'number') {
	    return nextType === 'string' || nextType === 'number';
	  } else {
	    return nextType === 'object' && prevElement.type === nextElement.type && prevElement.key === nextElement.key;
	  }
	  return false;
	}

	module.exports = shouldUpdateReactComponent;

/***/ }),
/* 69 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactEmptyComponent
	 */

	'use strict';

	var ReactElement = __webpack_require__(43);
	var ReactEmptyComponentRegistry = __webpack_require__(45);
	var ReactReconciler = __webpack_require__(51);

	var assign = __webpack_require__(40);

	var placeholderElement;

	var ReactEmptyComponentInjection = {
	  injectEmptyComponent: function (component) {
	    placeholderElement = ReactElement.createElement(component);
	  }
	};

	function registerNullComponentID() {
	  ReactEmptyComponentRegistry.registerNullComponentID(this._rootNodeID);
	}

	var ReactEmptyComponent = function (instantiate) {
	  this._currentElement = null;
	  this._rootNodeID = null;
	  this._renderedComponent = instantiate(placeholderElement);
	};
	assign(ReactEmptyComponent.prototype, {
	  construct: function (element) {},
	  mountComponent: function (rootID, transaction, context) {
	    transaction.getReactMountReady().enqueue(registerNullComponentID, this);
	    this._rootNodeID = rootID;
	    return ReactReconciler.mountComponent(this._renderedComponent, rootID, transaction, context);
	  },
	  receiveComponent: function () {},
	  unmountComponent: function (rootID, transaction, context) {
	    ReactReconciler.unmountComponent(this._renderedComponent);
	    ReactEmptyComponentRegistry.deregisterNullComponentID(this._rootNodeID);
	    this._rootNodeID = null;
	    this._renderedComponent = null;
	  }
	});

	ReactEmptyComponent.injection = ReactEmptyComponentInjection;

	module.exports = ReactEmptyComponent;

/***/ }),
/* 70 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactNativeComponent
	 */

	'use strict';

	var assign = __webpack_require__(40);
	var invariant = __webpack_require__(14);

	var autoGenerateWrapperClass = null;
	var genericComponentClass = null;
	// This registry keeps track of wrapper classes around native tags.
	var tagToComponentClass = {};
	var textComponentClass = null;

	var ReactNativeComponentInjection = {
	  // This accepts a class that receives the tag string. This is a catch all
	  // that can render any kind of tag.
	  injectGenericComponentClass: function (componentClass) {
	    genericComponentClass = componentClass;
	  },
	  // This accepts a text component class that takes the text string to be
	  // rendered as props.
	  injectTextComponentClass: function (componentClass) {
	    textComponentClass = componentClass;
	  },
	  // This accepts a keyed object with classes as values. Each key represents a
	  // tag. That particular tag will use this class instead of the generic one.
	  injectComponentClasses: function (componentClasses) {
	    assign(tagToComponentClass, componentClasses);
	  }
	};

	/**
	 * Get a composite component wrapper class for a specific tag.
	 *
	 * @param {ReactElement} element The tag for which to get the class.
	 * @return {function} The React class constructor function.
	 */
	function getComponentClassForElement(element) {
	  if (typeof element.type === 'function') {
	    return element.type;
	  }
	  var tag = element.type;
	  var componentClass = tagToComponentClass[tag];
	  if (componentClass == null) {
	    tagToComponentClass[tag] = componentClass = autoGenerateWrapperClass(tag);
	  }
	  return componentClass;
	}

	/**
	 * Get a native internal component class for a specific tag.
	 *
	 * @param {ReactElement} element The element to create.
	 * @return {function} The internal class constructor function.
	 */
	function createInternalComponent(element) {
	  !genericComponentClass ? process.env.NODE_ENV !== 'production' ? invariant(false, 'There is no registered component for the tag %s', element.type) : invariant(false) : undefined;
	  return new genericComponentClass(element.type, element.props);
	}

	/**
	 * @param {ReactText} text
	 * @return {ReactComponent}
	 */
	function createInstanceForText(text) {
	  return new textComponentClass(text);
	}

	/**
	 * @param {ReactComponent} component
	 * @return {boolean}
	 */
	function isTextComponent(component) {
	  return component instanceof textComponentClass;
	}

	var ReactNativeComponent = {
	  getComponentClassForElement: getComponentClassForElement,
	  createInternalComponent: createInternalComponent,
	  createInstanceForText: createInstanceForText,
	  isTextComponent: isTextComponent,
	  injection: ReactNativeComponentInjection
	};

	module.exports = ReactNativeComponent;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)))

/***/ }),
/* 71 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule validateDOMNesting
	 */

	'use strict';

	var assign = __webpack_require__(40);
	var emptyFunction = __webpack_require__(16);
	var warning = __webpack_require__(26);

	var validateDOMNesting = emptyFunction;

	if (process.env.NODE_ENV !== 'production') {
	  // This validation code was written based on the HTML5 parsing spec:
	  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
	  //
	  // Note: this does not catch all invalid nesting, nor does it try to (as it's
	  // not clear what practical benefit doing so provides); instead, we warn only
	  // for cases where the parser will give a parse tree differing from what React
	  // intended. For example, <b><div></div></b> is invalid but we don't warn
	  // because it still parses correctly; we do warn for other cases like nested
	  // <p> tags where the beginning of the second element implicitly closes the
	  // first, causing a confusing mess.

	  // https://html.spec.whatwg.org/multipage/syntax.html#special
	  var specialTags = ['address', 'applet', 'area', 'article', 'aside', 'base', 'basefont', 'bgsound', 'blockquote', 'body', 'br', 'button', 'caption', 'center', 'col', 'colgroup', 'dd', 'details', 'dir', 'div', 'dl', 'dt', 'embed', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'frame', 'frameset', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'iframe', 'img', 'input', 'isindex', 'li', 'link', 'listing', 'main', 'marquee', 'menu', 'menuitem', 'meta', 'nav', 'noembed', 'noframes', 'noscript', 'object', 'ol', 'p', 'param', 'plaintext', 'pre', 'script', 'section', 'select', 'source', 'style', 'summary', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'title', 'tr', 'track', 'ul', 'wbr', 'xmp'];

	  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
	  var inScopeTags = ['applet', 'caption', 'html', 'table', 'td', 'th', 'marquee', 'object', 'template',

	  // https://html.spec.whatwg.org/multipage/syntax.html#html-integration-point
	  // TODO: Distinguish by namespace here -- for <title>, including it here
	  // errs on the side of fewer warnings
	  'foreignObject', 'desc', 'title'];

	  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-button-scope
	  var buttonScopeTags = inScopeTags.concat(['button']);

	  // https://html.spec.whatwg.org/multipage/syntax.html#generate-implied-end-tags
	  var impliedEndTags = ['dd', 'dt', 'li', 'option', 'optgroup', 'p', 'rp', 'rt'];

	  var emptyAncestorInfo = {
	    parentTag: null,

	    formTag: null,
	    aTagInScope: null,
	    buttonTagInScope: null,
	    nobrTagInScope: null,
	    pTagInButtonScope: null,

	    listItemTagAutoclosing: null,
	    dlItemTagAutoclosing: null
	  };

	  var updatedAncestorInfo = function (oldInfo, tag, instance) {
	    var ancestorInfo = assign({}, oldInfo || emptyAncestorInfo);
	    var info = { tag: tag, instance: instance };

	    if (inScopeTags.indexOf(tag) !== -1) {
	      ancestorInfo.aTagInScope = null;
	      ancestorInfo.buttonTagInScope = null;
	      ancestorInfo.nobrTagInScope = null;
	    }
	    if (buttonScopeTags.indexOf(tag) !== -1) {
	      ancestorInfo.pTagInButtonScope = null;
	    }

	    // See rules for 'li', 'dd', 'dt' start tags in
	    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody
	    if (specialTags.indexOf(tag) !== -1 && tag !== 'address' && tag !== 'div' && tag !== 'p') {
	      ancestorInfo.listItemTagAutoclosing = null;
	      ancestorInfo.dlItemTagAutoclosing = null;
	    }

	    ancestorInfo.parentTag = info;

	    if (tag === 'form') {
	      ancestorInfo.formTag = info;
	    }
	    if (tag === 'a') {
	      ancestorInfo.aTagInScope = info;
	    }
	    if (tag === 'button') {
	      ancestorInfo.buttonTagInScope = info;
	    }
	    if (tag === 'nobr') {
	      ancestorInfo.nobrTagInScope = info;
	    }
	    if (tag === 'p') {
	      ancestorInfo.pTagInButtonScope = info;
	    }
	    if (tag === 'li') {
	      ancestorInfo.listItemTagAutoclosing = info;
	    }
	    if (tag === 'dd' || tag === 'dt') {
	      ancestorInfo.dlItemTagAutoclosing = info;
	    }

	    return ancestorInfo;
	  };

	  /**
	   * Returns whether
	   */
	  var isTagValidWithParent = function (tag, parentTag) {
	    // First, let's check if we're in an unusual parsing mode...
	    switch (parentTag) {
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inselect
	      case 'select':
	        return tag === 'option' || tag === 'optgroup' || tag === '#text';
	      case 'optgroup':
	        return tag === 'option' || tag === '#text';
	      // Strictly speaking, seeing an <option> doesn't mean we're in a <select>
	      // but
	      case 'option':
	        return tag === '#text';

	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intd
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incaption
	      // No special behavior since these rules fall back to "in body" mode for
	      // all except special table nodes which cause bad parsing behavior anyway.

	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intr
	      case 'tr':
	        return tag === 'th' || tag === 'td' || tag === 'style' || tag === 'script' || tag === 'template';

	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intbody
	      case 'tbody':
	      case 'thead':
	      case 'tfoot':
	        return tag === 'tr' || tag === 'style' || tag === 'script' || tag === 'template';

	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incolgroup
	      case 'colgroup':
	        return tag === 'col' || tag === 'template';

	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intable
	      case 'table':
	        return tag === 'caption' || tag === 'colgroup' || tag === 'tbody' || tag === 'tfoot' || tag === 'thead' || tag === 'style' || tag === 'script' || tag === 'template';

	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inhead
	      case 'head':
	        return tag === 'base' || tag === 'basefont' || tag === 'bgsound' || tag === 'link' || tag === 'meta' || tag === 'title' || tag === 'noscript' || tag === 'noframes' || tag === 'style' || tag === 'script' || tag === 'template';

	      // https://html.spec.whatwg.org/multipage/semantics.html#the-html-element
	      case 'html':
	        return tag === 'head' || tag === 'body';
	    }

	    // Probably in the "in body" parsing mode, so we outlaw only tag combos
	    // where the parsing rules cause implicit opens or closes to be added.
	    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody
	    switch (tag) {
	      case 'h1':
	      case 'h2':
	      case 'h3':
	      case 'h4':
	      case 'h5':
	      case 'h6':
	        return parentTag !== 'h1' && parentTag !== 'h2' && parentTag !== 'h3' && parentTag !== 'h4' && parentTag !== 'h5' && parentTag !== 'h6';

	      case 'rp':
	      case 'rt':
	        return impliedEndTags.indexOf(parentTag) === -1;

	      case 'caption':
	      case 'col':
	      case 'colgroup':
	      case 'frame':
	      case 'head':
	      case 'tbody':
	      case 'td':
	      case 'tfoot':
	      case 'th':
	      case 'thead':
	      case 'tr':
	        // These tags are only valid with a few parents that have special child
	        // parsing rules -- if we're down here, then none of those matched and
	        // so we allow it only if we don't know what the parent is, as all other
	        // cases are invalid.
	        return parentTag == null;
	    }

	    return true;
	  };

	  /**
	   * Returns whether
	   */
	  var findInvalidAncestorForTag = function (tag, ancestorInfo) {
	    switch (tag) {
	      case 'address':
	      case 'article':
	      case 'aside':
	      case 'blockquote':
	      case 'center':
	      case 'details':
	      case 'dialog':
	      case 'dir':
	      case 'div':
	      case 'dl':
	      case 'fieldset':
	      case 'figcaption':
	      case 'figure':
	      case 'footer':
	      case 'header':
	      case 'hgroup':
	      case 'main':
	      case 'menu':
	      case 'nav':
	      case 'ol':
	      case 'p':
	      case 'section':
	      case 'summary':
	      case 'ul':

	      case 'pre':
	      case 'listing':

	      case 'table':

	      case 'hr':

	      case 'xmp':

	      case 'h1':
	      case 'h2':
	      case 'h3':
	      case 'h4':
	      case 'h5':
	      case 'h6':
	        return ancestorInfo.pTagInButtonScope;

	      case 'form':
	        return ancestorInfo.formTag || ancestorInfo.pTagInButtonScope;

	      case 'li':
	        return ancestorInfo.listItemTagAutoclosing;

	      case 'dd':
	      case 'dt':
	        return ancestorInfo.dlItemTagAutoclosing;

	      case 'button':
	        return ancestorInfo.buttonTagInScope;

	      case 'a':
	        // Spec says something about storing a list of markers, but it sounds
	        // equivalent to this check.
	        return ancestorInfo.aTagInScope;

	      case 'nobr':
	        return ancestorInfo.nobrTagInScope;
	    }

	    return null;
	  };

	  /**
	   * Given a ReactCompositeComponent instance, return a list of its recursive
	   * owners, starting at the root and ending with the instance itself.
	   */
	  var findOwnerStack = function (instance) {
	    if (!instance) {
	      return [];
	    }

	    var stack = [];
	    /*eslint-disable space-after-keywords */
	    do {
	      /*eslint-enable space-after-keywords */
	      stack.push(instance);
	    } while (instance = instance._currentElement._owner);
	    stack.reverse();
	    return stack;
	  };

	  var didWarn = {};

	  validateDOMNesting = function (childTag, childInstance, ancestorInfo) {
	    ancestorInfo = ancestorInfo || emptyAncestorInfo;
	    var parentInfo = ancestorInfo.parentTag;
	    var parentTag = parentInfo && parentInfo.tag;

	    var invalidParent = isTagValidWithParent(childTag, parentTag) ? null : parentInfo;
	    var invalidAncestor = invalidParent ? null : findInvalidAncestorForTag(childTag, ancestorInfo);
	    var problematic = invalidParent || invalidAncestor;

	    if (problematic) {
	      var ancestorTag = problematic.tag;
	      var ancestorInstance = problematic.instance;

	      var childOwner = childInstance && childInstance._currentElement._owner;
	      var ancestorOwner = ancestorInstance && ancestorInstance._currentElement._owner;

	      var childOwners = findOwnerStack(childOwner);
	      var ancestorOwners = findOwnerStack(ancestorOwner);

	      var minStackLen = Math.min(childOwners.length, ancestorOwners.length);
	      var i;

	      var deepestCommon = -1;
	      for (i = 0; i < minStackLen; i++) {
	        if (childOwners[i] === ancestorOwners[i]) {
	          deepestCommon = i;
	        } else {
	          break;
	        }
	      }

	      var UNKNOWN = '(unknown)';
	      var childOwnerNames = childOwners.slice(deepestCommon + 1).map(function (inst) {
	        return inst.getName() || UNKNOWN;
	      });
	      var ancestorOwnerNames = ancestorOwners.slice(deepestCommon + 1).map(function (inst) {
	        return inst.getName() || UNKNOWN;
	      });
	      var ownerInfo = [].concat(
	      // If the parent and child instances have a common owner ancestor, start
	      // with that -- otherwise we just start with the parent's owners.
	      deepestCommon !== -1 ? childOwners[deepestCommon].getName() || UNKNOWN : [], ancestorOwnerNames, ancestorTag,
	      // If we're warning about an invalid (non-parent) ancestry, add '...'
	      invalidAncestor ? ['...'] : [], childOwnerNames, childTag).join(' > ');

	      var warnKey = !!invalidParent + '|' + childTag + '|' + ancestorTag + '|' + ownerInfo;
	      if (didWarn[warnKey]) {
	        return;
	      }
	      didWarn[warnKey] = true;

	      if (invalidParent) {
	        var info = '';
	        if (ancestorTag === 'table' && childTag === 'tr') {
	          info += ' Add a <tbody> to your code to match the DOM tree generated by ' + 'the browser.';
	        }
	        process.env.NODE_ENV !== 'production' ? warning(false, 'validateDOMNesting(...): <%s> cannot appear as a child of <%s>. ' + 'See %s.%s', childTag, ancestorTag, ownerInfo, info) : undefined;
	      } else {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'validateDOMNesting(...): <%s> cannot appear as a descendant of ' + '<%s>. See %s.', childTag, ancestorTag, ownerInfo) : undefined;
	      }
	    }
	  };

	  validateDOMNesting.ancestorInfoContextKey = '__validateDOMNesting_ancestorInfo$' + Math.random().toString(36).slice(2);

	  validateDOMNesting.updatedAncestorInfo = updatedAncestorInfo;

	  // For testing
	  validateDOMNesting.isTagValidInContext = function (tag, ancestorInfo) {
	    ancestorInfo = ancestorInfo || emptyAncestorInfo;
	    var parentInfo = ancestorInfo.parentTag;
	    var parentTag = parentInfo && parentInfo.tag;
	    return isTagValidWithParent(tag, parentTag) && !findInvalidAncestorForTag(tag, ancestorInfo);
	  };
	}

	module.exports = validateDOMNesting;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)))

/***/ }),
/* 72 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDefaultInjection
	 */

	'use strict';

	var BeforeInputEventPlugin = __webpack_require__(73);
	var ChangeEventPlugin = __webpack_require__(81);
	var ClientReactRootIndex = __webpack_require__(84);
	var DefaultEventPluginOrder = __webpack_require__(85);
	var EnterLeaveEventPlugin = __webpack_require__(86);
	var ExecutionEnvironment = __webpack_require__(10);
	var HTMLDOMPropertyConfig = __webpack_require__(90);
	var ReactBrowserComponentMixin = __webpack_require__(91);
	var ReactComponentBrowserEnvironment = __webpack_require__(27);
	var ReactDefaultBatchingStrategy = __webpack_require__(93);
	var ReactDOMComponent = __webpack_require__(94);
	var ReactDOMTextComponent = __webpack_require__(7);
	var ReactEventListener = __webpack_require__(119);
	var ReactInjection = __webpack_require__(122);
	var ReactInstanceHandles = __webpack_require__(46);
	var ReactMount = __webpack_require__(29);
	var ReactReconcileTransaction = __webpack_require__(126);
	var SelectEventPlugin = __webpack_require__(131);
	var ServerReactRootIndex = __webpack_require__(132);
	var SimpleEventPlugin = __webpack_require__(133);
	var SVGDOMPropertyConfig = __webpack_require__(142);

	var alreadyInjected = false;

	function inject() {
	  if (alreadyInjected) {
	    // TODO: This is currently true because these injections are shared between
	    // the client and the server package. They should be built independently
	    // and not share any injection state. Then this problem will be solved.
	    return;
	  }
	  alreadyInjected = true;

	  ReactInjection.EventEmitter.injectReactEventListener(ReactEventListener);

	  /**
	   * Inject modules for resolving DOM hierarchy and plugin ordering.
	   */
	  ReactInjection.EventPluginHub.injectEventPluginOrder(DefaultEventPluginOrder);
	  ReactInjection.EventPluginHub.injectInstanceHandle(ReactInstanceHandles);
	  ReactInjection.EventPluginHub.injectMount(ReactMount);

	  /**
	   * Some important event plugins included by default (without having to require
	   * them).
	   */
	  ReactInjection.EventPluginHub.injectEventPluginsByName({
	    SimpleEventPlugin: SimpleEventPlugin,
	    EnterLeaveEventPlugin: EnterLeaveEventPlugin,
	    ChangeEventPlugin: ChangeEventPlugin,
	    SelectEventPlugin: SelectEventPlugin,
	    BeforeInputEventPlugin: BeforeInputEventPlugin
	  });

	  ReactInjection.NativeComponent.injectGenericComponentClass(ReactDOMComponent);

	  ReactInjection.NativeComponent.injectTextComponentClass(ReactDOMTextComponent);

	  ReactInjection.Class.injectMixin(ReactBrowserComponentMixin);

	  ReactInjection.DOMProperty.injectDOMPropertyConfig(HTMLDOMPropertyConfig);
	  ReactInjection.DOMProperty.injectDOMPropertyConfig(SVGDOMPropertyConfig);

	  ReactInjection.EmptyComponent.injectEmptyComponent('noscript');

	  ReactInjection.Updates.injectReconcileTransaction(ReactReconcileTransaction);
	  ReactInjection.Updates.injectBatchingStrategy(ReactDefaultBatchingStrategy);

	  ReactInjection.RootIndex.injectCreateReactRootIndex(ExecutionEnvironment.canUseDOM ? ClientReactRootIndex.createReactRootIndex : ServerReactRootIndex.createReactRootIndex);

	  ReactInjection.Component.injectEnvironment(ReactComponentBrowserEnvironment);

	  if (process.env.NODE_ENV !== 'production') {
	    var url = ExecutionEnvironment.canUseDOM && window.location.href || '';
	    if (/[?&]react_perf\b/.test(url)) {
	      var ReactDefaultPerf = __webpack_require__(143);
	      ReactDefaultPerf.start();
	    }
	  }
	}

	module.exports = {
	  inject: inject
	};
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)))

/***/ }),
/* 73 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015 Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule BeforeInputEventPlugin
	 * @typechecks static-only
	 */

	'use strict';

	var EventConstants = __webpack_require__(31);
	var EventPropagators = __webpack_require__(74);
	var ExecutionEnvironment = __webpack_require__(10);
	var FallbackCompositionState = __webpack_require__(75);
	var SyntheticCompositionEvent = __webpack_require__(77);
	var SyntheticInputEvent = __webpack_require__(79);

	var keyOf = __webpack_require__(80);

	var END_KEYCODES = [9, 13, 27, 32]; // Tab, Return, Esc, Space
	var START_KEYCODE = 229;

	var canUseCompositionEvent = ExecutionEnvironment.canUseDOM && 'CompositionEvent' in window;

	var documentMode = null;
	if (ExecutionEnvironment.canUseDOM && 'documentMode' in document) {
	  documentMode = document.documentMode;
	}

	// Webkit offers a very useful `textInput` event that can be used to
	// directly represent `beforeInput`. The IE `textinput` event is not as
	// useful, so we don't use it.
	var canUseTextInputEvent = ExecutionEnvironment.canUseDOM && 'TextEvent' in window && !documentMode && !isPresto();

	// In IE9+, we have access to composition events, but the data supplied
	// by the native compositionend event may be incorrect. Japanese ideographic
	// spaces, for instance (\u3000) are not recorded correctly.
	var useFallbackCompositionData = ExecutionEnvironment.canUseDOM && (!canUseCompositionEvent || documentMode && documentMode > 8 && documentMode <= 11);

	/**
	 * Opera <= 12 includes TextEvent in window, but does not fire
	 * text input events. Rely on keypress instead.
	 */
	function isPresto() {
	  var opera = window.opera;
	  return typeof opera === 'object' && typeof opera.version === 'function' && parseInt(opera.version(), 10) <= 12;
	}

	var SPACEBAR_CODE = 32;
	var SPACEBAR_CHAR = String.fromCharCode(SPACEBAR_CODE);

	var topLevelTypes = EventConstants.topLevelTypes;

	// Events and their corresponding property names.
	var eventTypes = {
	  beforeInput: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onBeforeInput: null }),
	      captured: keyOf({ onBeforeInputCapture: null })
	    },
	    dependencies: [topLevelTypes.topCompositionEnd, topLevelTypes.topKeyPress, topLevelTypes.topTextInput, topLevelTypes.topPaste]
	  },
	  compositionEnd: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onCompositionEnd: null }),
	      captured: keyOf({ onCompositionEndCapture: null })
	    },
	    dependencies: [topLevelTypes.topBlur, topLevelTypes.topCompositionEnd, topLevelTypes.topKeyDown, topLevelTypes.topKeyPress, topLevelTypes.topKeyUp, topLevelTypes.topMouseDown]
	  },
	  compositionStart: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onCompositionStart: null }),
	      captured: keyOf({ onCompositionStartCapture: null })
	    },
	    dependencies: [topLevelTypes.topBlur, topLevelTypes.topCompositionStart, topLevelTypes.topKeyDown, topLevelTypes.topKeyPress, topLevelTypes.topKeyUp, topLevelTypes.topMouseDown]
	  },
	  compositionUpdate: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onCompositionUpdate: null }),
	      captured: keyOf({ onCompositionUpdateCapture: null })
	    },
	    dependencies: [topLevelTypes.topBlur, topLevelTypes.topCompositionUpdate, topLevelTypes.topKeyDown, topLevelTypes.topKeyPress, topLevelTypes.topKeyUp, topLevelTypes.topMouseDown]
	  }
	};

	// Track whether we've ever handled a keypress on the space key.
	var hasSpaceKeypress = false;

	/**
	 * Return whether a native keypress event is assumed to be a command.
	 * This is required because Firefox fires `keypress` events for key commands
	 * (cut, copy, select-all, etc.) even though no character is inserted.
	 */
	function isKeypressCommand(nativeEvent) {
	  return (nativeEvent.ctrlKey || nativeEvent.altKey || nativeEvent.metaKey) &&
	  // ctrlKey && altKey is equivalent to AltGr, and is not a command.
	  !(nativeEvent.ctrlKey && nativeEvent.altKey);
	}

	/**
	 * Translate native top level events into event types.
	 *
	 * @param {string} topLevelType
	 * @return {object}
	 */
	function getCompositionEventType(topLevelType) {
	  switch (topLevelType) {
	    case topLevelTypes.topCompositionStart:
	      return eventTypes.compositionStart;
	    case topLevelTypes.topCompositionEnd:
	      return eventTypes.compositionEnd;
	    case topLevelTypes.topCompositionUpdate:
	      return eventTypes.compositionUpdate;
	  }
	}

	/**
	 * Does our fallback best-guess model think this event signifies that
	 * composition has begun?
	 *
	 * @param {string} topLevelType
	 * @param {object} nativeEvent
	 * @return {boolean}
	 */
	function isFallbackCompositionStart(topLevelType, nativeEvent) {
	  return topLevelType === topLevelTypes.topKeyDown && nativeEvent.keyCode === START_KEYCODE;
	}

	/**
	 * Does our fallback mode think that this event is the end of composition?
	 *
	 * @param {string} topLevelType
	 * @param {object} nativeEvent
	 * @return {boolean}
	 */
	function isFallbackCompositionEnd(topLevelType, nativeEvent) {
	  switch (topLevelType) {
	    case topLevelTypes.topKeyUp:
	      // Command keys insert or clear IME input.
	      return END_KEYCODES.indexOf(nativeEvent.keyCode) !== -1;
	    case topLevelTypes.topKeyDown:
	      // Expect IME keyCode on each keydown. If we get any other
	      // code we must have exited earlier.
	      return nativeEvent.keyCode !== START_KEYCODE;
	    case topLevelTypes.topKeyPress:
	    case topLevelTypes.topMouseDown:
	    case topLevelTypes.topBlur:
	      // Events are not possible without cancelling IME.
	      return true;
	    default:
	      return false;
	  }
	}

	/**
	 * Google Input Tools provides composition data via a CustomEvent,
	 * with the `data` property populated in the `detail` object. If this
	 * is available on the event object, use it. If not, this is a plain
	 * composition event and we have nothing special to extract.
	 *
	 * @param {object} nativeEvent
	 * @return {?string}
	 */
	function getDataFromCustomEvent(nativeEvent) {
	  var detail = nativeEvent.detail;
	  if (typeof detail === 'object' && 'data' in detail) {
	    return detail.data;
	  }
	  return null;
	}

	// Track the current IME composition fallback object, if any.
	var currentComposition = null;

	/**
	 * @param {string} topLevelType Record from `EventConstants`.
	 * @param {DOMEventTarget} topLevelTarget The listening component root node.
	 * @param {string} topLevelTargetID ID of `topLevelTarget`.
	 * @param {object} nativeEvent Native browser event.
	 * @return {?object} A SyntheticCompositionEvent.
	 */
	function extractCompositionEvent(topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget) {
	  var eventType;
	  var fallbackData;

	  if (canUseCompositionEvent) {
	    eventType = getCompositionEventType(topLevelType);
	  } else if (!currentComposition) {
	    if (isFallbackCompositionStart(topLevelType, nativeEvent)) {
	      eventType = eventTypes.compositionStart;
	    }
	  } else if (isFallbackCompositionEnd(topLevelType, nativeEvent)) {
	    eventType = eventTypes.compositionEnd;
	  }

	  if (!eventType) {
	    return null;
	  }

	  if (useFallbackCompositionData) {
	    // The current composition is stored statically and must not be
	    // overwritten while composition continues.
	    if (!currentComposition && eventType === eventTypes.compositionStart) {
	      currentComposition = FallbackCompositionState.getPooled(topLevelTarget);
	    } else if (eventType === eventTypes.compositionEnd) {
	      if (currentComposition) {
	        fallbackData = currentComposition.getData();
	      }
	    }
	  }

	  var event = SyntheticCompositionEvent.getPooled(eventType, topLevelTargetID, nativeEvent, nativeEventTarget);

	  if (fallbackData) {
	    // Inject data generated from fallback path into the synthetic event.
	    // This matches the property of native CompositionEventInterface.
	    event.data = fallbackData;
	  } else {
	    var customData = getDataFromCustomEvent(nativeEvent);
	    if (customData !== null) {
	      event.data = customData;
	    }
	  }

	  EventPropagators.accumulateTwoPhaseDispatches(event);
	  return event;
	}

	/**
	 * @param {string} topLevelType Record from `EventConstants`.
	 * @param {object} nativeEvent Native browser event.
	 * @return {?string} The string corresponding to this `beforeInput` event.
	 */
	function getNativeBeforeInputChars(topLevelType, nativeEvent) {
	  switch (topLevelType) {
	    case topLevelTypes.topCompositionEnd:
	      return getDataFromCustomEvent(nativeEvent);
	    case topLevelTypes.topKeyPress:
	      /**
	       * If native `textInput` events are available, our goal is to make
	       * use of them. However, there is a special case: the spacebar key.
	       * In Webkit, preventing default on a spacebar `textInput` event
	       * cancels character insertion, but it *also* causes the browser
	       * to fall back to its default spacebar behavior of scrolling the
	       * page.
	       *
	       * Tracking at:
	       * https://code.google.com/p/chromium/issues/detail?id=355103
	       *
	       * To avoid this issue, use the keypress event as if no `textInput`
	       * event is available.
	       */
	      var which = nativeEvent.which;
	      if (which !== SPACEBAR_CODE) {
	        return null;
	      }

	      hasSpaceKeypress = true;
	      return SPACEBAR_CHAR;

	    case topLevelTypes.topTextInput:
	      // Record the characters to be added to the DOM.
	      var chars = nativeEvent.data;

	      // If it's a spacebar character, assume that we have already handled
	      // it at the keypress level and bail immediately. Android Chrome
	      // doesn't give us keycodes, so we need to blacklist it.
	      if (chars === SPACEBAR_CHAR && hasSpaceKeypress) {
	        return null;
	      }

	      return chars;

	    default:
	      // For other native event types, do nothing.
	      return null;
	  }
	}

	/**
	 * For browsers that do not provide the `textInput` event, extract the
	 * appropriate string to use for SyntheticInputEvent.
	 *
	 * @param {string} topLevelType Record from `EventConstants`.
	 * @param {object} nativeEvent Native browser event.
	 * @return {?string} The fallback string for this `beforeInput` event.
	 */
	function getFallbackBeforeInputChars(topLevelType, nativeEvent) {
	  // If we are currently composing (IME) and using a fallback to do so,
	  // try to extract the composed characters from the fallback object.
	  if (currentComposition) {
	    if (topLevelType === topLevelTypes.topCompositionEnd || isFallbackCompositionEnd(topLevelType, nativeEvent)) {
	      var chars = currentComposition.getData();
	      FallbackCompositionState.release(currentComposition);
	      currentComposition = null;
	      return chars;
	    }
	    return null;
	  }

	  switch (topLevelType) {
	    case topLevelTypes.topPaste:
	      // If a paste event occurs after a keypress, throw out the input
	      // chars. Paste events should not lead to BeforeInput events.
	      return null;
	    case topLevelTypes.topKeyPress:
	      /**
	       * As of v27, Firefox may fire keypress events even when no character
	       * will be inserted. A few possibilities:
	       *
	       * - `which` is `0`. Arrow keys, Esc key, etc.
	       *
	       * - `which` is the pressed key code, but no char is available.
	       *   Ex: 'AltGr + d` in Polish. There is no modified character for
	       *   this key combination and no character is inserted into the
	       *   document, but FF fires the keypress for char code `100` anyway.
	       *   No `input` event will occur.
	       *
	       * - `which` is the pressed key code, but a command combination is
	       *   being used. Ex: `Cmd+C`. No character is inserted, and no
	       *   `input` event will occur.
	       */
	      if (nativeEvent.which && !isKeypressCommand(nativeEvent)) {
	        return String.fromCharCode(nativeEvent.which);
	      }
	      return null;
	    case topLevelTypes.topCompositionEnd:
	      return useFallbackCompositionData ? null : nativeEvent.data;
	    default:
	      return null;
	  }
	}

	/**
	 * Extract a SyntheticInputEvent for `beforeInput`, based on either native
	 * `textInput` or fallback behavior.
	 *
	 * @param {string} topLevelType Record from `EventConstants`.
	 * @param {DOMEventTarget} topLevelTarget The listening component root node.
	 * @param {string} topLevelTargetID ID of `topLevelTarget`.
	 * @param {object} nativeEvent Native browser event.
	 * @return {?object} A SyntheticInputEvent.
	 */
	function extractBeforeInputEvent(topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget) {
	  var chars;

	  if (canUseTextInputEvent) {
	    chars = getNativeBeforeInputChars(topLevelType, nativeEvent);
	  } else {
	    chars = getFallbackBeforeInputChars(topLevelType, nativeEvent);
	  }

	  // If no characters are being inserted, no BeforeInput event should
	  // be fired.
	  if (!chars) {
	    return null;
	  }

	  var event = SyntheticInputEvent.getPooled(eventTypes.beforeInput, topLevelTargetID, nativeEvent, nativeEventTarget);

	  event.data = chars;
	  EventPropagators.accumulateTwoPhaseDispatches(event);
	  return event;
	}

	/**
	 * Create an `onBeforeInput` event to match
	 * http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105/#events-inputevents.
	 *
	 * This event plugin is based on the native `textInput` event
	 * available in Chrome, Safari, Opera, and IE. This event fires after
	 * `onKeyPress` and `onCompositionEnd`, but before `onInput`.
	 *
	 * `beforeInput` is spec'd but not implemented in any browsers, and
	 * the `input` event does not provide any useful information about what has
	 * actually been added, contrary to the spec. Thus, `textInput` is the best
	 * available event to identify the characters that have actually been inserted
	 * into the target node.
	 *
	 * This plugin is also responsible for emitting `composition` events, thus
	 * allowing us to share composition fallback code for both `beforeInput` and
	 * `composition` event types.
	 */
	var BeforeInputEventPlugin = {

	  eventTypes: eventTypes,

	  /**
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {DOMEventTarget} topLevelTarget The listening component root node.
	   * @param {string} topLevelTargetID ID of `topLevelTarget`.
	   * @param {object} nativeEvent Native browser event.
	   * @return {*} An accumulation of synthetic events.
	   * @see {EventPluginHub.extractEvents}
	   */
	  extractEvents: function (topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget) {
	    return [extractCompositionEvent(topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget), extractBeforeInputEvent(topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget)];
	  }
	};

	module.exports = BeforeInputEventPlugin;

/***/ }),
/* 74 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule EventPropagators
	 */

	'use strict';

	var EventConstants = __webpack_require__(31);
	var EventPluginHub = __webpack_require__(32);

	var warning = __webpack_require__(26);

	var accumulateInto = __webpack_require__(36);
	var forEachAccumulated = __webpack_require__(37);

	var PropagationPhases = EventConstants.PropagationPhases;
	var getListener = EventPluginHub.getListener;

	/**
	 * Some event types have a notion of different registration names for different
	 * "phases" of propagation. This finds listeners by a given phase.
	 */
	function listenerAtPhase(id, event, propagationPhase) {
	  var registrationName = event.dispatchConfig.phasedRegistrationNames[propagationPhase];
	  return getListener(id, registrationName);
	}

	/**
	 * Tags a `SyntheticEvent` with dispatched listeners. Creating this function
	 * here, allows us to not have to bind or create functions for each event.
	 * Mutating the event's members allows us to not have to create a wrapping
	 * "dispatch" object that pairs the event with the listener.
	 */
	function accumulateDirectionalDispatches(domID, upwards, event) {
	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(domID, 'Dispatching id must not be null') : undefined;
	  }
	  var phase = upwards ? PropagationPhases.bubbled : PropagationPhases.captured;
	  var listener = listenerAtPhase(domID, event, phase);
	  if (listener) {
	    event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);
	    event._dispatchIDs = accumulateInto(event._dispatchIDs, domID);
	  }
	}

	/**
	 * Collect dispatches (must be entirely collected before dispatching - see unit
	 * tests). Lazily allocate the array to conserve memory.  We must loop through
	 * each event and perform the traversal for each one. We cannot perform a
	 * single traversal for the entire collection of events because each event may
	 * have a different target.
	 */
	function accumulateTwoPhaseDispatchesSingle(event) {
	  if (event && event.dispatchConfig.phasedRegistrationNames) {
	    EventPluginHub.injection.getInstanceHandle().traverseTwoPhase(event.dispatchMarker, accumulateDirectionalDispatches, event);
	  }
	}

	/**
	 * Same as `accumulateTwoPhaseDispatchesSingle`, but skips over the targetID.
	 */
	function accumulateTwoPhaseDispatchesSingleSkipTarget(event) {
	  if (event && event.dispatchConfig.phasedRegistrationNames) {
	    EventPluginHub.injection.getInstanceHandle().traverseTwoPhaseSkipTarget(event.dispatchMarker, accumulateDirectionalDispatches, event);
	  }
	}

	/**
	 * Accumulates without regard to direction, does not look for phased
	 * registration names. Same as `accumulateDirectDispatchesSingle` but without
	 * requiring that the `dispatchMarker` be the same as the dispatched ID.
	 */
	function accumulateDispatches(id, ignoredDirection, event) {
	  if (event && event.dispatchConfig.registrationName) {
	    var registrationName = event.dispatchConfig.registrationName;
	    var listener = getListener(id, registrationName);
	    if (listener) {
	      event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);
	      event._dispatchIDs = accumulateInto(event._dispatchIDs, id);
	    }
	  }
	}

	/**
	 * Accumulates dispatches on an `SyntheticEvent`, but only for the
	 * `dispatchMarker`.
	 * @param {SyntheticEvent} event
	 */
	function accumulateDirectDispatchesSingle(event) {
	  if (event && event.dispatchConfig.registrationName) {
	    accumulateDispatches(event.dispatchMarker, null, event);
	  }
	}

	function accumulateTwoPhaseDispatches(events) {
	  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingle);
	}

	function accumulateTwoPhaseDispatchesSkipTarget(events) {
	  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingleSkipTarget);
	}

	function accumulateEnterLeaveDispatches(leave, enter, fromID, toID) {
	  EventPluginHub.injection.getInstanceHandle().traverseEnterLeave(fromID, toID, accumulateDispatches, leave, enter);
	}

	function accumulateDirectDispatches(events) {
	  forEachAccumulated(events, accumulateDirectDispatchesSingle);
	}

	/**
	 * A small set of propagation patterns, each of which will accept a small amount
	 * of information, and generate a set of "dispatch ready event objects" - which
	 * are sets of events that have already been annotated with a set of dispatched
	 * listener functions/ids. The API is designed this way to discourage these
	 * propagation strategies from actually executing the dispatches, since we
	 * always want to collect the entire set of dispatches before executing event a
	 * single one.
	 *
	 * @constructor EventPropagators
	 */
	var EventPropagators = {
	  accumulateTwoPhaseDispatches: accumulateTwoPhaseDispatches,
	  accumulateTwoPhaseDispatchesSkipTarget: accumulateTwoPhaseDispatchesSkipTarget,
	  accumulateDirectDispatches: accumulateDirectDispatches,
	  accumulateEnterLeaveDispatches: accumulateEnterLeaveDispatches
	};

	module.exports = EventPropagators;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)))

/***/ }),
/* 75 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule FallbackCompositionState
	 * @typechecks static-only
	 */

	'use strict';

	var PooledClass = __webpack_require__(57);

	var assign = __webpack_require__(40);
	var getTextContentAccessor = __webpack_require__(76);

	/**
	 * This helper class stores information about text content of a target node,
	 * allowing comparison of content before and after a given event.
	 *
	 * Identify the node where selection currently begins, then observe
	 * both its text content and its current position in the DOM. Since the
	 * browser may natively replace the target node during composition, we can
	 * use its position to find its replacement.
	 *
	 * @param {DOMEventTarget} root
	 */
	function FallbackCompositionState(root) {
	  this._root = root;
	  this._startText = this.getText();
	  this._fallbackText = null;
	}

	assign(FallbackCompositionState.prototype, {
	  destructor: function () {
	    this._root = null;
	    this._startText = null;
	    this._fallbackText = null;
	  },

	  /**
	   * Get current text of input.
	   *
	   * @return {string}
	   */
	  getText: function () {
	    if ('value' in this._root) {
	      return this._root.value;
	    }
	    return this._root[getTextContentAccessor()];
	  },

	  /**
	   * Determine the differing substring between the initially stored
	   * text content and the current content.
	   *
	   * @return {string}
	   */
	  getData: function () {
	    if (this._fallbackText) {
	      return this._fallbackText;
	    }

	    var start;
	    var startValue = this._startText;
	    var startLength = startValue.length;
	    var end;
	    var endValue = this.getText();
	    var endLength = endValue.length;

	    for (start = 0; start < startLength; start++) {
	      if (startValue[start] !== endValue[start]) {
	        break;
	      }
	    }

	    var minEnd = startLength - start;
	    for (end = 1; end <= minEnd; end++) {
	      if (startValue[startLength - end] !== endValue[endLength - end]) {
	        break;
	      }
	    }

	    var sliceTail = end > 1 ? 1 - end : undefined;
	    this._fallbackText = endValue.slice(start, sliceTail);
	    return this._fallbackText;
	  }
	});

	PooledClass.addPoolingTo(FallbackCompositionState);

	module.exports = FallbackCompositionState;

/***/ }),
/* 76 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getTextContentAccessor
	 */

	'use strict';

	var ExecutionEnvironment = __webpack_require__(10);

	var contentKey = null;

	/**
	 * Gets the key used to access text content on a DOM node.
	 *
	 * @return {?string} Key used to access text content.
	 * @internal
	 */
	function getTextContentAccessor() {
	  if (!contentKey && ExecutionEnvironment.canUseDOM) {
	    // Prefer textContent to innerText because many browsers support both but
	    // SVG <text> elements don't support innerText even when <div> does.
	    contentKey = 'textContent' in document.documentElement ? 'textContent' : 'innerText';
	  }
	  return contentKey;
	}

	module.exports = getTextContentAccessor;

/***/ }),
/* 77 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticCompositionEvent
	 * @typechecks static-only
	 */

	'use strict';

	var SyntheticEvent = __webpack_require__(78);

	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/#events-compositionevents
	 */
	var CompositionEventInterface = {
	  data: null
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticCompositionEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticEvent.augmentClass(SyntheticCompositionEvent, CompositionEventInterface);

	module.exports = SyntheticCompositionEvent;

/***/ }),
/* 78 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticEvent
	 * @typechecks static-only
	 */

	'use strict';

	var PooledClass = __webpack_require__(57);

	var assign = __webpack_require__(40);
	var emptyFunction = __webpack_require__(16);
	var warning = __webpack_require__(26);

	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var EventInterface = {
	  type: null,
	  target: null,
	  // currentTarget is set when dispatching; no use in copying it here
	  currentTarget: emptyFunction.thatReturnsNull,
	  eventPhase: null,
	  bubbles: null,
	  cancelable: null,
	  timeStamp: function (event) {
	    return event.timeStamp || Date.now();
	  },
	  defaultPrevented: null,
	  isTrusted: null
	};

	/**
	 * Synthetic events are dispatched by event plugins, typically in response to a
	 * top-level event delegation handler.
	 *
	 * These systems should generally use pooling to reduce the frequency of garbage
	 * collection. The system should check `isPersistent` to determine whether the
	 * event should be released into the pool after being dispatched. Users that
	 * need a persisted event should invoke `persist`.
	 *
	 * Synthetic events (and subclasses) implement the DOM Level 3 Events API by
	 * normalizing browser quirks. Subclasses do not necessarily have to implement a
	 * DOM interface; custom application-specific events can also subclass this.
	 *
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 */
	function SyntheticEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  this.dispatchConfig = dispatchConfig;
	  this.dispatchMarker = dispatchMarker;
	  this.nativeEvent = nativeEvent;

	  var Interface = this.constructor.Interface;
	  for (var propName in Interface) {
	    if (!Interface.hasOwnProperty(propName)) {
	      continue;
	    }
	    var normalize = Interface[propName];
	    if (normalize) {
	      this[propName] = normalize(nativeEvent);
	    } else {
	      if (propName === 'target') {
	        this.target = nativeEventTarget;
	      } else {
	        this[propName] = nativeEvent[propName];
	      }
	    }
	  }

	  var defaultPrevented = nativeEvent.defaultPrevented != null ? nativeEvent.defaultPrevented : nativeEvent.returnValue === false;
	  if (defaultPrevented) {
	    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
	  } else {
	    this.isDefaultPrevented = emptyFunction.thatReturnsFalse;
	  }
	  this.isPropagationStopped = emptyFunction.thatReturnsFalse;
	}

	assign(SyntheticEvent.prototype, {

	  preventDefault: function () {
	    this.defaultPrevented = true;
	    var event = this.nativeEvent;
	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(event, 'This synthetic event is reused for performance reasons. If you\'re ' + 'seeing this, you\'re calling `preventDefault` on a ' + 'released/nullified synthetic event. This is a no-op. See ' + 'https://fb.me/react-event-pooling for more information.') : undefined;
	    }
	    if (!event) {
	      return;
	    }

	    if (event.preventDefault) {
	      event.preventDefault();
	    } else {
	      event.returnValue = false;
	    }
	    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
	  },

	  stopPropagation: function () {
	    var event = this.nativeEvent;
	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(event, 'This synthetic event is reused for performance reasons. If you\'re ' + 'seeing this, you\'re calling `stopPropagation` on a ' + 'released/nullified synthetic event. This is a no-op. See ' + 'https://fb.me/react-event-pooling for more information.') : undefined;
	    }
	    if (!event) {
	      return;
	    }

	    if (event.stopPropagation) {
	      event.stopPropagation();
	    } else {
	      event.cancelBubble = true;
	    }
	    this.isPropagationStopped = emptyFunction.thatReturnsTrue;
	  },

	  /**
	   * We release all dispatched `SyntheticEvent`s after each event loop, adding
	   * them back into the pool. This allows a way to hold onto a reference that
	   * won't be added back into the pool.
	   */
	  persist: function () {
	    this.isPersistent = emptyFunction.thatReturnsTrue;
	  },

	  /**
	   * Checks if this event should be released back into the pool.
	   *
	   * @return {boolean} True if this should not be released, false otherwise.
	   */
	  isPersistent: emptyFunction.thatReturnsFalse,

	  /**
	   * `PooledClass` looks for `destructor` on each instance it releases.
	   */
	  destructor: function () {
	    var Interface = this.constructor.Interface;
	    for (var propName in Interface) {
	      this[propName] = null;
	    }
	    this.dispatchConfig = null;
	    this.dispatchMarker = null;
	    this.nativeEvent = null;
	  }

	});

	SyntheticEvent.Interface = EventInterface;

	/**
	 * Helper to reduce boilerplate when creating subclasses.
	 *
	 * @param {function} Class
	 * @param {?object} Interface
	 */
	SyntheticEvent.augmentClass = function (Class, Interface) {
	  var Super = this;

	  var prototype = Object.create(Super.prototype);
	  assign(prototype, Class.prototype);
	  Class.prototype = prototype;
	  Class.prototype.constructor = Class;

	  Class.Interface = assign({}, Super.Interface, Interface);
	  Class.augmentClass = Super.augmentClass;

	  PooledClass.addPoolingTo(Class, PooledClass.fourArgumentPooler);
	};

	PooledClass.addPoolingTo(SyntheticEvent, PooledClass.fourArgumentPooler);

	module.exports = SyntheticEvent;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)))

/***/ }),
/* 79 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticInputEvent
	 * @typechecks static-only
	 */

	'use strict';

	var SyntheticEvent = __webpack_require__(78);

	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105
	 *      /#events-inputevents
	 */
	var InputEventInterface = {
	  data: null
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticInputEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticEvent.augmentClass(SyntheticInputEvent, InputEventInterface);

	module.exports = SyntheticInputEvent;

/***/ }),
/* 80 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule keyOf
	 */

	/**
	 * Allows extraction of a minified key. Let's the build system minify keys
	 * without losing the ability to dynamically use key strings as values
	 * themselves. Pass in an object with a single key/val pair and it will return
	 * you the string key of that single record. Suppose you want to grab the
	 * value for a key 'className' inside of an object. Key/val minification may
	 * have aliased that key to be 'xa12'. keyOf({className: null}) will return
	 * 'xa12' in that case. Resolve keys you want to use once at startup time, then
	 * reuse those resolutions.
	 */
	"use strict";

	var keyOf = function (oneKeyObj) {
	  var key;
	  for (key in oneKeyObj) {
	    if (!oneKeyObj.hasOwnProperty(key)) {
	      continue;
	    }
	    return key;
	  }
	  return null;
	};

	module.exports = keyOf;

/***/ }),
/* 81 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ChangeEventPlugin
	 */

	'use strict';

	var EventConstants = __webpack_require__(31);
	var EventPluginHub = __webpack_require__(32);
	var EventPropagators = __webpack_require__(74);
	var ExecutionEnvironment = __webpack_require__(10);
	var ReactUpdates = __webpack_require__(55);
	var SyntheticEvent = __webpack_require__(78);

	var getEventTarget = __webpack_require__(82);
	var isEventSupported = __webpack_require__(41);
	var isTextInputElement = __webpack_require__(83);
	var keyOf = __webpack_require__(80);

	var topLevelTypes = EventConstants.topLevelTypes;

	var eventTypes = {
	  change: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onChange: null }),
	      captured: keyOf({ onChangeCapture: null })
	    },
	    dependencies: [topLevelTypes.topBlur, topLevelTypes.topChange, topLevelTypes.topClick, topLevelTypes.topFocus, topLevelTypes.topInput, topLevelTypes.topKeyDown, topLevelTypes.topKeyUp, topLevelTypes.topSelectionChange]
	  }
	};

	/**
	 * For IE shims
	 */
	var activeElement = null;
	var activeElementID = null;
	var activeElementValue = null;
	var activeElementValueProp = null;

	/**
	 * SECTION: handle `change` event
	 */
	function shouldUseChangeEvent(elem) {
	  var nodeName = elem.nodeName && elem.nodeName.toLowerCase();
	  return nodeName === 'select' || nodeName === 'input' && elem.type === 'file';
	}

	var doesChangeEventBubble = false;
	if (ExecutionEnvironment.canUseDOM) {
	  // See `handleChange` comment below
	  doesChangeEventBubble = isEventSupported('change') && (!('documentMode' in document) || document.documentMode > 8);
	}

	function manualDispatchChangeEvent(nativeEvent) {
	  var event = SyntheticEvent.getPooled(eventTypes.change, activeElementID, nativeEvent, getEventTarget(nativeEvent));
	  EventPropagators.accumulateTwoPhaseDispatches(event);

	  // If change and propertychange bubbled, we'd just bind to it like all the
	  // other events and have it go through ReactBrowserEventEmitter. Since it
	  // doesn't, we manually listen for the events and so we have to enqueue and
	  // process the abstract event manually.
	  //
	  // Batching is necessary here in order to ensure that all event handlers run
	  // before the next rerender (including event handlers attached to ancestor
	  // elements instead of directly on the input). Without this, controlled
	  // components don't work properly in conjunction with event bubbling because
	  // the component is rerendered and the value reverted before all the event
	  // handlers can run. See https://github.com/facebook/react/issues/708.
	  ReactUpdates.batchedUpdates(runEventInBatch, event);
	}

	function runEventInBatch(event) {
	  EventPluginHub.enqueueEvents(event);
	  EventPluginHub.processEventQueue(false);
	}

	function startWatchingForChangeEventIE8(target, targetID) {
	  activeElement = target;
	  activeElementID = targetID;
	  activeElement.attachEvent('onchange', manualDispatchChangeEvent);
	}

	function stopWatchingForChangeEventIE8() {
	  if (!activeElement) {
	    return;
	  }
	  activeElement.detachEvent('onchange', manualDispatchChangeEvent);
	  activeElement = null;
	  activeElementID = null;
	}

	function getTargetIDForChangeEvent(topLevelType, topLevelTarget, topLevelTargetID) {
	  if (topLevelType === topLevelTypes.topChange) {
	    return topLevelTargetID;
	  }
	}
	function handleEventsForChangeEventIE8(topLevelType, topLevelTarget, topLevelTargetID) {
	  if (topLevelType === topLevelTypes.topFocus) {
	    // stopWatching() should be a noop here but we call it just in case we
	    // missed a blur event somehow.
	    stopWatchingForChangeEventIE8();
	    startWatchingForChangeEventIE8(topLevelTarget, topLevelTargetID);
	  } else if (topLevelType === topLevelTypes.topBlur) {
	    stopWatchingForChangeEventIE8();
	  }
	}

	/**
	 * SECTION: handle `input` event
	 */
	var isInputEventSupported = false;
	if (ExecutionEnvironment.canUseDOM) {
	  // IE9 claims to support the input event but fails to trigger it when
	  // deleting text, so we ignore its input events
	  isInputEventSupported = isEventSupported('input') && (!('documentMode' in document) || document.documentMode > 9);
	}

	/**
	 * (For old IE.) Replacement getter/setter for the `value` property that gets
	 * set on the active element.
	 */
	var newValueProp = {
	  get: function () {
	    return activeElementValueProp.get.call(this);
	  },
	  set: function (val) {
	    // Cast to a string so we can do equality checks.
	    activeElementValue = '' + val;
	    activeElementValueProp.set.call(this, val);
	  }
	};

	/**
	 * (For old IE.) Starts tracking propertychange events on the passed-in element
	 * and override the value property so that we can distinguish user events from
	 * value changes in JS.
	 */
	function startWatchingForValueChange(target, targetID) {
	  activeElement = target;
	  activeElementID = targetID;
	  activeElementValue = target.value;
	  activeElementValueProp = Object.getOwnPropertyDescriptor(target.constructor.prototype, 'value');

	  // Not guarded in a canDefineProperty check: IE8 supports defineProperty only
	  // on DOM elements
	  Object.defineProperty(activeElement, 'value', newValueProp);
	  activeElement.attachEvent('onpropertychange', handlePropertyChange);
	}

	/**
	 * (For old IE.) Removes the event listeners from the currently-tracked element,
	 * if any exists.
	 */
	function stopWatchingForValueChange() {
	  if (!activeElement) {
	    return;
	  }

	  // delete restores the original property definition
	  delete activeElement.value;
	  activeElement.detachEvent('onpropertychange', handlePropertyChange);

	  activeElement = null;
	  activeElementID = null;
	  activeElementValue = null;
	  activeElementValueProp = null;
	}

	/**
	 * (For old IE.) Handles a propertychange event, sending a `change` event if
	 * the value of the active element has changed.
	 */
	function handlePropertyChange(nativeEvent) {
	  if (nativeEvent.propertyName !== 'value') {
	    return;
	  }
	  var value = nativeEvent.srcElement.value;
	  if (value === activeElementValue) {
	    return;
	  }
	  activeElementValue = value;

	  manualDispatchChangeEvent(nativeEvent);
	}

	/**
	 * If a `change` event should be fired, returns the target's ID.
	 */
	function getTargetIDForInputEvent(topLevelType, topLevelTarget, topLevelTargetID) {
	  if (topLevelType === topLevelTypes.topInput) {
	    // In modern browsers (i.e., not IE8 or IE9), the input event is exactly
	    // what we want so fall through here and trigger an abstract event
	    return topLevelTargetID;
	  }
	}

	// For IE8 and IE9.
	function handleEventsForInputEventIE(topLevelType, topLevelTarget, topLevelTargetID) {
	  if (topLevelType === topLevelTypes.topFocus) {
	    // In IE8, we can capture almost all .value changes by adding a
	    // propertychange handler and looking for events with propertyName
	    // equal to 'value'
	    // In IE9, propertychange fires for most input events but is buggy and
	    // doesn't fire when text is deleted, but conveniently, selectionchange
	    // appears to fire in all of the remaining cases so we catch those and
	    // forward the event if the value has changed
	    // In either case, we don't want to call the event handler if the value
	    // is changed from JS so we redefine a setter for `.value` that updates
	    // our activeElementValue variable, allowing us to ignore those changes
	    //
	    // stopWatching() should be a noop here but we call it just in case we
	    // missed a blur event somehow.
	    stopWatchingForValueChange();
	    startWatchingForValueChange(topLevelTarget, topLevelTargetID);
	  } else if (topLevelType === topLevelTypes.topBlur) {
	    stopWatchingForValueChange();
	  }
	}

	// For IE8 and IE9.
	function getTargetIDForInputEventIE(topLevelType, topLevelTarget, topLevelTargetID) {
	  if (topLevelType === topLevelTypes.topSelectionChange || topLevelType === topLevelTypes.topKeyUp || topLevelType === topLevelTypes.topKeyDown) {
	    // On the selectionchange event, the target is just document which isn't
	    // helpful for us so just check activeElement instead.
	    //
	    // 99% of the time, keydown and keyup aren't necessary. IE8 fails to fire
	    // propertychange on the first input event after setting `value` from a
	    // script and fires only keydown, keypress, keyup. Catching keyup usually
	    // gets it and catching keydown lets us fire an event for the first
	    // keystroke if user does a key repeat (it'll be a little delayed: right
	    // before the second keystroke). Other input methods (e.g., paste) seem to
	    // fire selectionchange normally.
	    if (activeElement && activeElement.value !== activeElementValue) {
	      activeElementValue = activeElement.value;
	      return activeElementID;
	    }
	  }
	}

	/**
	 * SECTION: handle `click` event
	 */
	function shouldUseClickEvent(elem) {
	  // Use the `click` event to detect changes to checkbox and radio inputs.
	  // This approach works across all browsers, whereas `change` does not fire
	  // until `blur` in IE8.
	  return elem.nodeName && elem.nodeName.toLowerCase() === 'input' && (elem.type === 'checkbox' || elem.type === 'radio');
	}

	function getTargetIDForClickEvent(topLevelType, topLevelTarget, topLevelTargetID) {
	  if (topLevelType === topLevelTypes.topClick) {
	    return topLevelTargetID;
	  }
	}

	/**
	 * This plugin creates an `onChange` event that normalizes change events
	 * across form elements. This event fires at a time when it's possible to
	 * change the element's value without seeing a flicker.
	 *
	 * Supported elements are:
	 * - input (see `isTextInputElement`)
	 * - textarea
	 * - select
	 */
	var ChangeEventPlugin = {

	  eventTypes: eventTypes,

	  /**
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {DOMEventTarget} topLevelTarget The listening component root node.
	   * @param {string} topLevelTargetID ID of `topLevelTarget`.
	   * @param {object} nativeEvent Native browser event.
	   * @return {*} An accumulation of synthetic events.
	   * @see {EventPluginHub.extractEvents}
	   */
	  extractEvents: function (topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget) {

	    var getTargetIDFunc, handleEventFunc;
	    if (shouldUseChangeEvent(topLevelTarget)) {
	      if (doesChangeEventBubble) {
	        getTargetIDFunc = getTargetIDForChangeEvent;
	      } else {
	        handleEventFunc = handleEventsForChangeEventIE8;
	      }
	    } else if (isTextInputElement(topLevelTarget)) {
	      if (isInputEventSupported) {
	        getTargetIDFunc = getTargetIDForInputEvent;
	      } else {
	        getTargetIDFunc = getTargetIDForInputEventIE;
	        handleEventFunc = handleEventsForInputEventIE;
	      }
	    } else if (shouldUseClickEvent(topLevelTarget)) {
	      getTargetIDFunc = getTargetIDForClickEvent;
	    }

	    if (getTargetIDFunc) {
	      var targetID = getTargetIDFunc(topLevelType, topLevelTarget, topLevelTargetID);
	      if (targetID) {
	        var event = SyntheticEvent.getPooled(eventTypes.change, targetID, nativeEvent, nativeEventTarget);
	        event.type = 'change';
	        EventPropagators.accumulateTwoPhaseDispatches(event);
	        return event;
	      }
	    }

	    if (handleEventFunc) {
	      handleEventFunc(topLevelType, topLevelTarget, topLevelTargetID);
	    }
	  }

	};

	module.exports = ChangeEventPlugin;

/***/ }),
/* 82 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getEventTarget
	 * @typechecks static-only
	 */

	'use strict';

	/**
	 * Gets the target node from a native browser event by accounting for
	 * inconsistencies in browser DOM APIs.
	 *
	 * @param {object} nativeEvent Native browser event.
	 * @return {DOMEventTarget} Target node.
	 */
	function getEventTarget(nativeEvent) {
	  var target = nativeEvent.target || nativeEvent.srcElement || window;
	  // Safari may fire events on text nodes (Node.TEXT_NODE is 3).
	  // @see http://www.quirksmode.org/js/events_properties.html
	  return target.nodeType === 3 ? target.parentNode : target;
	}

	module.exports = getEventTarget;

/***/ }),
/* 83 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule isTextInputElement
	 */

	'use strict';

	/**
	 * @see http://www.whatwg.org/specs/web-apps/current-work/multipage/the-input-element.html#input-type-attr-summary
	 */
	var supportedInputTypes = {
	  'color': true,
	  'date': true,
	  'datetime': true,
	  'datetime-local': true,
	  'email': true,
	  'month': true,
	  'number': true,
	  'password': true,
	  'range': true,
	  'search': true,
	  'tel': true,
	  'text': true,
	  'time': true,
	  'url': true,
	  'week': true
	};

	function isTextInputElement(elem) {
	  var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();
	  return nodeName && (nodeName === 'input' && supportedInputTypes[elem.type] || nodeName === 'textarea');
	}

	module.exports = isTextInputElement;

/***/ }),
/* 84 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ClientReactRootIndex
	 * @typechecks
	 */

	'use strict';

	var nextReactRootIndex = 0;

	var ClientReactRootIndex = {
	  createReactRootIndex: function () {
	    return nextReactRootIndex++;
	  }
	};

	module.exports = ClientReactRootIndex;

/***/ }),
/* 85 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule DefaultEventPluginOrder
	 */

	'use strict';

	var keyOf = __webpack_require__(80);

	/**
	 * Module that is injectable into `EventPluginHub`, that specifies a
	 * deterministic ordering of `EventPlugin`s. A convenient way to reason about
	 * plugins, without having to package every one of them. This is better than
	 * having plugins be ordered in the same order that they are injected because
	 * that ordering would be influenced by the packaging order.
	 * `ResponderEventPlugin` must occur before `SimpleEventPlugin` so that
	 * preventing default on events is convenient in `SimpleEventPlugin` handlers.
	 */
	var DefaultEventPluginOrder = [keyOf({ ResponderEventPlugin: null }), keyOf({ SimpleEventPlugin: null }), keyOf({ TapEventPlugin: null }), keyOf({ EnterLeaveEventPlugin: null }), keyOf({ ChangeEventPlugin: null }), keyOf({ SelectEventPlugin: null }), keyOf({ BeforeInputEventPlugin: null })];

	module.exports = DefaultEventPluginOrder;

/***/ }),
/* 86 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule EnterLeaveEventPlugin
	 * @typechecks static-only
	 */

	'use strict';

	var EventConstants = __webpack_require__(31);
	var EventPropagators = __webpack_require__(74);
	var SyntheticMouseEvent = __webpack_require__(87);

	var ReactMount = __webpack_require__(29);
	var keyOf = __webpack_require__(80);

	var topLevelTypes = EventConstants.topLevelTypes;
	var getFirstReactDOM = ReactMount.getFirstReactDOM;

	var eventTypes = {
	  mouseEnter: {
	    registrationName: keyOf({ onMouseEnter: null }),
	    dependencies: [topLevelTypes.topMouseOut, topLevelTypes.topMouseOver]
	  },
	  mouseLeave: {
	    registrationName: keyOf({ onMouseLeave: null }),
	    dependencies: [topLevelTypes.topMouseOut, topLevelTypes.topMouseOver]
	  }
	};

	var extractedEvents = [null, null];

	var EnterLeaveEventPlugin = {

	  eventTypes: eventTypes,

	  /**
	   * For almost every interaction we care about, there will be both a top-level
	   * `mouseover` and `mouseout` event that occurs. Only use `mouseout` so that
	   * we do not extract duplicate events. However, moving the mouse into the
	   * browser from outside will not fire a `mouseout` event. In this case, we use
	   * the `mouseover` top-level event.
	   *
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {DOMEventTarget} topLevelTarget The listening component root node.
	   * @param {string} topLevelTargetID ID of `topLevelTarget`.
	   * @param {object} nativeEvent Native browser event.
	   * @return {*} An accumulation of synthetic events.
	   * @see {EventPluginHub.extractEvents}
	   */
	  extractEvents: function (topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget) {
	    if (topLevelType === topLevelTypes.topMouseOver && (nativeEvent.relatedTarget || nativeEvent.fromElement)) {
	      return null;
	    }
	    if (topLevelType !== topLevelTypes.topMouseOut && topLevelType !== topLevelTypes.topMouseOver) {
	      // Must not be a mouse in or mouse out - ignoring.
	      return null;
	    }

	    var win;
	    if (topLevelTarget.window === topLevelTarget) {
	      // `topLevelTarget` is probably a window object.
	      win = topLevelTarget;
	    } else {
	      // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
	      var doc = topLevelTarget.ownerDocument;
	      if (doc) {
	        win = doc.defaultView || doc.parentWindow;
	      } else {
	        win = window;
	      }
	    }

	    var from;
	    var to;
	    var fromID = '';
	    var toID = '';
	    if (topLevelType === topLevelTypes.topMouseOut) {
	      from = topLevelTarget;
	      fromID = topLevelTargetID;
	      to = getFirstReactDOM(nativeEvent.relatedTarget || nativeEvent.toElement);
	      if (to) {
	        toID = ReactMount.getID(to);
	      } else {
	        to = win;
	      }
	      to = to || win;
	    } else {
	      from = win;
	      to = topLevelTarget;
	      toID = topLevelTargetID;
	    }

	    if (from === to) {
	      // Nothing pertains to our managed components.
	      return null;
	    }

	    var leave = SyntheticMouseEvent.getPooled(eventTypes.mouseLeave, fromID, nativeEvent, nativeEventTarget);
	    leave.type = 'mouseleave';
	    leave.target = from;
	    leave.relatedTarget = to;

	    var enter = SyntheticMouseEvent.getPooled(eventTypes.mouseEnter, toID, nativeEvent, nativeEventTarget);
	    enter.type = 'mouseenter';
	    enter.target = to;
	    enter.relatedTarget = from;

	    EventPropagators.accumulateEnterLeaveDispatches(leave, enter, fromID, toID);

	    extractedEvents[0] = leave;
	    extractedEvents[1] = enter;

	    return extractedEvents;
	  }

	};

	module.exports = EnterLeaveEventPlugin;

/***/ }),
/* 87 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticMouseEvent
	 * @typechecks static-only
	 */

	'use strict';

	var SyntheticUIEvent = __webpack_require__(88);
	var ViewportMetrics = __webpack_require__(39);

	var getEventModifierState = __webpack_require__(89);

	/**
	 * @interface MouseEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var MouseEventInterface = {
	  screenX: null,
	  screenY: null,
	  clientX: null,
	  clientY: null,
	  ctrlKey: null,
	  shiftKey: null,
	  altKey: null,
	  metaKey: null,
	  getModifierState: getEventModifierState,
	  button: function (event) {
	    // Webkit, Firefox, IE9+
	    // which:  1 2 3
	    // button: 0 1 2 (standard)
	    var button = event.button;
	    if ('which' in event) {
	      return button;
	    }
	    // IE<9
	    // which:  undefined
	    // button: 0 0 0
	    // button: 1 4 2 (onmouseup)
	    return button === 2 ? 2 : button === 4 ? 1 : 0;
	  },
	  buttons: null,
	  relatedTarget: function (event) {
	    return event.relatedTarget || (event.fromElement === event.srcElement ? event.toElement : event.fromElement);
	  },
	  // "Proprietary" Interface.
	  pageX: function (event) {
	    return 'pageX' in event ? event.pageX : event.clientX + ViewportMetrics.currentScrollLeft;
	  },
	  pageY: function (event) {
	    return 'pageY' in event ? event.pageY : event.clientY + ViewportMetrics.currentScrollTop;
	  }
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticMouseEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticUIEvent.augmentClass(SyntheticMouseEvent, MouseEventInterface);

	module.exports = SyntheticMouseEvent;

/***/ }),
/* 88 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticUIEvent
	 * @typechecks static-only
	 */

	'use strict';

	var SyntheticEvent = __webpack_require__(78);

	var getEventTarget = __webpack_require__(82);

	/**
	 * @interface UIEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var UIEventInterface = {
	  view: function (event) {
	    if (event.view) {
	      return event.view;
	    }

	    var target = getEventTarget(event);
	    if (target != null && target.window === target) {
	      // target is a window object
	      return target;
	    }

	    var doc = target.ownerDocument;
	    // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
	    if (doc) {
	      return doc.defaultView || doc.parentWindow;
	    } else {
	      return window;
	    }
	  },
	  detail: function (event) {
	    return event.detail || 0;
	  }
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticEvent}
	 */
	function SyntheticUIEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticEvent.augmentClass(SyntheticUIEvent, UIEventInterface);

	module.exports = SyntheticUIEvent;

/***/ }),
/* 89 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getEventModifierState
	 * @typechecks static-only
	 */

	'use strict';

	/**
	 * Translation from modifier key to the associated property in the event.
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/#keys-Modifiers
	 */

	var modifierKeyToProp = {
	  'Alt': 'altKey',
	  'Control': 'ctrlKey',
	  'Meta': 'metaKey',
	  'Shift': 'shiftKey'
	};

	// IE8 does not implement getModifierState so we simply map it to the only
	// modifier keys exposed by the event itself, does not support Lock-keys.
	// Currently, all major browsers except Chrome seems to support Lock-keys.
	function modifierStateGetter(keyArg) {
	  var syntheticEvent = this;
	  var nativeEvent = syntheticEvent.nativeEvent;
	  if (nativeEvent.getModifierState) {
	    return nativeEvent.getModifierState(keyArg);
	  }
	  var keyProp = modifierKeyToProp[keyArg];
	  return keyProp ? !!nativeEvent[keyProp] : false;
	}

	function getEventModifierState(nativeEvent) {
	  return modifierStateGetter;
	}

	module.exports = getEventModifierState;

/***/ }),
/* 90 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule HTMLDOMPropertyConfig
	 */

	'use strict';

	var DOMProperty = __webpack_require__(24);
	var ExecutionEnvironment = __webpack_require__(10);

	var MUST_USE_ATTRIBUTE = DOMProperty.injection.MUST_USE_ATTRIBUTE;
	var MUST_USE_PROPERTY = DOMProperty.injection.MUST_USE_PROPERTY;
	var HAS_BOOLEAN_VALUE = DOMProperty.injection.HAS_BOOLEAN_VALUE;
	var HAS_SIDE_EFFECTS = DOMProperty.injection.HAS_SIDE_EFFECTS;
	var HAS_NUMERIC_VALUE = DOMProperty.injection.HAS_NUMERIC_VALUE;
	var HAS_POSITIVE_NUMERIC_VALUE = DOMProperty.injection.HAS_POSITIVE_NUMERIC_VALUE;
	var HAS_OVERLOADED_BOOLEAN_VALUE = DOMProperty.injection.HAS_OVERLOADED_BOOLEAN_VALUE;

	var hasSVG;
	if (ExecutionEnvironment.canUseDOM) {
	  var implementation = document.implementation;
	  hasSVG = implementation && implementation.hasFeature && implementation.hasFeature('http://www.w3.org/TR/SVG11/feature#BasicStructure', '1.1');
	}

	var HTMLDOMPropertyConfig = {
	  isCustomAttribute: RegExp.prototype.test.bind(/^(data|aria)-[a-z_][a-z\d_.\-]*$/),
	  Properties: {
	    /**
	     * Standard Properties
	     */
	    accept: null,
	    acceptCharset: null,
	    accessKey: null,
	    action: null,
	    allowFullScreen: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,
	    allowTransparency: MUST_USE_ATTRIBUTE,
	    alt: null,
	    async: HAS_BOOLEAN_VALUE,
	    autoComplete: null,
	    // autoFocus is polyfilled/normalized by AutoFocusUtils
	    // autoFocus: HAS_BOOLEAN_VALUE,
	    autoPlay: HAS_BOOLEAN_VALUE,
	    capture: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,
	    cellPadding: null,
	    cellSpacing: null,
	    charSet: MUST_USE_ATTRIBUTE,
	    challenge: MUST_USE_ATTRIBUTE,
	    checked: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    classID: MUST_USE_ATTRIBUTE,
	    // To set className on SVG elements, it's necessary to use .setAttribute;
	    // this works on HTML elements too in all browsers except IE8. Conveniently,
	    // IE8 doesn't support SVG and so we can simply use the attribute in
	    // browsers that support SVG and the property in browsers that don't,
	    // regardless of whether the element is HTML or SVG.
	    className: hasSVG ? MUST_USE_ATTRIBUTE : MUST_USE_PROPERTY,
	    cols: MUST_USE_ATTRIBUTE | HAS_POSITIVE_NUMERIC_VALUE,
	    colSpan: null,
	    content: null,
	    contentEditable: null,
	    contextMenu: MUST_USE_ATTRIBUTE,
	    controls: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    coords: null,
	    crossOrigin: null,
	    data: null, // For `<object />` acts as `src`.
	    dateTime: MUST_USE_ATTRIBUTE,
	    'default': HAS_BOOLEAN_VALUE,
	    defer: HAS_BOOLEAN_VALUE,
	    dir: null,
	    disabled: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,
	    download: HAS_OVERLOADED_BOOLEAN_VALUE,
	    draggable: null,
	    encType: null,
	    form: MUST_USE_ATTRIBUTE,
	    formAction: MUST_USE_ATTRIBUTE,
	    formEncType: MUST_USE_ATTRIBUTE,
	    formMethod: MUST_USE_ATTRIBUTE,
	    formNoValidate: HAS_BOOLEAN_VALUE,
	    formTarget: MUST_USE_ATTRIBUTE,
	    frameBorder: MUST_USE_ATTRIBUTE,
	    headers: null,
	    height: MUST_USE_ATTRIBUTE,
	    hidden: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,
	    high: null,
	    href: null,
	    hrefLang: null,
	    htmlFor: null,
	    httpEquiv: null,
	    icon: null,
	    id: MUST_USE_PROPERTY,
	    inputMode: MUST_USE_ATTRIBUTE,
	    integrity: null,
	    is: MUST_USE_ATTRIBUTE,
	    keyParams: MUST_USE_ATTRIBUTE,
	    keyType: MUST_USE_ATTRIBUTE,
	    kind: null,
	    label: null,
	    lang: null,
	    list: MUST_USE_ATTRIBUTE,
	    loop: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    low: null,
	    manifest: MUST_USE_ATTRIBUTE,
	    marginHeight: null,
	    marginWidth: null,
	    max: null,
	    maxLength: MUST_USE_ATTRIBUTE,
	    media: MUST_USE_ATTRIBUTE,
	    mediaGroup: null,
	    method: null,
	    min: null,
	    minLength: MUST_USE_ATTRIBUTE,
	    multiple: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    muted: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    name: null,
	    nonce: MUST_USE_ATTRIBUTE,
	    noValidate: HAS_BOOLEAN_VALUE,
	    open: HAS_BOOLEAN_VALUE,
	    optimum: null,
	    pattern: null,
	    placeholder: null,
	    poster: null,
	    preload: null,
	    radioGroup: null,
	    readOnly: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    rel: null,
	    required: HAS_BOOLEAN_VALUE,
	    reversed: HAS_BOOLEAN_VALUE,
	    role: MUST_USE_ATTRIBUTE,
	    rows: MUST_USE_ATTRIBUTE | HAS_POSITIVE_NUMERIC_VALUE,
	    rowSpan: null,
	    sandbox: null,
	    scope: null,
	    scoped: HAS_BOOLEAN_VALUE,
	    scrolling: null,
	    seamless: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,
	    selected: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    shape: null,
	    size: MUST_USE_ATTRIBUTE | HAS_POSITIVE_NUMERIC_VALUE,
	    sizes: MUST_USE_ATTRIBUTE,
	    span: HAS_POSITIVE_NUMERIC_VALUE,
	    spellCheck: null,
	    src: null,
	    srcDoc: MUST_USE_PROPERTY,
	    srcLang: null,
	    srcSet: MUST_USE_ATTRIBUTE,
	    start: HAS_NUMERIC_VALUE,
	    step: null,
	    style: null,
	    summary: null,
	    tabIndex: null,
	    target: null,
	    title: null,
	    type: null,
	    useMap: null,
	    value: MUST_USE_PROPERTY | HAS_SIDE_EFFECTS,
	    width: MUST_USE_ATTRIBUTE,
	    wmode: MUST_USE_ATTRIBUTE,
	    wrap: null,

	    /**
	     * RDFa Properties
	     */
	    about: MUST_USE_ATTRIBUTE,
	    datatype: MUST_USE_ATTRIBUTE,
	    inlist: MUST_USE_ATTRIBUTE,
	    prefix: MUST_USE_ATTRIBUTE,
	    // property is also supported for OpenGraph in meta tags.
	    property: MUST_USE_ATTRIBUTE,
	    resource: MUST_USE_ATTRIBUTE,
	    'typeof': MUST_USE_ATTRIBUTE,
	    vocab: MUST_USE_ATTRIBUTE,

	    /**
	     * Non-standard Properties
	     */
	    // autoCapitalize and autoCorrect are supported in Mobile Safari for
	    // keyboard hints.
	    autoCapitalize: MUST_USE_ATTRIBUTE,
	    autoCorrect: MUST_USE_ATTRIBUTE,
	    // autoSave allows WebKit/Blink to persist values of input fields on page reloads
	    autoSave: null,
	    // color is for Safari mask-icon link
	    color: null,
	    // itemProp, itemScope, itemType are for
	    // Microdata support. See http://schema.org/docs/gs.html
	    itemProp: MUST_USE_ATTRIBUTE,
	    itemScope: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,
	    itemType: MUST_USE_ATTRIBUTE,
	    // itemID and itemRef are for Microdata support as well but
	    // only specified in the the WHATWG spec document. See
	    // https://html.spec.whatwg.org/multipage/microdata.html#microdata-dom-api
	    itemID: MUST_USE_ATTRIBUTE,
	    itemRef: MUST_USE_ATTRIBUTE,
	    // results show looking glass icon and recent searches on input
	    // search fields in WebKit/Blink
	    results: null,
	    // IE-only attribute that specifies security restrictions on an iframe
	    // as an alternative to the sandbox attribute on IE<10
	    security: MUST_USE_ATTRIBUTE,
	    // IE-only attribute that controls focus behavior
	    unselectable: MUST_USE_ATTRIBUTE
	  },
	  DOMAttributeNames: {
	    acceptCharset: 'accept-charset',
	    className: 'class',
	    htmlFor: 'for',
	    httpEquiv: 'http-equiv'
	  },
	  DOMPropertyNames: {
	    autoComplete: 'autocomplete',
	    autoFocus: 'autofocus',
	    autoPlay: 'autoplay',
	    autoSave: 'autosave',
	    // `encoding` is equivalent to `enctype`, IE8 lacks an `enctype` setter.
	    // http://www.w3.org/TR/html5/forms.html#dom-fs-encoding
	    encType: 'encoding',
	    hrefLang: 'hreflang',
	    radioGroup: 'radiogroup',
	    spellCheck: 'spellcheck',
	    srcDoc: 'srcdoc',
	    srcSet: 'srcset'
	  }
	};

	module.exports = HTMLDOMPropertyConfig;

/***/ }),
/* 91 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactBrowserComponentMixin
	 */

	'use strict';

	var ReactInstanceMap = __webpack_require__(48);

	var findDOMNode = __webpack_require__(92);
	var warning = __webpack_require__(26);

	var didWarnKey = '_getDOMNodeDidWarn';

	var ReactBrowserComponentMixin = {
	  /**
	   * Returns the DOM node rendered by this component.
	   *
	   * @return {DOMElement} The root node of this component.
	   * @final
	   * @protected
	   */
	  getDOMNode: function () {
	    process.env.NODE_ENV !== 'production' ? warning(this.constructor[didWarnKey], '%s.getDOMNode(...) is deprecated. Please use ' + 'ReactDOM.findDOMNode(instance) instead.', ReactInstanceMap.get(this).getName() || this.tagName || 'Unknown') : undefined;
	    this.constructor[didWarnKey] = true;
	    return findDOMNode(this);
	  }
	};

	module.exports = ReactBrowserComponentMixin;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)))

/***/ }),
/* 92 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule findDOMNode
	 * @typechecks static-only
	 */

	'use strict';

	var ReactCurrentOwner = __webpack_require__(6);
	var ReactInstanceMap = __webpack_require__(48);
	var ReactMount = __webpack_require__(29);

	var invariant = __webpack_require__(14);
	var warning = __webpack_require__(26);

	/**
	 * Returns the DOM node rendered by this element.
	 *
	 * @param {ReactComponent|DOMElement} componentOrElement
	 * @return {?DOMElement} The root node of this element.
	 */
	function findDOMNode(componentOrElement) {
	  if (process.env.NODE_ENV !== 'production') {
	    var owner = ReactCurrentOwner.current;
	    if (owner !== null) {
	      process.env.NODE_ENV !== 'production' ? warning(owner._warnedAboutRefsInRender, '%s is accessing getDOMNode or findDOMNode inside its render(). ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', owner.getName() || 'A component') : undefined;
	      owner._warnedAboutRefsInRender = true;
	    }
	  }
	  if (componentOrElement == null) {
	    return null;
	  }
	  if (componentOrElement.nodeType === 1) {
	    return componentOrElement;
	  }
	  if (ReactInstanceMap.has(componentOrElement)) {
	    return ReactMount.getNodeFromInstance(componentOrElement);
	  }
	  !(componentOrElement.render == null || typeof componentOrElement.render !== 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'findDOMNode was called on an unmounted component.') : invariant(false) : undefined;
	   true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Element appears to be neither ReactComponent nor DOMNode (keys: %s)', Object.keys(componentOrElement)) : invariant(false) : undefined;
	}

	module.exports = findDOMNode;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)))

/***/ }),
/* 93 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDefaultBatchingStrategy
	 */

	'use strict';

	var ReactUpdates = __webpack_require__(55);
	var Transaction = __webpack_require__(58);

	var assign = __webpack_require__(40);
	var emptyFunction = __webpack_require__(16);

	var RESET_BATCHED_UPDATES = {
	  initialize: emptyFunction,
	  close: function () {
	    ReactDefaultBatchingStrategy.isBatchingUpdates = false;
	  }
	};

	var FLUSH_BATCHED_UPDATES = {
	  initialize: emptyFunction,
	  close: ReactUpdates.flushBatchedUpdates.bind(ReactUpdates)
	};

	var TRANSACTION_WRAPPERS = [FLUSH_BATCHED_UPDATES, RESET_BATCHED_UPDATES];

	function ReactDefaultBatchingStrategyTransaction() {
	  this.reinitializeTransaction();
	}

	assign(ReactDefaultBatchingStrategyTransaction.prototype, Transaction.Mixin, {
	  getTransactionWrappers: function () {
	    return TRANSACTION_WRAPPERS;
	  }
	});

	var transaction = new ReactDefaultBatchingStrategyTransaction();

	var ReactDefaultBatchingStrategy = {
	  isBatchingUpdates: false,

	  /**
	   * Call the provided function in a context within which calls to `setState`
	   * and friends are batched such that components aren't updated unnecessarily.
	   */
	  batchedUpdates: function (callback, a, b, c, d, e) {
	    var alreadyBatchingUpdates = ReactDefaultBatchingStrategy.isBatchingUpdates;

	    ReactDefaultBatchingStrategy.isBatchingUpdates = true;

	    // The code is written this way to avoid extra allocations
	    if (alreadyBatchingUpdates) {
	      callback(a, b, c, d, e);
	    } else {
	      transaction.perform(callback, null, a, b, c, d, e);
	    }
	  }
	};

	module.exports = ReactDefaultBatchingStrategy;

/***/ }),
/* 94 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMComponent
	 * @typechecks static-only
	 */

	/* global hasOwnProperty:true */

	'use strict';

	var AutoFocusUtils = __webpack_require__(95);
	var CSSPropertyOperations = __webpack_require__(97);
	var DOMProperty = __webpack_require__(24);
	var DOMPropertyOperations = __webpack_require__(23);
	var EventConstants = __webpack_require__(31);
	var ReactBrowserEventEmitter = __webpack_require__(30);
	var ReactComponentBrowserEnvironment = __webpack_require__(27);
	var ReactDOMButton = __webpack_require__(105);
	var ReactDOMInput = __webpack_require__(106);
	var ReactDOMOption = __webpack_require__(110);
	var ReactDOMSelect = __webpack_require__(113);
	var ReactDOMTextarea = __webpack_require__(114);
	var ReactMount = __webpack_require__(29);
	var ReactMultiChild = __webpack_require__(115);
	var ReactPerf = __webpack_require__(19);
	var ReactUpdateQueue = __webpack_require__(54);

	var assign = __webpack_require__(40);
	var canDefineProperty = __webpack_require__(44);
	var escapeTextContentForBrowser = __webpack_require__(22);
	var invariant = __webpack_require__(14);
	var isEventSupported = __webpack_require__(41);
	var keyOf = __webpack_require__(80);
	var setInnerHTML = __webpack_require__(20);
	var setTextContent = __webpack_require__(21);
	var shallowEqual = __webpack_require__(118);
	var validateDOMNesting = __webpack_require__(71);
	var warning = __webpack_require__(26);

	var deleteListener = ReactBrowserEventEmitter.deleteListener;
	var listenTo = ReactBrowserEventEmitter.listenTo;
	var registrationNameModules = ReactBrowserEventEmitter.registrationNameModules;

	// For quickly matching children type, to test if can be treated as content.
	var CONTENT_TYPES = { 'string': true, 'number': true };

	var CHILDREN = keyOf({ children: null });
	var STYLE = keyOf({ style: null });
	var HTML = keyOf({ __html: null });

	var ELEMENT_NODE_TYPE = 1;

	function getDeclarationErrorAddendum(internalInstance) {
	  if (internalInstance) {
	    var owner = internalInstance._currentElement._owner || null;
	    if (owner) {
	      var name = owner.getName();
	      if (name) {
	        return ' This DOM node was rendered by `' + name + '`.';
	      }
	    }
	  }
	  return '';
	}

	var legacyPropsDescriptor;
	if (process.env.NODE_ENV !== 'production') {
	  legacyPropsDescriptor = {
	    props: {
	      enumerable: false,
	      get: function () {
	        var component = this._reactInternalComponent;
	        process.env.NODE_ENV !== 'production' ? warning(false, 'ReactDOMComponent: Do not access .props of a DOM node; instead, ' + 'recreate the props as `render` did originally or read the DOM ' + 'properties/attributes directly from this node (e.g., ' + 'this.refs.box.className).%s', getDeclarationErrorAddendum(component)) : undefined;
	        return component._currentElement.props;
	      }
	    }
	  };
	}

	function legacyGetDOMNode() {
	  if (process.env.NODE_ENV !== 'production') {
	    var component = this._reactInternalComponent;
	    process.env.NODE_ENV !== 'production' ? warning(false, 'ReactDOMComponent: Do not access .getDOMNode() of a DOM node; ' + 'instead, use the node directly.%s', getDeclarationErrorAddendum(component)) : undefined;
	  }
	  return this;
	}

	function legacyIsMounted() {
	  var component = this._reactInternalComponent;
	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(false, 'ReactDOMComponent: Do not access .isMounted() of a DOM node.%s', getDeclarationErrorAddendum(component)) : undefined;
	  }
	  return !!component;
	}

	function legacySetStateEtc() {
	  if (process.env.NODE_ENV !== 'production') {
	    var component = this._reactInternalComponent;
	    process.env.NODE_ENV !== 'production' ? warning(false, 'ReactDOMComponent: Do not access .setState(), .replaceState(), or ' + '.forceUpdate() of a DOM node. This is a no-op.%s', getDeclarationErrorAddendum(component)) : undefined;
	  }
	}

	function legacySetProps(partialProps, callback) {
	  var component = this._reactInternalComponent;
	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(false, 'ReactDOMComponent: Do not access .setProps() of a DOM node. ' + 'Instead, call ReactDOM.render again at the top level.%s', getDeclarationErrorAddendum(component)) : undefined;
	  }
	  if (!component) {
	    return;
	  }
	  ReactUpdateQueue.enqueueSetPropsInternal(component, partialProps);
	  if (callback) {
	    ReactUpdateQueue.enqueueCallbackInternal(component, callback);
	  }
	}

	function legacyReplaceProps(partialProps, callback) {
	  var component = this._reactInternalComponent;
	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(false, 'ReactDOMComponent: Do not access .replaceProps() of a DOM node. ' + 'Instead, call ReactDOM.render again at the top level.%s', getDeclarationErrorAddendum(component)) : undefined;
	  }
	  if (!component) {
	    return;
	  }
	  ReactUpdateQueue.enqueueReplacePropsInternal(component, partialProps);
	  if (callback) {
	    ReactUpdateQueue.enqueueCallbackInternal(component, callback);
	  }
	}

	function friendlyStringify(obj) {
	  if (typeof obj === 'object') {
	    if (Array.isArray(obj)) {
	      return '[' + obj.map(friendlyStringify).join(', ') + ']';
	    } else {
	      var pairs = [];
	      for (var key in obj) {
	        if (Object.prototype.hasOwnProperty.call(obj, key)) {
	          var keyEscaped = /^[a-z$_][\w$_]*$/i.test(key) ? key : JSON.stringify(key);
	          pairs.push(keyEscaped + ': ' + friendlyStringify(obj[key]));
	        }
	      }
	      return '{' + pairs.join(', ') + '}';
	    }
	  } else if (typeof obj === 'string') {
	    return JSON.stringify(obj);
	  } else if (typeof obj === 'function') {
	    return '[function object]';
	  }
	  // Differs from JSON.stringify in that undefined becauses undefined and that
	  // inf and nan don't become null
	  return String(obj);
	}

	var styleMutationWarning = {};

	function checkAndWarnForMutatedStyle(style1, style2, component) {
	  if (style1 == null || style2 == null) {
	    return;
	  }
	  if (shallowEqual(style1, style2)) {
	    return;
	  }

	  var componentName = component._tag;
	  var owner = component._currentElement._owner;
	  var ownerName;
	  if (owner) {
	    ownerName = owner.getName();
	  }

	  var hash = ownerName + '|' + componentName;

	  if (styleMutationWarning.hasOwnProperty(hash)) {
	    return;
	  }

	  styleMutationWarning[hash] = true;

	  process.env.NODE_ENV !== 'production' ? warning(false, '`%s` was passed a style object that has previously been mutated. ' + 'Mutating `style` is deprecated. Consider cloning it beforehand. Check ' + 'the `render` %s. Previous style: %s. Mutated style: %s.', componentName, owner ? 'of `' + ownerName + '`' : 'using <' + componentName + '>', friendlyStringify(style1), friendlyStringify(style2)) : undefined;
	}

	/**
	 * @param {object} component
	 * @param {?object} props
	 */
	function assertValidProps(component, props) {
	  if (!props) {
	    return;
	  }
	  // Note the use of `==` which checks for null or undefined.
	  if (process.env.NODE_ENV !== 'production') {
	    if (voidElementTags[component._tag]) {
	      process.env.NODE_ENV !== 'production' ? warning(props.children == null && props.dangerouslySetInnerHTML == null, '%s is a void element tag and must not have `children` or ' + 'use `props.dangerouslySetInnerHTML`.%s', component._tag, component._currentElement._owner ? ' Check the render method of ' + component._currentElement._owner.getName() + '.' : '') : undefined;
	    }
	  }
	  if (props.dangerouslySetInnerHTML != null) {
	    !(props.children == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Can only set one of `children` or `props.dangerouslySetInnerHTML`.') : invariant(false) : undefined;
	    !(typeof props.dangerouslySetInnerHTML === 'object' && HTML in props.dangerouslySetInnerHTML) ? process.env.NODE_ENV !== 'production' ? invariant(false, '`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. ' + 'Please visit https://fb.me/react-invariant-dangerously-set-inner-html ' + 'for more information.') : invariant(false) : undefined;
	  }
	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(props.innerHTML == null, 'Directly setting property `innerHTML` is not permitted. ' + 'For more information, lookup documentation on `dangerouslySetInnerHTML`.') : undefined;
	    process.env.NODE_ENV !== 'production' ? warning(!props.contentEditable || props.children == null, 'A component is `contentEditable` and contains `children` managed by ' + 'React. It is now your responsibility to guarantee that none of ' + 'those nodes are unexpectedly modified or duplicated. This is ' + 'probably not intentional.') : undefined;
	  }
	  !(props.style == null || typeof props.style === 'object') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'The `style` prop expects a mapping from style properties to values, ' + 'not a string. For example, style={{marginRight: spacing + \'em\'}} when ' + 'using JSX.%s', getDeclarationErrorAddendum(component)) : invariant(false) : undefined;
	}

	function enqueuePutListener(id, registrationName, listener, transaction) {
	  if (process.env.NODE_ENV !== 'production') {
	    // IE8 has no API for event capturing and the `onScroll` event doesn't
	    // bubble.
	    process.env.NODE_ENV !== 'production' ? warning(registrationName !== 'onScroll' || isEventSupported('scroll', true), 'This browser doesn\'t support the `onScroll` event') : undefined;
	  }
	  var container = ReactMount.findReactContainerForID(id);
	  if (container) {
	    var doc = container.nodeType === ELEMENT_NODE_TYPE ? container.ownerDocument : container;
	    listenTo(registrationName, doc);
	  }
	  transaction.getReactMountReady().enqueue(putListener, {
	    id: id,
	    registrationName: registrationName,
	    listener: listener
	  });
	}

	function putListener() {
	  var listenerToPut = this;
	  ReactBrowserEventEmitter.putListener(listenerToPut.id, listenerToPut.registrationName, listenerToPut.listener);
	}

	// There are so many media events, it makes sense to just
	// maintain a list rather than create a `trapBubbledEvent` for each
	var mediaEvents = {
	  topAbort: 'abort',
	  topCanPlay: 'canplay',
	  topCanPlayThrough: 'canplaythrough',
	  topDurationChange: 'durationchange',
	  topEmptied: 'emptied',
	  topEncrypted: 'encrypted',
	  topEnded: 'ended',
	  topError: 'error',
	  topLoadedData: 'loadeddata',
	  topLoadedMetadata: 'loadedmetadata',
	  topLoadStart: 'loadstart',
	  topPause: 'pause',
	  topPlay: 'play',
	  topPlaying: 'playing',
	  topProgress: 'progress',
	  topRateChange: 'ratechange',
	  topSeeked: 'seeked',
	  topSeeking: 'seeking',
	  topStalled: 'stalled',
	  topSuspend: 'suspend',
	  topTimeUpdate: 'timeupdate',
	  topVolumeChange: 'volumechange',
	  topWaiting: 'waiting'
	};

	function trapBubbledEventsLocal() {
	  var inst = this;
	  // If a component renders to null or if another component fatals and causes
	  // the state of the tree to be corrupted, `node` here can be null.
	  !inst._rootNodeID ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Must be mounted to trap events') : invariant(false) : undefined;
	  var node = ReactMount.getNode(inst._rootNodeID);
	  !node ? process.env.NODE_ENV !== 'production' ? invariant(false, 'trapBubbledEvent(...): Requires node to be rendered.') : invariant(false) : undefined;

	  switch (inst._tag) {
	    case 'iframe':
	      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topLoad, 'load', node)];
	      break;
	    case 'video':
	    case 'audio':

	      inst._wrapperState.listeners = [];
	      // create listener for each media event
	      for (var event in mediaEvents) {
	        if (mediaEvents.hasOwnProperty(event)) {
	          inst._wrapperState.listeners.push(ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes[event], mediaEvents[event], node));
	        }
	      }

	      break;
	    case 'img':
	      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topError, 'error', node), ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topLoad, 'load', node)];
	      break;
	    case 'form':
	      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topReset, 'reset', node), ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topSubmit, 'submit', node)];
	      break;
	  }
	}

	function mountReadyInputWrapper() {
	  ReactDOMInput.mountReadyWrapper(this);
	}

	function postUpdateSelectWrapper() {
	  ReactDOMSelect.postUpdateWrapper(this);
	}

	// For HTML, certain tags should omit their close tag. We keep a whitelist for
	// those special cased tags.

	var omittedCloseTags = {
	  'area': true,
	  'base': true,
	  'br': true,
	  'col': true,
	  'embed': true,
	  'hr': true,
	  'img': true,
	  'input': true,
	  'keygen': true,
	  'link': true,
	  'meta': true,
	  'param': true,
	  'source': true,
	  'track': true,
	  'wbr': true
	};

	// NOTE: menuitem's close tag should be omitted, but that causes problems.
	var newlineEatingTags = {
	  'listing': true,
	  'pre': true,
	  'textarea': true
	};

	// For HTML, certain tags cannot have children. This has the same purpose as
	// `omittedCloseTags` except that `menuitem` should still have its closing tag.

	var voidElementTags = assign({
	  'menuitem': true
	}, omittedCloseTags);

	// We accept any tag to be rendered but since this gets injected into arbitrary
	// HTML, we want to make sure that it's a safe tag.
	// http://www.w3.org/TR/REC-xml/#NT-Name

	var VALID_TAG_REGEX = /^[a-zA-Z][a-zA-Z:_\.\-\d]*$/; // Simplified subset
	var validatedTagCache = {};
	var hasOwnProperty = ({}).hasOwnProperty;

	function validateDangerousTag(tag) {
	  if (!hasOwnProperty.call(validatedTagCache, tag)) {
	    !VALID_TAG_REGEX.test(tag) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Invalid tag: %s', tag) : invariant(false) : undefined;
	    validatedTagCache[tag] = true;
	  }
	}

	function processChildContextDev(context, inst) {
	  // Pass down our tag name to child components for validation purposes
	  context = assign({}, context);
	  var info = context[validateDOMNesting.ancestorInfoContextKey];
	  context[validateDOMNesting.ancestorInfoContextKey] = validateDOMNesting.updatedAncestorInfo(info, inst._tag, inst);
	  return context;
	}

	function isCustomComponent(tagName, props) {
	  return tagName.indexOf('-') >= 0 || props.is != null;
	}

	/**
	 * Creates a new React class that is idempotent and capable of containing other
	 * React components. It accepts event listeners and DOM properties that are
	 * valid according to `DOMProperty`.
	 *
	 *  - Event listeners: `onClick`, `onMouseDown`, etc.
	 *  - DOM properties: `className`, `name`, `title`, etc.
	 *
	 * The `style` property functions differently from the DOM API. It accepts an
	 * object mapping of style properties to values.
	 *
	 * @constructor ReactDOMComponent
	 * @extends ReactMultiChild
	 */
	function ReactDOMComponent(tag) {
	  validateDangerousTag(tag);
	  this._tag = tag.toLowerCase();
	  this._renderedChildren = null;
	  this._previousStyle = null;
	  this._previousStyleCopy = null;
	  this._rootNodeID = null;
	  this._wrapperState = null;
	  this._topLevelWrapper = null;
	  this._nodeWithLegacyProperties = null;
	  if (process.env.NODE_ENV !== 'production') {
	    this._unprocessedContextDev = null;
	    this._processedContextDev = null;
	  }
	}

	ReactDOMComponent.displayName = 'ReactDOMComponent';

	ReactDOMComponent.Mixin = {

	  construct: function (element) {
	    this._currentElement = element;
	  },

	  /**
	   * Generates root tag markup then recurses. This method has side effects and
	   * is not idempotent.
	   *
	   * @internal
	   * @param {string} rootID The root DOM ID for this node.
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {object} context
	   * @return {string} The computed markup.
	   */
	  mountComponent: function (rootID, transaction, context) {
	    this._rootNodeID = rootID;

	    var props = this._currentElement.props;

	    switch (this._tag) {
	      case 'iframe':
	      case 'img':
	      case 'form':
	      case 'video':
	      case 'audio':
	        this._wrapperState = {
	          listeners: null
	        };
	        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
	        break;
	      case 'button':
	        props = ReactDOMButton.getNativeProps(this, props, context);
	        break;
	      case 'input':
	        ReactDOMInput.mountWrapper(this, props, context);
	        props = ReactDOMInput.getNativeProps(this, props, context);
	        break;
	      case 'option':
	        ReactDOMOption.mountWrapper(this, props, context);
	        props = ReactDOMOption.getNativeProps(this, props, context);
	        break;
	      case 'select':
	        ReactDOMSelect.mountWrapper(this, props, context);
	        props = ReactDOMSelect.getNativeProps(this, props, context);
	        context = ReactDOMSelect.processChildContext(this, props, context);
	        break;
	      case 'textarea':
	        ReactDOMTextarea.mountWrapper(this, props, context);
	        props = ReactDOMTextarea.getNativeProps(this, props, context);
	        break;
	    }

	    assertValidProps(this, props);
	    if (process.env.NODE_ENV !== 'production') {
	      if (context[validateDOMNesting.ancestorInfoContextKey]) {
	        validateDOMNesting(this._tag, this, context[validateDOMNesting.ancestorInfoContextKey]);
	      }
	    }

	    if (process.env.NODE_ENV !== 'production') {
	      this._unprocessedContextDev = context;
	      this._processedContextDev = processChildContextDev(context, this);
	      context = this._processedContextDev;
	    }

	    var mountImage;
	    if (transaction.useCreateElement) {
	      var ownerDocument = context[ReactMount.ownerDocumentContextKey];
	      var el = ownerDocument.createElement(this._currentElement.type);
	      DOMPropertyOperations.setAttributeForID(el, this._rootNodeID);
	      // Populate node cache
	      ReactMount.getID(el);
	      this._updateDOMProperties({}, props, transaction, el);
	      this._createInitialChildren(transaction, props, context, el);
	      mountImage = el;
	    } else {
	      var tagOpen = this._createOpenTagMarkupAndPutListeners(transaction, props);
	      var tagContent = this._createContentMarkup(transaction, props, context);
	      if (!tagContent && omittedCloseTags[this._tag]) {
	        mountImage = tagOpen + '/>';
	      } else {
	        mountImage = tagOpen + '>' + tagContent + '</' + this._currentElement.type + '>';
	      }
	    }

	    switch (this._tag) {
	      case 'input':
	        transaction.getReactMountReady().enqueue(mountReadyInputWrapper, this);
	      // falls through
	      case 'button':
	      case 'select':
	      case 'textarea':
	        if (props.autoFocus) {
	          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
	        }
	        break;
	    }

	    return mountImage;
	  },

	  /**
	   * Creates markup for the open tag and all attributes.
	   *
	   * This method has side effects because events get registered.
	   *
	   * Iterating over object properties is faster than iterating over arrays.
	   * @see http://jsperf.com/obj-vs-arr-iteration
	   *
	   * @private
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {object} props
	   * @return {string} Markup of opening tag.
	   */
	  _createOpenTagMarkupAndPutListeners: function (transaction, props) {
	    var ret = '<' + this._currentElement.type;

	    for (var propKey in props) {
	      if (!props.hasOwnProperty(propKey)) {
	        continue;
	      }
	      var propValue = props[propKey];
	      if (propValue == null) {
	        continue;
	      }
	      if (registrationNameModules.hasOwnProperty(propKey)) {
	        if (propValue) {
	          enqueuePutListener(this._rootNodeID, propKey, propValue, transaction);
	        }
	      } else {
	        if (propKey === STYLE) {
	          if (propValue) {
	            if (process.env.NODE_ENV !== 'production') {
	              // See `_updateDOMProperties`. style block
	              this._previousStyle = propValue;
	            }
	            propValue = this._previousStyleCopy = assign({}, props.style);
	          }
	          propValue = CSSPropertyOperations.createMarkupForStyles(propValue);
	        }
	        var markup = null;
	        if (this._tag != null && isCustomComponent(this._tag, props)) {
	          if (propKey !== CHILDREN) {
	            markup = DOMPropertyOperations.createMarkupForCustomAttribute(propKey, propValue);
	          }
	        } else {
	          markup = DOMPropertyOperations.createMarkupForProperty(propKey, propValue);
	        }
	        if (markup) {
	          ret += ' ' + markup;
	        }
	      }
	    }

	    // For static pages, no need to put React ID and checksum. Saves lots of
	    // bytes.
	    if (transaction.renderToStaticMarkup) {
	      return ret;
	    }

	    var markupForID = DOMPropertyOperations.createMarkupForID(this._rootNodeID);
	    return ret + ' ' + markupForID;
	  },

	  /**
	   * Creates markup for the content between the tags.
	   *
	   * @private
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {object} props
	   * @param {object} context
	   * @return {string} Content markup.
	   */
	  _createContentMarkup: function (transaction, props, context) {
	    var ret = '';

	    // Intentional use of != to avoid catching zero/false.
	    var innerHTML = props.dangerouslySetInnerHTML;
	    if (innerHTML != null) {
	      if (innerHTML.__html != null) {
	        ret = innerHTML.__html;
	      }
	    } else {
	      var contentToUse = CONTENT_TYPES[typeof props.children] ? props.children : null;
	      var childrenToUse = contentToUse != null ? null : props.children;
	      if (contentToUse != null) {
	        // TODO: Validate that text is allowed as a child of this node
	        ret = escapeTextContentForBrowser(contentToUse);
	      } else if (childrenToUse != null) {
	        var mountImages = this.mountChildren(childrenToUse, transaction, context);
	        ret = mountImages.join('');
	      }
	    }
	    if (newlineEatingTags[this._tag] && ret.charAt(0) === '\n') {
	      // text/html ignores the first character in these tags if it's a newline
	      // Prefer to break application/xml over text/html (for now) by adding
	      // a newline specifically to get eaten by the parser. (Alternately for
	      // textareas, replacing "^\n" with "\r\n" doesn't get eaten, and the first
	      // \r is normalized out by HTMLTextAreaElement#value.)
	      // See: <http://www.w3.org/TR/html-polyglot/#newlines-in-textarea-and-pre>
	      // See: <http://www.w3.org/TR/html5/syntax.html#element-restrictions>
	      // See: <http://www.w3.org/TR/html5/syntax.html#newlines>
	      // See: Parsing of "textarea" "listing" and "pre" elements
	      //  from <http://www.w3.org/TR/html5/syntax.html#parsing-main-inbody>
	      return '\n' + ret;
	    } else {
	      return ret;
	    }
	  },

	  _createInitialChildren: function (transaction, props, context, el) {
	    // Intentional use of != to avoid catching zero/false.
	    var innerHTML = props.dangerouslySetInnerHTML;
	    if (innerHTML != null) {
	      if (innerHTML.__html != null) {
	        setInnerHTML(el, innerHTML.__html);
	      }
	    } else {
	      var contentToUse = CONTENT_TYPES[typeof props.children] ? props.children : null;
	      var childrenToUse = contentToUse != null ? null : props.children;
	      if (contentToUse != null) {
	        // TODO: Validate that text is allowed as a child of this node
	        setTextContent(el, contentToUse);
	      } else if (childrenToUse != null) {
	        var mountImages = this.mountChildren(childrenToUse, transaction, context);
	        for (var i = 0; i < mountImages.length; i++) {
	          el.appendChild(mountImages[i]);
	        }
	      }
	    }
	  },

	  /**
	   * Receives a next element and updates the component.
	   *
	   * @internal
	   * @param {ReactElement} nextElement
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {object} context
	   */
	  receiveComponent: function (nextElement, transaction, context) {
	    var prevElement = this._currentElement;
	    this._currentElement = nextElement;
	    this.updateComponent(transaction, prevElement, nextElement, context);
	  },

	  /**
	   * Updates a native DOM component after it has already been allocated and
	   * attached to the DOM. Reconciles the root DOM node, then recurses.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @param {ReactElement} prevElement
	   * @param {ReactElement} nextElement
	   * @internal
	   * @overridable
	   */
	  updateComponent: function (transaction, prevElement, nextElement, context) {
	    var lastProps = prevElement.props;
	    var nextProps = this._currentElement.props;

	    switch (this._tag) {
	      case 'button':
	        lastProps = ReactDOMButton.getNativeProps(this, lastProps);
	        nextProps = ReactDOMButton.getNativeProps(this, nextProps);
	        break;
	      case 'input':
	        ReactDOMInput.updateWrapper(this);
	        lastProps = ReactDOMInput.getNativeProps(this, lastProps);
	        nextProps = ReactDOMInput.getNativeProps(this, nextProps);
	        break;
	      case 'option':
	        lastProps = ReactDOMOption.getNativeProps(this, lastProps);
	        nextProps = ReactDOMOption.getNativeProps(this, nextProps);
	        break;
	      case 'select':
	        lastProps = ReactDOMSelect.getNativeProps(this, lastProps);
	        nextProps = ReactDOMSelect.getNativeProps(this, nextProps);
	        break;
	      case 'textarea':
	        ReactDOMTextarea.updateWrapper(this);
	        lastProps = ReactDOMTextarea.getNativeProps(this, lastProps);
	        nextProps = ReactDOMTextarea.getNativeProps(this, nextProps);
	        break;
	    }

	    if (process.env.NODE_ENV !== 'production') {
	      // If the context is reference-equal to the old one, pass down the same
	      // processed object so the update bailout in ReactReconciler behaves
	      // correctly (and identically in dev and prod). See #5005.
	      if (this._unprocessedContextDev !== context) {
	        this._unprocessedContextDev = context;
	        this._processedContextDev = processChildContextDev(context, this);
	      }
	      context = this._processedContextDev;
	    }

	    assertValidProps(this, nextProps);
	    this._updateDOMProperties(lastProps, nextProps, transaction, null);
	    this._updateDOMChildren(lastProps, nextProps, transaction, context);

	    if (!canDefineProperty && this._nodeWithLegacyProperties) {
	      this._nodeWithLegacyProperties.props = nextProps;
	    }

	    if (this._tag === 'select') {
	      // <select> value update needs to occur after <option> children
	      // reconciliation
	      transaction.getReactMountReady().enqueue(postUpdateSelectWrapper, this);
	    }
	  },

	  /**
	   * Reconciles the properties by detecting differences in property values and
	   * updating the DOM as necessary. This function is probably the single most
	   * critical path for performance optimization.
	   *
	   * TODO: Benchmark whether checking for changed values in memory actually
	   *       improves performance (especially statically positioned elements).
	   * TODO: Benchmark the effects of putting this at the top since 99% of props
	   *       do not change for a given reconciliation.
	   * TODO: Benchmark areas that can be improved with caching.
	   *
	   * @private
	   * @param {object} lastProps
	   * @param {object} nextProps
	   * @param {ReactReconcileTransaction} transaction
	   * @param {?DOMElement} node
	   */
	  _updateDOMProperties: function (lastProps, nextProps, transaction, node) {
	    var propKey;
	    var styleName;
	    var styleUpdates;
	    for (propKey in lastProps) {
	      if (nextProps.hasOwnProperty(propKey) || !lastProps.hasOwnProperty(propKey)) {
	        continue;
	      }
	      if (propKey === STYLE) {
	        var lastStyle = this._previousStyleCopy;
	        for (styleName in lastStyle) {
	          if (lastStyle.hasOwnProperty(styleName)) {
	            styleUpdates = styleUpdates || {};
	            styleUpdates[styleName] = '';
	          }
	        }
	        this._previousStyleCopy = null;
	      } else if (registrationNameModules.hasOwnProperty(propKey)) {
	        if (lastProps[propKey]) {
	          // Only call deleteListener if there was a listener previously or
	          // else willDeleteListener gets called when there wasn't actually a
	          // listener (e.g., onClick={null})
	          deleteListener(this._rootNodeID, propKey);
	        }
	      } else if (DOMProperty.properties[propKey] || DOMProperty.isCustomAttribute(propKey)) {
	        if (!node) {
	          node = ReactMount.getNode(this._rootNodeID);
	        }
	        DOMPropertyOperations.deleteValueForProperty(node, propKey);
	      }
	    }
	    for (propKey in nextProps) {
	      var nextProp = nextProps[propKey];
	      var lastProp = propKey === STYLE ? this._previousStyleCopy : lastProps[propKey];
	      if (!nextProps.hasOwnProperty(propKey) || nextProp === lastProp) {
	        continue;
	      }
	      if (propKey === STYLE) {
	        if (nextProp) {
	          if (process.env.NODE_ENV !== 'production') {
	            checkAndWarnForMutatedStyle(this._previousStyleCopy, this._previousStyle, this);
	            this._previousStyle = nextProp;
	          }
	          nextProp = this._previousStyleCopy = assign({}, nextProp);
	        } else {
	          this._previousStyleCopy = null;
	        }
	        if (lastProp) {
	          // Unset styles on `lastProp` but not on `nextProp`.
	          for (styleName in lastProp) {
	            if (lastProp.hasOwnProperty(styleName) && (!nextProp || !nextProp.hasOwnProperty(styleName))) {
	              styleUpdates = styleUpdates || {};
	              styleUpdates[styleName] = '';
	            }
	          }
	          // Update styles that changed since `lastProp`.
	          for (styleName in nextProp) {
	            if (nextProp.hasOwnProperty(styleName) && lastProp[styleName] !== nextProp[styleName]) {
	              styleUpdates = styleUpdates || {};
	              styleUpdates[styleName] = nextProp[styleName];
	            }
	          }
	        } else {
	          // Relies on `updateStylesByID` not mutating `styleUpdates`.
	          styleUpdates = nextProp;
	        }
	      } else if (registrationNameModules.hasOwnProperty(propKey)) {
	        if (nextProp) {
	          enqueuePutListener(this._rootNodeID, propKey, nextProp, transaction);
	        } else if (lastProp) {
	          deleteListener(this._rootNodeID, propKey);
	        }
	      } else if (isCustomComponent(this._tag, nextProps)) {
	        if (!node) {
	          node = ReactMount.getNode(this._rootNodeID);
	        }
	        if (propKey === CHILDREN) {
	          nextProp = null;
	        }
	        DOMPropertyOperations.setValueForAttribute(node, propKey, nextProp);
	      } else if (DOMProperty.properties[propKey] || DOMProperty.isCustomAttribute(propKey)) {
	        if (!node) {
	          node = ReactMount.getNode(this._rootNodeID);
	        }
	        // If we're updating to null or undefined, we should remove the property
	        // from the DOM node instead of inadvertantly setting to a string. This
	        // brings us in line with the same behavior we have on initial render.
	        if (nextProp != null) {
	          DOMPropertyOperations.setValueForProperty(node, propKey, nextProp);
	        } else {
	          DOMPropertyOperations.deleteValueForProperty(node, propKey);
	        }
	      }
	    }
	    if (styleUpdates) {
	      if (!node) {
	        node = ReactMount.getNode(this._rootNodeID);
	      }
	      CSSPropertyOperations.setValueForStyles(node, styleUpdates);
	    }
	  },

	  /**
	   * Reconciles the children with the various properties that affect the
	   * children content.
	   *
	   * @param {object} lastProps
	   * @param {object} nextProps
	   * @param {ReactReconcileTransaction} transaction
	   * @param {object} context
	   */
	  _updateDOMChildren: function (lastProps, nextProps, transaction, context) {
	    var lastContent = CONTENT_TYPES[typeof lastProps.children] ? lastProps.children : null;
	    var nextContent = CONTENT_TYPES[typeof nextProps.children] ? nextProps.children : null;

	    var lastHtml = lastProps.dangerouslySetInnerHTML && lastProps.dangerouslySetInnerHTML.__html;
	    var nextHtml = nextProps.dangerouslySetInnerHTML && nextProps.dangerouslySetInnerHTML.__html;

	    // Note the use of `!=` which checks for null or undefined.
	    var lastChildren = lastContent != null ? null : lastProps.children;
	    var nextChildren = nextContent != null ? null : nextProps.children;

	    // If we're switching from children to content/html or vice versa, remove
	    // the old content
	    var lastHasContentOrHtml = lastContent != null || lastHtml != null;
	    var nextHasContentOrHtml = nextContent != null || nextHtml != null;
	    if (lastChildren != null && nextChildren == null) {
	      this.updateChildren(null, transaction, context);
	    } else if (lastHasContentOrHtml && !nextHasContentOrHtml) {
	      this.updateTextContent('');
	    }

	    if (nextContent != null) {
	      if (lastContent !== nextContent) {
	        this.updateTextContent('' + nextContent);
	      }
	    } else if (nextHtml != null) {
	      if (lastHtml !== nextHtml) {
	        this.updateMarkup('' + nextHtml);
	      }
	    } else if (nextChildren != null) {
	      this.updateChildren(nextChildren, transaction, context);
	    }
	  },

	  /**
	   * Destroys all event registrations for this instance. Does not remove from
	   * the DOM. That must be done by the parent.
	   *
	   * @internal
	   */
	  unmountComponent: function () {
	    switch (this._tag) {
	      case 'iframe':
	      case 'img':
	      case 'form':
	      case 'video':
	      case 'audio':
	        var listeners = this._wrapperState.listeners;
	        if (listeners) {
	          for (var i = 0; i < listeners.length; i++) {
	            listeners[i].remove();
	          }
	        }
	        break;
	      case 'input':
	        ReactDOMInput.unmountWrapper(this);
	        break;
	      case 'html':
	      case 'head':
	      case 'body':
	        /**
	         * Components like <html> <head> and <body> can't be removed or added
	         * easily in a cross-browser way, however it's valuable to be able to
	         * take advantage of React's reconciliation for styling and <title>
	         * management. So we just document it and throw in dangerous cases.
	         */
	         true ? process.env.NODE_ENV !== 'production' ? invariant(false, '<%s> tried to unmount. Because of cross-browser quirks it is ' + 'impossible to unmount some top-level components (eg <html>, ' + '<head>, and <body>) reliably and efficiently. To fix this, have a ' + 'single top-level component that never unmounts render these ' + 'elements.', this._tag) : invariant(false) : undefined;
	        break;
	    }

	    this.unmountChildren();
	    ReactBrowserEventEmitter.deleteAllListeners(this._rootNodeID);
	    ReactComponentBrowserEnvironment.unmountIDFromEnvironment(this._rootNodeID);
	    this._rootNodeID = null;
	    this._wrapperState = null;
	    if (this._nodeWithLegacyProperties) {
	      var node = this._nodeWithLegacyProperties;
	      node._reactInternalComponent = null;
	      this._nodeWithLegacyProperties = null;
	    }
	  },

	  getPublicInstance: function () {
	    if (!this._nodeWithLegacyProperties) {
	      var node = ReactMount.getNode(this._rootNodeID);

	      node._reactInternalComponent = this;
	      node.getDOMNode = legacyGetDOMNode;
	      node.isMounted = legacyIsMounted;
	      node.setState = legacySetStateEtc;
	      node.replaceState = legacySetStateEtc;
	      node.forceUpdate = legacySetStateEtc;
	      node.setProps = legacySetProps;
	      node.replaceProps = legacyReplaceProps;

	      if (process.env.NODE_ENV !== 'production') {
	        if (canDefineProperty) {
	          Object.defineProperties(node, legacyPropsDescriptor);
	        } else {
	          // updateComponent will update this property on subsequent renders
	          node.props = this._currentElement.props;
	        }
	      } else {
	        // updateComponent will update this property on subsequent renders
	        node.props = this._currentElement.props;
	      }

	      this._nodeWithLegacyProperties = node;
	    }
	    return this._nodeWithLegacyProperties;
	  }

	};

	ReactPerf.measureMethods(ReactDOMComponent, 'ReactDOMComponent', {
	  mountComponent: 'mountComponent',
	  updateComponent: 'updateComponent'
	});

	assign(ReactDOMComponent.prototype, ReactDOMComponent.Mixin, ReactMultiChild.Mixin);

	module.exports = ReactDOMComponent;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)))

/***/ }),
/* 95 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule AutoFocusUtils
	 * @typechecks static-only
	 */

	'use strict';

	var ReactMount = __webpack_require__(29);

	var findDOMNode = __webpack_require__(92);
	var focusNode = __webpack_require__(96);

	var Mixin = {
	  componentDidMount: function () {
	    if (this.props.autoFocus) {
	      focusNode(findDOMNode(this));
	    }
	  }
	};

	var AutoFocusUtils = {
	  Mixin: Mixin,

	  focusDOMComponent: function () {
	    focusNode(ReactMount.getNode(this._rootNodeID));
	  }
	};

	module.exports = AutoFocusUtils;

/***/ }),
/* 96 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule focusNode
	 */

	'use strict';

	/**
	 * @param {DOMElement} node input/textarea to focus
	 */
	function focusNode(node) {
	  // IE8 can throw "Can't move focus to the control because it is invisible,
	  // not enabled, or of a type that does not accept the focus." for all kinds of
	  // reasons that are too expensive and fragile to test.
	  try {
	    node.focus();
	  } catch (e) {}
	}

	module.exports = focusNode;

/***/ }),
/* 97 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule CSSPropertyOperations
	 * @typechecks static-only
	 */

	'use strict';

	var CSSProperty = __webpack_require__(98);
	var ExecutionEnvironment = __webpack_require__(10);
	var ReactPerf = __webpack_require__(19);

	var camelizeStyleName = __webpack_require__(99);
	var dangerousStyleValue = __webpack_require__(101);
	var hyphenateStyleName = __webpack_require__(102);
	var memoizeStringOnly = __webpack_require__(104);
	var warning = __webpack_require__(26);

	var processStyleName = memoizeStringOnly(function (styleName) {
	  return hyphenateStyleName(styleName);
	});

	var hasShorthandPropertyBug = false;
	var styleFloatAccessor = 'cssFloat';
	if (ExecutionEnvironment.canUseDOM) {
	  var tempStyle = document.createElement('div').style;
	  try {
	    // IE8 throws "Invalid argument." if resetting shorthand style properties.
	    tempStyle.font = '';
	  } catch (e) {
	    hasShorthandPropertyBug = true;
	  }
	  // IE8 only supports accessing cssFloat (standard) as styleFloat
	  if (document.documentElement.style.cssFloat === undefined) {
	    styleFloatAccessor = 'styleFloat';
	  }
	}

	if (process.env.NODE_ENV !== 'production') {
	  // 'msTransform' is correct, but the other prefixes should be capitalized
	  var badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/;

	  // style values shouldn't contain a semicolon
	  var badStyleValueWithSemicolonPattern = /;\s*$/;

	  var warnedStyleNames = {};
	  var warnedStyleValues = {};

	  var warnHyphenatedStyleName = function (name) {
	    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
	      return;
	    }

	    warnedStyleNames[name] = true;
	    process.env.NODE_ENV !== 'production' ? warning(false, 'Unsupported style property %s. Did you mean %s?', name, camelizeStyleName(name)) : undefined;
	  };

	  var warnBadVendoredStyleName = function (name) {
	    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
	      return;
	    }

	    warnedStyleNames[name] = true;
	    process.env.NODE_ENV !== 'production' ? warning(false, 'Unsupported vendor-prefixed style property %s. Did you mean %s?', name, name.charAt(0).toUpperCase() + name.slice(1)) : undefined;
	  };

	  var warnStyleValueWithSemicolon = function (name, value) {
	    if (warnedStyleValues.hasOwnProperty(value) && warnedStyleValues[value]) {
	      return;
	    }

	    warnedStyleValues[value] = true;
	    process.env.NODE_ENV !== 'production' ? warning(false, 'Style property values shouldn\'t contain a semicolon. ' + 'Try "%s: %s" instead.', name, value.replace(badStyleValueWithSemicolonPattern, '')) : undefined;
	  };

	  /**
	   * @param {string} name
	   * @param {*} value
	   */
	  var warnValidStyle = function (name, value) {
	    if (name.indexOf('-') > -1) {
	      warnHyphenatedStyleName(name);
	    } else if (badVendoredStyleNamePattern.test(name)) {
	      warnBadVendoredStyleName(name);
	    } else if (badStyleValueWithSemicolonPattern.test(value)) {
	      warnStyleValueWithSemicolon(name, value);
	    }
	  };
	}

	/**
	 * Operations for dealing with CSS properties.
	 */
	var CSSPropertyOperations = {

	  /**
	   * Serializes a mapping of style properties for use as inline styles:
	   *
	   *   > createMarkupForStyles({width: '200px', height: 0})
	   *   "width:200px;height:0;"
	   *
	   * Undefined values are ignored so that declarative programming is easier.
	   * The result should be HTML-escaped before insertion into the DOM.
	   *
	   * @param {object} styles
	   * @return {?string}
	   */
	  createMarkupForStyles: function (styles) {
	    var serialized = '';
	    for (var styleName in styles) {
	      if (!styles.hasOwnProperty(styleName)) {
	        continue;
	      }
	      var styleValue = styles[styleName];
	      if (process.env.NODE_ENV !== 'production') {
	        warnValidStyle(styleName, styleValue);
	      }
	      if (styleValue != null) {
	        serialized += processStyleName(styleName) + ':';
	        serialized += dangerousStyleValue(styleName, styleValue) + ';';
	      }
	    }
	    return serialized || null;
	  },

	  /**
	   * Sets the value for multiple styles on a node.  If a value is specified as
	   * '' (empty string), the corresponding style property will be unset.
	   *
	   * @param {DOMElement} node
	   * @param {object} styles
	   */
	  setValueForStyles: function (node, styles) {
	    var style = node.style;
	    for (var styleName in styles) {
	      if (!styles.hasOwnProperty(styleName)) {
	        continue;
	      }
	      if (process.env.NODE_ENV !== 'production') {
	        warnValidStyle(styleName, styles[styleName]);
	      }
	      var styleValue = dangerousStyleValue(styleName, styles[styleName]);
	      if (styleName === 'float') {
	        styleName = styleFloatAccessor;
	      }
	      if (styleValue) {
	        style[styleName] = styleValue;
	      } else {
	        var expansion = hasShorthandPropertyBug && CSSProperty.shorthandPropertyExpansions[styleName];
	        if (expansion) {
	          // Shorthand property that IE8 won't like unsetting, so unset each
	          // component to placate it
	          for (var individualStyleName in expansion) {
	            style[individualStyleName] = '';
	          }
	        } else {
	          style[styleName] = '';
	        }
	      }
	    }
	  }

	};

	ReactPerf.measureMethods(CSSPropertyOperations, 'CSSPropertyOperations', {
	  setValueForStyles: 'setValueForStyles'
	});

	module.exports = CSSPropertyOperations;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)))

/***/ }),
/* 98 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule CSSProperty
	 */

	'use strict';

	/**
	 * CSS properties which accept numbers but are not in units of "px".
	 */
	var isUnitlessNumber = {
	  animationIterationCount: true,
	  boxFlex: true,
	  boxFlexGroup: true,
	  boxOrdinalGroup: true,
	  columnCount: true,
	  flex: true,
	  flexGrow: true,
	  flexPositive: true,
	  flexShrink: true,
	  flexNegative: true,
	  flexOrder: true,
	  fontWeight: true,
	  lineClamp: true,
	  lineHeight: true,
	  opacity: true,
	  order: true,
	  orphans: true,
	  tabSize: true,
	  widows: true,
	  zIndex: true,
	  zoom: true,

	  // SVG-related properties
	  fillOpacity: true,
	  stopOpacity: true,
	  strokeDashoffset: true,
	  strokeOpacity: true,
	  strokeWidth: true
	};

	/**
	 * @param {string} prefix vendor-specific prefix, eg: Webkit
	 * @param {string} key style name, eg: transitionDuration
	 * @return {string} style name prefixed with `prefix`, properly camelCased, eg:
	 * WebkitTransitionDuration
	 */
	function prefixKey(prefix, key) {
	  return prefix + key.charAt(0).toUpperCase() + key.substring(1);
	}

	/**
	 * Support style names that may come passed in prefixed by adding permutations
	 * of vendor prefixes.
	 */
	var prefixes = ['Webkit', 'ms', 'Moz', 'O'];

	// Using Object.keys here, or else the vanilla for-in loop makes IE8 go into an
	// infinite loop, because it iterates over the newly added props too.
	Object.keys(isUnitlessNumber).forEach(function (prop) {
	  prefixes.forEach(function (prefix) {
	    isUnitlessNumber[prefixKey(prefix, prop)] = isUnitlessNumber[prop];
	  });
	});

	/**
	 * Most style properties can be unset by doing .style[prop] = '' but IE8
	 * doesn't like doing that with shorthand properties so for the properties that
	 * IE8 breaks on, which are listed here, we instead unset each of the
	 * individual properties. See http://bugs.jquery.com/ticket/12385.
	 * The 4-value 'clock' properties like margin, padding, border-width seem to
	 * behave without any problems. Curiously, list-style works too without any
	 * special prodding.
	 */
	var shorthandPropertyExpansions = {
	  background: {
	    backgroundAttachment: true,
	    backgroundColor: true,
	    backgroundImage: true,
	    backgroundPositionX: true,
	    backgroundPositionY: true,
	    backgroundRepeat: true
	  },
	  backgroundPosition: {
	    backgroundPositionX: true,
	    backgroundPositionY: true
	  },
	  border: {
	    borderWidth: true,
	    borderStyle: true,
	    borderColor: true
	  },
	  borderBottom: {
	    borderBottomWidth: true,
	    borderBottomStyle: true,
	    borderBottomColor: true
	  },
	  borderLeft: {
	    borderLeftWidth: true,
	    borderLeftStyle: true,
	    borderLeftColor: true
	  },
	  borderRight: {
	    borderRightWidth: true,
	    borderRightStyle: true,
	    borderRightColor: true
	  },
	  borderTop: {
	    borderTopWidth: true,
	    borderTopStyle: true,
	    borderTopColor: true
	  },
	  font: {
	    fontStyle: true,
	    fontVariant: true,
	    fontWeight: true,
	    fontSize: true,
	    lineHeight: true,
	    fontFamily: true
	  },
	  outline: {
	    outlineWidth: true,
	    outlineStyle: true,
	    outlineColor: true
	  }
	};

	var CSSProperty = {
	  isUnitlessNumber: isUnitlessNumber,
	  shorthandPropertyExpansions: shorthandPropertyExpansions
	};

	module.exports = CSSProperty;

/***/ }),
/* 99 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule camelizeStyleName
	 * @typechecks
	 */

	'use strict';

	var camelize = __webpack_require__(100);

	var msPattern = /^-ms-/;

	/**
	 * Camelcases a hyphenated CSS property name, for example:
	 *
	 *   > camelizeStyleName('background-color')
	 *   < "backgroundColor"
	 *   > camelizeStyleName('-moz-transition')
	 *   < "MozTransition"
	 *   > camelizeStyleName('-ms-transition')
	 *   < "msTransition"
	 *
	 * As Andi Smith suggests
	 * (http://www.andismith.com/blog/2012/02/modernizr-prefixed/), an `-ms` prefix
	 * is converted to lowercase `ms`.
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function camelizeStyleName(string) {
	  return camelize(string.replace(msPattern, 'ms-'));
	}

	module.exports = camelizeStyleName;

/***/ }),
/* 100 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule camelize
	 * @typechecks
	 */

	"use strict";

	var _hyphenPattern = /-(.)/g;

	/**
	 * Camelcases a hyphenated string, for example:
	 *
	 *   > camelize('background-color')
	 *   < "backgroundColor"
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function camelize(string) {
	  return string.replace(_hyphenPattern, function (_, character) {
	    return character.toUpperCase();
	  });
	}

	module.exports = camelize;

/***/ }),
/* 101 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule dangerousStyleValue
	 * @typechecks static-only
	 */

	'use strict';

	var CSSProperty = __webpack_require__(98);

	var isUnitlessNumber = CSSProperty.isUnitlessNumber;

	/**
	 * Convert a value into the proper css writable value. The style name `name`
	 * should be logical (no hyphens), as specified
	 * in `CSSProperty.isUnitlessNumber`.
	 *
	 * @param {string} name CSS property name such as `topMargin`.
	 * @param {*} value CSS property value such as `10px`.
	 * @return {string} Normalized style value with dimensions applied.
	 */
	function dangerousStyleValue(name, value) {
	  // Note that we've removed escapeTextForBrowser() calls here since the
	  // whole string will be escaped when the attribute is injected into
	  // the markup. If you provide unsafe user data here they can inject
	  // arbitrary CSS which may be problematic (I couldn't repro this):
	  // https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet
	  // http://www.thespanner.co.uk/2007/11/26/ultimate-xss-css-injection/
	  // This is not an XSS hole but instead a potential CSS injection issue
	  // which has lead to a greater discussion about how we're going to
	  // trust URLs moving forward. See #2115901

	  var isEmpty = value == null || typeof value === 'boolean' || value === '';
	  if (isEmpty) {
	    return '';
	  }

	  var isNonNumeric = isNaN(value);
	  if (isNonNumeric || value === 0 || isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name]) {
	    return '' + value; // cast to string
	  }

	  if (typeof value === 'string') {
	    value = value.trim();
	  }
	  return value + 'px';
	}

	module.exports = dangerousStyleValue;

/***/ }),
/* 102 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule hyphenateStyleName
	 * @typechecks
	 */

	'use strict';

	var hyphenate = __webpack_require__(103);

	var msPattern = /^ms-/;

	/**
	 * Hyphenates a camelcased CSS property name, for example:
	 *
	 *   > hyphenateStyleName('backgroundColor')
	 *   < "background-color"
	 *   > hyphenateStyleName('MozTransition')
	 *   < "-moz-transition"
	 *   > hyphenateStyleName('msTransition')
	 *   < "-ms-transition"
	 *
	 * As Modernizr suggests (http://modernizr.com/docs/#prefixed), an `ms` prefix
	 * is converted to `-ms-`.
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function hyphenateStyleName(string) {
	  return hyphenate(string).replace(msPattern, '-ms-');
	}

	module.exports = hyphenateStyleName;

/***/ }),
/* 103 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule hyphenate
	 * @typechecks
	 */

	'use strict';

	var _uppercasePattern = /([A-Z])/g;

	/**
	 * Hyphenates a camelcased string, for example:
	 *
	 *   > hyphenate('backgroundColor')
	 *   < "background-color"
	 *
	 * For CSS style names, use `hyphenateStyleName` instead which works properly
	 * with all vendor prefixes, including `ms`.
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function hyphenate(string) {
	  return string.replace(_uppercasePattern, '-$1').toLowerCase();
	}

	module.exports = hyphenate;

/***/ }),
/* 104 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule memoizeStringOnly
	 * @typechecks static-only
	 */

	'use strict';

	/**
	 * Memoizes the return value of a function that accepts one string argument.
	 *
	 * @param {function} callback
	 * @return {function}
	 */
	function memoizeStringOnly(callback) {
	  var cache = {};
	  return function (string) {
	    if (!cache.hasOwnProperty(string)) {
	      cache[string] = callback.call(this, string);
	    }
	    return cache[string];
	  };
	}

	module.exports = memoizeStringOnly;

/***/ }),
/* 105 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMButton
	 */

	'use strict';

	var mouseListenerNames = {
	  onClick: true,
	  onDoubleClick: true,
	  onMouseDown: true,
	  onMouseMove: true,
	  onMouseUp: true,

	  onClickCapture: true,
	  onDoubleClickCapture: true,
	  onMouseDownCapture: true,
	  onMouseMoveCapture: true,
	  onMouseUpCapture: true
	};

	/**
	 * Implements a <button> native component that does not receive mouse events
	 * when `disabled` is set.
	 */
	var ReactDOMButton = {
	  getNativeProps: function (inst, props, context) {
	    if (!props.disabled) {
	      return props;
	    }

	    // Copy the props, except the mouse listeners
	    var nativeProps = {};
	    for (var key in props) {
	      if (props.hasOwnProperty(key) && !mouseListenerNames[key]) {
	        nativeProps[key] = props[key];
	      }
	    }

	    return nativeProps;
	  }
	};

	module.exports = ReactDOMButton;

/***/ }),
/* 106 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMInput
	 */

	'use strict';

	var ReactDOMIDOperations = __webpack_require__(28);
	var LinkedValueUtils = __webpack_require__(107);
	var ReactMount = __webpack_require__(29);
	var ReactUpdates = __webpack_require__(55);

	var assign = __webpack_require__(40);
	var invariant = __webpack_require__(14);

	var instancesByReactID = {};

	function forceUpdateIfMounted() {
	  if (this._rootNodeID) {
	    // DOM component is still mounted; update
	    ReactDOMInput.updateWrapper(this);
	  }
	}

	/**
	 * Implements an <input> native component that allows setting these optional
	 * props: `checked`, `value`, `defaultChecked`, and `defaultValue`.
	 *
	 * If `checked` or `value` are not supplied (or null/undefined), user actions
	 * that affect the checked state or value will trigger updates to the element.
	 *
	 * If they are supplied (and not null/undefined), the rendered element will not
	 * trigger updates to the element. Instead, the props must change in order for
	 * the rendered element to be updated.
	 *
	 * The rendered element will be initialized as unchecked (or `defaultChecked`)
	 * with an empty value (or `defaultValue`).
	 *
	 * @see http://www.w3.org/TR/2012/WD-html5-20121025/the-input-element.html
	 */
	var ReactDOMInput = {
	  getNativeProps: function (inst, props, context) {
	    var value = LinkedValueUtils.getValue(props);
	    var checked = LinkedValueUtils.getChecked(props);

	    var nativeProps = assign({}, props, {
	      defaultChecked: undefined,
	      defaultValue: undefined,
	      value: value != null ? value : inst._wrapperState.initialValue,
	      checked: checked != null ? checked : inst._wrapperState.initialChecked,
	      onChange: inst._wrapperState.onChange
	    });

	    return nativeProps;
	  },

	  mountWrapper: function (inst, props) {
	    if (process.env.NODE_ENV !== 'production') {
	      LinkedValueUtils.checkPropTypes('input', props, inst._currentElement._owner);
	    }

	    var defaultValue = props.defaultValue;
	    inst._wrapperState = {
	      initialChecked: props.defaultChecked || false,
	      initialValue: defaultValue != null ? defaultValue : null,
	      onChange: _handleChange.bind(inst)
	    };
	  },

	  mountReadyWrapper: function (inst) {
	    // Can't be in mountWrapper or else server rendering leaks.
	    instancesByReactID[inst._rootNodeID] = inst;
	  },

	  unmountWrapper: function (inst) {
	    delete instancesByReactID[inst._rootNodeID];
	  },

	  updateWrapper: function (inst) {
	    var props = inst._currentElement.props;

	    // TODO: Shouldn't this be getChecked(props)?
	    var checked = props.checked;
	    if (checked != null) {
	      ReactDOMIDOperations.updatePropertyByID(inst._rootNodeID, 'checked', checked || false);
	    }

	    var value = LinkedValueUtils.getValue(props);
	    if (value != null) {
	      // Cast `value` to a string to ensure the value is set correctly. While
	      // browsers typically do this as necessary, jsdom doesn't.
	      ReactDOMIDOperations.updatePropertyByID(inst._rootNodeID, 'value', '' + value);
	    }
	  }
	};

	function _handleChange(event) {
	  var props = this._currentElement.props;

	  var returnValue = LinkedValueUtils.executeOnChange(props, event);

	  // Here we use asap to wait until all updates have propagated, which
	  // is important when using controlled components within layers:
	  // https://github.com/facebook/react/issues/1698
	  ReactUpdates.asap(forceUpdateIfMounted, this);

	  var name = props.name;
	  if (props.type === 'radio' && name != null) {
	    var rootNode = ReactMount.getNode(this._rootNodeID);
	    var queryRoot = rootNode;

	    while (queryRoot.parentNode) {
	      queryRoot = queryRoot.parentNode;
	    }

	    // If `rootNode.form` was non-null, then we could try `form.elements`,
	    // but that sometimes behaves strangely in IE8. We could also try using
	    // `form.getElementsByName`, but that will only return direct children
	    // and won't include inputs that use the HTML5 `form=` attribute. Since
	    // the input might not even be in a form, let's just use the global
	    // `querySelectorAll` to ensure we don't miss anything.
	    var group = queryRoot.querySelectorAll('input[name=' + JSON.stringify('' + name) + '][type="radio"]');

	    for (var i = 0; i < group.length; i++) {
	      var otherNode = group[i];
	      if (otherNode === rootNode || otherNode.form !== rootNode.form) {
	        continue;
	      }
	      // This will throw if radio buttons rendered by different copies of React
	      // and the same name are rendered into the same form (same as #1939).
	      // That's probably okay; we don't support it just as we don't support
	      // mixing React with non-React.
	      var otherID = ReactMount.getID(otherNode);
	      !otherID ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactDOMInput: Mixing React and non-React radio inputs with the ' + 'same `name` is not supported.') : invariant(false) : undefined;
	      var otherInstance = instancesByReactID[otherID];
	      !otherInstance ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactDOMInput: Unknown radio button ID %s.', otherID) : invariant(false) : undefined;
	      // If this is a controlled radio button group, forcing the input that
	      // was previously checked to update will cause it to be come re-checked
	      // as appropriate.
	      ReactUpdates.asap(forceUpdateIfMounted, otherInstance);
	    }
	  }

	  return returnValue;
	}

	module.exports = ReactDOMInput;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)))

/***/ }),
/* 107 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule LinkedValueUtils
	 * @typechecks static-only
	 */

	'use strict';

	var ReactPropTypes = __webpack_require__(108);
	var ReactPropTypeLocations = __webpack_require__(66);

	var invariant = __webpack_require__(14);
	var warning = __webpack_require__(26);

	var hasReadOnlyValue = {
	  'button': true,
	  'checkbox': true,
	  'image': true,
	  'hidden': true,
	  'radio': true,
	  'reset': true,
	  'submit': true
	};

	function _assertSingleLink(inputProps) {
	  !(inputProps.checkedLink == null || inputProps.valueLink == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Cannot provide a checkedLink and a valueLink. If you want to use ' + 'checkedLink, you probably don\'t want to use valueLink and vice versa.') : invariant(false) : undefined;
	}
	function _assertValueLink(inputProps) {
	  _assertSingleLink(inputProps);
	  !(inputProps.value == null && inputProps.onChange == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Cannot provide a valueLink and a value or onChange event. If you want ' + 'to use value or onChange, you probably don\'t want to use valueLink.') : invariant(false) : undefined;
	}

	function _assertCheckedLink(inputProps) {
	  _assertSingleLink(inputProps);
	  !(inputProps.checked == null && inputProps.onChange == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Cannot provide a checkedLink and a checked property or onChange event. ' + 'If you want to use checked or onChange, you probably don\'t want to ' + 'use checkedLink') : invariant(false) : undefined;
	}

	var propTypes = {
	  value: function (props, propName, componentName) {
	    if (!props[propName] || hasReadOnlyValue[props.type] || props.onChange || props.readOnly || props.disabled) {
	      return null;
	    }
	    return new Error('You provided a `value` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultValue`. Otherwise, ' + 'set either `onChange` or `readOnly`.');
	  },
	  checked: function (props, propName, componentName) {
	    if (!props[propName] || props.onChange || props.readOnly || props.disabled) {
	      return null;
	    }
	    return new Error('You provided a `checked` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultChecked`. Otherwise, ' + 'set either `onChange` or `readOnly`.');
	  },
	  onChange: ReactPropTypes.func
	};

	var loggedTypeFailures = {};
	function getDeclarationErrorAddendum(owner) {
	  if (owner) {
	    var name = owner.getName();
	    if (name) {
	      return ' Check the render method of `' + name + '`.';
	    }
	  }
	  return '';
	}

	/**
	 * Provide a linked `value` attribute for controlled forms. You should not use
	 * this outside of the ReactDOM controlled form components.
	 */
	var LinkedValueUtils = {
	  checkPropTypes: function (tagName, props, owner) {
	    for (var propName in propTypes) {
	      if (propTypes.hasOwnProperty(propName)) {
	        var error = propTypes[propName](props, propName, tagName, ReactPropTypeLocations.prop, null, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');
	      }
	      if (error instanceof Error && !(error.message in loggedTypeFailures)) {
	        // Only monitor this failure once because there tends to be a lot of the
	        // same error.
	        loggedTypeFailures[error.message] = true;

	        var addendum = getDeclarationErrorAddendum(owner);
	        process.env.NODE_ENV !== 'production' ? warning(false, 'Failed form propType: %s%s', error.message, addendum) : undefined;
	      }
	    }
	  },

	  /**
	   * @param {object} inputProps Props for form component
	   * @return {*} current value of the input either from value prop or link.
	   */
	  getValue: function (inputProps) {
	    if (inputProps.valueLink) {
	      _assertValueLink(inputProps);
	      return inputProps.valueLink.value;
	    }
	    return inputProps.value;
	  },

	  /**
	   * @param {object} inputProps Props for form component
	   * @return {*} current checked status of the input either from checked prop
	   *             or link.
	   */
	  getChecked: function (inputProps) {
	    if (inputProps.checkedLink) {
	      _assertCheckedLink(inputProps);
	      return inputProps.checkedLink.value;
	    }
	    return inputProps.checked;
	  },

	  /**
	   * @param {object} inputProps Props for form component
	   * @param {SyntheticEvent} event change event to handle
	   */
	  executeOnChange: function (inputProps, event) {
	    if (inputProps.valueLink) {
	      _assertValueLink(inputProps);
	      return inputProps.valueLink.requestChange(event.target.value);
	    } else if (inputProps.checkedLink) {
	      _assertCheckedLink(inputProps);
	      return inputProps.checkedLink.requestChange(event.target.checked);
	    } else if (inputProps.onChange) {
	      return inputProps.onChange.call(undefined, event);
	    }
	  }
	};

	module.exports = LinkedValueUtils;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)))

/***/ }),
/* 108 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactPropTypes
	 */

	'use strict';

	var ReactElement = __webpack_require__(43);
	var ReactPropTypeLocationNames = __webpack_require__(67);

	var emptyFunction = __webpack_require__(16);
	var getIteratorFn = __webpack_require__(109);

	/**
	 * Collection of methods that allow declaration and validation of props that are
	 * supplied to React components. Example usage:
	 *
	 *   var Props = require('ReactPropTypes');
	 *   var MyArticle = React.createClass({
	 *     propTypes: {
	 *       // An optional string prop named "description".
	 *       description: Props.string,
	 *
	 *       // A required enum prop named "category".
	 *       category: Props.oneOf(['News','Photos']).isRequired,
	 *
	 *       // A prop named "dialog" that requires an instance of Dialog.
	 *       dialog: Props.instanceOf(Dialog).isRequired
	 *     },
	 *     render: function() { ... }
	 *   });
	 *
	 * A more formal specification of how these methods are used:
	 *
	 *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)
	 *   decl := ReactPropTypes.{type}(.isRequired)?
	 *
	 * Each and every declaration produces a function with the same signature. This
	 * allows the creation of custom validation functions. For example:
	 *
	 *  var MyLink = React.createClass({
	 *    propTypes: {
	 *      // An optional string or URI prop named "href".
	 *      href: function(props, propName, componentName) {
	 *        var propValue = props[propName];
	 *        if (propValue != null && typeof propValue !== 'string' &&
	 *            !(propValue instanceof URI)) {
	 *          return new Error(
	 *            'Expected a string or an URI for ' + propName + ' in ' +
	 *            componentName
	 *          );
	 *        }
	 *      }
	 *    },
	 *    render: function() {...}
	 *  });
	 *
	 * @internal
	 */

	var ANONYMOUS = '<<anonymous>>';

	var ReactPropTypes = {
	  array: createPrimitiveTypeChecker('array'),
	  bool: createPrimitiveTypeChecker('boolean'),
	  func: createPrimitiveTypeChecker('function'),
	  number: createPrimitiveTypeChecker('number'),
	  object: createPrimitiveTypeChecker('object'),
	  string: createPrimitiveTypeChecker('string'),

	  any: createAnyTypeChecker(),
	  arrayOf: createArrayOfTypeChecker,
	  element: createElementTypeChecker(),
	  instanceOf: createInstanceTypeChecker,
	  node: createNodeChecker(),
	  objectOf: createObjectOfTypeChecker,
	  oneOf: createEnumTypeChecker,
	  oneOfType: createUnionTypeChecker,
	  shape: createShapeTypeChecker
	};

	function createChainableTypeChecker(validate) {
	  function checkType(isRequired, props, propName, componentName, location, propFullName) {
	    componentName = componentName || ANONYMOUS;
	    propFullName = propFullName || propName;
	    if (props[propName] == null) {
	      var locationName = ReactPropTypeLocationNames[location];
	      if (isRequired) {
	        return new Error('Required ' + locationName + ' `' + propFullName + '` was not specified in ' + ('`' + componentName + '`.'));
	      }
	      return null;
	    } else {
	      return validate(props, propName, componentName, location, propFullName);
	    }
	  }

	  var chainedCheckType = checkType.bind(null, false);
	  chainedCheckType.isRequired = checkType.bind(null, true);

	  return chainedCheckType;
	}

	function createPrimitiveTypeChecker(expectedType) {
	  function validate(props, propName, componentName, location, propFullName) {
	    var propValue = props[propName];
	    var propType = getPropType(propValue);
	    if (propType !== expectedType) {
	      var locationName = ReactPropTypeLocationNames[location];
	      // `propValue` being instance of, say, date/regexp, pass the 'object'
	      // check, but we can offer a more precise error message here rather than
	      // 'of type `object`'.
	      var preciseType = getPreciseType(propValue);

	      return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}

	function createAnyTypeChecker() {
	  return createChainableTypeChecker(emptyFunction.thatReturns(null));
	}

	function createArrayOfTypeChecker(typeChecker) {
	  function validate(props, propName, componentName, location, propFullName) {
	    var propValue = props[propName];
	    if (!Array.isArray(propValue)) {
	      var locationName = ReactPropTypeLocationNames[location];
	      var propType = getPropType(propValue);
	      return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));
	    }
	    for (var i = 0; i < propValue.length; i++) {
	      var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');
	      if (error instanceof Error) {
	        return error;
	      }
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}

	function createElementTypeChecker() {
	  function validate(props, propName, componentName, location, propFullName) {
	    if (!ReactElement.isValidElement(props[propName])) {
	      var locationName = ReactPropTypeLocationNames[location];
	      return new Error('Invalid ' + locationName + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a single ReactElement.'));
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}

	function createInstanceTypeChecker(expectedClass) {
	  function validate(props, propName, componentName, location, propFullName) {
	    if (!(props[propName] instanceof expectedClass)) {
	      var locationName = ReactPropTypeLocationNames[location];
	      var expectedClassName = expectedClass.name || ANONYMOUS;
	      var actualClassName = getClassName(props[propName]);
	      return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}

	function createEnumTypeChecker(expectedValues) {
	  if (!Array.isArray(expectedValues)) {
	    return createChainableTypeChecker(function () {
	      return new Error('Invalid argument supplied to oneOf, expected an instance of array.');
	    });
	  }

	  function validate(props, propName, componentName, location, propFullName) {
	    var propValue = props[propName];
	    for (var i = 0; i < expectedValues.length; i++) {
	      if (propValue === expectedValues[i]) {
	        return null;
	      }
	    }

	    var locationName = ReactPropTypeLocationNames[location];
	    var valuesString = JSON.stringify(expectedValues);
	    return new Error('Invalid ' + locationName + ' `' + propFullName + '` of value `' + propValue + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));
	  }
	  return createChainableTypeChecker(validate);
	}

	function createObjectOfTypeChecker(typeChecker) {
	  function validate(props, propName, componentName, location, propFullName) {
	    var propValue = props[propName];
	    var propType = getPropType(propValue);
	    if (propType !== 'object') {
	      var locationName = ReactPropTypeLocationNames[location];
	      return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));
	    }
	    for (var key in propValue) {
	      if (propValue.hasOwnProperty(key)) {
	        var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');
	        if (error instanceof Error) {
	          return error;
	        }
	      }
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}

	function createUnionTypeChecker(arrayOfTypeCheckers) {
	  if (!Array.isArray(arrayOfTypeCheckers)) {
	    return createChainableTypeChecker(function () {
	      return new Error('Invalid argument supplied to oneOfType, expected an instance of array.');
	    });
	  }

	  function validate(props, propName, componentName, location, propFullName) {
	    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
	      var checker = arrayOfTypeCheckers[i];
	      if (checker(props, propName, componentName, location, propFullName, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED') == null) {
	        return null;
	      }
	    }

	    var locationName = ReactPropTypeLocationNames[location];
	    return new Error('Invalid ' + locationName + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));
	  }
	  return createChainableTypeChecker(validate);
	}

	function createNodeChecker() {
	  function validate(props, propName, componentName, location, propFullName) {
	    if (!isNode(props[propName])) {
	      var locationName = ReactPropTypeLocationNames[location];
	      return new Error('Invalid ' + locationName + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}

	function createShapeTypeChecker(shapeTypes) {
	  function validate(props, propName, componentName, location, propFullName) {
	    var propValue = props[propName];
	    var propType = getPropType(propValue);
	    if (propType !== 'object') {
	      var locationName = ReactPropTypeLocationNames[location];
	      return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
	    }
	    for (var key in shapeTypes) {
	      var checker = shapeTypes[key];
	      if (!checker) {
	        continue;
	      }
	      var error = checker(propValue, key, componentName, location, propFullName + '.' + key, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');
	      if (error) {
	        return error;
	      }
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}

	function isNode(propValue) {
	  switch (typeof propValue) {
	    case 'number':
	    case 'string':
	    case 'undefined':
	      return true;
	    case 'boolean':
	      return !propValue;
	    case 'object':
	      if (Array.isArray(propValue)) {
	        return propValue.every(isNode);
	      }
	      if (propValue === null || ReactElement.isValidElement(propValue)) {
	        return true;
	      }

	      var iteratorFn = getIteratorFn(propValue);
	      if (iteratorFn) {
	        var iterator = iteratorFn.call(propValue);
	        var step;
	        if (iteratorFn !== propValue.entries) {
	          while (!(step = iterator.next()).done) {
	            if (!isNode(step.value)) {
	              return false;
	            }
	          }
	        } else {
	          // Iterator will provide entry [k,v] tuples rather than values.
	          while (!(step = iterator.next()).done) {
	            var entry = step.value;
	            if (entry) {
	              if (!isNode(entry[1])) {
	                return false;
	              }
	            }
	          }
	        }
	      } else {
	        return false;
	      }

	      return true;
	    default:
	      return false;
	  }
	}

	// Equivalent of `typeof` but with special handling for array and regexp.
	function getPropType(propValue) {
	  var propType = typeof propValue;
	  if (Array.isArray(propValue)) {
	    return 'array';
	  }
	  if (propValue instanceof RegExp) {
	    // Old webkits (at least until Android 4.0) return 'function' rather than
	    // 'object' for typeof a RegExp. We'll normalize this here so that /bla/
	    // passes PropTypes.object.
	    return 'object';
	  }
	  return propType;
	}

	// This handles more types than `getPropType`. Only used for error messages.
	// See `createPrimitiveTypeChecker`.
	function getPreciseType(propValue) {
	  var propType = getPropType(propValue);
	  if (propType === 'object') {
	    if (propValue instanceof Date) {
	      return 'date';
	    } else if (propValue instanceof RegExp) {
	      return 'regexp';
	    }
	  }
	  return propType;
	}

	// Returns class name of the object, if any.
	function getClassName(propValue) {
	  if (!propValue.constructor || !propValue.constructor.name) {
	    return '<<anonymous>>';
	  }
	  return propValue.constructor.name;
	}

	module.exports = ReactPropTypes;

/***/ }),
/* 109 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getIteratorFn
	 * @typechecks static-only
	 */

	'use strict';

	/* global Symbol */
	var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
	var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.

	/**
	 * Returns the iterator method function contained on the iterable object.
	 *
	 * Be sure to invoke the function with the iterable as context:
	 *
	 *     var iteratorFn = getIteratorFn(myIterable);
	 *     if (iteratorFn) {
	 *       var iterator = iteratorFn.call(myIterable);
	 *       ...
	 *     }
	 *
	 * @param {?object} maybeIterable
	 * @return {?function}
	 */
	function getIteratorFn(maybeIterable) {
	  var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
	  if (typeof iteratorFn === 'function') {
	    return iteratorFn;
	  }
	}

	module.exports = getIteratorFn;

/***/ }),
/* 110 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMOption
	 */

	'use strict';

	var ReactChildren = __webpack_require__(111);
	var ReactDOMSelect = __webpack_require__(113);

	var assign = __webpack_require__(40);
	var warning = __webpack_require__(26);

	var valueContextKey = ReactDOMSelect.valueContextKey;

	/**
	 * Implements an <option> native component that warns when `selected` is set.
	 */
	var ReactDOMOption = {
	  mountWrapper: function (inst, props, context) {
	    // TODO (yungsters): Remove support for `selected` in <option>.
	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(props.selected == null, 'Use the `defaultValue` or `value` props on <select> instead of ' + 'setting `selected` on <option>.') : undefined;
	    }

	    // Look up whether this option is 'selected' via context
	    var selectValue = context[valueContextKey];

	    // If context key is null (e.g., no specified value or after initial mount)
	    // or missing (e.g., for <datalist>), we don't change props.selected
	    var selected = null;
	    if (selectValue != null) {
	      selected = false;
	      if (Array.isArray(selectValue)) {
	        // multiple
	        for (var i = 0; i < selectValue.length; i++) {
	          if ('' + selectValue[i] === '' + props.value) {
	            selected = true;
	            break;
	          }
	        }
	      } else {
	        selected = '' + selectValue === '' + props.value;
	      }
	    }

	    inst._wrapperState = { selected: selected };
	  },

	  getNativeProps: function (inst, props, context) {
	    var nativeProps = assign({ selected: undefined, children: undefined }, props);

	    // Read state only from initial mount because <select> updates value
	    // manually; we need the initial state only for server rendering
	    if (inst._wrapperState.selected != null) {
	      nativeProps.selected = inst._wrapperState.selected;
	    }

	    var content = '';

	    // Flatten children and warn if they aren't strings or numbers;
	    // invalid types are ignored.
	    ReactChildren.forEach(props.children, function (child) {
	      if (child == null) {
	        return;
	      }
	      if (typeof child === 'string' || typeof child === 'number') {
	        content += child;
	      } else {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'Only strings and numbers are supported as <option> children.') : undefined;
	      }
	    });

	    if (content) {
	      nativeProps.children = content;
	    }

	    return nativeProps;
	  }

	};

	module.exports = ReactDOMOption;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)))

/***/ }),
/* 111 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactChildren
	 */

	'use strict';

	var PooledClass = __webpack_require__(57);
	var ReactElement = __webpack_require__(43);

	var emptyFunction = __webpack_require__(16);
	var traverseAllChildren = __webpack_require__(112);

	var twoArgumentPooler = PooledClass.twoArgumentPooler;
	var fourArgumentPooler = PooledClass.fourArgumentPooler;

	var userProvidedKeyEscapeRegex = /\/(?!\/)/g;
	function escapeUserProvidedKey(text) {
	  return ('' + text).replace(userProvidedKeyEscapeRegex, '//');
	}

	/**
	 * PooledClass representing the bookkeeping associated with performing a child
	 * traversal. Allows avoiding binding callbacks.
	 *
	 * @constructor ForEachBookKeeping
	 * @param {!function} forEachFunction Function to perform traversal with.
	 * @param {?*} forEachContext Context to perform context with.
	 */
	function ForEachBookKeeping(forEachFunction, forEachContext) {
	  this.func = forEachFunction;
	  this.context = forEachContext;
	  this.count = 0;
	}
	ForEachBookKeeping.prototype.destructor = function () {
	  this.func = null;
	  this.context = null;
	  this.count = 0;
	};
	PooledClass.addPoolingTo(ForEachBookKeeping, twoArgumentPooler);

	function forEachSingleChild(bookKeeping, child, name) {
	  var func = bookKeeping.func;
	  var context = bookKeeping.context;

	  func.call(context, child, bookKeeping.count++);
	}

	/**
	 * Iterates through children that are typically specified as `props.children`.
	 *
	 * The provided forEachFunc(child, index) will be called for each
	 * leaf child.
	 *
	 * @param {?*} children Children tree container.
	 * @param {function(*, int)} forEachFunc
	 * @param {*} forEachContext Context for forEachContext.
	 */
	function forEachChildren(children, forEachFunc, forEachContext) {
	  if (children == null) {
	    return children;
	  }
	  var traverseContext = ForEachBookKeeping.getPooled(forEachFunc, forEachContext);
	  traverseAllChildren(children, forEachSingleChild, traverseContext);
	  ForEachBookKeeping.release(traverseContext);
	}

	/**
	 * PooledClass representing the bookkeeping associated with performing a child
	 * mapping. Allows avoiding binding callbacks.
	 *
	 * @constructor MapBookKeeping
	 * @param {!*} mapResult Object containing the ordered map of results.
	 * @param {!function} mapFunction Function to perform mapping with.
	 * @param {?*} mapContext Context to perform mapping with.
	 */
	function MapBookKeeping(mapResult, keyPrefix, mapFunction, mapContext) {
	  this.result = mapResult;
	  this.keyPrefix = keyPrefix;
	  this.func = mapFunction;
	  this.context = mapContext;
	  this.count = 0;
	}
	MapBookKeeping.prototype.destructor = function () {
	  this.result = null;
	  this.keyPrefix = null;
	  this.func = null;
	  this.context = null;
	  this.count = 0;
	};
	PooledClass.addPoolingTo(MapBookKeeping, fourArgumentPooler);

	function mapSingleChildIntoContext(bookKeeping, child, childKey) {
	  var result = bookKeeping.result;
	  var keyPrefix = bookKeeping.keyPrefix;
	  var func = bookKeeping.func;
	  var context = bookKeeping.context;

	  var mappedChild = func.call(context, child, bookKeeping.count++);
	  if (Array.isArray(mappedChild)) {
	    mapIntoWithKeyPrefixInternal(mappedChild, result, childKey, emptyFunction.thatReturnsArgument);
	  } else if (mappedChild != null) {
	    if (ReactElement.isValidElement(mappedChild)) {
	      mappedChild = ReactElement.cloneAndReplaceKey(mappedChild,
	      // Keep both the (mapped) and old keys if they differ, just as
	      // traverseAllChildren used to do for objects as children
	      keyPrefix + (mappedChild !== child ? escapeUserProvidedKey(mappedChild.key || '') + '/' : '') + childKey);
	    }
	    result.push(mappedChild);
	  }
	}

	function mapIntoWithKeyPrefixInternal(children, array, prefix, func, context) {
	  var escapedPrefix = '';
	  if (prefix != null) {
	    escapedPrefix = escapeUserProvidedKey(prefix) + '/';
	  }
	  var traverseContext = MapBookKeeping.getPooled(array, escapedPrefix, func, context);
	  traverseAllChildren(children, mapSingleChildIntoContext, traverseContext);
	  MapBookKeeping.release(traverseContext);
	}

	/**
	 * Maps children that are typically specified as `props.children`.
	 *
	 * The provided mapFunction(child, key, index) will be called for each
	 * leaf child.
	 *
	 * @param {?*} children Children tree container.
	 * @param {function(*, int)} func The map function.
	 * @param {*} context Context for mapFunction.
	 * @return {object} Object containing the ordered map of results.
	 */
	function mapChildren(children, func, context) {
	  if (children == null) {
	    return children;
	  }
	  var result = [];
	  mapIntoWithKeyPrefixInternal(children, result, null, func, context);
	  return result;
	}

	function forEachSingleChildDummy(traverseContext, child, name) {
	  return null;
	}

	/**
	 * Count the number of children that are typically specified as
	 * `props.children`.
	 *
	 * @param {?*} children Children tree container.
	 * @return {number} The number of children.
	 */
	function countChildren(children, context) {
	  return traverseAllChildren(children, forEachSingleChildDummy, null);
	}

	/**
	 * Flatten a children object (typically specified as `props.children`) and
	 * return an array with appropriately re-keyed children.
	 */
	function toArray(children) {
	  var result = [];
	  mapIntoWithKeyPrefixInternal(children, result, null, emptyFunction.thatReturnsArgument);
	  return result;
	}

	var ReactChildren = {
	  forEach: forEachChildren,
	  map: mapChildren,
	  mapIntoWithKeyPrefixInternal: mapIntoWithKeyPrefixInternal,
	  count: countChildren,
	  toArray: toArray
	};

	module.exports = ReactChildren;

/***/ }),
/* 112 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule traverseAllChildren
	 */

	'use strict';

	var ReactCurrentOwner = __webpack_require__(6);
	var ReactElement = __webpack_require__(43);
	var ReactInstanceHandles = __webpack_require__(46);

	var getIteratorFn = __webpack_require__(109);
	var invariant = __webpack_require__(14);
	var warning = __webpack_require__(26);

	var SEPARATOR = ReactInstanceHandles.SEPARATOR;
	var SUBSEPARATOR = ':';

	/**
	 * TODO: Test that a single child and an array with one item have the same key
	 * pattern.
	 */

	var userProvidedKeyEscaperLookup = {
	  '=': '=0',
	  '.': '=1',
	  ':': '=2'
	};

	var userProvidedKeyEscapeRegex = /[=.:]/g;

	var didWarnAboutMaps = false;

	function userProvidedKeyEscaper(match) {
	  return userProvidedKeyEscaperLookup[match];
	}

	/**
	 * Generate a key string that identifies a component within a set.
	 *
	 * @param {*} component A component that could contain a manual key.
	 * @param {number} index Index that is used if a manual key is not provided.
	 * @return {string}
	 */
	function getComponentKey(component, index) {
	  if (component && component.key != null) {
	    // Explicit key
	    return wrapUserProvidedKey(component.key);
	  }
	  // Implicit key determined by the index in the set
	  return index.toString(36);
	}

	/**
	 * Escape a component key so that it is safe to use in a reactid.
	 *
	 * @param {*} text Component key to be escaped.
	 * @return {string} An escaped string.
	 */
	function escapeUserProvidedKey(text) {
	  return ('' + text).replace(userProvidedKeyEscapeRegex, userProvidedKeyEscaper);
	}

	/**
	 * Wrap a `key` value explicitly provided by the user to distinguish it from
	 * implicitly-generated keys generated by a component's index in its parent.
	 *
	 * @param {string} key Value of a user-provided `key` attribute
	 * @return {string}
	 */
	function wrapUserProvidedKey(key) {
	  return '$' + escapeUserProvidedKey(key);
	}

	/**
	 * @param {?*} children Children tree container.
	 * @param {!string} nameSoFar Name of the key path so far.
	 * @param {!function} callback Callback to invoke with each child found.
	 * @param {?*} traverseContext Used to pass information throughout the traversal
	 * process.
	 * @return {!number} The number of children in this subtree.
	 */
	function traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {
	  var type = typeof children;

	  if (type === 'undefined' || type === 'boolean') {
	    // All of the above are perceived as null.
	    children = null;
	  }

	  if (children === null || type === 'string' || type === 'number' || ReactElement.isValidElement(children)) {
	    callback(traverseContext, children,
	    // If it's the only child, treat the name as if it was wrapped in an array
	    // so that it's consistent if the number of children grows.
	    nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);
	    return 1;
	  }

	  var child;
	  var nextName;
	  var subtreeCount = 0; // Count of children found in the current subtree.
	  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;

	  if (Array.isArray(children)) {
	    for (var i = 0; i < children.length; i++) {
	      child = children[i];
	      nextName = nextNamePrefix + getComponentKey(child, i);
	      subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
	    }
	  } else {
	    var iteratorFn = getIteratorFn(children);
	    if (iteratorFn) {
	      var iterator = iteratorFn.call(children);
	      var step;
	      if (iteratorFn !== children.entries) {
	        var ii = 0;
	        while (!(step = iterator.next()).done) {
	          child = step.value;
	          nextName = nextNamePrefix + getComponentKey(child, ii++);
	          subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
	        }
	      } else {
	        if (process.env.NODE_ENV !== 'production') {
	          process.env.NODE_ENV !== 'production' ? warning(didWarnAboutMaps, 'Using Maps as children is not yet fully supported. It is an ' + 'experimental feature that might be removed. Convert it to a ' + 'sequence / iterable of keyed ReactElements instead.') : undefined;
	          didWarnAboutMaps = true;
	        }
	        // Iterator will provide entry [k,v] tuples rather than values.
	        while (!(step = iterator.next()).done) {
	          var entry = step.value;
	          if (entry) {
	            child = entry[1];
	            nextName = nextNamePrefix + wrapUserProvidedKey(entry[0]) + SUBSEPARATOR + getComponentKey(child, 0);
	            subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
	          }
	        }
	      }
	    } else if (type === 'object') {
	      var addendum = '';
	      if (process.env.NODE_ENV !== 'production') {
	        addendum = ' If you meant to render a collection of children, use an array ' + 'instead or wrap the object using createFragment(object) from the ' + 'React add-ons.';
	        if (children._isReactElement) {
	          addendum = ' It looks like you\'re using an element created by a different ' + 'version of React. Make sure to use only one copy of React.';
	        }
	        if (ReactCurrentOwner.current) {
	          var name = ReactCurrentOwner.current.getName();
	          if (name) {
	            addendum += ' Check the render method of `' + name + '`.';
	          }
	        }
	      }
	      var childrenString = String(children);
	       true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Objects are not valid as a React child (found: %s).%s', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : invariant(false) : undefined;
	    }
	  }

	  return subtreeCount;
	}

	/**
	 * Traverses children that are typically specified as `props.children`, but
	 * might also be specified through attributes:
	 *
	 * - `traverseAllChildren(this.props.children, ...)`
	 * - `traverseAllChildren(this.props.leftPanelChildren, ...)`
	 *
	 * The `traverseContext` is an optional argument that is passed through the
	 * entire traversal. It can be used to store accumulations or anything else that
	 * the callback might find relevant.
	 *
	 * @param {?*} children Children tree object.
	 * @param {!function} callback To invoke upon traversing each child.
	 * @param {?*} traverseContext Context for traversal.
	 * @return {!number} The number of children in this subtree.
	 */
	function traverseAllChildren(children, callback, traverseContext) {
	  if (children == null) {
	    return 0;
	  }

	  return traverseAllChildrenImpl(children, '', callback, traverseContext);
	}

	module.exports = traverseAllChildren;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)))

/***/ }),
/* 113 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMSelect
	 */

	'use strict';

	var LinkedValueUtils = __webpack_require__(107);
	var ReactMount = __webpack_require__(29);
	var ReactUpdates = __webpack_require__(55);

	var assign = __webpack_require__(40);
	var warning = __webpack_require__(26);

	var valueContextKey = '__ReactDOMSelect_value$' + Math.random().toString(36).slice(2);

	function updateOptionsIfPendingUpdateAndMounted() {
	  if (this._rootNodeID && this._wrapperState.pendingUpdate) {
	    this._wrapperState.pendingUpdate = false;

	    var props = this._currentElement.props;
	    var value = LinkedValueUtils.getValue(props);

	    if (value != null) {
	      updateOptions(this, Boolean(props.multiple), value);
	    }
	  }
	}

	function getDeclarationErrorAddendum(owner) {
	  if (owner) {
	    var name = owner.getName();
	    if (name) {
	      return ' Check the render method of `' + name + '`.';
	    }
	  }
	  return '';
	}

	var valuePropNames = ['value', 'defaultValue'];

	/**
	 * Validation function for `value` and `defaultValue`.
	 * @private
	 */
	function checkSelectPropTypes(inst, props) {
	  var owner = inst._currentElement._owner;
	  LinkedValueUtils.checkPropTypes('select', props, owner);

	  for (var i = 0; i < valuePropNames.length; i++) {
	    var propName = valuePropNames[i];
	    if (props[propName] == null) {
	      continue;
	    }
	    if (props.multiple) {
	      process.env.NODE_ENV !== 'production' ? warning(Array.isArray(props[propName]), 'The `%s` prop supplied to <select> must be an array if ' + '`multiple` is true.%s', propName, getDeclarationErrorAddendum(owner)) : undefined;
	    } else {
	      process.env.NODE_ENV !== 'production' ? warning(!Array.isArray(props[propName]), 'The `%s` prop supplied to <select> must be a scalar ' + 'value if `multiple` is false.%s', propName, getDeclarationErrorAddendum(owner)) : undefined;
	    }
	  }
	}

	/**
	 * @param {ReactDOMComponent} inst
	 * @param {boolean} multiple
	 * @param {*} propValue A stringable (with `multiple`, a list of stringables).
	 * @private
	 */
	function updateOptions(inst, multiple, propValue) {
	  var selectedValue, i;
	  var options = ReactMount.getNode(inst._rootNodeID).options;

	  if (multiple) {
	    selectedValue = {};
	    for (i = 0; i < propValue.length; i++) {
	      selectedValue['' + propValue[i]] = true;
	    }
	    for (i = 0; i < options.length; i++) {
	      var selected = selectedValue.hasOwnProperty(options[i].value);
	      if (options[i].selected !== selected) {
	        options[i].selected = selected;
	      }
	    }
	  } else {
	    // Do not set `select.value` as exact behavior isn't consistent across all
	    // browsers for all cases.
	    selectedValue = '' + propValue;
	    for (i = 0; i < options.length; i++) {
	      if (options[i].value === selectedValue) {
	        options[i].selected = true;
	        return;
	      }
	    }
	    if (options.length) {
	      options[0].selected = true;
	    }
	  }
	}

	/**
	 * Implements a <select> native component that allows optionally setting the
	 * props `value` and `defaultValue`. If `multiple` is false, the prop must be a
	 * stringable. If `multiple` is true, the prop must be an array of stringables.
	 *
	 * If `value` is not supplied (or null/undefined), user actions that change the
	 * selected option will trigger updates to the rendered options.
	 *
	 * If it is supplied (and not null/undefined), the rendered options will not
	 * update in response to user actions. Instead, the `value` prop must change in
	 * order for the rendered options to update.
	 *
	 * If `defaultValue` is provided, any options with the supplied values will be
	 * selected.
	 */
	var ReactDOMSelect = {
	  valueContextKey: valueContextKey,

	  getNativeProps: function (inst, props, context) {
	    return assign({}, props, {
	      onChange: inst._wrapperState.onChange,
	      value: undefined
	    });
	  },

	  mountWrapper: function (inst, props) {
	    if (process.env.NODE_ENV !== 'production') {
	      checkSelectPropTypes(inst, props);
	    }

	    var value = LinkedValueUtils.getValue(props);
	    inst._wrapperState = {
	      pendingUpdate: false,
	      initialValue: value != null ? value : props.defaultValue,
	      onChange: _handleChange.bind(inst),
	      wasMultiple: Boolean(props.multiple)
	    };
	  },

	  processChildContext: function (inst, props, context) {
	    // Pass down initial value so initial generated markup has correct
	    // `selected` attributes
	    var childContext = assign({}, context);
	    childContext[valueContextKey] = inst._wrapperState.initialValue;
	    return childContext;
	  },

	  postUpdateWrapper: function (inst) {
	    var props = inst._currentElement.props;

	    // After the initial mount, we control selected-ness manually so don't pass
	    // the context value down
	    inst._wrapperState.initialValue = undefined;

	    var wasMultiple = inst._wrapperState.wasMultiple;
	    inst._wrapperState.wasMultiple = Boolean(props.multiple);

	    var value = LinkedValueUtils.getValue(props);
	    if (value != null) {
	      inst._wrapperState.pendingUpdate = false;
	      updateOptions(inst, Boolean(props.multiple), value);
	    } else if (wasMultiple !== Boolean(props.multiple)) {
	      // For simplicity, reapply `defaultValue` if `multiple` is toggled.
	      if (props.defaultValue != null) {
	        updateOptions(inst, Boolean(props.multiple), props.defaultValue);
	      } else {
	        // Revert the select back to its default unselected state.
	        updateOptions(inst, Boolean(props.multiple), props.multiple ? [] : '');
	      }
	    }
	  }
	};

	function _handleChange(event) {
	  var props = this._currentElement.props;
	  var returnValue = LinkedValueUtils.executeOnChange(props, event);

	  this._wrapperState.pendingUpdate = true;
	  ReactUpdates.asap(updateOptionsIfPendingUpdateAndMounted, this);
	  return returnValue;
	}

	module.exports = ReactDOMSelect;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)))

/***/ }),
/* 114 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMTextarea
	 */

	'use strict';

	var LinkedValueUtils = __webpack_require__(107);
	var ReactDOMIDOperations = __webpack_require__(28);
	var ReactUpdates = __webpack_require__(55);

	var assign = __webpack_require__(40);
	var invariant = __webpack_require__(14);
	var warning = __webpack_require__(26);

	function forceUpdateIfMounted() {
	  if (this._rootNodeID) {
	    // DOM component is still mounted; update
	    ReactDOMTextarea.updateWrapper(this);
	  }
	}

	/**
	 * Implements a <textarea> native component that allows setting `value`, and
	 * `defaultValue`. This differs from the traditional DOM API because value is
	 * usually set as PCDATA children.
	 *
	 * If `value` is not supplied (or null/undefined), user actions that affect the
	 * value will trigger updates to the element.
	 *
	 * If `value` is supplied (and not null/undefined), the rendered element will
	 * not trigger updates to the element. Instead, the `value` prop must change in
	 * order for the rendered element to be updated.
	 *
	 * The rendered element will be initialized with an empty value, the prop
	 * `defaultValue` if specified, or the children content (deprecated).
	 */
	var ReactDOMTextarea = {
	  getNativeProps: function (inst, props, context) {
	    !(props.dangerouslySetInnerHTML == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, '`dangerouslySetInnerHTML` does not make sense on <textarea>.') : invariant(false) : undefined;

	    // Always set children to the same thing. In IE9, the selection range will
	    // get reset if `textContent` is mutated.
	    var nativeProps = assign({}, props, {
	      defaultValue: undefined,
	      value: undefined,
	      children: inst._wrapperState.initialValue,
	      onChange: inst._wrapperState.onChange
	    });

	    return nativeProps;
	  },

	  mountWrapper: function (inst, props) {
	    if (process.env.NODE_ENV !== 'production') {
	      LinkedValueUtils.checkPropTypes('textarea', props, inst._currentElement._owner);
	    }

	    var defaultValue = props.defaultValue;
	    // TODO (yungsters): Remove support for children content in <textarea>.
	    var children = props.children;
	    if (children != null) {
	      if (process.env.NODE_ENV !== 'production') {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'Use the `defaultValue` or `value` props instead of setting ' + 'children on <textarea>.') : undefined;
	      }
	      !(defaultValue == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'If you supply `defaultValue` on a <textarea>, do not pass children.') : invariant(false) : undefined;
	      if (Array.isArray(children)) {
	        !(children.length <= 1) ? process.env.NODE_ENV !== 'production' ? invariant(false, '<textarea> can only have at most one child.') : invariant(false) : undefined;
	        children = children[0];
	      }

	      defaultValue = '' + children;
	    }
	    if (defaultValue == null) {
	      defaultValue = '';
	    }
	    var value = LinkedValueUtils.getValue(props);

	    inst._wrapperState = {
	      // We save the initial value so that `ReactDOMComponent` doesn't update
	      // `textContent` (unnecessary since we update value).
	      // The initial value can be a boolean or object so that's why it's
	      // forced to be a string.
	      initialValue: '' + (value != null ? value : defaultValue),
	      onChange: _handleChange.bind(inst)
	    };
	  },

	  updateWrapper: function (inst) {
	    var props = inst._currentElement.props;
	    var value = LinkedValueUtils.getValue(props);
	    if (value != null) {
	      // Cast `value` to a string to ensure the value is set correctly. While
	      // browsers typically do this as necessary, jsdom doesn't.
	      ReactDOMIDOperations.updatePropertyByID(inst._rootNodeID, 'value', '' + value);
	    }
	  }
	};

	function _handleChange(event) {
	  var props = this._currentElement.props;
	  var returnValue = LinkedValueUtils.executeOnChange(props, event);
	  ReactUpdates.asap(forceUpdateIfMounted, this);
	  return returnValue;
	}

	module.exports = ReactDOMTextarea;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)))

/***/ }),
/* 115 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactMultiChild
	 * @typechecks static-only
	 */

	'use strict';

	var ReactComponentEnvironment = __webpack_require__(65);
	var ReactMultiChildUpdateTypes = __webpack_require__(17);

	var ReactCurrentOwner = __webpack_require__(6);
	var ReactReconciler = __webpack_require__(51);
	var ReactChildReconciler = __webpack_require__(116);

	var flattenChildren = __webpack_require__(117);

	/**
	 * Updating children of a component may trigger recursive updates. The depth is
	 * used to batch recursive updates to render markup more efficiently.
	 *
	 * @type {number}
	 * @private
	 */
	var updateDepth = 0;

	/**
	 * Queue of update configuration objects.
	 *
	 * Each object has a `type` property that is in `ReactMultiChildUpdateTypes`.
	 *
	 * @type {array<object>}
	 * @private
	 */
	var updateQueue = [];

	/**
	 * Queue of markup to be rendered.
	 *
	 * @type {array<string>}
	 * @private
	 */
	var markupQueue = [];

	/**
	 * Enqueues markup to be rendered and inserted at a supplied index.
	 *
	 * @param {string} parentID ID of the parent component.
	 * @param {string} markup Markup that renders into an element.
	 * @param {number} toIndex Destination index.
	 * @private
	 */
	function enqueueInsertMarkup(parentID, markup, toIndex) {
	  // NOTE: Null values reduce hidden classes.
	  updateQueue.push({
	    parentID: parentID,
	    parentNode: null,
	    type: ReactMultiChildUpdateTypes.INSERT_MARKUP,
	    markupIndex: markupQueue.push(markup) - 1,
	    content: null,
	    fromIndex: null,
	    toIndex: toIndex
	  });
	}

	/**
	 * Enqueues moving an existing element to another index.
	 *
	 * @param {string} parentID ID of the parent component.
	 * @param {number} fromIndex Source index of the existing element.
	 * @param {number} toIndex Destination index of the element.
	 * @private
	 */
	function enqueueMove(parentID, fromIndex, toIndex) {
	  // NOTE: Null values reduce hidden classes.
	  updateQueue.push({
	    parentID: parentID,
	    parentNode: null,
	    type: ReactMultiChildUpdateTypes.MOVE_EXISTING,
	    markupIndex: null,
	    content: null,
	    fromIndex: fromIndex,
	    toIndex: toIndex
	  });
	}

	/**
	 * Enqueues removing an element at an index.
	 *
	 * @param {string} parentID ID of the parent component.
	 * @param {number} fromIndex Index of the element to remove.
	 * @private
	 */
	function enqueueRemove(parentID, fromIndex) {
	  // NOTE: Null values reduce hidden classes.
	  updateQueue.push({
	    parentID: parentID,
	    parentNode: null,
	    type: ReactMultiChildUpdateTypes.REMOVE_NODE,
	    markupIndex: null,
	    content: null,
	    fromIndex: fromIndex,
	    toIndex: null
	  });
	}

	/**
	 * Enqueues setting the markup of a node.
	 *
	 * @param {string} parentID ID of the parent component.
	 * @param {string} markup Markup that renders into an element.
	 * @private
	 */
	function enqueueSetMarkup(parentID, markup) {
	  // NOTE: Null values reduce hidden classes.
	  updateQueue.push({
	    parentID: parentID,
	    parentNode: null,
	    type: ReactMultiChildUpdateTypes.SET_MARKUP,
	    markupIndex: null,
	    content: markup,
	    fromIndex: null,
	    toIndex: null
	  });
	}

	/**
	 * Enqueues setting the text content.
	 *
	 * @param {string} parentID ID of the parent component.
	 * @param {string} textContent Text content to set.
	 * @private
	 */
	function enqueueTextContent(parentID, textContent) {
	  // NOTE: Null values reduce hidden classes.
	  updateQueue.push({
	    parentID: parentID,
	    parentNode: null,
	    type: ReactMultiChildUpdateTypes.TEXT_CONTENT,
	    markupIndex: null,
	    content: textContent,
	    fromIndex: null,
	    toIndex: null
	  });
	}

	/**
	 * Processes any enqueued updates.
	 *
	 * @private
	 */
	function processQueue() {
	  if (updateQueue.length) {
	    ReactComponentEnvironment.processChildrenUpdates(updateQueue, markupQueue);
	    clearQueue();
	  }
	}

	/**
	 * Clears any enqueued updates.
	 *
	 * @private
	 */
	function clearQueue() {
	  updateQueue.length = 0;
	  markupQueue.length = 0;
	}

	/**
	 * ReactMultiChild are capable of reconciling multiple children.
	 *
	 * @class ReactMultiChild
	 * @internal
	 */
	var ReactMultiChild = {

	  /**
	   * Provides common functionality for components that must reconcile multiple
	   * children. This is used by `ReactDOMComponent` to mount, update, and
	   * unmount child components.
	   *
	   * @lends {ReactMultiChild.prototype}
	   */
	  Mixin: {

	    _reconcilerInstantiateChildren: function (nestedChildren, transaction, context) {
	      if (process.env.NODE_ENV !== 'production') {
	        if (this._currentElement) {
	          try {
	            ReactCurrentOwner.current = this._currentElement._owner;
	            return ReactChildReconciler.instantiateChildren(nestedChildren, transaction, context);
	          } finally {
	            ReactCurrentOwner.current = null;
	          }
	        }
	      }
	      return ReactChildReconciler.instantiateChildren(nestedChildren, transaction, context);
	    },

	    _reconcilerUpdateChildren: function (prevChildren, nextNestedChildrenElements, transaction, context) {
	      var nextChildren;
	      if (process.env.NODE_ENV !== 'production') {
	        if (this._currentElement) {
	          try {
	            ReactCurrentOwner.current = this._currentElement._owner;
	            nextChildren = flattenChildren(nextNestedChildrenElements);
	          } finally {
	            ReactCurrentOwner.current = null;
	          }
	          return ReactChildReconciler.updateChildren(prevChildren, nextChildren, transaction, context);
	        }
	      }
	      nextChildren = flattenChildren(nextNestedChildrenElements);
	      return ReactChildReconciler.updateChildren(prevChildren, nextChildren, transaction, context);
	    },

	    /**
	     * Generates a "mount image" for each of the supplied children. In the case
	     * of `ReactDOMComponent`, a mount image is a string of markup.
	     *
	     * @param {?object} nestedChildren Nested child maps.
	     * @return {array} An array of mounted representations.
	     * @internal
	     */
	    mountChildren: function (nestedChildren, transaction, context) {
	      var children = this._reconcilerInstantiateChildren(nestedChildren, transaction, context);
	      this._renderedChildren = children;
	      var mountImages = [];
	      var index = 0;
	      for (var name in children) {
	        if (children.hasOwnProperty(name)) {
	          var child = children[name];
	          // Inlined for performance, see `ReactInstanceHandles.createReactID`.
	          var rootID = this._rootNodeID + name;
	          var mountImage = ReactReconciler.mountComponent(child, rootID, transaction, context);
	          child._mountIndex = index++;
	          mountImages.push(mountImage);
	        }
	      }
	      return mountImages;
	    },

	    /**
	     * Replaces any rendered children with a text content string.
	     *
	     * @param {string} nextContent String of content.
	     * @internal
	     */
	    updateTextContent: function (nextContent) {
	      updateDepth++;
	      var errorThrown = true;
	      try {
	        var prevChildren = this._renderedChildren;
	        // Remove any rendered children.
	        ReactChildReconciler.unmountChildren(prevChildren);
	        // TODO: The setTextContent operation should be enough
	        for (var name in prevChildren) {
	          if (prevChildren.hasOwnProperty(name)) {
	            this._unmountChild(prevChildren[name]);
	          }
	        }
	        // Set new text content.
	        this.setTextContent(nextContent);
	        errorThrown = false;
	      } finally {
	        updateDepth--;
	        if (!updateDepth) {
	          if (errorThrown) {
	            clearQueue();
	          } else {
	            processQueue();
	          }
	        }
	      }
	    },

	    /**
	     * Replaces any rendered children with a markup string.
	     *
	     * @param {string} nextMarkup String of markup.
	     * @internal
	     */
	    updateMarkup: function (nextMarkup) {
	      updateDepth++;
	      var errorThrown = true;
	      try {
	        var prevChildren = this._renderedChildren;
	        // Remove any rendered children.
	        ReactChildReconciler.unmountChildren(prevChildren);
	        for (var name in prevChildren) {
	          if (prevChildren.hasOwnProperty(name)) {
	            this._unmountChildByName(prevChildren[name], name);
	          }
	        }
	        this.setMarkup(nextMarkup);
	        errorThrown = false;
	      } finally {
	        updateDepth--;
	        if (!updateDepth) {
	          if (errorThrown) {
	            clearQueue();
	          } else {
	            processQueue();
	          }
	        }
	      }
	    },

	    /**
	     * Updates the rendered children with new children.
	     *
	     * @param {?object} nextNestedChildrenElements Nested child element maps.
	     * @param {ReactReconcileTransaction} transaction
	     * @internal
	     */
	    updateChildren: function (nextNestedChildrenElements, transaction, context) {
	      updateDepth++;
	      var errorThrown = true;
	      try {
	        this._updateChildren(nextNestedChildrenElements, transaction, context);
	        errorThrown = false;
	      } finally {
	        updateDepth--;
	        if (!updateDepth) {
	          if (errorThrown) {
	            clearQueue();
	          } else {
	            processQueue();
	          }
	        }
	      }
	    },

	    /**
	     * Improve performance by isolating this hot code path from the try/catch
	     * block in `updateChildren`.
	     *
	     * @param {?object} nextNestedChildrenElements Nested child element maps.
	     * @param {ReactReconcileTransaction} transaction
	     * @final
	     * @protected
	     */
	    _updateChildren: function (nextNestedChildrenElements, transaction, context) {
	      var prevChildren = this._renderedChildren;
	      var nextChildren = this._reconcilerUpdateChildren(prevChildren, nextNestedChildrenElements, transaction, context);
	      this._renderedChildren = nextChildren;
	      if (!nextChildren && !prevChildren) {
	        return;
	      }
	      var name;
	      // `nextIndex` will increment for each child in `nextChildren`, but
	      // `lastIndex` will be the last index visited in `prevChildren`.
	      var lastIndex = 0;
	      var nextIndex = 0;
	      for (name in nextChildren) {
	        if (!nextChildren.hasOwnProperty(name)) {
	          continue;
	        }
	        var prevChild = prevChildren && prevChildren[name];
	        var nextChild = nextChildren[name];
	        if (prevChild === nextChild) {
	          this.moveChild(prevChild, nextIndex, lastIndex);
	          lastIndex = Math.max(prevChild._mountIndex, lastIndex);
	          prevChild._mountIndex = nextIndex;
	        } else {
	          if (prevChild) {
	            // Update `lastIndex` before `_mountIndex` gets unset by unmounting.
	            lastIndex = Math.max(prevChild._mountIndex, lastIndex);
	            this._unmountChild(prevChild);
	          }
	          // The child must be instantiated before it's mounted.
	          this._mountChildByNameAtIndex(nextChild, name, nextIndex, transaction, context);
	        }
	        nextIndex++;
	      }
	      // Remove children that are no longer present.
	      for (name in prevChildren) {
	        if (prevChildren.hasOwnProperty(name) && !(nextChildren && nextChildren.hasOwnProperty(name))) {
	          this._unmountChild(prevChildren[name]);
	        }
	      }
	    },

	    /**
	     * Unmounts all rendered children. This should be used to clean up children
	     * when this component is unmounted.
	     *
	     * @internal
	     */
	    unmountChildren: function () {
	      var renderedChildren = this._renderedChildren;
	      ReactChildReconciler.unmountChildren(renderedChildren);
	      this._renderedChildren = null;
	    },

	    /**
	     * Moves a child component to the supplied index.
	     *
	     * @param {ReactComponent} child Component to move.
	     * @param {number} toIndex Destination index of the element.
	     * @param {number} lastIndex Last index visited of the siblings of `child`.
	     * @protected
	     */
	    moveChild: function (child, toIndex, lastIndex) {
	      // If the index of `child` is less than `lastIndex`, then it needs to
	      // be moved. Otherwise, we do not need to move it because a child will be
	      // inserted or moved before `child`.
	      if (child._mountIndex < lastIndex) {
	        enqueueMove(this._rootNodeID, child._mountIndex, toIndex);
	      }
	    },

	    /**
	     * Creates a child component.
	     *
	     * @param {ReactComponent} child Component to create.
	     * @param {string} mountImage Markup to insert.
	     * @protected
	     */
	    createChild: function (child, mountImage) {
	      enqueueInsertMarkup(this._rootNodeID, mountImage, child._mountIndex);
	    },

	    /**
	     * Removes a child component.
	     *
	     * @param {ReactComponent} child Child to remove.
	     * @protected
	     */
	    removeChild: function (child) {
	      enqueueRemove(this._rootNodeID, child._mountIndex);
	    },

	    /**
	     * Sets this text content string.
	     *
	     * @param {string} textContent Text content to set.
	     * @protected
	     */
	    setTextContent: function (textContent) {
	      enqueueTextContent(this._rootNodeID, textContent);
	    },

	    /**
	     * Sets this markup string.
	     *
	     * @param {string} markup Markup to set.
	     * @protected
	     */
	    setMarkup: function (markup) {
	      enqueueSetMarkup(this._rootNodeID, markup);
	    },

	    /**
	     * Mounts a child with the supplied name.
	     *
	     * NOTE: This is part of `updateChildren` and is here for readability.
	     *
	     * @param {ReactComponent} child Component to mount.
	     * @param {string} name Name of the child.
	     * @param {number} index Index at which to insert the child.
	     * @param {ReactReconcileTransaction} transaction
	     * @private
	     */
	    _mountChildByNameAtIndex: function (child, name, index, transaction, context) {
	      // Inlined for performance, see `ReactInstanceHandles.createReactID`.
	      var rootID = this._rootNodeID + name;
	      var mountImage = ReactReconciler.mountComponent(child, rootID, transaction, context);
	      child._mountIndex = index;
	      this.createChild(child, mountImage);
	    },

	    /**
	     * Unmounts a rendered child.
	     *
	     * NOTE: This is part of `updateChildren` and is here for readability.
	     *
	     * @param {ReactComponent} child Component to unmount.
	     * @private
	     */
	    _unmountChild: function (child) {
	      this.removeChild(child);
	      child._mountIndex = null;
	    }

	  }

	};

	module.exports = ReactMultiChild;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)))

/***/ }),
/* 116 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactChildReconciler
	 * @typechecks static-only
	 */

	'use strict';

	var ReactReconciler = __webpack_require__(51);

	var instantiateReactComponent = __webpack_require__(63);
	var shouldUpdateReactComponent = __webpack_require__(68);
	var traverseAllChildren = __webpack_require__(112);
	var warning = __webpack_require__(26);

	function instantiateChild(childInstances, child, name) {
	  // We found a component instance.
	  var keyUnique = childInstances[name] === undefined;
	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(keyUnique, 'flattenChildren(...): Encountered two children with the same key, ' + '`%s`. Child keys must be unique; when two children share a key, only ' + 'the first child will be used.', name) : undefined;
	  }
	  if (child != null && keyUnique) {
	    childInstances[name] = instantiateReactComponent(child, null);
	  }
	}

	/**
	 * ReactChildReconciler provides helpers for initializing or updating a set of
	 * children. Its output is suitable for passing it onto ReactMultiChild which
	 * does diffed reordering and insertion.
	 */
	var ReactChildReconciler = {
	  /**
	   * Generates a "mount image" for each of the supplied children. In the case
	   * of `ReactDOMComponent`, a mount image is a string of markup.
	   *
	   * @param {?object} nestedChildNodes Nested child maps.
	   * @return {?object} A set of child instances.
	   * @internal
	   */
	  instantiateChildren: function (nestedChildNodes, transaction, context) {
	    if (nestedChildNodes == null) {
	      return null;
	    }
	    var childInstances = {};
	    traverseAllChildren(nestedChildNodes, instantiateChild, childInstances);
	    return childInstances;
	  },

	  /**
	   * Updates the rendered children and returns a new set of children.
	   *
	   * @param {?object} prevChildren Previously initialized set of children.
	   * @param {?object} nextChildren Flat child element maps.
	   * @param {ReactReconcileTransaction} transaction
	   * @param {object} context
	   * @return {?object} A new set of child instances.
	   * @internal
	   */
	  updateChildren: function (prevChildren, nextChildren, transaction, context) {
	    // We currently don't have a way to track moves here but if we use iterators
	    // instead of for..in we can zip the iterators and check if an item has
	    // moved.
	    // TODO: If nothing has changed, return the prevChildren object so that we
	    // can quickly bailout if nothing has changed.
	    if (!nextChildren && !prevChildren) {
	      return null;
	    }
	    var name;
	    for (name in nextChildren) {
	      if (!nextChildren.hasOwnProperty(name)) {
	        continue;
	      }
	      var prevChild = prevChildren && prevChildren[name];
	      var prevElement = prevChild && prevChild._currentElement;
	      var nextElement = nextChildren[name];
	      if (prevChild != null && shouldUpdateReactComponent(prevElement, nextElement)) {
	        ReactReconciler.receiveComponent(prevChild, nextElement, transaction, context);
	        nextChildren[name] = prevChild;
	      } else {
	        if (prevChild) {
	          ReactReconciler.unmountComponent(prevChild, name);
	        }
	        // The child must be instantiated before it's mounted.
	        var nextChildInstance = instantiateReactComponent(nextElement, null);
	        nextChildren[name] = nextChildInstance;
	      }
	    }
	    // Unmount children that are no longer present.
	    for (name in prevChildren) {
	      if (prevChildren.hasOwnProperty(name) && !(nextChildren && nextChildren.hasOwnProperty(name))) {
	        ReactReconciler.unmountComponent(prevChildren[name]);
	      }
	    }
	    return nextChildren;
	  },

	  /**
	   * Unmounts all rendered children. This should be used to clean up children
	   * when this component is unmounted.
	   *
	   * @param {?object} renderedChildren Previously initialized set of children.
	   * @internal
	   */
	  unmountChildren: function (renderedChildren) {
	    for (var name in renderedChildren) {
	      if (renderedChildren.hasOwnProperty(name)) {
	        var renderedChild = renderedChildren[name];
	        ReactReconciler.unmountComponent(renderedChild);
	      }
	    }
	  }

	};

	module.exports = ReactChildReconciler;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)))

/***/ }),
/* 117 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule flattenChildren
	 */

	'use strict';

	var traverseAllChildren = __webpack_require__(112);
	var warning = __webpack_require__(26);

	/**
	 * @param {function} traverseContext Context passed through traversal.
	 * @param {?ReactComponent} child React child component.
	 * @param {!string} name String name of key path to child.
	 */
	function flattenSingleChildIntoContext(traverseContext, child, name) {
	  // We found a component instance.
	  var result = traverseContext;
	  var keyUnique = result[name] === undefined;
	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(keyUnique, 'flattenChildren(...): Encountered two children with the same key, ' + '`%s`. Child keys must be unique; when two children share a key, only ' + 'the first child will be used.', name) : undefined;
	  }
	  if (keyUnique && child != null) {
	    result[name] = child;
	  }
	}

	/**
	 * Flattens children that are typically specified as `props.children`. Any null
	 * children will not be included in the resulting object.
	 * @return {!object} flattened children keyed by name.
	 */
	function flattenChildren(children) {
	  if (children == null) {
	    return children;
	  }
	  var result = {};
	  traverseAllChildren(children, flattenSingleChildIntoContext, result);
	  return result;
	}

	module.exports = flattenChildren;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)))

/***/ }),
/* 118 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule shallowEqual
	 * @typechecks
	 * 
	 */

	'use strict';

	var hasOwnProperty = Object.prototype.hasOwnProperty;

	/**
	 * Performs equality by iterating through keys on an object and returning false
	 * when any key has values which are not strictly equal between the arguments.
	 * Returns true when the values of all keys are strictly equal.
	 */
	function shallowEqual(objA, objB) {
	  if (objA === objB) {
	    return true;
	  }

	  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {
	    return false;
	  }

	  var keysA = Object.keys(objA);
	  var keysB = Object.keys(objB);

	  if (keysA.length !== keysB.length) {
	    return false;
	  }

	  // Test for A's keys different from B.
	  var bHasOwnProperty = hasOwnProperty.bind(objB);
	  for (var i = 0; i < keysA.length; i++) {
	    if (!bHasOwnProperty(keysA[i]) || objA[keysA[i]] !== objB[keysA[i]]) {
	      return false;
	    }
	  }

	  return true;
	}

	module.exports = shallowEqual;

/***/ }),
/* 119 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactEventListener
	 * @typechecks static-only
	 */

	'use strict';

	var EventListener = __webpack_require__(120);
	var ExecutionEnvironment = __webpack_require__(10);
	var PooledClass = __webpack_require__(57);
	var ReactInstanceHandles = __webpack_require__(46);
	var ReactMount = __webpack_require__(29);
	var ReactUpdates = __webpack_require__(55);

	var assign = __webpack_require__(40);
	var getEventTarget = __webpack_require__(82);
	var getUnboundedScrollPosition = __webpack_require__(121);

	var DOCUMENT_FRAGMENT_NODE_TYPE = 11;

	/**
	 * Finds the parent React component of `node`.
	 *
	 * @param {*} node
	 * @return {?DOMEventTarget} Parent container, or `null` if the specified node
	 *                           is not nested.
	 */
	function findParent(node) {
	  // TODO: It may be a good idea to cache this to prevent unnecessary DOM
	  // traversal, but caching is difficult to do correctly without using a
	  // mutation observer to listen for all DOM changes.
	  var nodeID = ReactMount.getID(node);
	  var rootID = ReactInstanceHandles.getReactRootIDFromNodeID(nodeID);
	  var container = ReactMount.findReactContainerForID(rootID);
	  var parent = ReactMount.getFirstReactDOM(container);
	  return parent;
	}

	// Used to store ancestor hierarchy in top level callback
	function TopLevelCallbackBookKeeping(topLevelType, nativeEvent) {
	  this.topLevelType = topLevelType;
	  this.nativeEvent = nativeEvent;
	  this.ancestors = [];
	}
	assign(TopLevelCallbackBookKeeping.prototype, {
	  destructor: function () {
	    this.topLevelType = null;
	    this.nativeEvent = null;
	    this.ancestors.length = 0;
	  }
	});
	PooledClass.addPoolingTo(TopLevelCallbackBookKeeping, PooledClass.twoArgumentPooler);

	function handleTopLevelImpl(bookKeeping) {
	  // TODO: Re-enable event.path handling
	  //
	  // if (bookKeeping.nativeEvent.path && bookKeeping.nativeEvent.path.length > 1) {
	  //   // New browsers have a path attribute on native events
	  //   handleTopLevelWithPath(bookKeeping);
	  // } else {
	  //   // Legacy browsers don't have a path attribute on native events
	  //   handleTopLevelWithoutPath(bookKeeping);
	  // }

	  void handleTopLevelWithPath; // temporarily unused
	  handleTopLevelWithoutPath(bookKeeping);
	}

	// Legacy browsers don't have a path attribute on native events
	function handleTopLevelWithoutPath(bookKeeping) {
	  var topLevelTarget = ReactMount.getFirstReactDOM(getEventTarget(bookKeeping.nativeEvent)) || window;

	  // Loop through the hierarchy, in case there's any nested components.
	  // It's important that we build the array of ancestors before calling any
	  // event handlers, because event handlers can modify the DOM, leading to
	  // inconsistencies with ReactMount's node cache. See #1105.
	  var ancestor = topLevelTarget;
	  while (ancestor) {
	    bookKeeping.ancestors.push(ancestor);
	    ancestor = findParent(ancestor);
	  }

	  for (var i = 0; i < bookKeeping.ancestors.length; i++) {
	    topLevelTarget = bookKeeping.ancestors[i];
	    var topLevelTargetID = ReactMount.getID(topLevelTarget) || '';
	    ReactEventListener._handleTopLevel(bookKeeping.topLevelType, topLevelTarget, topLevelTargetID, bookKeeping.nativeEvent, getEventTarget(bookKeeping.nativeEvent));
	  }
	}

	// New browsers have a path attribute on native events
	function handleTopLevelWithPath(bookKeeping) {
	  var path = bookKeeping.nativeEvent.path;
	  var currentNativeTarget = path[0];
	  var eventsFired = 0;
	  for (var i = 0; i < path.length; i++) {
	    var currentPathElement = path[i];
	    if (currentPathElement.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE) {
	      currentNativeTarget = path[i + 1];
	    }
	    // TODO: slow
	    var reactParent = ReactMount.getFirstReactDOM(currentPathElement);
	    if (reactParent === currentPathElement) {
	      var currentPathElementID = ReactMount.getID(currentPathElement);
	      var newRootID = ReactInstanceHandles.getReactRootIDFromNodeID(currentPathElementID);
	      bookKeeping.ancestors.push(currentPathElement);

	      var topLevelTargetID = ReactMount.getID(currentPathElement) || '';
	      eventsFired++;
	      ReactEventListener._handleTopLevel(bookKeeping.topLevelType, currentPathElement, topLevelTargetID, bookKeeping.nativeEvent, currentNativeTarget);

	      // Jump to the root of this React render tree
	      while (currentPathElementID !== newRootID) {
	        i++;
	        currentPathElement = path[i];
	        currentPathElementID = ReactMount.getID(currentPathElement);
	      }
	    }
	  }
	  if (eventsFired === 0) {
	    ReactEventListener._handleTopLevel(bookKeeping.topLevelType, window, '', bookKeeping.nativeEvent, getEventTarget(bookKeeping.nativeEvent));
	  }
	}

	function scrollValueMonitor(cb) {
	  var scrollPosition = getUnboundedScrollPosition(window);
	  cb(scrollPosition);
	}

	var ReactEventListener = {
	  _enabled: true,
	  _handleTopLevel: null,

	  WINDOW_HANDLE: ExecutionEnvironment.canUseDOM ? window : null,

	  setHandleTopLevel: function (handleTopLevel) {
	    ReactEventListener._handleTopLevel = handleTopLevel;
	  },

	  setEnabled: function (enabled) {
	    ReactEventListener._enabled = !!enabled;
	  },

	  isEnabled: function () {
	    return ReactEventListener._enabled;
	  },

	  /**
	   * Traps top-level events by using event bubbling.
	   *
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {string} handlerBaseName Event name (e.g. "click").
	   * @param {object} handle Element on which to attach listener.
	   * @return {?object} An object with a remove function which will forcefully
	   *                  remove the listener.
	   * @internal
	   */
	  trapBubbledEvent: function (topLevelType, handlerBaseName, handle) {
	    var element = handle;
	    if (!element) {
	      return null;
	    }
	    return EventListener.listen(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));
	  },

	  /**
	   * Traps a top-level event by using event capturing.
	   *
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {string} handlerBaseName Event name (e.g. "click").
	   * @param {object} handle Element on which to attach listener.
	   * @return {?object} An object with a remove function which will forcefully
	   *                  remove the listener.
	   * @internal
	   */
	  trapCapturedEvent: function (topLevelType, handlerBaseName, handle) {
	    var element = handle;
	    if (!element) {
	      return null;
	    }
	    return EventListener.capture(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));
	  },

	  monitorScrollValue: function (refresh) {
	    var callback = scrollValueMonitor.bind(null, refresh);
	    EventListener.listen(window, 'scroll', callback);
	  },

	  dispatchEvent: function (topLevelType, nativeEvent) {
	    if (!ReactEventListener._enabled) {
	      return;
	    }

	    var bookKeeping = TopLevelCallbackBookKeeping.getPooled(topLevelType, nativeEvent);
	    try {
	      // Event queue being processed in the same cycle allows
	      // `preventDefault`.
	      ReactUpdates.batchedUpdates(handleTopLevelImpl, bookKeeping);
	    } finally {
	      TopLevelCallbackBookKeeping.release(bookKeeping);
	    }
	  }
	};

	module.exports = ReactEventListener;

/***/ }),
/* 120 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @providesModule EventListener
	 * @typechecks
	 */

	'use strict';

	var emptyFunction = __webpack_require__(16);

	/**
	 * Upstream version of event listener. Does not take into account specific
	 * nature of platform.
	 */
	var EventListener = {
	  /**
	   * Listen to DOM events during the bubble phase.
	   *
	   * @param {DOMEventTarget} target DOM element to register listener on.
	   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.
	   * @param {function} callback Callback function.
	   * @return {object} Object with a `remove` method.
	   */
	  listen: function (target, eventType, callback) {
	    if (target.addEventListener) {
	      target.addEventListener(eventType, callback, false);
	      return {
	        remove: function () {
	          target.removeEventListener(eventType, callback, false);
	        }
	      };
	    } else if (target.attachEvent) {
	      target.attachEvent('on' + eventType, callback);
	      return {
	        remove: function () {
	          target.detachEvent('on' + eventType, callback);
	        }
	      };
	    }
	  },

	  /**
	   * Listen to DOM events during the capture phase.
	   *
	   * @param {DOMEventTarget} target DOM element to register listener on.
	   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.
	   * @param {function} callback Callback function.
	   * @return {object} Object with a `remove` method.
	   */
	  capture: function (target, eventType, callback) {
	    if (target.addEventListener) {
	      target.addEventListener(eventType, callback, true);
	      return {
	        remove: function () {
	          target.removeEventListener(eventType, callback, true);
	        }
	      };
	    } else {
	      if (process.env.NODE_ENV !== 'production') {
	        console.error('Attempted to listen to events during the capture phase on a ' + 'browser that does not support the capture phase. Your application ' + 'will not receive some events.');
	      }
	      return {
	        remove: emptyFunction
	      };
	    }
	  },

	  registerDefault: function () {}
	};

	module.exports = EventListener;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)))

/***/ }),
/* 121 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getUnboundedScrollPosition
	 * @typechecks
	 */

	'use strict';

	/**
	 * Gets the scroll position of the supplied element or window.
	 *
	 * The return values are unbounded, unlike `getScrollPosition`. This means they
	 * may be negative or exceed the element boundaries (which is possible using
	 * inertial scrolling).
	 *
	 * @param {DOMWindow|DOMElement} scrollable
	 * @return {object} Map with `x` and `y` keys.
	 */
	function getUnboundedScrollPosition(scrollable) {
	  if (scrollable === window) {
	    return {
	      x: window.pageXOffset || document.documentElement.scrollLeft,
	      y: window.pageYOffset || document.documentElement.scrollTop
	    };
	  }
	  return {
	    x: scrollable.scrollLeft,
	    y: scrollable.scrollTop
	  };
	}

	module.exports = getUnboundedScrollPosition;

/***/ }),
/* 122 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactInjection
	 */

	'use strict';

	var DOMProperty = __webpack_require__(24);
	var EventPluginHub = __webpack_require__(32);
	var ReactComponentEnvironment = __webpack_require__(65);
	var ReactClass = __webpack_require__(123);
	var ReactEmptyComponent = __webpack_require__(69);
	var ReactBrowserEventEmitter = __webpack_require__(30);
	var ReactNativeComponent = __webpack_require__(70);
	var ReactPerf = __webpack_require__(19);
	var ReactRootIndex = __webpack_require__(47);
	var ReactUpdates = __webpack_require__(55);

	var ReactInjection = {
	  Component: ReactComponentEnvironment.injection,
	  Class: ReactClass.injection,
	  DOMProperty: DOMProperty.injection,
	  EmptyComponent: ReactEmptyComponent.injection,
	  EventPluginHub: EventPluginHub.injection,
	  EventEmitter: ReactBrowserEventEmitter.injection,
	  NativeComponent: ReactNativeComponent.injection,
	  Perf: ReactPerf.injection,
	  RootIndex: ReactRootIndex.injection,
	  Updates: ReactUpdates.injection
	};

	module.exports = ReactInjection;

/***/ }),
/* 123 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactClass
	 */

	'use strict';

	var ReactComponent = __webpack_require__(124);
	var ReactElement = __webpack_require__(43);
	var ReactPropTypeLocations = __webpack_require__(66);
	var ReactPropTypeLocationNames = __webpack_require__(67);
	var ReactNoopUpdateQueue = __webpack_require__(125);

	var assign = __webpack_require__(40);
	var emptyObject = __webpack_require__(59);
	var invariant = __webpack_require__(14);
	var keyMirror = __webpack_require__(18);
	var keyOf = __webpack_require__(80);
	var warning = __webpack_require__(26);

	var MIXINS_KEY = keyOf({ mixins: null });

	/**
	 * Policies that describe methods in `ReactClassInterface`.
	 */
	var SpecPolicy = keyMirror({
	  /**
	   * These methods may be defined only once by the class specification or mixin.
	   */
	  DEFINE_ONCE: null,
	  /**
	   * These methods may be defined by both the class specification and mixins.
	   * Subsequent definitions will be chained. These methods must return void.
	   */
	  DEFINE_MANY: null,
	  /**
	   * These methods are overriding the base class.
	   */
	  OVERRIDE_BASE: null,
	  /**
	   * These methods are similar to DEFINE_MANY, except we assume they return
	   * objects. We try to merge the keys of the return values of all the mixed in
	   * functions. If there is a key conflict we throw.
	   */
	  DEFINE_MANY_MERGED: null
	});

	var injectedMixins = [];

	var warnedSetProps = false;
	function warnSetProps() {
	  if (!warnedSetProps) {
	    warnedSetProps = true;
	    process.env.NODE_ENV !== 'production' ? warning(false, 'setProps(...) and replaceProps(...) are deprecated. ' + 'Instead, call render again at the top level.') : undefined;
	  }
	}

	/**
	 * Composite components are higher-level components that compose other composite
	 * or native components.
	 *
	 * To create a new type of `ReactClass`, pass a specification of
	 * your new class to `React.createClass`. The only requirement of your class
	 * specification is that you implement a `render` method.
	 *
	 *   var MyComponent = React.createClass({
	 *     render: function() {
	 *       return <div>Hello World</div>;
	 *     }
	 *   });
	 *
	 * The class specification supports a specific protocol of methods that have
	 * special meaning (e.g. `render`). See `ReactClassInterface` for
	 * more the comprehensive protocol. Any other properties and methods in the
	 * class specification will be available on the prototype.
	 *
	 * @interface ReactClassInterface
	 * @internal
	 */
	var ReactClassInterface = {

	  /**
	   * An array of Mixin objects to include when defining your component.
	   *
	   * @type {array}
	   * @optional
	   */
	  mixins: SpecPolicy.DEFINE_MANY,

	  /**
	   * An object containing properties and methods that should be defined on
	   * the component's constructor instead of its prototype (static methods).
	   *
	   * @type {object}
	   * @optional
	   */
	  statics: SpecPolicy.DEFINE_MANY,

	  /**
	   * Definition of prop types for this component.
	   *
	   * @type {object}
	   * @optional
	   */
	  propTypes: SpecPolicy.DEFINE_MANY,

	  /**
	   * Definition of context types for this component.
	   *
	   * @type {object}
	   * @optional
	   */
	  contextTypes: SpecPolicy.DEFINE_MANY,

	  /**
	   * Definition of context types this component sets for its children.
	   *
	   * @type {object}
	   * @optional
	   */
	  childContextTypes: SpecPolicy.DEFINE_MANY,

	  // ==== Definition methods ====

	  /**
	   * Invoked when the component is mounted. Values in the mapping will be set on
	   * `this.props` if that prop is not specified (i.e. using an `in` check).
	   *
	   * This method is invoked before `getInitialState` and therefore cannot rely
	   * on `this.state` or use `this.setState`.
	   *
	   * @return {object}
	   * @optional
	   */
	  getDefaultProps: SpecPolicy.DEFINE_MANY_MERGED,

	  /**
	   * Invoked once before the component is mounted. The return value will be used
	   * as the initial value of `this.state`.
	   *
	   *   getInitialState: function() {
	   *     return {
	   *       isOn: false,
	   *       fooBaz: new BazFoo()
	   *     }
	   *   }
	   *
	   * @return {object}
	   * @optional
	   */
	  getInitialState: SpecPolicy.DEFINE_MANY_MERGED,

	  /**
	   * @return {object}
	   * @optional
	   */
	  getChildContext: SpecPolicy.DEFINE_MANY_MERGED,

	  /**
	   * Uses props from `this.props` and state from `this.state` to render the
	   * structure of the component.
	   *
	   * No guarantees are made about when or how often this method is invoked, so
	   * it must not have side effects.
	   *
	   *   render: function() {
	   *     var name = this.props.name;
	   *     return <div>Hello, {name}!</div>;
	   *   }
	   *
	   * @return {ReactComponent}
	   * @nosideeffects
	   * @required
	   */
	  render: SpecPolicy.DEFINE_ONCE,

	  // ==== Delegate methods ====

	  /**
	   * Invoked when the component is initially created and about to be mounted.
	   * This may have side effects, but any external subscriptions or data created
	   * by this method must be cleaned up in `componentWillUnmount`.
	   *
	   * @optional
	   */
	  componentWillMount: SpecPolicy.DEFINE_MANY,

	  /**
	   * Invoked when the component has been mounted and has a DOM representation.
	   * However, there is no guarantee that the DOM node is in the document.
	   *
	   * Use this as an opportunity to operate on the DOM when the component has
	   * been mounted (initialized and rendered) for the first time.
	   *
	   * @param {DOMElement} rootNode DOM element representing the component.
	   * @optional
	   */
	  componentDidMount: SpecPolicy.DEFINE_MANY,

	  /**
	   * Invoked before the component receives new props.
	   *
	   * Use this as an opportunity to react to a prop transition by updating the
	   * state using `this.setState`. Current props are accessed via `this.props`.
	   *
	   *   componentWillReceiveProps: function(nextProps, nextContext) {
	   *     this.setState({
	   *       likesIncreasing: nextProps.likeCount > this.props.likeCount
	   *     });
	   *   }
	   *
	   * NOTE: There is no equivalent `componentWillReceiveState`. An incoming prop
	   * transition may cause a state change, but the opposite is not true. If you
	   * need it, you are probably looking for `componentWillUpdate`.
	   *
	   * @param {object} nextProps
	   * @optional
	   */
	  componentWillReceiveProps: SpecPolicy.DEFINE_MANY,

	  /**
	   * Invoked while deciding if the component should be updated as a result of
	   * receiving new props, state and/or context.
	   *
	   * Use this as an opportunity to `return false` when you're certain that the
	   * transition to the new props/state/context will not require a component
	   * update.
	   *
	   *   shouldComponentUpdate: function(nextProps, nextState, nextContext) {
	   *     return !equal(nextProps, this.props) ||
	   *       !equal(nextState, this.state) ||
	   *       !equal(nextContext, this.context);
	   *   }
	   *
	   * @param {object} nextProps
	   * @param {?object} nextState
	   * @param {?object} nextContext
	   * @return {boolean} True if the component should update.
	   * @optional
	   */
	  shouldComponentUpdate: SpecPolicy.DEFINE_ONCE,

	  /**
	   * Invoked when the component is about to update due to a transition from
	   * `this.props`, `this.state` and `this.context` to `nextProps`, `nextState`
	   * and `nextContext`.
	   *
	   * Use this as an opportunity to perform preparation before an update occurs.
	   *
	   * NOTE: You **cannot** use `this.setState()` in this method.
	   *
	   * @param {object} nextProps
	   * @param {?object} nextState
	   * @param {?object} nextContext
	   * @param {ReactReconcileTransaction} transaction
	   * @optional
	   */
	  componentWillUpdate: SpecPolicy.DEFINE_MANY,

	  /**
	   * Invoked when the component's DOM representation has been updated.
	   *
	   * Use this as an opportunity to operate on the DOM when the component has
	   * been updated.
	   *
	   * @param {object} prevProps
	   * @param {?object} prevState
	   * @param {?object} prevContext
	   * @param {DOMElement} rootNode DOM element representing the component.
	   * @optional
	   */
	  componentDidUpdate: SpecPolicy.DEFINE_MANY,

	  /**
	   * Invoked when the component is about to be removed from its parent and have
	   * its DOM representation destroyed.
	   *
	   * Use this as an opportunity to deallocate any external resources.
	   *
	   * NOTE: There is no `componentDidUnmount` since your component will have been
	   * destroyed by that point.
	   *
	   * @optional
	   */
	  componentWillUnmount: SpecPolicy.DEFINE_MANY,

	  // ==== Advanced methods ====

	  /**
	   * Updates the component's currently mounted DOM representation.
	   *
	   * By default, this implements React's rendering and reconciliation algorithm.
	   * Sophisticated clients may wish to override this.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   * @overridable
	   */
	  updateComponent: SpecPolicy.OVERRIDE_BASE

	};

	/**
	 * Mapping from class specification keys to special processing functions.
	 *
	 * Although these are declared like instance properties in the specification
	 * when defining classes using `React.createClass`, they are actually static
	 * and are accessible on the constructor instead of the prototype. Despite
	 * being static, they must be defined outside of the "statics" key under
	 * which all other static methods are defined.
	 */
	var RESERVED_SPEC_KEYS = {
	  displayName: function (Constructor, displayName) {
	    Constructor.displayName = displayName;
	  },
	  mixins: function (Constructor, mixins) {
	    if (mixins) {
	      for (var i = 0; i < mixins.length; i++) {
	        mixSpecIntoComponent(Constructor, mixins[i]);
	      }
	    }
	  },
	  childContextTypes: function (Constructor, childContextTypes) {
	    if (process.env.NODE_ENV !== 'production') {
	      validateTypeDef(Constructor, childContextTypes, ReactPropTypeLocations.childContext);
	    }
	    Constructor.childContextTypes = assign({}, Constructor.childContextTypes, childContextTypes);
	  },
	  contextTypes: function (Constructor, contextTypes) {
	    if (process.env.NODE_ENV !== 'production') {
	      validateTypeDef(Constructor, contextTypes, ReactPropTypeLocations.context);
	    }
	    Constructor.contextTypes = assign({}, Constructor.contextTypes, contextTypes);
	  },
	  /**
	   * Special case getDefaultProps which should move into statics but requires
	   * automatic merging.
	   */
	  getDefaultProps: function (Constructor, getDefaultProps) {
	    if (Constructor.getDefaultProps) {
	      Constructor.getDefaultProps = createMergedResultFunction(Constructor.getDefaultProps, getDefaultProps);
	    } else {
	      Constructor.getDefaultProps = getDefaultProps;
	    }
	  },
	  propTypes: function (Constructor, propTypes) {
	    if (process.env.NODE_ENV !== 'production') {
	      validateTypeDef(Constructor, propTypes, ReactPropTypeLocations.prop);
	    }
	    Constructor.propTypes = assign({}, Constructor.propTypes, propTypes);
	  },
	  statics: function (Constructor, statics) {
	    mixStaticSpecIntoComponent(Constructor, statics);
	  },
	  autobind: function () {} };

	// noop
	function validateTypeDef(Constructor, typeDef, location) {
	  for (var propName in typeDef) {
	    if (typeDef.hasOwnProperty(propName)) {
	      // use a warning instead of an invariant so components
	      // don't show up in prod but not in __DEV__
	      process.env.NODE_ENV !== 'production' ? warning(typeof typeDef[propName] === 'function', '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'React.PropTypes.', Constructor.displayName || 'ReactClass', ReactPropTypeLocationNames[location], propName) : undefined;
	    }
	  }
	}

	function validateMethodOverride(proto, name) {
	  var specPolicy = ReactClassInterface.hasOwnProperty(name) ? ReactClassInterface[name] : null;

	  // Disallow overriding of base class methods unless explicitly allowed.
	  if (ReactClassMixin.hasOwnProperty(name)) {
	    !(specPolicy === SpecPolicy.OVERRIDE_BASE) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClassInterface: You are attempting to override ' + '`%s` from your class specification. Ensure that your method names ' + 'do not overlap with React methods.', name) : invariant(false) : undefined;
	  }

	  // Disallow defining methods more than once unless explicitly allowed.
	  if (proto.hasOwnProperty(name)) {
	    !(specPolicy === SpecPolicy.DEFINE_MANY || specPolicy === SpecPolicy.DEFINE_MANY_MERGED) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClassInterface: You are attempting to define ' + '`%s` on your component more than once. This conflict may be due ' + 'to a mixin.', name) : invariant(false) : undefined;
	  }
	}

	/**
	 * Mixin helper which handles policy validation and reserved
	 * specification keys when building React classses.
	 */
	function mixSpecIntoComponent(Constructor, spec) {
	  if (!spec) {
	    return;
	  }

	  !(typeof spec !== 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You\'re attempting to ' + 'use a component class as a mixin. Instead, just use a regular object.') : invariant(false) : undefined;
	  !!ReactElement.isValidElement(spec) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You\'re attempting to ' + 'use a component as a mixin. Instead, just use a regular object.') : invariant(false) : undefined;

	  var proto = Constructor.prototype;

	  // By handling mixins before any other properties, we ensure the same
	  // chaining order is applied to methods with DEFINE_MANY policy, whether
	  // mixins are listed before or after these methods in the spec.
	  if (spec.hasOwnProperty(MIXINS_KEY)) {
	    RESERVED_SPEC_KEYS.mixins(Constructor, spec.mixins);
	  }

	  for (var name in spec) {
	    if (!spec.hasOwnProperty(name)) {
	      continue;
	    }

	    if (name === MIXINS_KEY) {
	      // We have already handled mixins in a special case above.
	      continue;
	    }

	    var property = spec[name];
	    validateMethodOverride(proto, name);

	    if (RESERVED_SPEC_KEYS.hasOwnProperty(name)) {
	      RESERVED_SPEC_KEYS[name](Constructor, property);
	    } else {
	      // Setup methods on prototype:
	      // The following member methods should not be automatically bound:
	      // 1. Expected ReactClass methods (in the "interface").
	      // 2. Overridden methods (that were mixed in).
	      var isReactClassMethod = ReactClassInterface.hasOwnProperty(name);
	      var isAlreadyDefined = proto.hasOwnProperty(name);
	      var isFunction = typeof property === 'function';
	      var shouldAutoBind = isFunction && !isReactClassMethod && !isAlreadyDefined && spec.autobind !== false;

	      if (shouldAutoBind) {
	        if (!proto.__reactAutoBindMap) {
	          proto.__reactAutoBindMap = {};
	        }
	        proto.__reactAutoBindMap[name] = property;
	        proto[name] = property;
	      } else {
	        if (isAlreadyDefined) {
	          var specPolicy = ReactClassInterface[name];

	          // These cases should already be caught by validateMethodOverride.
	          !(isReactClassMethod && (specPolicy === SpecPolicy.DEFINE_MANY_MERGED || specPolicy === SpecPolicy.DEFINE_MANY)) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: Unexpected spec policy %s for key %s ' + 'when mixing in component specs.', specPolicy, name) : invariant(false) : undefined;

	          // For methods which are defined more than once, call the existing
	          // methods before calling the new property, merging if appropriate.
	          if (specPolicy === SpecPolicy.DEFINE_MANY_MERGED) {
	            proto[name] = createMergedResultFunction(proto[name], property);
	          } else if (specPolicy === SpecPolicy.DEFINE_MANY) {
	            proto[name] = createChainedFunction(proto[name], property);
	          }
	        } else {
	          proto[name] = property;
	          if (process.env.NODE_ENV !== 'production') {
	            // Add verbose displayName to the function, which helps when looking
	            // at profiling tools.
	            if (typeof property === 'function' && spec.displayName) {
	              proto[name].displayName = spec.displayName + '_' + name;
	            }
	          }
	        }
	      }
	    }
	  }
	}

	function mixStaticSpecIntoComponent(Constructor, statics) {
	  if (!statics) {
	    return;
	  }
	  for (var name in statics) {
	    var property = statics[name];
	    if (!statics.hasOwnProperty(name)) {
	      continue;
	    }

	    var isReserved = (name in RESERVED_SPEC_KEYS);
	    !!isReserved ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You are attempting to define a reserved ' + 'property, `%s`, that shouldn\'t be on the "statics" key. Define it ' + 'as an instance property instead; it will still be accessible on the ' + 'constructor.', name) : invariant(false) : undefined;

	    var isInherited = (name in Constructor);
	    !!isInherited ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You are attempting to define ' + '`%s` on your component more than once. This conflict may be ' + 'due to a mixin.', name) : invariant(false) : undefined;
	    Constructor[name] = property;
	  }
	}

	/**
	 * Merge two objects, but throw if both contain the same key.
	 *
	 * @param {object} one The first object, which is mutated.
	 * @param {object} two The second object
	 * @return {object} one after it has been mutated to contain everything in two.
	 */
	function mergeIntoWithNoDuplicateKeys(one, two) {
	  !(one && two && typeof one === 'object' && typeof two === 'object') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'mergeIntoWithNoDuplicateKeys(): Cannot merge non-objects.') : invariant(false) : undefined;

	  for (var key in two) {
	    if (two.hasOwnProperty(key)) {
	      !(one[key] === undefined) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'mergeIntoWithNoDuplicateKeys(): ' + 'Tried to merge two objects with the same key: `%s`. This conflict ' + 'may be due to a mixin; in particular, this may be caused by two ' + 'getInitialState() or getDefaultProps() methods returning objects ' + 'with clashing keys.', key) : invariant(false) : undefined;
	      one[key] = two[key];
	    }
	  }
	  return one;
	}

	/**
	 * Creates a function that invokes two functions and merges their return values.
	 *
	 * @param {function} one Function to invoke first.
	 * @param {function} two Function to invoke second.
	 * @return {function} Function that invokes the two argument functions.
	 * @private
	 */
	function createMergedResultFunction(one, two) {
	  return function mergedResult() {
	    var a = one.apply(this, arguments);
	    var b = two.apply(this, arguments);
	    if (a == null) {
	      return b;
	    } else if (b == null) {
	      return a;
	    }
	    var c = {};
	    mergeIntoWithNoDuplicateKeys(c, a);
	    mergeIntoWithNoDuplicateKeys(c, b);
	    return c;
	  };
	}

	/**
	 * Creates a function that invokes two functions and ignores their return vales.
	 *
	 * @param {function} one Function to invoke first.
	 * @param {function} two Function to invoke second.
	 * @return {function} Function that invokes the two argument functions.
	 * @private
	 */
	function createChainedFunction(one, two) {
	  return function chainedFunction() {
	    one.apply(this, arguments);
	    two.apply(this, arguments);
	  };
	}

	/**
	 * Binds a method to the component.
	 *
	 * @param {object} component Component whose method is going to be bound.
	 * @param {function} method Method to be bound.
	 * @return {function} The bound method.
	 */
	function bindAutoBindMethod(component, method) {
	  var boundMethod = method.bind(component);
	  if (process.env.NODE_ENV !== 'production') {
	    boundMethod.__reactBoundContext = component;
	    boundMethod.__reactBoundMethod = method;
	    boundMethod.__reactBoundArguments = null;
	    var componentName = component.constructor.displayName;
	    var _bind = boundMethod.bind;
	    /* eslint-disable block-scoped-var, no-undef */
	    boundMethod.bind = function (newThis) {
	      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	        args[_key - 1] = arguments[_key];
	      }

	      // User is trying to bind() an autobound method; we effectively will
	      // ignore the value of "this" that the user is trying to use, so
	      // let's warn.
	      if (newThis !== component && newThis !== null) {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'bind(): React component methods may only be bound to the ' + 'component instance. See %s', componentName) : undefined;
	      } else if (!args.length) {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'bind(): You are binding a component method to the component. ' + 'React does this for you automatically in a high-performance ' + 'way, so you can safely remove this call. See %s', componentName) : undefined;
	        return boundMethod;
	      }
	      var reboundMethod = _bind.apply(boundMethod, arguments);
	      reboundMethod.__reactBoundContext = component;
	      reboundMethod.__reactBoundMethod = method;
	      reboundMethod.__reactBoundArguments = args;
	      return reboundMethod;
	      /* eslint-enable */
	    };
	  }
	  return boundMethod;
	}

	/**
	 * Binds all auto-bound methods in a component.
	 *
	 * @param {object} component Component whose method is going to be bound.
	 */
	function bindAutoBindMethods(component) {
	  for (var autoBindKey in component.__reactAutoBindMap) {
	    if (component.__reactAutoBindMap.hasOwnProperty(autoBindKey)) {
	      var method = component.__reactAutoBindMap[autoBindKey];
	      component[autoBindKey] = bindAutoBindMethod(component, method);
	    }
	  }
	}

	/**
	 * Add more to the ReactClass base class. These are all legacy features and
	 * therefore not already part of the modern ReactComponent.
	 */
	var ReactClassMixin = {

	  /**
	   * TODO: This will be deprecated because state should always keep a consistent
	   * type signature and the only use case for this, is to avoid that.
	   */
	  replaceState: function (newState, callback) {
	    this.updater.enqueueReplaceState(this, newState);
	    if (callback) {
	      this.updater.enqueueCallback(this, callback);
	    }
	  },

	  /**
	   * Checks whether or not this composite component is mounted.
	   * @return {boolean} True if mounted, false otherwise.
	   * @protected
	   * @final
	   */
	  isMounted: function () {
	    return this.updater.isMounted(this);
	  },

	  /**
	   * Sets a subset of the props.
	   *
	   * @param {object} partialProps Subset of the next props.
	   * @param {?function} callback Called after props are updated.
	   * @final
	   * @public
	   * @deprecated
	   */
	  setProps: function (partialProps, callback) {
	    if (process.env.NODE_ENV !== 'production') {
	      warnSetProps();
	    }
	    this.updater.enqueueSetProps(this, partialProps);
	    if (callback) {
	      this.updater.enqueueCallback(this, callback);
	    }
	  },

	  /**
	   * Replace all the props.
	   *
	   * @param {object} newProps Subset of the next props.
	   * @param {?function} callback Called after props are updated.
	   * @final
	   * @public
	   * @deprecated
	   */
	  replaceProps: function (newProps, callback) {
	    if (process.env.NODE_ENV !== 'production') {
	      warnSetProps();
	    }
	    this.updater.enqueueReplaceProps(this, newProps);
	    if (callback) {
	      this.updater.enqueueCallback(this, callback);
	    }
	  }
	};

	var ReactClassComponent = function () {};
	assign(ReactClassComponent.prototype, ReactComponent.prototype, ReactClassMixin);

	/**
	 * Module for creating composite components.
	 *
	 * @class ReactClass
	 */
	var ReactClass = {

	  /**
	   * Creates a composite component class given a class specification.
	   *
	   * @param {object} spec Class specification (which must define `render`).
	   * @return {function} Component constructor function.
	   * @public
	   */
	  createClass: function (spec) {
	    var Constructor = function (props, context, updater) {
	      // This constructor is overridden by mocks. The argument is used
	      // by mocks to assert on what gets mounted.

	      if (process.env.NODE_ENV !== 'production') {
	        process.env.NODE_ENV !== 'production' ? warning(this instanceof Constructor, 'Something is calling a React component directly. Use a factory or ' + 'JSX instead. See: https://fb.me/react-legacyfactory') : undefined;
	      }

	      // Wire up auto-binding
	      if (this.__reactAutoBindMap) {
	        bindAutoBindMethods(this);
	      }

	      this.props = props;
	      this.context = context;
	      this.refs = emptyObject;
	      this.updater = updater || ReactNoopUpdateQueue;

	      this.state = null;

	      // ReactClasses doesn't have constructors. Instead, they use the
	      // getInitialState and componentWillMount methods for initialization.

	      var initialState = this.getInitialState ? this.getInitialState() : null;
	      if (process.env.NODE_ENV !== 'production') {
	        // We allow auto-mocks to proceed as if they're returning null.
	        if (typeof initialState === 'undefined' && this.getInitialState._isMockFunction) {
	          // This is probably bad practice. Consider warning here and
	          // deprecating this convenience.
	          initialState = null;
	        }
	      }
	      !(typeof initialState === 'object' && !Array.isArray(initialState)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.getInitialState(): must return an object or null', Constructor.displayName || 'ReactCompositeComponent') : invariant(false) : undefined;

	      this.state = initialState;
	    };
	    Constructor.prototype = new ReactClassComponent();
	    Constructor.prototype.constructor = Constructor;

	    injectedMixins.forEach(mixSpecIntoComponent.bind(null, Constructor));

	    mixSpecIntoComponent(Constructor, spec);

	    // Initialize the defaultProps property after all mixins have been merged.
	    if (Constructor.getDefaultProps) {
	      Constructor.defaultProps = Constructor.getDefaultProps();
	    }

	    if (process.env.NODE_ENV !== 'production') {
	      // This is a tag to indicate that the use of these method names is ok,
	      // since it's used with createClass. If it's not, then it's likely a
	      // mistake so we'll warn you to use the static property, property
	      // initializer or constructor respectively.
	      if (Constructor.getDefaultProps) {
	        Constructor.getDefaultProps.isReactClassApproved = {};
	      }
	      if (Constructor.prototype.getInitialState) {
	        Constructor.prototype.getInitialState.isReactClassApproved = {};
	      }
	    }

	    !Constructor.prototype.render ? process.env.NODE_ENV !== 'production' ? invariant(false, 'createClass(...): Class specification must implement a `render` method.') : invariant(false) : undefined;

	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(!Constructor.prototype.componentShouldUpdate, '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', spec.displayName || 'A component') : undefined;
	      process.env.NODE_ENV !== 'production' ? warning(!Constructor.prototype.componentWillRecieveProps, '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', spec.displayName || 'A component') : undefined;
	    }

	    // Reduce time spent doing lookups by setting these on the prototype.
	    for (var methodName in ReactClassInterface) {
	      if (!Constructor.prototype[methodName]) {
	        Constructor.prototype[methodName] = null;
	      }
	    }

	    return Constructor;
	  },

	  injection: {
	    injectMixin: function (mixin) {
	      injectedMixins.push(mixin);
	    }
	  }

	};

	module.exports = ReactClass;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)))

/***/ }),
/* 124 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactComponent
	 */

	'use strict';

	var ReactNoopUpdateQueue = __webpack_require__(125);

	var canDefineProperty = __webpack_require__(44);
	var emptyObject = __webpack_require__(59);
	var invariant = __webpack_require__(14);
	var warning = __webpack_require__(26);

	/**
	 * Base class helpers for the updating state of a component.
	 */
	function ReactComponent(props, context, updater) {
	  this.props = props;
	  this.context = context;
	  this.refs = emptyObject;
	  // We initialize the default updater but the real one gets injected by the
	  // renderer.
	  this.updater = updater || ReactNoopUpdateQueue;
	}

	ReactComponent.prototype.isReactComponent = {};

	/**
	 * Sets a subset of the state. Always use this to mutate
	 * state. You should treat `this.state` as immutable.
	 *
	 * There is no guarantee that `this.state` will be immediately updated, so
	 * accessing `this.state` after calling this method may return the old value.
	 *
	 * There is no guarantee that calls to `setState` will run synchronously,
	 * as they may eventually be batched together.  You can provide an optional
	 * callback that will be executed when the call to setState is actually
	 * completed.
	 *
	 * When a function is provided to setState, it will be called at some point in
	 * the future (not synchronously). It will be called with the up to date
	 * component arguments (state, props, context). These values can be different
	 * from this.* because your function may be called after receiveProps but before
	 * shouldComponentUpdate, and this new state, props, and context will not yet be
	 * assigned to this.
	 *
	 * @param {object|function} partialState Next partial state or function to
	 *        produce next partial state to be merged with current state.
	 * @param {?function} callback Called after state is updated.
	 * @final
	 * @protected
	 */
	ReactComponent.prototype.setState = function (partialState, callback) {
	  !(typeof partialState === 'object' || typeof partialState === 'function' || partialState == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'setState(...): takes an object of state variables to update or a ' + 'function which returns an object of state variables.') : invariant(false) : undefined;
	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(partialState != null, 'setState(...): You passed an undefined or null state object; ' + 'instead, use forceUpdate().') : undefined;
	  }
	  this.updater.enqueueSetState(this, partialState);
	  if (callback) {
	    this.updater.enqueueCallback(this, callback);
	  }
	};

	/**
	 * Forces an update. This should only be invoked when it is known with
	 * certainty that we are **not** in a DOM transaction.
	 *
	 * You may want to call this when you know that some deeper aspect of the
	 * component's state has changed but `setState` was not called.
	 *
	 * This will not invoke `shouldComponentUpdate`, but it will invoke
	 * `componentWillUpdate` and `componentDidUpdate`.
	 *
	 * @param {?function} callback Called after update is complete.
	 * @final
	 * @protected
	 */
	ReactComponent.prototype.forceUpdate = function (callback) {
	  this.updater.enqueueForceUpdate(this);
	  if (callback) {
	    this.updater.enqueueCallback(this, callback);
	  }
	};

	/**
	 * Deprecated APIs. These APIs used to exist on classic React classes but since
	 * we would like to deprecate them, we're not going to move them over to this
	 * modern base class. Instead, we define a getter that warns if it's accessed.
	 */
	if (process.env.NODE_ENV !== 'production') {
	  var deprecatedAPIs = {
	    getDOMNode: ['getDOMNode', 'Use ReactDOM.findDOMNode(component) instead.'],
	    isMounted: ['isMounted', 'Instead, make sure to clean up subscriptions and pending requests in ' + 'componentWillUnmount to prevent memory leaks.'],
	    replaceProps: ['replaceProps', 'Instead, call render again at the top level.'],
	    replaceState: ['replaceState', 'Refactor your code to use setState instead (see ' + 'https://github.com/facebook/react/issues/3236).'],
	    setProps: ['setProps', 'Instead, call render again at the top level.']
	  };
	  var defineDeprecationWarning = function (methodName, info) {
	    if (canDefineProperty) {
	      Object.defineProperty(ReactComponent.prototype, methodName, {
	        get: function () {
	          process.env.NODE_ENV !== 'production' ? warning(false, '%s(...) is deprecated in plain JavaScript React classes. %s', info[0], info[1]) : undefined;
	          return undefined;
	        }
	      });
	    }
	  };
	  for (var fnName in deprecatedAPIs) {
	    if (deprecatedAPIs.hasOwnProperty(fnName)) {
	      defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);
	    }
	  }
	}

	module.exports = ReactComponent;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)))

/***/ }),
/* 125 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactNoopUpdateQueue
	 */

	'use strict';

	var warning = __webpack_require__(26);

	function warnTDZ(publicInstance, callerName) {
	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(false, '%s(...): Can only update a mounted or mounting component. ' + 'This usually means you called %s() on an unmounted component. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, publicInstance.constructor && publicInstance.constructor.displayName || '') : undefined;
	  }
	}

	/**
	 * This is the abstract API for an update queue.
	 */
	var ReactNoopUpdateQueue = {

	  /**
	   * Checks whether or not this composite component is mounted.
	   * @param {ReactClass} publicInstance The instance we want to test.
	   * @return {boolean} True if mounted, false otherwise.
	   * @protected
	   * @final
	   */
	  isMounted: function (publicInstance) {
	    return false;
	  },

	  /**
	   * Enqueue a callback that will be executed after all the pending updates
	   * have processed.
	   *
	   * @param {ReactClass} publicInstance The instance to use as `this` context.
	   * @param {?function} callback Called after state is updated.
	   * @internal
	   */
	  enqueueCallback: function (publicInstance, callback) {},

	  /**
	   * Forces an update. This should only be invoked when it is known with
	   * certainty that we are **not** in a DOM transaction.
	   *
	   * You may want to call this when you know that some deeper aspect of the
	   * component's state has changed but `setState` was not called.
	   *
	   * This will not invoke `shouldComponentUpdate`, but it will invoke
	   * `componentWillUpdate` and `componentDidUpdate`.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @internal
	   */
	  enqueueForceUpdate: function (publicInstance) {
	    warnTDZ(publicInstance, 'forceUpdate');
	  },

	  /**
	   * Replaces all of the state. Always use this or `setState` to mutate state.
	   * You should treat `this.state` as immutable.
	   *
	   * There is no guarantee that `this.state` will be immediately updated, so
	   * accessing `this.state` after calling this method may return the old value.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} completeState Next state.
	   * @internal
	   */
	  enqueueReplaceState: function (publicInstance, completeState) {
	    warnTDZ(publicInstance, 'replaceState');
	  },

	  /**
	   * Sets a subset of the state. This only exists because _pendingState is
	   * internal. This provides a merging strategy that is not available to deep
	   * properties which is confusing. TODO: Expose pendingState or don't use it
	   * during the merge.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} partialState Next partial state to be merged with state.
	   * @internal
	   */
	  enqueueSetState: function (publicInstance, partialState) {
	    warnTDZ(publicInstance, 'setState');
	  },

	  /**
	   * Sets a subset of the props.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} partialProps Subset of the next props.
	   * @internal
	   */
	  enqueueSetProps: function (publicInstance, partialProps) {
	    warnTDZ(publicInstance, 'setProps');
	  },

	  /**
	   * Replaces all of the props.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} props New props.
	   * @internal
	   */
	  enqueueReplaceProps: function (publicInstance, props) {
	    warnTDZ(publicInstance, 'replaceProps');
	  }

	};

	module.exports = ReactNoopUpdateQueue;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)))

/***/ }),
/* 126 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactReconcileTransaction
	 * @typechecks static-only
	 */

	'use strict';

	var CallbackQueue = __webpack_require__(56);
	var PooledClass = __webpack_require__(57);
	var ReactBrowserEventEmitter = __webpack_require__(30);
	var ReactDOMFeatureFlags = __webpack_require__(42);
	var ReactInputSelection = __webpack_require__(127);
	var Transaction = __webpack_require__(58);

	var assign = __webpack_require__(40);

	/**
	 * Ensures that, when possible, the selection range (currently selected text
	 * input) is not disturbed by performing the transaction.
	 */
	var SELECTION_RESTORATION = {
	  /**
	   * @return {Selection} Selection information.
	   */
	  initialize: ReactInputSelection.getSelectionInformation,
	  /**
	   * @param {Selection} sel Selection information returned from `initialize`.
	   */
	  close: ReactInputSelection.restoreSelection
	};

	/**
	 * Suppresses events (blur/focus) that could be inadvertently dispatched due to
	 * high level DOM manipulations (like temporarily removing a text input from the
	 * DOM).
	 */
	var EVENT_SUPPRESSION = {
	  /**
	   * @return {boolean} The enabled status of `ReactBrowserEventEmitter` before
	   * the reconciliation.
	   */
	  initialize: function () {
	    var currentlyEnabled = ReactBrowserEventEmitter.isEnabled();
	    ReactBrowserEventEmitter.setEnabled(false);
	    return currentlyEnabled;
	  },

	  /**
	   * @param {boolean} previouslyEnabled Enabled status of
	   *   `ReactBrowserEventEmitter` before the reconciliation occurred. `close`
	   *   restores the previous value.
	   */
	  close: function (previouslyEnabled) {
	    ReactBrowserEventEmitter.setEnabled(previouslyEnabled);
	  }
	};

	/**
	 * Provides a queue for collecting `componentDidMount` and
	 * `componentDidUpdate` callbacks during the the transaction.
	 */
	var ON_DOM_READY_QUEUEING = {
	  /**
	   * Initializes the internal `onDOMReady` queue.
	   */
	  initialize: function () {
	    this.reactMountReady.reset();
	  },

	  /**
	   * After DOM is flushed, invoke all registered `onDOMReady` callbacks.
	   */
	  close: function () {
	    this.reactMountReady.notifyAll();
	  }
	};

	/**
	 * Executed within the scope of the `Transaction` instance. Consider these as
	 * being member methods, but with an implied ordering while being isolated from
	 * each other.
	 */
	var TRANSACTION_WRAPPERS = [SELECTION_RESTORATION, EVENT_SUPPRESSION, ON_DOM_READY_QUEUEING];

	/**
	 * Currently:
	 * - The order that these are listed in the transaction is critical:
	 * - Suppresses events.
	 * - Restores selection range.
	 *
	 * Future:
	 * - Restore document/overflow scroll positions that were unintentionally
	 *   modified via DOM insertions above the top viewport boundary.
	 * - Implement/integrate with customized constraint based layout system and keep
	 *   track of which dimensions must be remeasured.
	 *
	 * @class ReactReconcileTransaction
	 */
	function ReactReconcileTransaction(forceHTML) {
	  this.reinitializeTransaction();
	  // Only server-side rendering really needs this option (see
	  // `ReactServerRendering`), but server-side uses
	  // `ReactServerRenderingTransaction` instead. This option is here so that it's
	  // accessible and defaults to false when `ReactDOMComponent` and
	  // `ReactTextComponent` checks it in `mountComponent`.`
	  this.renderToStaticMarkup = false;
	  this.reactMountReady = CallbackQueue.getPooled(null);
	  this.useCreateElement = !forceHTML && ReactDOMFeatureFlags.useCreateElement;
	}

	var Mixin = {
	  /**
	   * @see Transaction
	   * @abstract
	   * @final
	   * @return {array<object>} List of operation wrap procedures.
	   *   TODO: convert to array<TransactionWrapper>
	   */
	  getTransactionWrappers: function () {
	    return TRANSACTION_WRAPPERS;
	  },

	  /**
	   * @return {object} The queue to collect `onDOMReady` callbacks with.
	   */
	  getReactMountReady: function () {
	    return this.reactMountReady;
	  },

	  /**
	   * `PooledClass` looks for this, and will invoke this before allowing this
	   * instance to be reused.
	   */
	  destructor: function () {
	    CallbackQueue.release(this.reactMountReady);
	    this.reactMountReady = null;
	  }
	};

	assign(ReactReconcileTransaction.prototype, Transaction.Mixin, Mixin);

	PooledClass.addPoolingTo(ReactReconcileTransaction);

	module.exports = ReactReconcileTransaction;

/***/ }),
/* 127 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactInputSelection
	 */

	'use strict';

	var ReactDOMSelection = __webpack_require__(128);

	var containsNode = __webpack_require__(60);
	var focusNode = __webpack_require__(96);
	var getActiveElement = __webpack_require__(130);

	function isInDocument(node) {
	  return containsNode(document.documentElement, node);
	}

	/**
	 * @ReactInputSelection: React input selection module. Based on Selection.js,
	 * but modified to be suitable for react and has a couple of bug fixes (doesn't
	 * assume buttons have range selections allowed).
	 * Input selection module for React.
	 */
	var ReactInputSelection = {

	  hasSelectionCapabilities: function (elem) {
	    var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();
	    return nodeName && (nodeName === 'input' && elem.type === 'text' || nodeName === 'textarea' || elem.contentEditable === 'true');
	  },

	  getSelectionInformation: function () {
	    var focusedElem = getActiveElement();
	    return {
	      focusedElem: focusedElem,
	      selectionRange: ReactInputSelection.hasSelectionCapabilities(focusedElem) ? ReactInputSelection.getSelection(focusedElem) : null
	    };
	  },

	  /**
	   * @restoreSelection: If any selection information was potentially lost,
	   * restore it. This is useful when performing operations that could remove dom
	   * nodes and place them back in, resulting in focus being lost.
	   */
	  restoreSelection: function (priorSelectionInformation) {
	    var curFocusedElem = getActiveElement();
	    var priorFocusedElem = priorSelectionInformation.focusedElem;
	    var priorSelectionRange = priorSelectionInformation.selectionRange;
	    if (curFocusedElem !== priorFocusedElem && isInDocument(priorFocusedElem)) {
	      if (ReactInputSelection.hasSelectionCapabilities(priorFocusedElem)) {
	        ReactInputSelection.setSelection(priorFocusedElem, priorSelectionRange);
	      }
	      focusNode(priorFocusedElem);
	    }
	  },

	  /**
	   * @getSelection: Gets the selection bounds of a focused textarea, input or
	   * contentEditable node.
	   * -@input: Look up selection bounds of this input
	   * -@return {start: selectionStart, end: selectionEnd}
	   */
	  getSelection: function (input) {
	    var selection;

	    if ('selectionStart' in input) {
	      // Modern browser with input or textarea.
	      selection = {
	        start: input.selectionStart,
	        end: input.selectionEnd
	      };
	    } else if (document.selection && (input.nodeName && input.nodeName.toLowerCase() === 'input')) {
	      // IE8 input.
	      var range = document.selection.createRange();
	      // There can only be one selection per document in IE, so it must
	      // be in our element.
	      if (range.parentElement() === input) {
	        selection = {
	          start: -range.moveStart('character', -input.value.length),
	          end: -range.moveEnd('character', -input.value.length)
	        };
	      }
	    } else {
	      // Content editable or old IE textarea.
	      selection = ReactDOMSelection.getOffsets(input);
	    }

	    return selection || { start: 0, end: 0 };
	  },

	  /**
	   * @setSelection: Sets the selection bounds of a textarea or input and focuses
	   * the input.
	   * -@input     Set selection bounds of this input or textarea
	   * -@offsets   Object of same form that is returned from get*
	   */
	  setSelection: function (input, offsets) {
	    var start = offsets.start;
	    var end = offsets.end;
	    if (typeof end === 'undefined') {
	      end = start;
	    }

	    if ('selectionStart' in input) {
	      input.selectionStart = start;
	      input.selectionEnd = Math.min(end, input.value.length);
	    } else if (document.selection && (input.nodeName && input.nodeName.toLowerCase() === 'input')) {
	      var range = input.createTextRange();
	      range.collapse(true);
	      range.moveStart('character', start);
	      range.moveEnd('character', end - start);
	      range.select();
	    } else {
	      ReactDOMSelection.setOffsets(input, offsets);
	    }
	  }
	};

	module.exports = ReactInputSelection;

/***/ }),
/* 128 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMSelection
	 */

	'use strict';

	var ExecutionEnvironment = __webpack_require__(10);

	var getNodeForCharacterOffset = __webpack_require__(129);
	var getTextContentAccessor = __webpack_require__(76);

	/**
	 * While `isCollapsed` is available on the Selection object and `collapsed`
	 * is available on the Range object, IE11 sometimes gets them wrong.
	 * If the anchor/focus nodes and offsets are the same, the range is collapsed.
	 */
	function isCollapsed(anchorNode, anchorOffset, focusNode, focusOffset) {
	  return anchorNode === focusNode && anchorOffset === focusOffset;
	}

	/**
	 * Get the appropriate anchor and focus node/offset pairs for IE.
	 *
	 * The catch here is that IE's selection API doesn't provide information
	 * about whether the selection is forward or backward, so we have to
	 * behave as though it's always forward.
	 *
	 * IE text differs from modern selection in that it behaves as though
	 * block elements end with a new line. This means character offsets will
	 * differ between the two APIs.
	 *
	 * @param {DOMElement} node
	 * @return {object}
	 */
	function getIEOffsets(node) {
	  var selection = document.selection;
	  var selectedRange = selection.createRange();
	  var selectedLength = selectedRange.text.length;

	  // Duplicate selection so we can move range without breaking user selection.
	  var fromStart = selectedRange.duplicate();
	  fromStart.moveToElementText(node);
	  fromStart.setEndPoint('EndToStart', selectedRange);

	  var startOffset = fromStart.text.length;
	  var endOffset = startOffset + selectedLength;

	  return {
	    start: startOffset,
	    end: endOffset
	  };
	}

	/**
	 * @param {DOMElement} node
	 * @return {?object}
	 */
	function getModernOffsets(node) {
	  var selection = window.getSelection && window.getSelection();

	  if (!selection || selection.rangeCount === 0) {
	    return null;
	  }

	  var anchorNode = selection.anchorNode;
	  var anchorOffset = selection.anchorOffset;
	  var focusNode = selection.focusNode;
	  var focusOffset = selection.focusOffset;

	  var currentRange = selection.getRangeAt(0);

	  // In Firefox, range.startContainer and range.endContainer can be "anonymous
	  // divs", e.g. the up/down buttons on an <input type="number">. Anonymous
	  // divs do not seem to expose properties, triggering a "Permission denied
	  // error" if any of its properties are accessed. The only seemingly possible
	  // way to avoid erroring is to access a property that typically works for
	  // non-anonymous divs and catch any error that may otherwise arise. See
	  // https://bugzilla.mozilla.org/show_bug.cgi?id=208427
	  try {
	    /* eslint-disable no-unused-expressions */
	    currentRange.startContainer.nodeType;
	    currentRange.endContainer.nodeType;
	    /* eslint-enable no-unused-expressions */
	  } catch (e) {
	    return null;
	  }

	  // If the node and offset values are the same, the selection is collapsed.
	  // `Selection.isCollapsed` is available natively, but IE sometimes gets
	  // this value wrong.
	  var isSelectionCollapsed = isCollapsed(selection.anchorNode, selection.anchorOffset, selection.focusNode, selection.focusOffset);

	  var rangeLength = isSelectionCollapsed ? 0 : currentRange.toString().length;

	  var tempRange = currentRange.cloneRange();
	  tempRange.selectNodeContents(node);
	  tempRange.setEnd(currentRange.startContainer, currentRange.startOffset);

	  var isTempRangeCollapsed = isCollapsed(tempRange.startContainer, tempRange.startOffset, tempRange.endContainer, tempRange.endOffset);

	  var start = isTempRangeCollapsed ? 0 : tempRange.toString().length;
	  var end = start + rangeLength;

	  // Detect whether the selection is backward.
	  var detectionRange = document.createRange();
	  detectionRange.setStart(anchorNode, anchorOffset);
	  detectionRange.setEnd(focusNode, focusOffset);
	  var isBackward = detectionRange.collapsed;

	  return {
	    start: isBackward ? end : start,
	    end: isBackward ? start : end
	  };
	}

	/**
	 * @param {DOMElement|DOMTextNode} node
	 * @param {object} offsets
	 */
	function setIEOffsets(node, offsets) {
	  var range = document.selection.createRange().duplicate();
	  var start, end;

	  if (typeof offsets.end === 'undefined') {
	    start = offsets.start;
	    end = start;
	  } else if (offsets.start > offsets.end) {
	    start = offsets.end;
	    end = offsets.start;
	  } else {
	    start = offsets.start;
	    end = offsets.end;
	  }

	  range.moveToElementText(node);
	  range.moveStart('character', start);
	  range.setEndPoint('EndToStart', range);
	  range.moveEnd('character', end - start);
	  range.select();
	}

	/**
	 * In modern non-IE browsers, we can support both forward and backward
	 * selections.
	 *
	 * Note: IE10+ supports the Selection object, but it does not support
	 * the `extend` method, which means that even in modern IE, it's not possible
	 * to programatically create a backward selection. Thus, for all IE
	 * versions, we use the old IE API to create our selections.
	 *
	 * @param {DOMElement|DOMTextNode} node
	 * @param {object} offsets
	 */
	function setModernOffsets(node, offsets) {
	  if (!window.getSelection) {
	    return;
	  }

	  var selection = window.getSelection();
	  var length = node[getTextContentAccessor()].length;
	  var start = Math.min(offsets.start, length);
	  var end = typeof offsets.end === 'undefined' ? start : Math.min(offsets.end, length);

	  // IE 11 uses modern selection, but doesn't support the extend method.
	  // Flip backward selections, so we can set with a single range.
	  if (!selection.extend && start > end) {
	    var temp = end;
	    end = start;
	    start = temp;
	  }

	  var startMarker = getNodeForCharacterOffset(node, start);
	  var endMarker = getNodeForCharacterOffset(node, end);

	  if (startMarker && endMarker) {
	    var range = document.createRange();
	    range.setStart(startMarker.node, startMarker.offset);
	    selection.removeAllRanges();

	    if (start > end) {
	      selection.addRange(range);
	      selection.extend(endMarker.node, endMarker.offset);
	    } else {
	      range.setEnd(endMarker.node, endMarker.offset);
	      selection.addRange(range);
	    }
	  }
	}

	var useIEOffsets = ExecutionEnvironment.canUseDOM && 'selection' in document && !('getSelection' in window);

	var ReactDOMSelection = {
	  /**
	   * @param {DOMElement} node
	   */
	  getOffsets: useIEOffsets ? getIEOffsets : getModernOffsets,

	  /**
	   * @param {DOMElement|DOMTextNode} node
	   * @param {object} offsets
	   */
	  setOffsets: useIEOffsets ? setIEOffsets : setModernOffsets
	};

	module.exports = ReactDOMSelection;

/***/ }),
/* 129 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getNodeForCharacterOffset
	 */

	'use strict';

	/**
	 * Given any node return the first leaf node without children.
	 *
	 * @param {DOMElement|DOMTextNode} node
	 * @return {DOMElement|DOMTextNode}
	 */
	function getLeafNode(node) {
	  while (node && node.firstChild) {
	    node = node.firstChild;
	  }
	  return node;
	}

	/**
	 * Get the next sibling within a container. This will walk up the
	 * DOM if a node's siblings have been exhausted.
	 *
	 * @param {DOMElement|DOMTextNode} node
	 * @return {?DOMElement|DOMTextNode}
	 */
	function getSiblingNode(node) {
	  while (node) {
	    if (node.nextSibling) {
	      return node.nextSibling;
	    }
	    node = node.parentNode;
	  }
	}

	/**
	 * Get object describing the nodes which contain characters at offset.
	 *
	 * @param {DOMElement|DOMTextNode} root
	 * @param {number} offset
	 * @return {?object}
	 */
	function getNodeForCharacterOffset(root, offset) {
	  var node = getLeafNode(root);
	  var nodeStart = 0;
	  var nodeEnd = 0;

	  while (node) {
	    if (node.nodeType === 3) {
	      nodeEnd = nodeStart + node.textContent.length;

	      if (nodeStart <= offset && nodeEnd >= offset) {
	        return {
	          node: node,
	          offset: offset - nodeStart
	        };
	      }

	      nodeStart = nodeEnd;
	    }

	    node = getLeafNode(getSiblingNode(node));
	  }
	}

	module.exports = getNodeForCharacterOffset;

/***/ }),
/* 130 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getActiveElement
	 * @typechecks
	 */

	/* eslint-disable fb-www/typeof-undefined */

	/**
	 * Same as document.activeElement but wraps in a try-catch block. In IE it is
	 * not safe to call document.activeElement if there is nothing focused.
	 *
	 * The activeElement will be null only if the document or document body is not
	 * yet defined.
	 */
	'use strict';

	function getActiveElement() /*?DOMElement*/{
	  if (typeof document === 'undefined') {
	    return null;
	  }
	  try {
	    return document.activeElement || document.body;
	  } catch (e) {
	    return document.body;
	  }
	}

	module.exports = getActiveElement;

/***/ }),
/* 131 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SelectEventPlugin
	 */

	'use strict';

	var EventConstants = __webpack_require__(31);
	var EventPropagators = __webpack_require__(74);
	var ExecutionEnvironment = __webpack_require__(10);
	var ReactInputSelection = __webpack_require__(127);
	var SyntheticEvent = __webpack_require__(78);

	var getActiveElement = __webpack_require__(130);
	var isTextInputElement = __webpack_require__(83);
	var keyOf = __webpack_require__(80);
	var shallowEqual = __webpack_require__(118);

	var topLevelTypes = EventConstants.topLevelTypes;

	var skipSelectionChangeEvent = ExecutionEnvironment.canUseDOM && 'documentMode' in document && document.documentMode <= 11;

	var eventTypes = {
	  select: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onSelect: null }),
	      captured: keyOf({ onSelectCapture: null })
	    },
	    dependencies: [topLevelTypes.topBlur, topLevelTypes.topContextMenu, topLevelTypes.topFocus, topLevelTypes.topKeyDown, topLevelTypes.topMouseDown, topLevelTypes.topMouseUp, topLevelTypes.topSelectionChange]
	  }
	};

	var activeElement = null;
	var activeElementID = null;
	var lastSelection = null;
	var mouseDown = false;

	// Track whether a listener exists for this plugin. If none exist, we do
	// not extract events.
	var hasListener = false;
	var ON_SELECT_KEY = keyOf({ onSelect: null });

	/**
	 * Get an object which is a unique representation of the current selection.
	 *
	 * The return value will not be consistent across nodes or browsers, but
	 * two identical selections on the same node will return identical objects.
	 *
	 * @param {DOMElement} node
	 * @return {object}
	 */
	function getSelection(node) {
	  if ('selectionStart' in node && ReactInputSelection.hasSelectionCapabilities(node)) {
	    return {
	      start: node.selectionStart,
	      end: node.selectionEnd
	    };
	  } else if (window.getSelection) {
	    var selection = window.getSelection();
	    return {
	      anchorNode: selection.anchorNode,
	      anchorOffset: selection.anchorOffset,
	      focusNode: selection.focusNode,
	      focusOffset: selection.focusOffset
	    };
	  } else if (document.selection) {
	    var range = document.selection.createRange();
	    return {
	      parentElement: range.parentElement(),
	      text: range.text,
	      top: range.boundingTop,
	      left: range.boundingLeft
	    };
	  }
	}

	/**
	 * Poll selection to see whether it's changed.
	 *
	 * @param {object} nativeEvent
	 * @return {?SyntheticEvent}
	 */
	function constructSelectEvent(nativeEvent, nativeEventTarget) {
	  // Ensure we have the right element, and that the user is not dragging a
	  // selection (this matches native `select` event behavior). In HTML5, select
	  // fires only on input and textarea thus if there's no focused element we
	  // won't dispatch.
	  if (mouseDown || activeElement == null || activeElement !== getActiveElement()) {
	    return null;
	  }

	  // Only fire when selection has actually changed.
	  var currentSelection = getSelection(activeElement);
	  if (!lastSelection || !shallowEqual(lastSelection, currentSelection)) {
	    lastSelection = currentSelection;

	    var syntheticEvent = SyntheticEvent.getPooled(eventTypes.select, activeElementID, nativeEvent, nativeEventTarget);

	    syntheticEvent.type = 'select';
	    syntheticEvent.target = activeElement;

	    EventPropagators.accumulateTwoPhaseDispatches(syntheticEvent);

	    return syntheticEvent;
	  }

	  return null;
	}

	/**
	 * This plugin creates an `onSelect` event that normalizes select events
	 * across form elements.
	 *
	 * Supported elements are:
	 * - input (see `isTextInputElement`)
	 * - textarea
	 * - contentEditable
	 *
	 * This differs from native browser implementations in the following ways:
	 * - Fires on contentEditable fields as well as inputs.
	 * - Fires for collapsed selection.
	 * - Fires after user input.
	 */
	var SelectEventPlugin = {

	  eventTypes: eventTypes,

	  /**
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {DOMEventTarget} topLevelTarget The listening component root node.
	   * @param {string} topLevelTargetID ID of `topLevelTarget`.
	   * @param {object} nativeEvent Native browser event.
	   * @return {*} An accumulation of synthetic events.
	   * @see {EventPluginHub.extractEvents}
	   */
	  extractEvents: function (topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget) {
	    if (!hasListener) {
	      return null;
	    }

	    switch (topLevelType) {
	      // Track the input node that has focus.
	      case topLevelTypes.topFocus:
	        if (isTextInputElement(topLevelTarget) || topLevelTarget.contentEditable === 'true') {
	          activeElement = topLevelTarget;
	          activeElementID = topLevelTargetID;
	          lastSelection = null;
	        }
	        break;
	      case topLevelTypes.topBlur:
	        activeElement = null;
	        activeElementID = null;
	        lastSelection = null;
	        break;

	      // Don't fire the event while the user is dragging. This matches the
	      // semantics of the native select event.
	      case topLevelTypes.topMouseDown:
	        mouseDown = true;
	        break;
	      case topLevelTypes.topContextMenu:
	      case topLevelTypes.topMouseUp:
	        mouseDown = false;
	        return constructSelectEvent(nativeEvent, nativeEventTarget);

	      // Chrome and IE fire non-standard event when selection is changed (and
	      // sometimes when it hasn't). IE's event fires out of order with respect
	      // to key and input events on deletion, so we discard it.
	      //
	      // Firefox doesn't support selectionchange, so check selection status
	      // after each key entry. The selection changes after keydown and before
	      // keyup, but we check on keydown as well in the case of holding down a
	      // key, when multiple keydown events are fired but only one keyup is.
	      // This is also our approach for IE handling, for the reason above.
	      case topLevelTypes.topSelectionChange:
	        if (skipSelectionChangeEvent) {
	          break;
	        }
	      // falls through
	      case topLevelTypes.topKeyDown:
	      case topLevelTypes.topKeyUp:
	        return constructSelectEvent(nativeEvent, nativeEventTarget);
	    }

	    return null;
	  },

	  didPutListener: function (id, registrationName, listener) {
	    if (registrationName === ON_SELECT_KEY) {
	      hasListener = true;
	    }
	  }
	};

	module.exports = SelectEventPlugin;

/***/ }),
/* 132 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ServerReactRootIndex
	 * @typechecks
	 */

	'use strict';

	/**
	 * Size of the reactRoot ID space. We generate random numbers for React root
	 * IDs and if there's a collision the events and DOM update system will
	 * get confused. In the future we need a way to generate GUIDs but for
	 * now this will work on a smaller scale.
	 */
	var GLOBAL_MOUNT_POINT_MAX = Math.pow(2, 53);

	var ServerReactRootIndex = {
	  createReactRootIndex: function () {
	    return Math.ceil(Math.random() * GLOBAL_MOUNT_POINT_MAX);
	  }
	};

	module.exports = ServerReactRootIndex;

/***/ }),
/* 133 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SimpleEventPlugin
	 */

	'use strict';

	var EventConstants = __webpack_require__(31);
	var EventListener = __webpack_require__(120);
	var EventPropagators = __webpack_require__(74);
	var ReactMount = __webpack_require__(29);
	var SyntheticClipboardEvent = __webpack_require__(134);
	var SyntheticEvent = __webpack_require__(78);
	var SyntheticFocusEvent = __webpack_require__(135);
	var SyntheticKeyboardEvent = __webpack_require__(136);
	var SyntheticMouseEvent = __webpack_require__(87);
	var SyntheticDragEvent = __webpack_require__(139);
	var SyntheticTouchEvent = __webpack_require__(140);
	var SyntheticUIEvent = __webpack_require__(88);
	var SyntheticWheelEvent = __webpack_require__(141);

	var emptyFunction = __webpack_require__(16);
	var getEventCharCode = __webpack_require__(137);
	var invariant = __webpack_require__(14);
	var keyOf = __webpack_require__(80);

	var topLevelTypes = EventConstants.topLevelTypes;

	var eventTypes = {
	  abort: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onAbort: true }),
	      captured: keyOf({ onAbortCapture: true })
	    }
	  },
	  blur: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onBlur: true }),
	      captured: keyOf({ onBlurCapture: true })
	    }
	  },
	  canPlay: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onCanPlay: true }),
	      captured: keyOf({ onCanPlayCapture: true })
	    }
	  },
	  canPlayThrough: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onCanPlayThrough: true }),
	      captured: keyOf({ onCanPlayThroughCapture: true })
	    }
	  },
	  click: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onClick: true }),
	      captured: keyOf({ onClickCapture: true })
	    }
	  },
	  contextMenu: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onContextMenu: true }),
	      captured: keyOf({ onContextMenuCapture: true })
	    }
	  },
	  copy: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onCopy: true }),
	      captured: keyOf({ onCopyCapture: true })
	    }
	  },
	  cut: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onCut: true }),
	      captured: keyOf({ onCutCapture: true })
	    }
	  },
	  doubleClick: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDoubleClick: true }),
	      captured: keyOf({ onDoubleClickCapture: true })
	    }
	  },
	  drag: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDrag: true }),
	      captured: keyOf({ onDragCapture: true })
	    }
	  },
	  dragEnd: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDragEnd: true }),
	      captured: keyOf({ onDragEndCapture: true })
	    }
	  },
	  dragEnter: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDragEnter: true }),
	      captured: keyOf({ onDragEnterCapture: true })
	    }
	  },
	  dragExit: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDragExit: true }),
	      captured: keyOf({ onDragExitCapture: true })
	    }
	  },
	  dragLeave: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDragLeave: true }),
	      captured: keyOf({ onDragLeaveCapture: true })
	    }
	  },
	  dragOver: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDragOver: true }),
	      captured: keyOf({ onDragOverCapture: true })
	    }
	  },
	  dragStart: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDragStart: true }),
	      captured: keyOf({ onDragStartCapture: true })
	    }
	  },
	  drop: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDrop: true }),
	      captured: keyOf({ onDropCapture: true })
	    }
	  },
	  durationChange: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDurationChange: true }),
	      captured: keyOf({ onDurationChangeCapture: true })
	    }
	  },
	  emptied: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onEmptied: true }),
	      captured: keyOf({ onEmptiedCapture: true })
	    }
	  },
	  encrypted: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onEncrypted: true }),
	      captured: keyOf({ onEncryptedCapture: true })
	    }
	  },
	  ended: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onEnded: true }),
	      captured: keyOf({ onEndedCapture: true })
	    }
	  },
	  error: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onError: true }),
	      captured: keyOf({ onErrorCapture: true })
	    }
	  },
	  focus: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onFocus: true }),
	      captured: keyOf({ onFocusCapture: true })
	    }
	  },
	  input: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onInput: true }),
	      captured: keyOf({ onInputCapture: true })
	    }
	  },
	  keyDown: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onKeyDown: true }),
	      captured: keyOf({ onKeyDownCapture: true })
	    }
	  },
	  keyPress: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onKeyPress: true }),
	      captured: keyOf({ onKeyPressCapture: true })
	    }
	  },
	  keyUp: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onKeyUp: true }),
	      captured: keyOf({ onKeyUpCapture: true })
	    }
	  },
	  load: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onLoad: true }),
	      captured: keyOf({ onLoadCapture: true })
	    }
	  },
	  loadedData: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onLoadedData: true }),
	      captured: keyOf({ onLoadedDataCapture: true })
	    }
	  },
	  loadedMetadata: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onLoadedMetadata: true }),
	      captured: keyOf({ onLoadedMetadataCapture: true })
	    }
	  },
	  loadStart: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onLoadStart: true }),
	      captured: keyOf({ onLoadStartCapture: true })
	    }
	  },
	  // Note: We do not allow listening to mouseOver events. Instead, use the
	  // onMouseEnter/onMouseLeave created by `EnterLeaveEventPlugin`.
	  mouseDown: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onMouseDown: true }),
	      captured: keyOf({ onMouseDownCapture: true })
	    }
	  },
	  mouseMove: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onMouseMove: true }),
	      captured: keyOf({ onMouseMoveCapture: true })
	    }
	  },
	  mouseOut: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onMouseOut: true }),
	      captured: keyOf({ onMouseOutCapture: true })
	    }
	  },
	  mouseOver: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onMouseOver: true }),
	      captured: keyOf({ onMouseOverCapture: true })
	    }
	  },
	  mouseUp: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onMouseUp: true }),
	      captured: keyOf({ onMouseUpCapture: true })
	    }
	  },
	  paste: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onPaste: true }),
	      captured: keyOf({ onPasteCapture: true })
	    }
	  },
	  pause: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onPause: true }),
	      captured: keyOf({ onPauseCapture: true })
	    }
	  },
	  play: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onPlay: true }),
	      captured: keyOf({ onPlayCapture: true })
	    }
	  },
	  playing: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onPlaying: true }),
	      captured: keyOf({ onPlayingCapture: true })
	    }
	  },
	  progress: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onProgress: true }),
	      captured: keyOf({ onProgressCapture: true })
	    }
	  },
	  rateChange: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onRateChange: true }),
	      captured: keyOf({ onRateChangeCapture: true })
	    }
	  },
	  reset: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onReset: true }),
	      captured: keyOf({ onResetCapture: true })
	    }
	  },
	  scroll: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onScroll: true }),
	      captured: keyOf({ onScrollCapture: true })
	    }
	  },
	  seeked: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onSeeked: true }),
	      captured: keyOf({ onSeekedCapture: true })
	    }
	  },
	  seeking: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onSeeking: true }),
	      captured: keyOf({ onSeekingCapture: true })
	    }
	  },
	  stalled: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onStalled: true }),
	      captured: keyOf({ onStalledCapture: true })
	    }
	  },
	  submit: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onSubmit: true }),
	      captured: keyOf({ onSubmitCapture: true })
	    }
	  },
	  suspend: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onSuspend: true }),
	      captured: keyOf({ onSuspendCapture: true })
	    }
	  },
	  timeUpdate: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onTimeUpdate: true }),
	      captured: keyOf({ onTimeUpdateCapture: true })
	    }
	  },
	  touchCancel: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onTouchCancel: true }),
	      captured: keyOf({ onTouchCancelCapture: true })
	    }
	  },
	  touchEnd: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onTouchEnd: true }),
	      captured: keyOf({ onTouchEndCapture: true })
	    }
	  },
	  touchMove: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onTouchMove: true }),
	      captured: keyOf({ onTouchMoveCapture: true })
	    }
	  },
	  touchStart: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onTouchStart: true }),
	      captured: keyOf({ onTouchStartCapture: true })
	    }
	  },
	  volumeChange: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onVolumeChange: true }),
	      captured: keyOf({ onVolumeChangeCapture: true })
	    }
	  },
	  waiting: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onWaiting: true }),
	      captured: keyOf({ onWaitingCapture: true })
	    }
	  },
	  wheel: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onWheel: true }),
	      captured: keyOf({ onWheelCapture: true })
	    }
	  }
	};

	var topLevelEventsToDispatchConfig = {
	  topAbort: eventTypes.abort,
	  topBlur: eventTypes.blur,
	  topCanPlay: eventTypes.canPlay,
	  topCanPlayThrough: eventTypes.canPlayThrough,
	  topClick: eventTypes.click,
	  topContextMenu: eventTypes.contextMenu,
	  topCopy: eventTypes.copy,
	  topCut: eventTypes.cut,
	  topDoubleClick: eventTypes.doubleClick,
	  topDrag: eventTypes.drag,
	  topDragEnd: eventTypes.dragEnd,
	  topDragEnter: eventTypes.dragEnter,
	  topDragExit: eventTypes.dragExit,
	  topDragLeave: eventTypes.dragLeave,
	  topDragOver: eventTypes.dragOver,
	  topDragStart: eventTypes.dragStart,
	  topDrop: eventTypes.drop,
	  topDurationChange: eventTypes.durationChange,
	  topEmptied: eventTypes.emptied,
	  topEncrypted: eventTypes.encrypted,
	  topEnded: eventTypes.ended,
	  topError: eventTypes.error,
	  topFocus: eventTypes.focus,
	  topInput: eventTypes.input,
	  topKeyDown: eventTypes.keyDown,
	  topKeyPress: eventTypes.keyPress,
	  topKeyUp: eventTypes.keyUp,
	  topLoad: eventTypes.load,
	  topLoadedData: eventTypes.loadedData,
	  topLoadedMetadata: eventTypes.loadedMetadata,
	  topLoadStart: eventTypes.loadStart,
	  topMouseDown: eventTypes.mouseDown,
	  topMouseMove: eventTypes.mouseMove,
	  topMouseOut: eventTypes.mouseOut,
	  topMouseOver: eventTypes.mouseOver,
	  topMouseUp: eventTypes.mouseUp,
	  topPaste: eventTypes.paste,
	  topPause: eventTypes.pause,
	  topPlay: eventTypes.play,
	  topPlaying: eventTypes.playing,
	  topProgress: eventTypes.progress,
	  topRateChange: eventTypes.rateChange,
	  topReset: eventTypes.reset,
	  topScroll: eventTypes.scroll,
	  topSeeked: eventTypes.seeked,
	  topSeeking: eventTypes.seeking,
	  topStalled: eventTypes.stalled,
	  topSubmit: eventTypes.submit,
	  topSuspend: eventTypes.suspend,
	  topTimeUpdate: eventTypes.timeUpdate,
	  topTouchCancel: eventTypes.touchCancel,
	  topTouchEnd: eventTypes.touchEnd,
	  topTouchMove: eventTypes.touchMove,
	  topTouchStart: eventTypes.touchStart,
	  topVolumeChange: eventTypes.volumeChange,
	  topWaiting: eventTypes.waiting,
	  topWheel: eventTypes.wheel
	};

	for (var type in topLevelEventsToDispatchConfig) {
	  topLevelEventsToDispatchConfig[type].dependencies = [type];
	}

	var ON_CLICK_KEY = keyOf({ onClick: null });
	var onClickListeners = {};

	var SimpleEventPlugin = {

	  eventTypes: eventTypes,

	  /**
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {DOMEventTarget} topLevelTarget The listening component root node.
	   * @param {string} topLevelTargetID ID of `topLevelTarget`.
	   * @param {object} nativeEvent Native browser event.
	   * @return {*} An accumulation of synthetic events.
	   * @see {EventPluginHub.extractEvents}
	   */
	  extractEvents: function (topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget) {
	    var dispatchConfig = topLevelEventsToDispatchConfig[topLevelType];
	    if (!dispatchConfig) {
	      return null;
	    }
	    var EventConstructor;
	    switch (topLevelType) {
	      case topLevelTypes.topAbort:
	      case topLevelTypes.topCanPlay:
	      case topLevelTypes.topCanPlayThrough:
	      case topLevelTypes.topDurationChange:
	      case topLevelTypes.topEmptied:
	      case topLevelTypes.topEncrypted:
	      case topLevelTypes.topEnded:
	      case topLevelTypes.topError:
	      case topLevelTypes.topInput:
	      case topLevelTypes.topLoad:
	      case topLevelTypes.topLoadedData:
	      case topLevelTypes.topLoadedMetadata:
	      case topLevelTypes.topLoadStart:
	      case topLevelTypes.topPause:
	      case topLevelTypes.topPlay:
	      case topLevelTypes.topPlaying:
	      case topLevelTypes.topProgress:
	      case topLevelTypes.topRateChange:
	      case topLevelTypes.topReset:
	      case topLevelTypes.topSeeked:
	      case topLevelTypes.topSeeking:
	      case topLevelTypes.topStalled:
	      case topLevelTypes.topSubmit:
	      case topLevelTypes.topSuspend:
	      case topLevelTypes.topTimeUpdate:
	      case topLevelTypes.topVolumeChange:
	      case topLevelTypes.topWaiting:
	        // HTML Events
	        // @see http://www.w3.org/TR/html5/index.html#events-0
	        EventConstructor = SyntheticEvent;
	        break;
	      case topLevelTypes.topKeyPress:
	        // FireFox creates a keypress event for function keys too. This removes
	        // the unwanted keypress events. Enter is however both printable and
	        // non-printable. One would expect Tab to be as well (but it isn't).
	        if (getEventCharCode(nativeEvent) === 0) {
	          return null;
	        }
	      /* falls through */
	      case topLevelTypes.topKeyDown:
	      case topLevelTypes.topKeyUp:
	        EventConstructor = SyntheticKeyboardEvent;
	        break;
	      case topLevelTypes.topBlur:
	      case topLevelTypes.topFocus:
	        EventConstructor = SyntheticFocusEvent;
	        break;
	      case topLevelTypes.topClick:
	        // Firefox creates a click event on right mouse clicks. This removes the
	        // unwanted click events.
	        if (nativeEvent.button === 2) {
	          return null;
	        }
	      /* falls through */
	      case topLevelTypes.topContextMenu:
	      case topLevelTypes.topDoubleClick:
	      case topLevelTypes.topMouseDown:
	      case topLevelTypes.topMouseMove:
	      case topLevelTypes.topMouseOut:
	      case topLevelTypes.topMouseOver:
	      case topLevelTypes.topMouseUp:
	        EventConstructor = SyntheticMouseEvent;
	        break;
	      case topLevelTypes.topDrag:
	      case topLevelTypes.topDragEnd:
	      case topLevelTypes.topDragEnter:
	      case topLevelTypes.topDragExit:
	      case topLevelTypes.topDragLeave:
	      case topLevelTypes.topDragOver:
	      case topLevelTypes.topDragStart:
	      case topLevelTypes.topDrop:
	        EventConstructor = SyntheticDragEvent;
	        break;
	      case topLevelTypes.topTouchCancel:
	      case topLevelTypes.topTouchEnd:
	      case topLevelTypes.topTouchMove:
	      case topLevelTypes.topTouchStart:
	        EventConstructor = SyntheticTouchEvent;
	        break;
	      case topLevelTypes.topScroll:
	        EventConstructor = SyntheticUIEvent;
	        break;
	      case topLevelTypes.topWheel:
	        EventConstructor = SyntheticWheelEvent;
	        break;
	      case topLevelTypes.topCopy:
	      case topLevelTypes.topCut:
	      case topLevelTypes.topPaste:
	        EventConstructor = SyntheticClipboardEvent;
	        break;
	    }
	    !EventConstructor ? process.env.NODE_ENV !== 'production' ? invariant(false, 'SimpleEventPlugin: Unhandled event type, `%s`.', topLevelType) : invariant(false) : undefined;
	    var event = EventConstructor.getPooled(dispatchConfig, topLevelTargetID, nativeEvent, nativeEventTarget);
	    EventPropagators.accumulateTwoPhaseDispatches(event);
	    return event;
	  },

	  didPutListener: function (id, registrationName, listener) {
	    // Mobile Safari does not fire properly bubble click events on
	    // non-interactive elements, which means delegated click listeners do not
	    // fire. The workaround for this bug involves attaching an empty click
	    // listener on the target node.
	    if (registrationName === ON_CLICK_KEY) {
	      var node = ReactMount.getNode(id);
	      if (!onClickListeners[id]) {
	        onClickListeners[id] = EventListener.listen(node, 'click', emptyFunction);
	      }
	    }
	  },

	  willDeleteListener: function (id, registrationName) {
	    if (registrationName === ON_CLICK_KEY) {
	      onClickListeners[id].remove();
	      delete onClickListeners[id];
	    }
	  }

	};

	module.exports = SimpleEventPlugin;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)))

/***/ }),
/* 134 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticClipboardEvent
	 * @typechecks static-only
	 */

	'use strict';

	var SyntheticEvent = __webpack_require__(78);

	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/clipboard-apis/
	 */
	var ClipboardEventInterface = {
	  clipboardData: function (event) {
	    return 'clipboardData' in event ? event.clipboardData : window.clipboardData;
	  }
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticClipboardEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticEvent.augmentClass(SyntheticClipboardEvent, ClipboardEventInterface);

	module.exports = SyntheticClipboardEvent;

/***/ }),
/* 135 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticFocusEvent
	 * @typechecks static-only
	 */

	'use strict';

	var SyntheticUIEvent = __webpack_require__(88);

	/**
	 * @interface FocusEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var FocusEventInterface = {
	  relatedTarget: null
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticFocusEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticUIEvent.augmentClass(SyntheticFocusEvent, FocusEventInterface);

	module.exports = SyntheticFocusEvent;

/***/ }),
/* 136 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticKeyboardEvent
	 * @typechecks static-only
	 */

	'use strict';

	var SyntheticUIEvent = __webpack_require__(88);

	var getEventCharCode = __webpack_require__(137);
	var getEventKey = __webpack_require__(138);
	var getEventModifierState = __webpack_require__(89);

	/**
	 * @interface KeyboardEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var KeyboardEventInterface = {
	  key: getEventKey,
	  location: null,
	  ctrlKey: null,
	  shiftKey: null,
	  altKey: null,
	  metaKey: null,
	  repeat: null,
	  locale: null,
	  getModifierState: getEventModifierState,
	  // Legacy Interface
	  charCode: function (event) {
	    // `charCode` is the result of a KeyPress event and represents the value of
	    // the actual printable character.

	    // KeyPress is deprecated, but its replacement is not yet final and not
	    // implemented in any major browser. Only KeyPress has charCode.
	    if (event.type === 'keypress') {
	      return getEventCharCode(event);
	    }
	    return 0;
	  },
	  keyCode: function (event) {
	    // `keyCode` is the result of a KeyDown/Up event and represents the value of
	    // physical keyboard key.

	    // The actual meaning of the value depends on the users' keyboard layout
	    // which cannot be detected. Assuming that it is a US keyboard layout
	    // provides a surprisingly accurate mapping for US and European users.
	    // Due to this, it is left to the user to implement at this time.
	    if (event.type === 'keydown' || event.type === 'keyup') {
	      return event.keyCode;
	    }
	    return 0;
	  },
	  which: function (event) {
	    // `which` is an alias for either `keyCode` or `charCode` depending on the
	    // type of the event.
	    if (event.type === 'keypress') {
	      return getEventCharCode(event);
	    }
	    if (event.type === 'keydown' || event.type === 'keyup') {
	      return event.keyCode;
	    }
	    return 0;
	  }
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticKeyboardEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticUIEvent.augmentClass(SyntheticKeyboardEvent, KeyboardEventInterface);

	module.exports = SyntheticKeyboardEvent;

/***/ }),
/* 137 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getEventCharCode
	 * @typechecks static-only
	 */

	'use strict';

	/**
	 * `charCode` represents the actual "character code" and is safe to use with
	 * `String.fromCharCode`. As such, only keys that correspond to printable
	 * characters produce a valid `charCode`, the only exception to this is Enter.
	 * The Tab-key is considered non-printable and does not have a `charCode`,
	 * presumably because it does not produce a tab-character in browsers.
	 *
	 * @param {object} nativeEvent Native browser event.
	 * @return {number} Normalized `charCode` property.
	 */
	function getEventCharCode(nativeEvent) {
	  var charCode;
	  var keyCode = nativeEvent.keyCode;

	  if ('charCode' in nativeEvent) {
	    charCode = nativeEvent.charCode;

	    // FF does not set `charCode` for the Enter-key, check against `keyCode`.
	    if (charCode === 0 && keyCode === 13) {
	      charCode = 13;
	    }
	  } else {
	    // IE8 does not implement `charCode`, but `keyCode` has the correct value.
	    charCode = keyCode;
	  }

	  // Some non-printable keys are reported in `charCode`/`keyCode`, discard them.
	  // Must not discard the (non-)printable Enter-key.
	  if (charCode >= 32 || charCode === 13) {
	    return charCode;
	  }

	  return 0;
	}

	module.exports = getEventCharCode;

/***/ }),
/* 138 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getEventKey
	 * @typechecks static-only
	 */

	'use strict';

	var getEventCharCode = __webpack_require__(137);

	/**
	 * Normalization of deprecated HTML5 `key` values
	 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
	 */
	var normalizeKey = {
	  'Esc': 'Escape',
	  'Spacebar': ' ',
	  'Left': 'ArrowLeft',
	  'Up': 'ArrowUp',
	  'Right': 'ArrowRight',
	  'Down': 'ArrowDown',
	  'Del': 'Delete',
	  'Win': 'OS',
	  'Menu': 'ContextMenu',
	  'Apps': 'ContextMenu',
	  'Scroll': 'ScrollLock',
	  'MozPrintableKey': 'Unidentified'
	};

	/**
	 * Translation from legacy `keyCode` to HTML5 `key`
	 * Only special keys supported, all others depend on keyboard layout or browser
	 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
	 */
	var translateToKey = {
	  8: 'Backspace',
	  9: 'Tab',
	  12: 'Clear',
	  13: 'Enter',
	  16: 'Shift',
	  17: 'Control',
	  18: 'Alt',
	  19: 'Pause',
	  20: 'CapsLock',
	  27: 'Escape',
	  32: ' ',
	  33: 'PageUp',
	  34: 'PageDown',
	  35: 'End',
	  36: 'Home',
	  37: 'ArrowLeft',
	  38: 'ArrowUp',
	  39: 'ArrowRight',
	  40: 'ArrowDown',
	  45: 'Insert',
	  46: 'Delete',
	  112: 'F1', 113: 'F2', 114: 'F3', 115: 'F4', 116: 'F5', 117: 'F6',
	  118: 'F7', 119: 'F8', 120: 'F9', 121: 'F10', 122: 'F11', 123: 'F12',
	  144: 'NumLock',
	  145: 'ScrollLock',
	  224: 'Meta'
	};

	/**
	 * @param {object} nativeEvent Native browser event.
	 * @return {string} Normalized `key` property.
	 */
	function getEventKey(nativeEvent) {
	  if (nativeEvent.key) {
	    // Normalize inconsistent values reported by browsers due to
	    // implementations of a working draft specification.

	    // FireFox implements `key` but returns `MozPrintableKey` for all
	    // printable characters (normalized to `Unidentified`), ignore it.
	    var key = normalizeKey[nativeEvent.key] || nativeEvent.key;
	    if (key !== 'Unidentified') {
	      return key;
	    }
	  }

	  // Browser does not implement `key`, polyfill as much of it as we can.
	  if (nativeEvent.type === 'keypress') {
	    var charCode = getEventCharCode(nativeEvent);

	    // The enter-key is technically both printable and non-printable and can
	    // thus be captured by `keypress`, no other non-printable key should.
	    return charCode === 13 ? 'Enter' : String.fromCharCode(charCode);
	  }
	  if (nativeEvent.type === 'keydown' || nativeEvent.type === 'keyup') {
	    // While user keyboard layout determines the actual meaning of each
	    // `keyCode` value, almost all function keys have a universal value.
	    return translateToKey[nativeEvent.keyCode] || 'Unidentified';
	  }
	  return '';
	}

	module.exports = getEventKey;

/***/ }),
/* 139 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticDragEvent
	 * @typechecks static-only
	 */

	'use strict';

	var SyntheticMouseEvent = __webpack_require__(87);

	/**
	 * @interface DragEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var DragEventInterface = {
	  dataTransfer: null
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticDragEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticMouseEvent.augmentClass(SyntheticDragEvent, DragEventInterface);

	module.exports = SyntheticDragEvent;

/***/ }),
/* 140 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticTouchEvent
	 * @typechecks static-only
	 */

	'use strict';

	var SyntheticUIEvent = __webpack_require__(88);

	var getEventModifierState = __webpack_require__(89);

	/**
	 * @interface TouchEvent
	 * @see http://www.w3.org/TR/touch-events/
	 */
	var TouchEventInterface = {
	  touches: null,
	  targetTouches: null,
	  changedTouches: null,
	  altKey: null,
	  metaKey: null,
	  ctrlKey: null,
	  shiftKey: null,
	  getModifierState: getEventModifierState
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticTouchEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticUIEvent.augmentClass(SyntheticTouchEvent, TouchEventInterface);

	module.exports = SyntheticTouchEvent;

/***/ }),
/* 141 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticWheelEvent
	 * @typechecks static-only
	 */

	'use strict';

	var SyntheticMouseEvent = __webpack_require__(87);

	/**
	 * @interface WheelEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var WheelEventInterface = {
	  deltaX: function (event) {
	    return 'deltaX' in event ? event.deltaX :
	    // Fallback to `wheelDeltaX` for Webkit and normalize (right is positive).
	    'wheelDeltaX' in event ? -event.wheelDeltaX : 0;
	  },
	  deltaY: function (event) {
	    return 'deltaY' in event ? event.deltaY :
	    // Fallback to `wheelDeltaY` for Webkit and normalize (down is positive).
	    'wheelDeltaY' in event ? -event.wheelDeltaY :
	    // Fallback to `wheelDelta` for IE<9 and normalize (down is positive).
	    'wheelDelta' in event ? -event.wheelDelta : 0;
	  },
	  deltaZ: null,

	  // Browsers without "deltaMode" is reporting in raw wheel delta where one
	  // notch on the scroll is always +/- 120, roughly equivalent to pixels.
	  // A good approximation of DOM_DELTA_LINE (1) is 5% of viewport size or
	  // ~40 pixels, for DOM_DELTA_SCREEN (2) it is 87.5% of viewport size.
	  deltaMode: null
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticMouseEvent}
	 */
	function SyntheticWheelEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticMouseEvent.augmentClass(SyntheticWheelEvent, WheelEventInterface);

	module.exports = SyntheticWheelEvent;

/***/ }),
/* 142 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SVGDOMPropertyConfig
	 */

	'use strict';

	var DOMProperty = __webpack_require__(24);

	var MUST_USE_ATTRIBUTE = DOMProperty.injection.MUST_USE_ATTRIBUTE;

	var NS = {
	  xlink: 'http://www.w3.org/1999/xlink',
	  xml: 'http://www.w3.org/XML/1998/namespace'
	};

	var SVGDOMPropertyConfig = {
	  Properties: {
	    clipPath: MUST_USE_ATTRIBUTE,
	    cx: MUST_USE_ATTRIBUTE,
	    cy: MUST_USE_ATTRIBUTE,
	    d: MUST_USE_ATTRIBUTE,
	    dx: MUST_USE_ATTRIBUTE,
	    dy: MUST_USE_ATTRIBUTE,
	    fill: MUST_USE_ATTRIBUTE,
	    fillOpacity: MUST_USE_ATTRIBUTE,
	    fontFamily: MUST_USE_ATTRIBUTE,
	    fontSize: MUST_USE_ATTRIBUTE,
	    fx: MUST_USE_ATTRIBUTE,
	    fy: MUST_USE_ATTRIBUTE,
	    gradientTransform: MUST_USE_ATTRIBUTE,
	    gradientUnits: MUST_USE_ATTRIBUTE,
	    markerEnd: MUST_USE_ATTRIBUTE,
	    markerMid: MUST_USE_ATTRIBUTE,
	    markerStart: MUST_USE_ATTRIBUTE,
	    offset: MUST_USE_ATTRIBUTE,
	    opacity: MUST_USE_ATTRIBUTE,
	    patternContentUnits: MUST_USE_ATTRIBUTE,
	    patternUnits: MUST_USE_ATTRIBUTE,
	    points: MUST_USE_ATTRIBUTE,
	    preserveAspectRatio: MUST_USE_ATTRIBUTE,
	    r: MUST_USE_ATTRIBUTE,
	    rx: MUST_USE_ATTRIBUTE,
	    ry: MUST_USE_ATTRIBUTE,
	    spreadMethod: MUST_USE_ATTRIBUTE,
	    stopColor: MUST_USE_ATTRIBUTE,
	    stopOpacity: MUST_USE_ATTRIBUTE,
	    stroke: MUST_USE_ATTRIBUTE,
	    strokeDasharray: MUST_USE_ATTRIBUTE,
	    strokeLinecap: MUST_USE_ATTRIBUTE,
	    strokeOpacity: MUST_USE_ATTRIBUTE,
	    strokeWidth: MUST_USE_ATTRIBUTE,
	    textAnchor: MUST_USE_ATTRIBUTE,
	    transform: MUST_USE_ATTRIBUTE,
	    version: MUST_USE_ATTRIBUTE,
	    viewBox: MUST_USE_ATTRIBUTE,
	    x1: MUST_USE_ATTRIBUTE,
	    x2: MUST_USE_ATTRIBUTE,
	    x: MUST_USE_ATTRIBUTE,
	    xlinkActuate: MUST_USE_ATTRIBUTE,
	    xlinkArcrole: MUST_USE_ATTRIBUTE,
	    xlinkHref: MUST_USE_ATTRIBUTE,
	    xlinkRole: MUST_USE_ATTRIBUTE,
	    xlinkShow: MUST_USE_ATTRIBUTE,
	    xlinkTitle: MUST_USE_ATTRIBUTE,
	    xlinkType: MUST_USE_ATTRIBUTE,
	    xmlBase: MUST_USE_ATTRIBUTE,
	    xmlLang: MUST_USE_ATTRIBUTE,
	    xmlSpace: MUST_USE_ATTRIBUTE,
	    y1: MUST_USE_ATTRIBUTE,
	    y2: MUST_USE_ATTRIBUTE,
	    y: MUST_USE_ATTRIBUTE
	  },
	  DOMAttributeNamespaces: {
	    xlinkActuate: NS.xlink,
	    xlinkArcrole: NS.xlink,
	    xlinkHref: NS.xlink,
	    xlinkRole: NS.xlink,
	    xlinkShow: NS.xlink,
	    xlinkTitle: NS.xlink,
	    xlinkType: NS.xlink,
	    xmlBase: NS.xml,
	    xmlLang: NS.xml,
	    xmlSpace: NS.xml
	  },
	  DOMAttributeNames: {
	    clipPath: 'clip-path',
	    fillOpacity: 'fill-opacity',
	    fontFamily: 'font-family',
	    fontSize: 'font-size',
	    gradientTransform: 'gradientTransform',
	    gradientUnits: 'gradientUnits',
	    markerEnd: 'marker-end',
	    markerMid: 'marker-mid',
	    markerStart: 'marker-start',
	    patternContentUnits: 'patternContentUnits',
	    patternUnits: 'patternUnits',
	    preserveAspectRatio: 'preserveAspectRatio',
	    spreadMethod: 'spreadMethod',
	    stopColor: 'stop-color',
	    stopOpacity: 'stop-opacity',
	    strokeDasharray: 'stroke-dasharray',
	    strokeLinecap: 'stroke-linecap',
	    strokeOpacity: 'stroke-opacity',
	    strokeWidth: 'stroke-width',
	    textAnchor: 'text-anchor',
	    viewBox: 'viewBox',
	    xlinkActuate: 'xlink:actuate',
	    xlinkArcrole: 'xlink:arcrole',
	    xlinkHref: 'xlink:href',
	    xlinkRole: 'xlink:role',
	    xlinkShow: 'xlink:show',
	    xlinkTitle: 'xlink:title',
	    xlinkType: 'xlink:type',
	    xmlBase: 'xml:base',
	    xmlLang: 'xml:lang',
	    xmlSpace: 'xml:space'
	  }
	};

	module.exports = SVGDOMPropertyConfig;

/***/ }),
/* 143 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDefaultPerf
	 * @typechecks static-only
	 */

	'use strict';

	var DOMProperty = __webpack_require__(24);
	var ReactDefaultPerfAnalysis = __webpack_require__(144);
	var ReactMount = __webpack_require__(29);
	var ReactPerf = __webpack_require__(19);

	var performanceNow = __webpack_require__(145);

	function roundFloat(val) {
	  return Math.floor(val * 100) / 100;
	}

	function addValue(obj, key, val) {
	  obj[key] = (obj[key] || 0) + val;
	}

	var ReactDefaultPerf = {
	  _allMeasurements: [], // last item in the list is the current one
	  _mountStack: [0],
	  _injected: false,

	  start: function () {
	    if (!ReactDefaultPerf._injected) {
	      ReactPerf.injection.injectMeasure(ReactDefaultPerf.measure);
	    }

	    ReactDefaultPerf._allMeasurements.length = 0;
	    ReactPerf.enableMeasure = true;
	  },

	  stop: function () {
	    ReactPerf.enableMeasure = false;
	  },

	  getLastMeasurements: function () {
	    return ReactDefaultPerf._allMeasurements;
	  },

	  printExclusive: function (measurements) {
	    measurements = measurements || ReactDefaultPerf._allMeasurements;
	    var summary = ReactDefaultPerfAnalysis.getExclusiveSummary(measurements);
	    console.table(summary.map(function (item) {
	      return {
	        'Component class name': item.componentName,
	        'Total inclusive time (ms)': roundFloat(item.inclusive),
	        'Exclusive mount time (ms)': roundFloat(item.exclusive),
	        'Exclusive render time (ms)': roundFloat(item.render),
	        'Mount time per instance (ms)': roundFloat(item.exclusive / item.count),
	        'Render time per instance (ms)': roundFloat(item.render / item.count),
	        'Instances': item.count
	      };
	    }));
	    // TODO: ReactDefaultPerfAnalysis.getTotalTime() does not return the correct
	    // number.
	  },

	  printInclusive: function (measurements) {
	    measurements = measurements || ReactDefaultPerf._allMeasurements;
	    var summary = ReactDefaultPerfAnalysis.getInclusiveSummary(measurements);
	    console.table(summary.map(function (item) {
	      return {
	        'Owner > component': item.componentName,
	        'Inclusive time (ms)': roundFloat(item.time),
	        'Instances': item.count
	      };
	    }));
	    console.log('Total time:', ReactDefaultPerfAnalysis.getTotalTime(measurements).toFixed(2) + ' ms');
	  },

	  getMeasurementsSummaryMap: function (measurements) {
	    var summary = ReactDefaultPerfAnalysis.getInclusiveSummary(measurements, true);
	    return summary.map(function (item) {
	      return {
	        'Owner > component': item.componentName,
	        'Wasted time (ms)': item.time,
	        'Instances': item.count
	      };
	    });
	  },

	  printWasted: function (measurements) {
	    measurements = measurements || ReactDefaultPerf._allMeasurements;
	    console.table(ReactDefaultPerf.getMeasurementsSummaryMap(measurements));
	    console.log('Total time:', ReactDefaultPerfAnalysis.getTotalTime(measurements).toFixed(2) + ' ms');
	  },

	  printDOM: function (measurements) {
	    measurements = measurements || ReactDefaultPerf._allMeasurements;
	    var summary = ReactDefaultPerfAnalysis.getDOMSummary(measurements);
	    console.table(summary.map(function (item) {
	      var result = {};
	      result[DOMProperty.ID_ATTRIBUTE_NAME] = item.id;
	      result.type = item.type;
	      result.args = JSON.stringify(item.args);
	      return result;
	    }));
	    console.log('Total time:', ReactDefaultPerfAnalysis.getTotalTime(measurements).toFixed(2) + ' ms');
	  },

	  _recordWrite: function (id, fnName, totalTime, args) {
	    // TODO: totalTime isn't that useful since it doesn't count paints/reflows
	    var writes = ReactDefaultPerf._allMeasurements[ReactDefaultPerf._allMeasurements.length - 1].writes;
	    writes[id] = writes[id] || [];
	    writes[id].push({
	      type: fnName,
	      time: totalTime,
	      args: args
	    });
	  },

	  measure: function (moduleName, fnName, func) {
	    return function () {
	      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	        args[_key] = arguments[_key];
	      }

	      var totalTime;
	      var rv;
	      var start;

	      if (fnName === '_renderNewRootComponent' || fnName === 'flushBatchedUpdates') {
	        // A "measurement" is a set of metrics recorded for each flush. We want
	        // to group the metrics for a given flush together so we can look at the
	        // components that rendered and the DOM operations that actually
	        // happened to determine the amount of "wasted work" performed.
	        ReactDefaultPerf._allMeasurements.push({
	          exclusive: {},
	          inclusive: {},
	          render: {},
	          counts: {},
	          writes: {},
	          displayNames: {},
	          totalTime: 0,
	          created: {}
	        });
	        start = performanceNow();
	        rv = func.apply(this, args);
	        ReactDefaultPerf._allMeasurements[ReactDefaultPerf._allMeasurements.length - 1].totalTime = performanceNow() - start;
	        return rv;
	      } else if (fnName === '_mountImageIntoNode' || moduleName === 'ReactBrowserEventEmitter' || moduleName === 'ReactDOMIDOperations' || moduleName === 'CSSPropertyOperations' || moduleName === 'DOMChildrenOperations' || moduleName === 'DOMPropertyOperations') {
	        start = performanceNow();
	        rv = func.apply(this, args);
	        totalTime = performanceNow() - start;

	        if (fnName === '_mountImageIntoNode') {
	          var mountID = ReactMount.getID(args[1]);
	          ReactDefaultPerf._recordWrite(mountID, fnName, totalTime, args[0]);
	        } else if (fnName === 'dangerouslyProcessChildrenUpdates') {
	          // special format
	          args[0].forEach(function (update) {
	            var writeArgs = {};
	            if (update.fromIndex !== null) {
	              writeArgs.fromIndex = update.fromIndex;
	            }
	            if (update.toIndex !== null) {
	              writeArgs.toIndex = update.toIndex;
	            }
	            if (update.textContent !== null) {
	              writeArgs.textContent = update.textContent;
	            }
	            if (update.markupIndex !== null) {
	              writeArgs.markup = args[1][update.markupIndex];
	            }
	            ReactDefaultPerf._recordWrite(update.parentID, update.type, totalTime, writeArgs);
	          });
	        } else {
	          // basic format
	          var id = args[0];
	          if (typeof id === 'object') {
	            id = ReactMount.getID(args[0]);
	          }
	          ReactDefaultPerf._recordWrite(id, fnName, totalTime, Array.prototype.slice.call(args, 1));
	        }
	        return rv;
	      } else if (moduleName === 'ReactCompositeComponent' && (fnName === 'mountComponent' || fnName === 'updateComponent' || // TODO: receiveComponent()?
	      fnName === '_renderValidatedComponent')) {

	        if (this._currentElement.type === ReactMount.TopLevelWrapper) {
	          return func.apply(this, args);
	        }

	        var rootNodeID = fnName === 'mountComponent' ? args[0] : this._rootNodeID;
	        var isRender = fnName === '_renderValidatedComponent';
	        var isMount = fnName === 'mountComponent';

	        var mountStack = ReactDefaultPerf._mountStack;
	        var entry = ReactDefaultPerf._allMeasurements[ReactDefaultPerf._allMeasurements.length - 1];

	        if (isRender) {
	          addValue(entry.counts, rootNodeID, 1);
	        } else if (isMount) {
	          entry.created[rootNodeID] = true;
	          mountStack.push(0);
	        }

	        start = performanceNow();
	        rv = func.apply(this, args);
	        totalTime = performanceNow() - start;

	        if (isRender) {
	          addValue(entry.render, rootNodeID, totalTime);
	        } else if (isMount) {
	          var subMountTime = mountStack.pop();
	          mountStack[mountStack.length - 1] += totalTime;
	          addValue(entry.exclusive, rootNodeID, totalTime - subMountTime);
	          addValue(entry.inclusive, rootNodeID, totalTime);
	        } else {
	          addValue(entry.inclusive, rootNodeID, totalTime);
	        }

	        entry.displayNames[rootNodeID] = {
	          current: this.getName(),
	          owner: this._currentElement._owner ? this._currentElement._owner.getName() : '<root>'
	        };

	        return rv;
	      } else {
	        return func.apply(this, args);
	      }
	    };
	  }
	};

	module.exports = ReactDefaultPerf;

/***/ }),
/* 144 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDefaultPerfAnalysis
	 */

	'use strict';

	var assign = __webpack_require__(40);

	// Don't try to save users less than 1.2ms (a number I made up)
	var DONT_CARE_THRESHOLD = 1.2;
	var DOM_OPERATION_TYPES = {
	  '_mountImageIntoNode': 'set innerHTML',
	  INSERT_MARKUP: 'set innerHTML',
	  MOVE_EXISTING: 'move',
	  REMOVE_NODE: 'remove',
	  SET_MARKUP: 'set innerHTML',
	  TEXT_CONTENT: 'set textContent',
	  'setValueForProperty': 'update attribute',
	  'setValueForAttribute': 'update attribute',
	  'deleteValueForProperty': 'remove attribute',
	  'setValueForStyles': 'update styles',
	  'replaceNodeWithMarkup': 'replace',
	  'updateTextContent': 'set textContent'
	};

	function getTotalTime(measurements) {
	  // TODO: return number of DOM ops? could be misleading.
	  // TODO: measure dropped frames after reconcile?
	  // TODO: log total time of each reconcile and the top-level component
	  // class that triggered it.
	  var totalTime = 0;
	  for (var i = 0; i < measurements.length; i++) {
	    var measurement = measurements[i];
	    totalTime += measurement.totalTime;
	  }
	  return totalTime;
	}

	function getDOMSummary(measurements) {
	  var items = [];
	  measurements.forEach(function (measurement) {
	    Object.keys(measurement.writes).forEach(function (id) {
	      measurement.writes[id].forEach(function (write) {
	        items.push({
	          id: id,
	          type: DOM_OPERATION_TYPES[write.type] || write.type,
	          args: write.args
	        });
	      });
	    });
	  });
	  return items;
	}

	function getExclusiveSummary(measurements) {
	  var candidates = {};
	  var displayName;

	  for (var i = 0; i < measurements.length; i++) {
	    var measurement = measurements[i];
	    var allIDs = assign({}, measurement.exclusive, measurement.inclusive);

	    for (var id in allIDs) {
	      displayName = measurement.displayNames[id].current;

	      candidates[displayName] = candidates[displayName] || {
	        componentName: displayName,
	        inclusive: 0,
	        exclusive: 0,
	        render: 0,
	        count: 0
	      };
	      if (measurement.render[id]) {
	        candidates[displayName].render += measurement.render[id];
	      }
	      if (measurement.exclusive[id]) {
	        candidates[displayName].exclusive += measurement.exclusive[id];
	      }
	      if (measurement.inclusive[id]) {
	        candidates[displayName].inclusive += measurement.inclusive[id];
	      }
	      if (measurement.counts[id]) {
	        candidates[displayName].count += measurement.counts[id];
	      }
	    }
	  }

	  // Now make a sorted array with the results.
	  var arr = [];
	  for (displayName in candidates) {
	    if (candidates[displayName].exclusive >= DONT_CARE_THRESHOLD) {
	      arr.push(candidates[displayName]);
	    }
	  }

	  arr.sort(function (a, b) {
	    return b.exclusive - a.exclusive;
	  });

	  return arr;
	}

	function getInclusiveSummary(measurements, onlyClean) {
	  var candidates = {};
	  var inclusiveKey;

	  for (var i = 0; i < measurements.length; i++) {
	    var measurement = measurements[i];
	    var allIDs = assign({}, measurement.exclusive, measurement.inclusive);
	    var cleanComponents;

	    if (onlyClean) {
	      cleanComponents = getUnchangedComponents(measurement);
	    }

	    for (var id in allIDs) {
	      if (onlyClean && !cleanComponents[id]) {
	        continue;
	      }

	      var displayName = measurement.displayNames[id];

	      // Inclusive time is not useful for many components without knowing where
	      // they are instantiated. So we aggregate inclusive time with both the
	      // owner and current displayName as the key.
	      inclusiveKey = displayName.owner + ' > ' + displayName.current;

	      candidates[inclusiveKey] = candidates[inclusiveKey] || {
	        componentName: inclusiveKey,
	        time: 0,
	        count: 0
	      };

	      if (measurement.inclusive[id]) {
	        candidates[inclusiveKey].time += measurement.inclusive[id];
	      }
	      if (measurement.counts[id]) {
	        candidates[inclusiveKey].count += measurement.counts[id];
	      }
	    }
	  }

	  // Now make a sorted array with the results.
	  var arr = [];
	  for (inclusiveKey in candidates) {
	    if (candidates[inclusiveKey].time >= DONT_CARE_THRESHOLD) {
	      arr.push(candidates[inclusiveKey]);
	    }
	  }

	  arr.sort(function (a, b) {
	    return b.time - a.time;
	  });

	  return arr;
	}

	function getUnchangedComponents(measurement) {
	  // For a given reconcile, look at which components did not actually
	  // render anything to the DOM and return a mapping of their ID to
	  // the amount of time it took to render the entire subtree.
	  var cleanComponents = {};
	  var dirtyLeafIDs = Object.keys(measurement.writes);
	  var allIDs = assign({}, measurement.exclusive, measurement.inclusive);

	  for (var id in allIDs) {
	    var isDirty = false;
	    // For each component that rendered, see if a component that triggered
	    // a DOM op is in its subtree.
	    for (var i = 0; i < dirtyLeafIDs.length; i++) {
	      if (dirtyLeafIDs[i].indexOf(id) === 0) {
	        isDirty = true;
	        break;
	      }
	    }
	    // check if component newly created
	    if (measurement.created[id]) {
	      isDirty = true;
	    }
	    if (!isDirty && measurement.counts[id] > 0) {
	      cleanComponents[id] = true;
	    }
	  }
	  return cleanComponents;
	}

	var ReactDefaultPerfAnalysis = {
	  getExclusiveSummary: getExclusiveSummary,
	  getInclusiveSummary: getInclusiveSummary,
	  getDOMSummary: getDOMSummary,
	  getTotalTime: getTotalTime
	};

	module.exports = ReactDefaultPerfAnalysis;

/***/ }),
/* 145 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule performanceNow
	 * @typechecks
	 */

	'use strict';

	var performance = __webpack_require__(146);

	var performanceNow;

	/**
	 * Detect if we can use `window.performance.now()` and gracefully fallback to
	 * `Date.now()` if it doesn't exist. We need to support Firefox < 15 for now
	 * because of Facebook's testing infrastructure.
	 */
	if (performance.now) {
	  performanceNow = function () {
	    return performance.now();
	  };
	} else {
	  performanceNow = function () {
	    return Date.now();
	  };
	}

	module.exports = performanceNow;

/***/ }),
/* 146 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule performance
	 * @typechecks
	 */

	'use strict';

	var ExecutionEnvironment = __webpack_require__(10);

	var performance;

	if (ExecutionEnvironment.canUseDOM) {
	  performance = window.performance || window.msPerformance || window.webkitPerformance;
	}

	module.exports = performance || {};

/***/ }),
/* 147 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactVersion
	 */

	'use strict';

	module.exports = '0.14.9';

/***/ }),
/* 148 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	* @providesModule renderSubtreeIntoContainer
	*/

	'use strict';

	var ReactMount = __webpack_require__(29);

	module.exports = ReactMount.renderSubtreeIntoContainer;

/***/ }),
/* 149 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMServer
	 */

	'use strict';

	var ReactDefaultInjection = __webpack_require__(72);
	var ReactServerRendering = __webpack_require__(150);
	var ReactVersion = __webpack_require__(147);

	ReactDefaultInjection.inject();

	var ReactDOMServer = {
	  renderToString: ReactServerRendering.renderToString,
	  renderToStaticMarkup: ReactServerRendering.renderToStaticMarkup,
	  version: ReactVersion
	};

	module.exports = ReactDOMServer;

/***/ }),
/* 150 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks static-only
	 * @providesModule ReactServerRendering
	 */
	'use strict';

	var ReactDefaultBatchingStrategy = __webpack_require__(93);
	var ReactElement = __webpack_require__(43);
	var ReactInstanceHandles = __webpack_require__(46);
	var ReactMarkupChecksum = __webpack_require__(49);
	var ReactServerBatchingStrategy = __webpack_require__(151);
	var ReactServerRenderingTransaction = __webpack_require__(152);
	var ReactUpdates = __webpack_require__(55);

	var emptyObject = __webpack_require__(59);
	var instantiateReactComponent = __webpack_require__(63);
	var invariant = __webpack_require__(14);

	/**
	 * @param {ReactElement} element
	 * @return {string} the HTML markup
	 */
	function renderToString(element) {
	  !ReactElement.isValidElement(element) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'renderToString(): You must pass a valid ReactElement.') : invariant(false) : undefined;

	  var transaction;
	  try {
	    ReactUpdates.injection.injectBatchingStrategy(ReactServerBatchingStrategy);

	    var id = ReactInstanceHandles.createReactRootID();
	    transaction = ReactServerRenderingTransaction.getPooled(false);

	    return transaction.perform(function () {
	      var componentInstance = instantiateReactComponent(element, null);
	      var markup = componentInstance.mountComponent(id, transaction, emptyObject);
	      return ReactMarkupChecksum.addChecksumToMarkup(markup);
	    }, null);
	  } finally {
	    ReactServerRenderingTransaction.release(transaction);
	    // Revert to the DOM batching strategy since these two renderers
	    // currently share these stateful modules.
	    ReactUpdates.injection.injectBatchingStrategy(ReactDefaultBatchingStrategy);
	  }
	}

	/**
	 * @param {ReactElement} element
	 * @return {string} the HTML markup, without the extra React ID and checksum
	 * (for generating static pages)
	 */
	function renderToStaticMarkup(element) {
	  !ReactElement.isValidElement(element) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'renderToStaticMarkup(): You must pass a valid ReactElement.') : invariant(false) : undefined;

	  var transaction;
	  try {
	    ReactUpdates.injection.injectBatchingStrategy(ReactServerBatchingStrategy);

	    var id = ReactInstanceHandles.createReactRootID();
	    transaction = ReactServerRenderingTransaction.getPooled(true);

	    return transaction.perform(function () {
	      var componentInstance = instantiateReactComponent(element, null);
	      return componentInstance.mountComponent(id, transaction, emptyObject);
	    }, null);
	  } finally {
	    ReactServerRenderingTransaction.release(transaction);
	    // Revert to the DOM batching strategy since these two renderers
	    // currently share these stateful modules.
	    ReactUpdates.injection.injectBatchingStrategy(ReactDefaultBatchingStrategy);
	  }
	}

	module.exports = {
	  renderToString: renderToString,
	  renderToStaticMarkup: renderToStaticMarkup
	};
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)))

/***/ }),
/* 151 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactServerBatchingStrategy
	 * @typechecks
	 */

	'use strict';

	var ReactServerBatchingStrategy = {
	  isBatchingUpdates: false,
	  batchedUpdates: function (callback) {
	    // Don't do anything here. During the server rendering we don't want to
	    // schedule any updates. We will simply ignore them.
	  }
	};

	module.exports = ReactServerBatchingStrategy;

/***/ }),
/* 152 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactServerRenderingTransaction
	 * @typechecks
	 */

	'use strict';

	var PooledClass = __webpack_require__(57);
	var CallbackQueue = __webpack_require__(56);
	var Transaction = __webpack_require__(58);

	var assign = __webpack_require__(40);
	var emptyFunction = __webpack_require__(16);

	/**
	 * Provides a `CallbackQueue` queue for collecting `onDOMReady` callbacks
	 * during the performing of the transaction.
	 */
	var ON_DOM_READY_QUEUEING = {
	  /**
	   * Initializes the internal `onDOMReady` queue.
	   */
	  initialize: function () {
	    this.reactMountReady.reset();
	  },

	  close: emptyFunction
	};

	/**
	 * Executed within the scope of the `Transaction` instance. Consider these as
	 * being member methods, but with an implied ordering while being isolated from
	 * each other.
	 */
	var TRANSACTION_WRAPPERS = [ON_DOM_READY_QUEUEING];

	/**
	 * @class ReactServerRenderingTransaction
	 * @param {boolean} renderToStaticMarkup
	 */
	function ReactServerRenderingTransaction(renderToStaticMarkup) {
	  this.reinitializeTransaction();
	  this.renderToStaticMarkup = renderToStaticMarkup;
	  this.reactMountReady = CallbackQueue.getPooled(null);
	  this.useCreateElement = false;
	}

	var Mixin = {
	  /**
	   * @see Transaction
	   * @abstract
	   * @final
	   * @return {array} Empty list of operation wrap procedures.
	   */
	  getTransactionWrappers: function () {
	    return TRANSACTION_WRAPPERS;
	  },

	  /**
	   * @return {object} The queue to collect `onDOMReady` callbacks with.
	   */
	  getReactMountReady: function () {
	    return this.reactMountReady;
	  },

	  /**
	   * `PooledClass` looks for this, and will invoke this before allowing this
	   * instance to be reused.
	   */
	  destructor: function () {
	    CallbackQueue.release(this.reactMountReady);
	    this.reactMountReady = null;
	  }
	};

	assign(ReactServerRenderingTransaction.prototype, Transaction.Mixin, Mixin);

	PooledClass.addPoolingTo(ReactServerRenderingTransaction);

	module.exports = ReactServerRenderingTransaction;

/***/ }),
/* 153 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactIsomorphic
	 */

	'use strict';

	var ReactChildren = __webpack_require__(111);
	var ReactComponent = __webpack_require__(124);
	var ReactClass = __webpack_require__(123);
	var ReactDOMFactories = __webpack_require__(154);
	var ReactElement = __webpack_require__(43);
	var ReactElementValidator = __webpack_require__(155);
	var ReactPropTypes = __webpack_require__(108);
	var ReactVersion = __webpack_require__(147);

	var assign = __webpack_require__(40);
	var onlyChild = __webpack_require__(157);

	var createElement = ReactElement.createElement;
	var createFactory = ReactElement.createFactory;
	var cloneElement = ReactElement.cloneElement;

	if (process.env.NODE_ENV !== 'production') {
	  createElement = ReactElementValidator.createElement;
	  createFactory = ReactElementValidator.createFactory;
	  cloneElement = ReactElementValidator.cloneElement;
	}

	var React = {

	  // Modern

	  Children: {
	    map: ReactChildren.map,
	    forEach: ReactChildren.forEach,
	    count: ReactChildren.count,
	    toArray: ReactChildren.toArray,
	    only: onlyChild
	  },

	  Component: ReactComponent,

	  createElement: createElement,
	  cloneElement: cloneElement,
	  isValidElement: ReactElement.isValidElement,

	  // Classic

	  PropTypes: ReactPropTypes,
	  createClass: ReactClass.createClass,
	  createFactory: createFactory,
	  createMixin: function (mixin) {
	    // Currently a noop. Will be used to validate and trace mixins.
	    return mixin;
	  },

	  // This looks DOM specific but these are actually isomorphic helpers
	  // since they are just generating DOM strings.
	  DOM: ReactDOMFactories,

	  version: ReactVersion,

	  // Hook for JSX spread, don't use this for anything else.
	  __spread: assign
	};

	module.exports = React;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)))

/***/ }),
/* 154 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMFactories
	 * @typechecks static-only
	 */

	'use strict';

	var ReactElement = __webpack_require__(43);
	var ReactElementValidator = __webpack_require__(155);

	var mapObject = __webpack_require__(156);

	/**
	 * Create a factory that creates HTML tag elements.
	 *
	 * @param {string} tag Tag name (e.g. `div`).
	 * @private
	 */
	function createDOMFactory(tag) {
	  if (process.env.NODE_ENV !== 'production') {
	    return ReactElementValidator.createFactory(tag);
	  }
	  return ReactElement.createFactory(tag);
	}

	/**
	 * Creates a mapping from supported HTML tags to `ReactDOMComponent` classes.
	 * This is also accessible via `React.DOM`.
	 *
	 * @public
	 */
	var ReactDOMFactories = mapObject({
	  a: 'a',
	  abbr: 'abbr',
	  address: 'address',
	  area: 'area',
	  article: 'article',
	  aside: 'aside',
	  audio: 'audio',
	  b: 'b',
	  base: 'base',
	  bdi: 'bdi',
	  bdo: 'bdo',
	  big: 'big',
	  blockquote: 'blockquote',
	  body: 'body',
	  br: 'br',
	  button: 'button',
	  canvas: 'canvas',
	  caption: 'caption',
	  cite: 'cite',
	  code: 'code',
	  col: 'col',
	  colgroup: 'colgroup',
	  data: 'data',
	  datalist: 'datalist',
	  dd: 'dd',
	  del: 'del',
	  details: 'details',
	  dfn: 'dfn',
	  dialog: 'dialog',
	  div: 'div',
	  dl: 'dl',
	  dt: 'dt',
	  em: 'em',
	  embed: 'embed',
	  fieldset: 'fieldset',
	  figcaption: 'figcaption',
	  figure: 'figure',
	  footer: 'footer',
	  form: 'form',
	  h1: 'h1',
	  h2: 'h2',
	  h3: 'h3',
	  h4: 'h4',
	  h5: 'h5',
	  h6: 'h6',
	  head: 'head',
	  header: 'header',
	  hgroup: 'hgroup',
	  hr: 'hr',
	  html: 'html',
	  i: 'i',
	  iframe: 'iframe',
	  img: 'img',
	  input: 'input',
	  ins: 'ins',
	  kbd: 'kbd',
	  keygen: 'keygen',
	  label: 'label',
	  legend: 'legend',
	  li: 'li',
	  link: 'link',
	  main: 'main',
	  map: 'map',
	  mark: 'mark',
	  menu: 'menu',
	  menuitem: 'menuitem',
	  meta: 'meta',
	  meter: 'meter',
	  nav: 'nav',
	  noscript: 'noscript',
	  object: 'object',
	  ol: 'ol',
	  optgroup: 'optgroup',
	  option: 'option',
	  output: 'output',
	  p: 'p',
	  param: 'param',
	  picture: 'picture',
	  pre: 'pre',
	  progress: 'progress',
	  q: 'q',
	  rp: 'rp',
	  rt: 'rt',
	  ruby: 'ruby',
	  s: 's',
	  samp: 'samp',
	  script: 'script',
	  section: 'section',
	  select: 'select',
	  small: 'small',
	  source: 'source',
	  span: 'span',
	  strong: 'strong',
	  style: 'style',
	  sub: 'sub',
	  summary: 'summary',
	  sup: 'sup',
	  table: 'table',
	  tbody: 'tbody',
	  td: 'td',
	  textarea: 'textarea',
	  tfoot: 'tfoot',
	  th: 'th',
	  thead: 'thead',
	  time: 'time',
	  title: 'title',
	  tr: 'tr',
	  track: 'track',
	  u: 'u',
	  ul: 'ul',
	  'var': 'var',
	  video: 'video',
	  wbr: 'wbr',

	  // SVG
	  circle: 'circle',
	  clipPath: 'clipPath',
	  defs: 'defs',
	  ellipse: 'ellipse',
	  g: 'g',
	  image: 'image',
	  line: 'line',
	  linearGradient: 'linearGradient',
	  mask: 'mask',
	  path: 'path',
	  pattern: 'pattern',
	  polygon: 'polygon',
	  polyline: 'polyline',
	  radialGradient: 'radialGradient',
	  rect: 'rect',
	  stop: 'stop',
	  svg: 'svg',
	  text: 'text',
	  tspan: 'tspan'

	}, createDOMFactory);

	module.exports = ReactDOMFactories;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)))

/***/ }),
/* 155 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactElementValidator
	 */

	/**
	 * ReactElementValidator provides a wrapper around a element factory
	 * which validates the props passed to the element. This is intended to be
	 * used only in DEV and could be replaced by a static type checker for languages
	 * that support it.
	 */

	'use strict';

	var ReactElement = __webpack_require__(43);
	var ReactPropTypeLocations = __webpack_require__(66);
	var ReactPropTypeLocationNames = __webpack_require__(67);
	var ReactCurrentOwner = __webpack_require__(6);

	var canDefineProperty = __webpack_require__(44);
	var getIteratorFn = __webpack_require__(109);
	var invariant = __webpack_require__(14);
	var warning = __webpack_require__(26);

	function getDeclarationErrorAddendum() {
	  if (ReactCurrentOwner.current) {
	    var name = ReactCurrentOwner.current.getName();
	    if (name) {
	      return ' Check the render method of `' + name + '`.';
	    }
	  }
	  return '';
	}

	/**
	 * Warn if there's no key explicitly set on dynamic arrays of children or
	 * object keys are not valid. This allows us to keep track of children between
	 * updates.
	 */
	var ownerHasKeyUseWarning = {};

	var loggedTypeFailures = {};

	/**
	 * Warn if the element doesn't have an explicit key assigned to it.
	 * This element is in an array. The array could grow and shrink or be
	 * reordered. All children that haven't already been validated are required to
	 * have a "key" property assigned to it.
	 *
	 * @internal
	 * @param {ReactElement} element Element that requires a key.
	 * @param {*} parentType element's parent's type.
	 */
	function validateExplicitKey(element, parentType) {
	  if (!element._store || element._store.validated || element.key != null) {
	    return;
	  }
	  element._store.validated = true;

	  var addenda = getAddendaForKeyUse('uniqueKey', element, parentType);
	  if (addenda === null) {
	    // we already showed the warning
	    return;
	  }
	  process.env.NODE_ENV !== 'production' ? warning(false, 'Each child in an array or iterator should have a unique "key" prop.' + '%s%s%s', addenda.parentOrOwner || '', addenda.childOwner || '', addenda.url || '') : undefined;
	}

	/**
	 * Shared warning and monitoring code for the key warnings.
	 *
	 * @internal
	 * @param {string} messageType A key used for de-duping warnings.
	 * @param {ReactElement} element Component that requires a key.
	 * @param {*} parentType element's parent's type.
	 * @returns {?object} A set of addenda to use in the warning message, or null
	 * if the warning has already been shown before (and shouldn't be shown again).
	 */
	function getAddendaForKeyUse(messageType, element, parentType) {
	  var addendum = getDeclarationErrorAddendum();
	  if (!addendum) {
	    var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;
	    if (parentName) {
	      addendum = ' Check the top-level render call using <' + parentName + '>.';
	    }
	  }

	  var memoizer = ownerHasKeyUseWarning[messageType] || (ownerHasKeyUseWarning[messageType] = {});
	  if (memoizer[addendum]) {
	    return null;
	  }
	  memoizer[addendum] = true;

	  var addenda = {
	    parentOrOwner: addendum,
	    url: ' See https://fb.me/react-warning-keys for more information.',
	    childOwner: null
	  };

	  // Usually the current owner is the offender, but if it accepts children as a
	  // property, it may be the creator of the child that's responsible for
	  // assigning it a key.
	  if (element && element._owner && element._owner !== ReactCurrentOwner.current) {
	    // Give the component that originally created this child.
	    addenda.childOwner = ' It was passed a child from ' + element._owner.getName() + '.';
	  }

	  return addenda;
	}

	/**
	 * Ensure that every element either is passed in a static location, in an
	 * array with an explicit keys property defined, or in an object literal
	 * with valid key property.
	 *
	 * @internal
	 * @param {ReactNode} node Statically passed child of any type.
	 * @param {*} parentType node's parent's type.
	 */
	function validateChildKeys(node, parentType) {
	  if (typeof node !== 'object') {
	    return;
	  }
	  if (Array.isArray(node)) {
	    for (var i = 0; i < node.length; i++) {
	      var child = node[i];
	      if (ReactElement.isValidElement(child)) {
	        validateExplicitKey(child, parentType);
	      }
	    }
	  } else if (ReactElement.isValidElement(node)) {
	    // This element was passed in a valid location.
	    if (node._store) {
	      node._store.validated = true;
	    }
	  } else if (node) {
	    var iteratorFn = getIteratorFn(node);
	    // Entry iterators provide implicit keys.
	    if (iteratorFn) {
	      if (iteratorFn !== node.entries) {
	        var iterator = iteratorFn.call(node);
	        var step;
	        while (!(step = iterator.next()).done) {
	          if (ReactElement.isValidElement(step.value)) {
	            validateExplicitKey(step.value, parentType);
	          }
	        }
	      }
	    }
	  }
	}

	/**
	 * Assert that the props are valid
	 *
	 * @param {string} componentName Name of the component for error messages.
	 * @param {object} propTypes Map of prop name to a ReactPropType
	 * @param {object} props
	 * @param {string} location e.g. "prop", "context", "child context"
	 * @private
	 */
	function checkPropTypes(componentName, propTypes, props, location) {
	  for (var propName in propTypes) {
	    if (propTypes.hasOwnProperty(propName)) {
	      var error;
	      // Prop type validation may throw. In case they do, we don't want to
	      // fail the render phase where it didn't fail before. So we log it.
	      // After these have been cleaned up, we'll let them throw.
	      try {
	        // This is intentionally an invariant that gets caught. It's the same
	        // behavior as without this statement except with a better message.
	        !(typeof propTypes[propName] === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'React.PropTypes.', componentName || 'React class', ReactPropTypeLocationNames[location], propName) : invariant(false) : undefined;
	        error = propTypes[propName](props, propName, componentName, location, null, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');
	      } catch (ex) {
	        error = ex;
	      }
	      process.env.NODE_ENV !== 'production' ? warning(!error || error instanceof Error, '%s: type specification of %s `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', ReactPropTypeLocationNames[location], propName, typeof error) : undefined;
	      if (error instanceof Error && !(error.message in loggedTypeFailures)) {
	        // Only monitor this failure once because there tends to be a lot of the
	        // same error.
	        loggedTypeFailures[error.message] = true;

	        var addendum = getDeclarationErrorAddendum();
	        process.env.NODE_ENV !== 'production' ? warning(false, 'Failed propType: %s%s', error.message, addendum) : undefined;
	      }
	    }
	  }
	}

	/**
	 * Given an element, validate that its props follow the propTypes definition,
	 * provided by the type.
	 *
	 * @param {ReactElement} element
	 */
	function validatePropTypes(element) {
	  var componentClass = element.type;
	  if (typeof componentClass !== 'function') {
	    return;
	  }
	  var name = componentClass.displayName || componentClass.name;
	  if (componentClass.propTypes) {
	    checkPropTypes(name, componentClass.propTypes, element.props, ReactPropTypeLocations.prop);
	  }
	  if (typeof componentClass.getDefaultProps === 'function') {
	    process.env.NODE_ENV !== 'production' ? warning(componentClass.getDefaultProps.isReactClassApproved, 'getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.') : undefined;
	  }
	}

	var ReactElementValidator = {

	  createElement: function (type, props, children) {
	    var validType = typeof type === 'string' || typeof type === 'function';
	    // We warn in this case but don't throw. We expect the element creation to
	    // succeed and there will likely be errors in render.
	    process.env.NODE_ENV !== 'production' ? warning(validType, 'React.createElement: type should not be null, undefined, boolean, or ' + 'number. It should be a string (for DOM elements) or a ReactClass ' + '(for composite components).%s', getDeclarationErrorAddendum()) : undefined;

	    var element = ReactElement.createElement.apply(this, arguments);

	    // The result can be nullish if a mock or a custom function is used.
	    // TODO: Drop this when these are no longer allowed as the type argument.
	    if (element == null) {
	      return element;
	    }

	    // Skip key warning if the type isn't valid since our key validation logic
	    // doesn't expect a non-string/function type and can throw confusing errors.
	    // We don't want exception behavior to differ between dev and prod.
	    // (Rendering will throw with a helpful message and as soon as the type is
	    // fixed, the key warnings will appear.)
	    if (validType) {
	      for (var i = 2; i < arguments.length; i++) {
	        validateChildKeys(arguments[i], type);
	      }
	    }

	    validatePropTypes(element);

	    return element;
	  },

	  createFactory: function (type) {
	    var validatedFactory = ReactElementValidator.createElement.bind(null, type);
	    // Legacy hook TODO: Warn if this is accessed
	    validatedFactory.type = type;

	    if (process.env.NODE_ENV !== 'production') {
	      if (canDefineProperty) {
	        Object.defineProperty(validatedFactory, 'type', {
	          enumerable: false,
	          get: function () {
	            process.env.NODE_ENV !== 'production' ? warning(false, 'Factory.type is deprecated. Access the class directly ' + 'before passing it to createFactory.') : undefined;
	            Object.defineProperty(this, 'type', {
	              value: type
	            });
	            return type;
	          }
	        });
	      }
	    }

	    return validatedFactory;
	  },

	  cloneElement: function (element, props, children) {
	    var newElement = ReactElement.cloneElement.apply(this, arguments);
	    for (var i = 2; i < arguments.length; i++) {
	      validateChildKeys(arguments[i], newElement.type);
	    }
	    validatePropTypes(newElement);
	    return newElement;
	  }

	};

	module.exports = ReactElementValidator;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)))

/***/ }),
/* 156 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule mapObject
	 */

	'use strict';

	var hasOwnProperty = Object.prototype.hasOwnProperty;

	/**
	 * Executes the provided `callback` once for each enumerable own property in the
	 * object and constructs a new object from the results. The `callback` is
	 * invoked with three arguments:
	 *
	 *  - the property value
	 *  - the property name
	 *  - the object being traversed
	 *
	 * Properties that are added after the call to `mapObject` will not be visited
	 * by `callback`. If the values of existing properties are changed, the value
	 * passed to `callback` will be the value at the time `mapObject` visits them.
	 * Properties that are deleted before being visited are not visited.
	 *
	 * @grep function objectMap()
	 * @grep function objMap()
	 *
	 * @param {?object} object
	 * @param {function} callback
	 * @param {*} context
	 * @return {?object}
	 */
	function mapObject(object, callback, context) {
	  if (!object) {
	    return null;
	  }
	  var result = {};
	  for (var name in object) {
	    if (hasOwnProperty.call(object, name)) {
	      result[name] = callback.call(context, object[name], name, object);
	    }
	  }
	  return result;
	}

	module.exports = mapObject;

/***/ }),
/* 157 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule onlyChild
	 */
	'use strict';

	var ReactElement = __webpack_require__(43);

	var invariant = __webpack_require__(14);

	/**
	 * Returns the first child in a collection of children and verifies that there
	 * is only one child in the collection. The current implementation of this
	 * function assumes that a single child gets passed without a wrapper, but the
	 * purpose of this helper function is to abstract away the particular structure
	 * of children.
	 *
	 * @param {?object} children Child collection structure.
	 * @return {ReactComponent} The first and only `ReactComponent` contained in the
	 * structure.
	 */
	function onlyChild(children) {
	  !ReactElement.isValidElement(children) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'onlyChild must be passed a children with exactly one child.') : invariant(false) : undefined;
	  return children;
	}

	module.exports = onlyChild;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)))

/***/ }),
/* 158 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule deprecated
	 */

	'use strict';

	var assign = __webpack_require__(40);
	var warning = __webpack_require__(26);

	/**
	 * This will log a single deprecation notice per function and forward the call
	 * on to the new API.
	 *
	 * @param {string} fnName The name of the function
	 * @param {string} newModule The module that fn will exist in
	 * @param {string} newPackage The module that fn will exist in
	 * @param {*} ctx The context this forwarded call should run in
	 * @param {function} fn The function to forward on to
	 * @return {function} The function that will warn once and then call fn
	 */
	function deprecated(fnName, newModule, newPackage, ctx, fn) {
	  var warned = false;
	  if (process.env.NODE_ENV !== 'production') {
	    var newFn = function () {
	      process.env.NODE_ENV !== 'production' ? warning(warned,
	      // Require examples in this string must be split to prevent React's
	      // build tools from mistaking them for real requires.
	      // Otherwise the build tools will attempt to build a '%s' module.
	      'React.%s is deprecated. Please use %s.%s from require' + '(\'%s\') ' + 'instead.', fnName, newModule, fnName, newPackage) : undefined;
	      warned = true;
	      return fn.apply(ctx, arguments);
	    };
	    // We need to make sure all properties of the original fn are copied over.
	    // In particular, this is needed to support PropTypes
	    return assign(newFn, fn);
	  }

	  return fn;
	}

	module.exports = deprecated;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)))

/***/ }),
/* 159 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	module.exports = __webpack_require__(4);


/***/ }),
/* 160 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;
	exports.connect = exports.Provider = undefined;

	var _Provider = __webpack_require__(161);

	var _Provider2 = _interopRequireDefault(_Provider);

	var _connect = __webpack_require__(163);

	var _connect2 = _interopRequireDefault(_connect);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

	exports.Provider = _Provider2["default"];
	exports.connect = _connect2["default"];

/***/ }),
/* 161 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	exports.__esModule = true;
	exports["default"] = undefined;

	var _react = __webpack_require__(2);

	var _storeShape = __webpack_require__(162);

	var _storeShape2 = _interopRequireDefault(_storeShape);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var didWarnAboutReceivingStore = false;
	function warnAboutReceivingStore() {
	  if (didWarnAboutReceivingStore) {
	    return;
	  }
	  didWarnAboutReceivingStore = true;

	  /* eslint-disable no-console */
	  if (typeof console !== 'undefined' && typeof console.error === 'function') {
	    console.error('<Provider> does not support changing `store` on the fly. ' + 'It is most likely that you see this error because you updated to ' + 'Redux 2.x and React Redux 2.x which no longer hot reload reducers ' + 'automatically. See https://github.com/rackt/react-redux/releases/' + 'tag/v2.0.0 for the migration instructions.');
	  }
	  /* eslint-disable no-console */
	}

	var Provider = function (_Component) {
	  _inherits(Provider, _Component);

	  Provider.prototype.getChildContext = function getChildContext() {
	    return { store: this.store };
	  };

	  function Provider(props, context) {
	    _classCallCheck(this, Provider);

	    var _this = _possibleConstructorReturn(this, _Component.call(this, props, context));

	    _this.store = props.store;
	    return _this;
	  }

	  Provider.prototype.render = function render() {
	    var children = this.props.children;

	    return _react.Children.only(children);
	  };

	  return Provider;
	}(_react.Component);

	exports["default"] = Provider;

	if (process.env.NODE_ENV !== 'production') {
	  Provider.prototype.componentWillReceiveProps = function (nextProps) {
	    var store = this.store;
	    var nextStore = nextProps.store;

	    if (store !== nextStore) {
	      warnAboutReceivingStore();
	    }
	  };
	}

	Provider.propTypes = {
	  store: _storeShape2["default"].isRequired,
	  children: _react.PropTypes.element.isRequired
	};
	Provider.childContextTypes = {
	  store: _storeShape2["default"].isRequired
	};
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)))

/***/ }),
/* 162 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _react = __webpack_require__(2);

	exports["default"] = _react.PropTypes.shape({
	  subscribe: _react.PropTypes.func.isRequired,
	  dispatch: _react.PropTypes.func.isRequired,
	  getState: _react.PropTypes.func.isRequired
	});

/***/ }),
/* 163 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	exports.__esModule = true;
	exports["default"] = connect;

	var _react = __webpack_require__(2);

	var _storeShape = __webpack_require__(162);

	var _storeShape2 = _interopRequireDefault(_storeShape);

	var _shallowEqual = __webpack_require__(164);

	var _shallowEqual2 = _interopRequireDefault(_shallowEqual);

	var _wrapActionCreators = __webpack_require__(165);

	var _wrapActionCreators2 = _interopRequireDefault(_wrapActionCreators);

	var _isPlainObject = __webpack_require__(187);

	var _isPlainObject2 = _interopRequireDefault(_isPlainObject);

	var _hoistNonReactStatics = __webpack_require__(197);

	var _hoistNonReactStatics2 = _interopRequireDefault(_hoistNonReactStatics);

	var _invariant = __webpack_require__(198);

	var _invariant2 = _interopRequireDefault(_invariant);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var defaultMapStateToProps = function defaultMapStateToProps(state) {
	  return {};
	}; // eslint-disable-line no-unused-vars
	var defaultMapDispatchToProps = function defaultMapDispatchToProps(dispatch) {
	  return { dispatch: dispatch };
	};
	var defaultMergeProps = function defaultMergeProps(stateProps, dispatchProps, parentProps) {
	  return _extends({}, parentProps, stateProps, dispatchProps);
	};

	function getDisplayName(WrappedComponent) {
	  return WrappedComponent.displayName || WrappedComponent.name || 'Component';
	}

	function checkStateShape(stateProps, dispatch) {
	  (0, _invariant2["default"])((0, _isPlainObject2["default"])(stateProps), '`%sToProps` must return an object. Instead received %s.', dispatch ? 'mapDispatch' : 'mapState', stateProps);
	  return stateProps;
	}

	// Helps track hot reloading.
	var nextVersion = 0;

	function connect(mapStateToProps, mapDispatchToProps, mergeProps) {
	  var options = arguments.length <= 3 || arguments[3] === undefined ? {} : arguments[3];

	  var shouldSubscribe = Boolean(mapStateToProps);
	  var mapState = mapStateToProps || defaultMapStateToProps;
	  var mapDispatch = (0, _isPlainObject2["default"])(mapDispatchToProps) ? (0, _wrapActionCreators2["default"])(mapDispatchToProps) : mapDispatchToProps || defaultMapDispatchToProps;

	  var finalMergeProps = mergeProps || defaultMergeProps;
	  var checkMergedEquals = finalMergeProps !== defaultMergeProps;
	  var _options$pure = options.pure;
	  var pure = _options$pure === undefined ? true : _options$pure;
	  var _options$withRef = options.withRef;
	  var withRef = _options$withRef === undefined ? false : _options$withRef;

	  // Helps track hot reloading.

	  var version = nextVersion++;

	  function computeMergedProps(stateProps, dispatchProps, parentProps) {
	    var mergedProps = finalMergeProps(stateProps, dispatchProps, parentProps);
	    (0, _invariant2["default"])((0, _isPlainObject2["default"])(mergedProps), '`mergeProps` must return an object. Instead received %s.', mergedProps);
	    return mergedProps;
	  }

	  return function wrapWithConnect(WrappedComponent) {
	    var Connect = function (_Component) {
	      _inherits(Connect, _Component);

	      Connect.prototype.shouldComponentUpdate = function shouldComponentUpdate() {
	        return !pure || this.haveOwnPropsChanged || this.hasStoreStateChanged;
	      };

	      function Connect(props, context) {
	        _classCallCheck(this, Connect);

	        var _this = _possibleConstructorReturn(this, _Component.call(this, props, context));

	        _this.version = version;
	        _this.store = props.store || context.store;

	        (0, _invariant2["default"])(_this.store, 'Could not find "store" in either the context or ' + ('props of "' + _this.constructor.displayName + '". ') + 'Either wrap the root component in a <Provider>, ' + ('or explicitly pass "store" as a prop to "' + _this.constructor.displayName + '".'));

	        var storeState = _this.store.getState();
	        _this.state = { storeState: storeState };
	        _this.clearCache();
	        return _this;
	      }

	      Connect.prototype.computeStateProps = function computeStateProps(store, props) {
	        if (!this.finalMapStateToProps) {
	          return this.configureFinalMapState(store, props);
	        }

	        var state = store.getState();
	        var stateProps = this.doStatePropsDependOnOwnProps ? this.finalMapStateToProps(state, props) : this.finalMapStateToProps(state);

	        return checkStateShape(stateProps);
	      };

	      Connect.prototype.configureFinalMapState = function configureFinalMapState(store, props) {
	        var mappedState = mapState(store.getState(), props);
	        var isFactory = typeof mappedState === 'function';

	        this.finalMapStateToProps = isFactory ? mappedState : mapState;
	        this.doStatePropsDependOnOwnProps = this.finalMapStateToProps.length !== 1;

	        return isFactory ? this.computeStateProps(store, props) : checkStateShape(mappedState);
	      };

	      Connect.prototype.computeDispatchProps = function computeDispatchProps(store, props) {
	        if (!this.finalMapDispatchToProps) {
	          return this.configureFinalMapDispatch(store, props);
	        }

	        var dispatch = store.dispatch;

	        var dispatchProps = this.doDispatchPropsDependOnOwnProps ? this.finalMapDispatchToProps(dispatch, props) : this.finalMapDispatchToProps(dispatch);

	        return checkStateShape(dispatchProps, true);
	      };

	      Connect.prototype.configureFinalMapDispatch = function configureFinalMapDispatch(store, props) {
	        var mappedDispatch = mapDispatch(store.dispatch, props);
	        var isFactory = typeof mappedDispatch === 'function';

	        this.finalMapDispatchToProps = isFactory ? mappedDispatch : mapDispatch;
	        this.doDispatchPropsDependOnOwnProps = this.finalMapDispatchToProps.length !== 1;

	        return isFactory ? this.computeDispatchProps(store, props) : checkStateShape(mappedDispatch, true);
	      };

	      Connect.prototype.updateStatePropsIfNeeded = function updateStatePropsIfNeeded() {
	        var nextStateProps = this.computeStateProps(this.store, this.props);
	        if (this.stateProps && (0, _shallowEqual2["default"])(nextStateProps, this.stateProps)) {
	          return false;
	        }

	        this.stateProps = nextStateProps;
	        return true;
	      };

	      Connect.prototype.updateDispatchPropsIfNeeded = function updateDispatchPropsIfNeeded() {
	        var nextDispatchProps = this.computeDispatchProps(this.store, this.props);
	        if (this.dispatchProps && (0, _shallowEqual2["default"])(nextDispatchProps, this.dispatchProps)) {
	          return false;
	        }

	        this.dispatchProps = nextDispatchProps;
	        return true;
	      };

	      Connect.prototype.updateMergedPropsIfNeeded = function updateMergedPropsIfNeeded() {
	        var nextMergedProps = computeMergedProps(this.stateProps, this.dispatchProps, this.props);
	        if (this.mergedProps && checkMergedEquals && (0, _shallowEqual2["default"])(nextMergedProps, this.mergedProps)) {
	          return false;
	        }

	        this.mergedProps = nextMergedProps;
	        return true;
	      };

	      Connect.prototype.isSubscribed = function isSubscribed() {
	        return typeof this.unsubscribe === 'function';
	      };

	      Connect.prototype.trySubscribe = function trySubscribe() {
	        if (shouldSubscribe && !this.unsubscribe) {
	          this.unsubscribe = this.store.subscribe(this.handleChange.bind(this));
	          this.handleChange();
	        }
	      };

	      Connect.prototype.tryUnsubscribe = function tryUnsubscribe() {
	        if (this.unsubscribe) {
	          this.unsubscribe();
	          this.unsubscribe = null;
	        }
	      };

	      Connect.prototype.componentDidMount = function componentDidMount() {
	        this.trySubscribe();
	      };

	      Connect.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
	        if (!pure || !(0, _shallowEqual2["default"])(nextProps, this.props)) {
	          this.haveOwnPropsChanged = true;
	        }
	      };

	      Connect.prototype.componentWillUnmount = function componentWillUnmount() {
	        this.tryUnsubscribe();
	        this.clearCache();
	      };

	      Connect.prototype.clearCache = function clearCache() {
	        this.dispatchProps = null;
	        this.stateProps = null;
	        this.mergedProps = null;
	        this.haveOwnPropsChanged = true;
	        this.hasStoreStateChanged = true;
	        this.renderedElement = null;
	        this.finalMapDispatchToProps = null;
	        this.finalMapStateToProps = null;
	      };

	      Connect.prototype.handleChange = function handleChange() {
	        if (!this.unsubscribe) {
	          return;
	        }

	        var prevStoreState = this.state.storeState;
	        var storeState = this.store.getState();

	        if (!pure || prevStoreState !== storeState) {
	          this.hasStoreStateChanged = true;
	          this.setState({ storeState: storeState });
	        }
	      };

	      Connect.prototype.getWrappedInstance = function getWrappedInstance() {
	        (0, _invariant2["default"])(withRef, 'To access the wrapped instance, you need to specify ' + '{ withRef: true } as the fourth argument of the connect() call.');

	        return this.refs.wrappedInstance;
	      };

	      Connect.prototype.render = function render() {
	        var haveOwnPropsChanged = this.haveOwnPropsChanged;
	        var hasStoreStateChanged = this.hasStoreStateChanged;
	        var renderedElement = this.renderedElement;

	        this.haveOwnPropsChanged = false;
	        this.hasStoreStateChanged = false;

	        var shouldUpdateStateProps = true;
	        var shouldUpdateDispatchProps = true;
	        if (pure && renderedElement) {
	          shouldUpdateStateProps = hasStoreStateChanged || haveOwnPropsChanged && this.doStatePropsDependOnOwnProps;
	          shouldUpdateDispatchProps = haveOwnPropsChanged && this.doDispatchPropsDependOnOwnProps;
	        }

	        var haveStatePropsChanged = false;
	        var haveDispatchPropsChanged = false;
	        if (shouldUpdateStateProps) {
	          haveStatePropsChanged = this.updateStatePropsIfNeeded();
	        }
	        if (shouldUpdateDispatchProps) {
	          haveDispatchPropsChanged = this.updateDispatchPropsIfNeeded();
	        }

	        var haveMergedPropsChanged = true;
	        if (haveStatePropsChanged || haveDispatchPropsChanged || haveOwnPropsChanged) {
	          haveMergedPropsChanged = this.updateMergedPropsIfNeeded();
	        } else {
	          haveMergedPropsChanged = false;
	        }

	        if (!haveMergedPropsChanged && renderedElement) {
	          return renderedElement;
	        }

	        if (withRef) {
	          this.renderedElement = (0, _react.createElement)(WrappedComponent, _extends({}, this.mergedProps, {
	            ref: 'wrappedInstance'
	          }));
	        } else {
	          this.renderedElement = (0, _react.createElement)(WrappedComponent, this.mergedProps);
	        }

	        return this.renderedElement;
	      };

	      return Connect;
	    }(_react.Component);

	    Connect.displayName = 'Connect(' + getDisplayName(WrappedComponent) + ')';
	    Connect.WrappedComponent = WrappedComponent;
	    Connect.contextTypes = {
	      store: _storeShape2["default"]
	    };
	    Connect.propTypes = {
	      store: _storeShape2["default"]
	    };

	    if (process.env.NODE_ENV !== 'production') {
	      Connect.prototype.componentWillUpdate = function componentWillUpdate() {
	        if (this.version === version) {
	          return;
	        }

	        // We are hot reloading!
	        this.version = version;
	        this.trySubscribe();
	        this.clearCache();
	      };
	    }

	    return (0, _hoistNonReactStatics2["default"])(Connect, WrappedComponent);
	  };
	}
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)))

/***/ }),
/* 164 */
/***/ (function(module, exports) {

	"use strict";

	exports.__esModule = true;
	exports["default"] = shallowEqual;
	function shallowEqual(objA, objB) {
	  if (objA === objB) {
	    return true;
	  }

	  var keysA = Object.keys(objA);
	  var keysB = Object.keys(objB);

	  if (keysA.length !== keysB.length) {
	    return false;
	  }

	  // Test for A's keys different from B.
	  var hasOwn = Object.prototype.hasOwnProperty;
	  for (var i = 0; i < keysA.length; i++) {
	    if (!hasOwn.call(objB, keysA[i]) || objA[keysA[i]] !== objB[keysA[i]]) {
	      return false;
	    }
	  }

	  return true;
	}

/***/ }),
/* 165 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;
	exports["default"] = wrapActionCreators;

	var _redux = __webpack_require__(166);

	function wrapActionCreators(actionCreators) {
	  return function (dispatch) {
	    return (0, _redux.bindActionCreators)(actionCreators, dispatch);
	  };
	}

/***/ }),
/* 166 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	exports.__esModule = true;
	exports.compose = exports.applyMiddleware = exports.bindActionCreators = exports.combineReducers = exports.createStore = undefined;

	var _createStore = __webpack_require__(167);

	var _createStore2 = _interopRequireDefault(_createStore);

	var _combineReducers = __webpack_require__(182);

	var _combineReducers2 = _interopRequireDefault(_combineReducers);

	var _bindActionCreators = __webpack_require__(184);

	var _bindActionCreators2 = _interopRequireDefault(_bindActionCreators);

	var _applyMiddleware = __webpack_require__(185);

	var _applyMiddleware2 = _interopRequireDefault(_applyMiddleware);

	var _compose = __webpack_require__(186);

	var _compose2 = _interopRequireDefault(_compose);

	var _warning = __webpack_require__(183);

	var _warning2 = _interopRequireDefault(_warning);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	/*
	* This is a dummy function to check if the function name has been altered by minification.
	* If the function has been minified and NODE_ENV !== 'production', warn the user.
	*/
	function isCrushed() {}

	if (process.env.NODE_ENV !== 'production' && typeof isCrushed.name === 'string' && isCrushed.name !== 'isCrushed') {
	  (0, _warning2['default'])('You are currently using minified code outside of NODE_ENV === \'production\'. ' + 'This means that you are running a slower development build of Redux. ' + 'You can use loose-envify (https://github.com/zertosh/loose-envify) for browserify ' + 'or DefinePlugin for webpack (http://stackoverflow.com/questions/30030031) ' + 'to ensure you have the correct code for your production build.');
	}

	exports.createStore = _createStore2['default'];
	exports.combineReducers = _combineReducers2['default'];
	exports.bindActionCreators = _bindActionCreators2['default'];
	exports.applyMiddleware = _applyMiddleware2['default'];
	exports.compose = _compose2['default'];
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)))

/***/ }),
/* 167 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;
	exports.ActionTypes = undefined;
	exports['default'] = createStore;

	var _isPlainObject = __webpack_require__(168);

	var _isPlainObject2 = _interopRequireDefault(_isPlainObject);

	var _symbolObservable = __webpack_require__(178);

	var _symbolObservable2 = _interopRequireDefault(_symbolObservable);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	/**
	 * These are private action types reserved by Redux.
	 * For any unknown actions, you must return the current state.
	 * If the current state is undefined, you must return the initial state.
	 * Do not reference these action types directly in your code.
	 */
	var ActionTypes = exports.ActionTypes = {
	  INIT: '@@redux/INIT'

	  /**
	   * Creates a Redux store that holds the state tree.
	   * The only way to change the data in the store is to call `dispatch()` on it.
	   *
	   * There should only be a single store in your app. To specify how different
	   * parts of the state tree respond to actions, you may combine several reducers
	   * into a single reducer function by using `combineReducers`.
	   *
	   * @param {Function} reducer A function that returns the next state tree, given
	   * the current state tree and the action to handle.
	   *
	   * @param {any} [preloadedState] The initial state. You may optionally specify it
	   * to hydrate the state from the server in universal apps, or to restore a
	   * previously serialized user session.
	   * If you use `combineReducers` to produce the root reducer function, this must be
	   * an object with the same shape as `combineReducers` keys.
	   *
	   * @param {Function} [enhancer] The store enhancer. You may optionally specify it
	   * to enhance the store with third-party capabilities such as middleware,
	   * time travel, persistence, etc. The only store enhancer that ships with Redux
	   * is `applyMiddleware()`.
	   *
	   * @returns {Store} A Redux store that lets you read the state, dispatch actions
	   * and subscribe to changes.
	   */
	};function createStore(reducer, preloadedState, enhancer) {
	  var _ref2;

	  if (typeof preloadedState === 'function' && typeof enhancer === 'undefined') {
	    enhancer = preloadedState;
	    preloadedState = undefined;
	  }

	  if (typeof enhancer !== 'undefined') {
	    if (typeof enhancer !== 'function') {
	      throw new Error('Expected the enhancer to be a function.');
	    }

	    return enhancer(createStore)(reducer, preloadedState);
	  }

	  if (typeof reducer !== 'function') {
	    throw new Error('Expected the reducer to be a function.');
	  }

	  var currentReducer = reducer;
	  var currentState = preloadedState;
	  var currentListeners = [];
	  var nextListeners = currentListeners;
	  var isDispatching = false;

	  function ensureCanMutateNextListeners() {
	    if (nextListeners === currentListeners) {
	      nextListeners = currentListeners.slice();
	    }
	  }

	  /**
	   * Reads the state tree managed by the store.
	   *
	   * @returns {any} The current state tree of your application.
	   */
	  function getState() {
	    return currentState;
	  }

	  /**
	   * Adds a change listener. It will be called any time an action is dispatched,
	   * and some part of the state tree may potentially have changed. You may then
	   * call `getState()` to read the current state tree inside the callback.
	   *
	   * You may call `dispatch()` from a change listener, with the following
	   * caveats:
	   *
	   * 1. The subscriptions are snapshotted just before every `dispatch()` call.
	   * If you subscribe or unsubscribe while the listeners are being invoked, this
	   * will not have any effect on the `dispatch()` that is currently in progress.
	   * However, the next `dispatch()` call, whether nested or not, will use a more
	   * recent snapshot of the subscription list.
	   *
	   * 2. The listener should not expect to see all state changes, as the state
	   * might have been updated multiple times during a nested `dispatch()` before
	   * the listener is called. It is, however, guaranteed that all subscribers
	   * registered before the `dispatch()` started will be called with the latest
	   * state by the time it exits.
	   *
	   * @param {Function} listener A callback to be invoked on every dispatch.
	   * @returns {Function} A function to remove this change listener.
	   */
	  function subscribe(listener) {
	    if (typeof listener !== 'function') {
	      throw new Error('Expected listener to be a function.');
	    }

	    var isSubscribed = true;

	    ensureCanMutateNextListeners();
	    nextListeners.push(listener);

	    return function unsubscribe() {
	      if (!isSubscribed) {
	        return;
	      }

	      isSubscribed = false;

	      ensureCanMutateNextListeners();
	      var index = nextListeners.indexOf(listener);
	      nextListeners.splice(index, 1);
	    };
	  }

	  /**
	   * Dispatches an action. It is the only way to trigger a state change.
	   *
	   * The `reducer` function, used to create the store, will be called with the
	   * current state tree and the given `action`. Its return value will
	   * be considered the **next** state of the tree, and the change listeners
	   * will be notified.
	   *
	   * The base implementation only supports plain object actions. If you want to
	   * dispatch a Promise, an Observable, a thunk, or something else, you need to
	   * wrap your store creating function into the corresponding middleware. For
	   * example, see the documentation for the `redux-thunk` package. Even the
	   * middleware will eventually dispatch plain object actions using this method.
	   *
	   * @param {Object} action A plain object representing “what changed”. It is
	   * a good idea to keep actions serializable so you can record and replay user
	   * sessions, or use the time travelling `redux-devtools`. An action must have
	   * a `type` property which may not be `undefined`. It is a good idea to use
	   * string constants for action types.
	   *
	   * @returns {Object} For convenience, the same action object you dispatched.
	   *
	   * Note that, if you use a custom middleware, it may wrap `dispatch()` to
	   * return something else (for example, a Promise you can await).
	   */
	  function dispatch(action) {
	    if (!(0, _isPlainObject2['default'])(action)) {
	      throw new Error('Actions must be plain objects. ' + 'Use custom middleware for async actions.');
	    }

	    if (typeof action.type === 'undefined') {
	      throw new Error('Actions may not have an undefined "type" property. ' + 'Have you misspelled a constant?');
	    }

	    if (isDispatching) {
	      throw new Error('Reducers may not dispatch actions.');
	    }

	    try {
	      isDispatching = true;
	      currentState = currentReducer(currentState, action);
	    } finally {
	      isDispatching = false;
	    }

	    var listeners = currentListeners = nextListeners;
	    for (var i = 0; i < listeners.length; i++) {
	      var listener = listeners[i];
	      listener();
	    }

	    return action;
	  }

	  /**
	   * Replaces the reducer currently used by the store to calculate the state.
	   *
	   * You might need this if your app implements code splitting and you want to
	   * load some of the reducers dynamically. You might also need this if you
	   * implement a hot reloading mechanism for Redux.
	   *
	   * @param {Function} nextReducer The reducer for the store to use instead.
	   * @returns {void}
	   */
	  function replaceReducer(nextReducer) {
	    if (typeof nextReducer !== 'function') {
	      throw new Error('Expected the nextReducer to be a function.');
	    }

	    currentReducer = nextReducer;
	    dispatch({ type: ActionTypes.INIT });
	  }

	  /**
	   * Interoperability point for observable/reactive libraries.
	   * @returns {observable} A minimal observable of state changes.
	   * For more information, see the observable proposal:
	   * https://github.com/tc39/proposal-observable
	   */
	  function observable() {
	    var _ref;

	    var outerSubscribe = subscribe;
	    return _ref = {
	      /**
	       * The minimal observable subscription method.
	       * @param {Object} observer Any object that can be used as an observer.
	       * The observer object should have a `next` method.
	       * @returns {subscription} An object with an `unsubscribe` method that can
	       * be used to unsubscribe the observable from the store, and prevent further
	       * emission of values from the observable.
	       */
	      subscribe: function subscribe(observer) {
	        if (typeof observer !== 'object') {
	          throw new TypeError('Expected the observer to be an object.');
	        }

	        function observeState() {
	          if (observer.next) {
	            observer.next(getState());
	          }
	        }

	        observeState();
	        var unsubscribe = outerSubscribe(observeState);
	        return { unsubscribe: unsubscribe };
	      }
	    }, _ref[_symbolObservable2['default']] = function () {
	      return this;
	    }, _ref;
	  }

	  // When a store is created, an "INIT" action is dispatched so that every
	  // reducer returns their initial state. This effectively populates
	  // the initial state tree.
	  dispatch({ type: ActionTypes.INIT });

	  return _ref2 = {
	    dispatch: dispatch,
	    subscribe: subscribe,
	    getState: getState,
	    replaceReducer: replaceReducer
	  }, _ref2[_symbolObservable2['default']] = observable, _ref2;
	}

/***/ }),
/* 168 */
/***/ (function(module, exports, __webpack_require__) {

	var baseGetTag = __webpack_require__(169),
	    getPrototype = __webpack_require__(175),
	    isObjectLike = __webpack_require__(177);

	/** `Object#toString` result references. */
	var objectTag = '[object Object]';

	/** Used for built-in method references. */
	var funcProto = Function.prototype,
	    objectProto = Object.prototype;

	/** Used to resolve the decompiled source of functions. */
	var funcToString = funcProto.toString;

	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;

	/** Used to infer the `Object` constructor. */
	var objectCtorString = funcToString.call(Object);

	/**
	 * Checks if `value` is a plain object, that is, an object created by the
	 * `Object` constructor or one with a `[[Prototype]]` of `null`.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.8.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.
	 * @example
	 *
	 * function Foo() {
	 *   this.a = 1;
	 * }
	 *
	 * _.isPlainObject(new Foo);
	 * // => false
	 *
	 * _.isPlainObject([1, 2, 3]);
	 * // => false
	 *
	 * _.isPlainObject({ 'x': 0, 'y': 0 });
	 * // => true
	 *
	 * _.isPlainObject(Object.create(null));
	 * // => true
	 */
	function isPlainObject(value) {
	  if (!isObjectLike(value) || baseGetTag(value) != objectTag) {
	    return false;
	  }
	  var proto = getPrototype(value);
	  if (proto === null) {
	    return true;
	  }
	  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;
	  return typeof Ctor == 'function' && Ctor instanceof Ctor &&
	    funcToString.call(Ctor) == objectCtorString;
	}

	module.exports = isPlainObject;


/***/ }),
/* 169 */
/***/ (function(module, exports, __webpack_require__) {

	var Symbol = __webpack_require__(170),
	    getRawTag = __webpack_require__(173),
	    objectToString = __webpack_require__(174);

	/** `Object#toString` result references. */
	var nullTag = '[object Null]',
	    undefinedTag = '[object Undefined]';

	/** Built-in value references. */
	var symToStringTag = Symbol ? Symbol.toStringTag : undefined;

	/**
	 * The base implementation of `getTag` without fallbacks for buggy environments.
	 *
	 * @private
	 * @param {*} value The value to query.
	 * @returns {string} Returns the `toStringTag`.
	 */
	function baseGetTag(value) {
	  if (value == null) {
	    return value === undefined ? undefinedTag : nullTag;
	  }
	  return (symToStringTag && symToStringTag in Object(value))
	    ? getRawTag(value)
	    : objectToString(value);
	}

	module.exports = baseGetTag;


/***/ }),
/* 170 */
/***/ (function(module, exports, __webpack_require__) {

	var root = __webpack_require__(171);

	/** Built-in value references. */
	var Symbol = root.Symbol;

	module.exports = Symbol;


/***/ }),
/* 171 */
/***/ (function(module, exports, __webpack_require__) {

	var freeGlobal = __webpack_require__(172);

	/** Detect free variable `self`. */
	var freeSelf = typeof self == 'object' && self && self.Object === Object && self;

	/** Used as a reference to the global object. */
	var root = freeGlobal || freeSelf || Function('return this')();

	module.exports = root;


/***/ }),
/* 172 */
/***/ (function(module, exports) {

	/* WEBPACK VAR INJECTION */(function(global) {/** Detect free variable `global` from Node.js. */
	var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;

	module.exports = freeGlobal;

	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ }),
/* 173 */
/***/ (function(module, exports, __webpack_require__) {

	var Symbol = __webpack_require__(170);

	/** Used for built-in method references. */
	var objectProto = Object.prototype;

	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;

	/**
	 * Used to resolve the
	 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
	 * of values.
	 */
	var nativeObjectToString = objectProto.toString;

	/** Built-in value references. */
	var symToStringTag = Symbol ? Symbol.toStringTag : undefined;

	/**
	 * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.
	 *
	 * @private
	 * @param {*} value The value to query.
	 * @returns {string} Returns the raw `toStringTag`.
	 */
	function getRawTag(value) {
	  var isOwn = hasOwnProperty.call(value, symToStringTag),
	      tag = value[symToStringTag];

	  try {
	    value[symToStringTag] = undefined;
	    var unmasked = true;
	  } catch (e) {}

	  var result = nativeObjectToString.call(value);
	  if (unmasked) {
	    if (isOwn) {
	      value[symToStringTag] = tag;
	    } else {
	      delete value[symToStringTag];
	    }
	  }
	  return result;
	}

	module.exports = getRawTag;


/***/ }),
/* 174 */
/***/ (function(module, exports) {

	/** Used for built-in method references. */
	var objectProto = Object.prototype;

	/**
	 * Used to resolve the
	 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
	 * of values.
	 */
	var nativeObjectToString = objectProto.toString;

	/**
	 * Converts `value` to a string using `Object.prototype.toString`.
	 *
	 * @private
	 * @param {*} value The value to convert.
	 * @returns {string} Returns the converted string.
	 */
	function objectToString(value) {
	  return nativeObjectToString.call(value);
	}

	module.exports = objectToString;


/***/ }),
/* 175 */
/***/ (function(module, exports, __webpack_require__) {

	var overArg = __webpack_require__(176);

	/** Built-in value references. */
	var getPrototype = overArg(Object.getPrototypeOf, Object);

	module.exports = getPrototype;


/***/ }),
/* 176 */
/***/ (function(module, exports) {

	/**
	 * Creates a unary function that invokes `func` with its argument transformed.
	 *
	 * @private
	 * @param {Function} func The function to wrap.
	 * @param {Function} transform The argument transform.
	 * @returns {Function} Returns the new function.
	 */
	function overArg(func, transform) {
	  return function(arg) {
	    return func(transform(arg));
	  };
	}

	module.exports = overArg;


/***/ }),
/* 177 */
/***/ (function(module, exports) {

	/**
	 * Checks if `value` is object-like. A value is object-like if it's not `null`
	 * and has a `typeof` result of "object".
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
	 * @example
	 *
	 * _.isObjectLike({});
	 * // => true
	 *
	 * _.isObjectLike([1, 2, 3]);
	 * // => true
	 *
	 * _.isObjectLike(_.noop);
	 * // => false
	 *
	 * _.isObjectLike(null);
	 * // => false
	 */
	function isObjectLike(value) {
	  return value != null && typeof value == 'object';
	}

	module.exports = isObjectLike;


/***/ }),
/* 178 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(179);


/***/ }),
/* 179 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global, module) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _ponyfill = __webpack_require__(181);

	var _ponyfill2 = _interopRequireDefault(_ponyfill);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var root; /* global window */


	if (typeof self !== 'undefined') {
	  root = self;
	} else if (typeof window !== 'undefined') {
	  root = window;
	} else if (typeof global !== 'undefined') {
	  root = global;
	} else if (true) {
	  root = module;
	} else {
	  root = Function('return this')();
	}

	var result = (0, _ponyfill2['default'])(root);
	exports['default'] = result;
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }()), __webpack_require__(180)(module)))

/***/ }),
/* 180 */
/***/ (function(module, exports) {

	module.exports = function(module) {
		if(!module.webpackPolyfill) {
			module.deprecate = function() {};
			module.paths = [];
			// module.parent = undefined by default
			module.children = [];
			module.webpackPolyfill = 1;
		}
		return module;
	}


/***/ }),
/* 181 */
/***/ (function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports['default'] = symbolObservablePonyfill;
	function symbolObservablePonyfill(root) {
		var result;
		var _Symbol = root.Symbol;

		if (typeof _Symbol === 'function') {
			if (_Symbol.observable) {
				result = _Symbol.observable;
			} else {
				result = _Symbol('observable');
				_Symbol.observable = result;
			}
		} else {
			result = '@@observable';
		}

		return result;
	};

/***/ }),
/* 182 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	exports.__esModule = true;
	exports['default'] = combineReducers;

	var _createStore = __webpack_require__(167);

	var _isPlainObject = __webpack_require__(168);

	var _isPlainObject2 = _interopRequireDefault(_isPlainObject);

	var _warning = __webpack_require__(183);

	var _warning2 = _interopRequireDefault(_warning);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function getUndefinedStateErrorMessage(key, action) {
	  var actionType = action && action.type;
	  var actionName = actionType && '"' + actionType.toString() + '"' || 'an action';

	  return 'Given action ' + actionName + ', reducer "' + key + '" returned undefined. ' + 'To ignore an action, you must explicitly return the previous state. ' + 'If you want this reducer to hold no value, you can return null instead of undefined.';
	}

	function getUnexpectedStateShapeWarningMessage(inputState, reducers, action, unexpectedKeyCache) {
	  var reducerKeys = Object.keys(reducers);
	  var argumentName = action && action.type === _createStore.ActionTypes.INIT ? 'preloadedState argument passed to createStore' : 'previous state received by the reducer';

	  if (reducerKeys.length === 0) {
	    return 'Store does not have a valid reducer. Make sure the argument passed ' + 'to combineReducers is an object whose values are reducers.';
	  }

	  if (!(0, _isPlainObject2['default'])(inputState)) {
	    return 'The ' + argumentName + ' has unexpected type of "' + {}.toString.call(inputState).match(/\s([a-z|A-Z]+)/)[1] + '". Expected argument to be an object with the following ' + ('keys: "' + reducerKeys.join('", "') + '"');
	  }

	  var unexpectedKeys = Object.keys(inputState).filter(function (key) {
	    return !reducers.hasOwnProperty(key) && !unexpectedKeyCache[key];
	  });

	  unexpectedKeys.forEach(function (key) {
	    unexpectedKeyCache[key] = true;
	  });

	  if (unexpectedKeys.length > 0) {
	    return 'Unexpected ' + (unexpectedKeys.length > 1 ? 'keys' : 'key') + ' ' + ('"' + unexpectedKeys.join('", "') + '" found in ' + argumentName + '. ') + 'Expected to find one of the known reducer keys instead: ' + ('"' + reducerKeys.join('", "') + '". Unexpected keys will be ignored.');
	  }
	}

	function assertReducerShape(reducers) {
	  Object.keys(reducers).forEach(function (key) {
	    var reducer = reducers[key];
	    var initialState = reducer(undefined, { type: _createStore.ActionTypes.INIT });

	    if (typeof initialState === 'undefined') {
	      throw new Error('Reducer "' + key + '" returned undefined during initialization. ' + 'If the state passed to the reducer is undefined, you must ' + 'explicitly return the initial state. The initial state may ' + 'not be undefined. If you don\'t want to set a value for this reducer, ' + 'you can use null instead of undefined.');
	    }

	    var type = '@@redux/PROBE_UNKNOWN_ACTION_' + Math.random().toString(36).substring(7).split('').join('.');
	    if (typeof reducer(undefined, { type: type }) === 'undefined') {
	      throw new Error('Reducer "' + key + '" returned undefined when probed with a random type. ' + ('Don\'t try to handle ' + _createStore.ActionTypes.INIT + ' or other actions in "redux/*" ') + 'namespace. They are considered private. Instead, you must return the ' + 'current state for any unknown actions, unless it is undefined, ' + 'in which case you must return the initial state, regardless of the ' + 'action type. The initial state may not be undefined, but can be null.');
	    }
	  });
	}

	/**
	 * Turns an object whose values are different reducer functions, into a single
	 * reducer function. It will call every child reducer, and gather their results
	 * into a single state object, whose keys correspond to the keys of the passed
	 * reducer functions.
	 *
	 * @param {Object} reducers An object whose values correspond to different
	 * reducer functions that need to be combined into one. One handy way to obtain
	 * it is to use ES6 `import * as reducers` syntax. The reducers may never return
	 * undefined for any action. Instead, they should return their initial state
	 * if the state passed to them was undefined, and the current state for any
	 * unrecognized action.
	 *
	 * @returns {Function} A reducer function that invokes every reducer inside the
	 * passed object, and builds a state object with the same shape.
	 */
	function combineReducers(reducers) {
	  var reducerKeys = Object.keys(reducers);
	  var finalReducers = {};
	  for (var i = 0; i < reducerKeys.length; i++) {
	    var key = reducerKeys[i];

	    if (process.env.NODE_ENV !== 'production') {
	      if (typeof reducers[key] === 'undefined') {
	        (0, _warning2['default'])('No reducer provided for key "' + key + '"');
	      }
	    }

	    if (typeof reducers[key] === 'function') {
	      finalReducers[key] = reducers[key];
	    }
	  }
	  var finalReducerKeys = Object.keys(finalReducers);

	  var unexpectedKeyCache = void 0;
	  if (process.env.NODE_ENV !== 'production') {
	    unexpectedKeyCache = {};
	  }

	  var shapeAssertionError = void 0;
	  try {
	    assertReducerShape(finalReducers);
	  } catch (e) {
	    shapeAssertionError = e;
	  }

	  return function combination() {
	    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	    var action = arguments[1];

	    if (shapeAssertionError) {
	      throw shapeAssertionError;
	    }

	    if (process.env.NODE_ENV !== 'production') {
	      var warningMessage = getUnexpectedStateShapeWarningMessage(state, finalReducers, action, unexpectedKeyCache);
	      if (warningMessage) {
	        (0, _warning2['default'])(warningMessage);
	      }
	    }

	    var hasChanged = false;
	    var nextState = {};
	    for (var _i = 0; _i < finalReducerKeys.length; _i++) {
	      var _key = finalReducerKeys[_i];
	      var reducer = finalReducers[_key];
	      var previousStateForKey = state[_key];
	      var nextStateForKey = reducer(previousStateForKey, action);
	      if (typeof nextStateForKey === 'undefined') {
	        var errorMessage = getUndefinedStateErrorMessage(_key, action);
	        throw new Error(errorMessage);
	      }
	      nextState[_key] = nextStateForKey;
	      hasChanged = hasChanged || nextStateForKey !== previousStateForKey;
	    }
	    return hasChanged ? nextState : state;
	  };
	}
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)))

/***/ }),
/* 183 */
/***/ (function(module, exports) {

	'use strict';

	exports.__esModule = true;
	exports['default'] = warning;
	/**
	 * Prints a warning in the console if it exists.
	 *
	 * @param {String} message The warning message.
	 * @returns {void}
	 */
	function warning(message) {
	  /* eslint-disable no-console */
	  if (typeof console !== 'undefined' && typeof console.error === 'function') {
	    console.error(message);
	  }
	  /* eslint-enable no-console */
	  try {
	    // This error was thrown as a convenience so that if you enable
	    // "break on all exceptions" in your console,
	    // it would pause the execution at this line.
	    throw new Error(message);
	    /* eslint-disable no-empty */
	  } catch (e) {}
	  /* eslint-enable no-empty */
	}

/***/ }),
/* 184 */
/***/ (function(module, exports) {

	'use strict';

	exports.__esModule = true;
	exports['default'] = bindActionCreators;
	function bindActionCreator(actionCreator, dispatch) {
	  return function () {
	    return dispatch(actionCreator.apply(undefined, arguments));
	  };
	}

	/**
	 * Turns an object whose values are action creators, into an object with the
	 * same keys, but with every function wrapped into a `dispatch` call so they
	 * may be invoked directly. This is just a convenience method, as you can call
	 * `store.dispatch(MyActionCreators.doSomething())` yourself just fine.
	 *
	 * For convenience, you can also pass a single function as the first argument,
	 * and get a function in return.
	 *
	 * @param {Function|Object} actionCreators An object whose values are action
	 * creator functions. One handy way to obtain it is to use ES6 `import * as`
	 * syntax. You may also pass a single function.
	 *
	 * @param {Function} dispatch The `dispatch` function available on your Redux
	 * store.
	 *
	 * @returns {Function|Object} The object mimicking the original object, but with
	 * every action creator wrapped into the `dispatch` call. If you passed a
	 * function as `actionCreators`, the return value will also be a single
	 * function.
	 */
	function bindActionCreators(actionCreators, dispatch) {
	  if (typeof actionCreators === 'function') {
	    return bindActionCreator(actionCreators, dispatch);
	  }

	  if (typeof actionCreators !== 'object' || actionCreators === null) {
	    throw new Error('bindActionCreators expected an object or a function, instead received ' + (actionCreators === null ? 'null' : typeof actionCreators) + '. ' + 'Did you write "import ActionCreators from" instead of "import * as ActionCreators from"?');
	  }

	  var keys = Object.keys(actionCreators);
	  var boundActionCreators = {};
	  for (var i = 0; i < keys.length; i++) {
	    var key = keys[i];
	    var actionCreator = actionCreators[key];
	    if (typeof actionCreator === 'function') {
	      boundActionCreators[key] = bindActionCreator(actionCreator, dispatch);
	    }
	  }
	  return boundActionCreators;
	}

/***/ }),
/* 185 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	exports['default'] = applyMiddleware;

	var _compose = __webpack_require__(186);

	var _compose2 = _interopRequireDefault(_compose);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	/**
	 * Creates a store enhancer that applies middleware to the dispatch method
	 * of the Redux store. This is handy for a variety of tasks, such as expressing
	 * asynchronous actions in a concise manner, or logging every action payload.
	 *
	 * See `redux-thunk` package as an example of the Redux middleware.
	 *
	 * Because middleware is potentially asynchronous, this should be the first
	 * store enhancer in the composition chain.
	 *
	 * Note that each middleware will be given the `dispatch` and `getState` functions
	 * as named arguments.
	 *
	 * @param {...Function} middlewares The middleware chain to be applied.
	 * @returns {Function} A store enhancer applying the middleware.
	 */
	function applyMiddleware() {
	  for (var _len = arguments.length, middlewares = Array(_len), _key = 0; _key < _len; _key++) {
	    middlewares[_key] = arguments[_key];
	  }

	  return function (createStore) {
	    return function (reducer, preloadedState, enhancer) {
	      var store = createStore(reducer, preloadedState, enhancer);
	      var _dispatch = store.dispatch;
	      var chain = [];

	      var middlewareAPI = {
	        getState: store.getState,
	        dispatch: function dispatch(action) {
	          return _dispatch(action);
	        }
	      };
	      chain = middlewares.map(function (middleware) {
	        return middleware(middlewareAPI);
	      });
	      _dispatch = _compose2['default'].apply(undefined, chain)(store.dispatch);

	      return _extends({}, store, {
	        dispatch: _dispatch
	      });
	    };
	  };
	}

/***/ }),
/* 186 */
/***/ (function(module, exports) {

	"use strict";

	exports.__esModule = true;
	exports["default"] = compose;
	/**
	 * Composes single-argument functions from right to left. The rightmost
	 * function can take multiple arguments as it provides the signature for
	 * the resulting composite function.
	 *
	 * @param {...Function} funcs The functions to compose.
	 * @returns {Function} A function obtained by composing the argument functions
	 * from right to left. For example, compose(f, g, h) is identical to doing
	 * (...args) => f(g(h(...args))).
	 */

	function compose() {
	  for (var _len = arguments.length, funcs = Array(_len), _key = 0; _key < _len; _key++) {
	    funcs[_key] = arguments[_key];
	  }

	  if (funcs.length === 0) {
	    return function (arg) {
	      return arg;
	    };
	  }

	  if (funcs.length === 1) {
	    return funcs[0];
	  }

	  return funcs.reduce(function (a, b) {
	    return function () {
	      return a(b.apply(undefined, arguments));
	    };
	  });
	}

/***/ }),
/* 187 */
/***/ (function(module, exports, __webpack_require__) {

	var baseGetTag = __webpack_require__(188),
	    getPrototype = __webpack_require__(194),
	    isObjectLike = __webpack_require__(196);

	/** `Object#toString` result references. */
	var objectTag = '[object Object]';

	/** Used for built-in method references. */
	var funcProto = Function.prototype,
	    objectProto = Object.prototype;

	/** Used to resolve the decompiled source of functions. */
	var funcToString = funcProto.toString;

	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;

	/** Used to infer the `Object` constructor. */
	var objectCtorString = funcToString.call(Object);

	/**
	 * Checks if `value` is a plain object, that is, an object created by the
	 * `Object` constructor or one with a `[[Prototype]]` of `null`.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.8.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.
	 * @example
	 *
	 * function Foo() {
	 *   this.a = 1;
	 * }
	 *
	 * _.isPlainObject(new Foo);
	 * // => false
	 *
	 * _.isPlainObject([1, 2, 3]);
	 * // => false
	 *
	 * _.isPlainObject({ 'x': 0, 'y': 0 });
	 * // => true
	 *
	 * _.isPlainObject(Object.create(null));
	 * // => true
	 */
	function isPlainObject(value) {
	  if (!isObjectLike(value) || baseGetTag(value) != objectTag) {
	    return false;
	  }
	  var proto = getPrototype(value);
	  if (proto === null) {
	    return true;
	  }
	  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;
	  return typeof Ctor == 'function' && Ctor instanceof Ctor &&
	    funcToString.call(Ctor) == objectCtorString;
	}

	module.exports = isPlainObject;


/***/ }),
/* 188 */
/***/ (function(module, exports, __webpack_require__) {

	var Symbol = __webpack_require__(189),
	    getRawTag = __webpack_require__(192),
	    objectToString = __webpack_require__(193);

	/** `Object#toString` result references. */
	var nullTag = '[object Null]',
	    undefinedTag = '[object Undefined]';

	/** Built-in value references. */
	var symToStringTag = Symbol ? Symbol.toStringTag : undefined;

	/**
	 * The base implementation of `getTag` without fallbacks for buggy environments.
	 *
	 * @private
	 * @param {*} value The value to query.
	 * @returns {string} Returns the `toStringTag`.
	 */
	function baseGetTag(value) {
	  if (value == null) {
	    return value === undefined ? undefinedTag : nullTag;
	  }
	  return (symToStringTag && symToStringTag in Object(value))
	    ? getRawTag(value)
	    : objectToString(value);
	}

	module.exports = baseGetTag;


/***/ }),
/* 189 */
/***/ (function(module, exports, __webpack_require__) {

	var root = __webpack_require__(190);

	/** Built-in value references. */
	var Symbol = root.Symbol;

	module.exports = Symbol;


/***/ }),
/* 190 */
/***/ (function(module, exports, __webpack_require__) {

	var freeGlobal = __webpack_require__(191);

	/** Detect free variable `self`. */
	var freeSelf = typeof self == 'object' && self && self.Object === Object && self;

	/** Used as a reference to the global object. */
	var root = freeGlobal || freeSelf || Function('return this')();

	module.exports = root;


/***/ }),
/* 191 */
/***/ (function(module, exports) {

	/* WEBPACK VAR INJECTION */(function(global) {/** Detect free variable `global` from Node.js. */
	var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;

	module.exports = freeGlobal;

	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ }),
/* 192 */
/***/ (function(module, exports, __webpack_require__) {

	var Symbol = __webpack_require__(189);

	/** Used for built-in method references. */
	var objectProto = Object.prototype;

	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;

	/**
	 * Used to resolve the
	 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
	 * of values.
	 */
	var nativeObjectToString = objectProto.toString;

	/** Built-in value references. */
	var symToStringTag = Symbol ? Symbol.toStringTag : undefined;

	/**
	 * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.
	 *
	 * @private
	 * @param {*} value The value to query.
	 * @returns {string} Returns the raw `toStringTag`.
	 */
	function getRawTag(value) {
	  var isOwn = hasOwnProperty.call(value, symToStringTag),
	      tag = value[symToStringTag];

	  try {
	    value[symToStringTag] = undefined;
	    var unmasked = true;
	  } catch (e) {}

	  var result = nativeObjectToString.call(value);
	  if (unmasked) {
	    if (isOwn) {
	      value[symToStringTag] = tag;
	    } else {
	      delete value[symToStringTag];
	    }
	  }
	  return result;
	}

	module.exports = getRawTag;


/***/ }),
/* 193 */
/***/ (function(module, exports) {

	/** Used for built-in method references. */
	var objectProto = Object.prototype;

	/**
	 * Used to resolve the
	 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
	 * of values.
	 */
	var nativeObjectToString = objectProto.toString;

	/**
	 * Converts `value` to a string using `Object.prototype.toString`.
	 *
	 * @private
	 * @param {*} value The value to convert.
	 * @returns {string} Returns the converted string.
	 */
	function objectToString(value) {
	  return nativeObjectToString.call(value);
	}

	module.exports = objectToString;


/***/ }),
/* 194 */
/***/ (function(module, exports, __webpack_require__) {

	var overArg = __webpack_require__(195);

	/** Built-in value references. */
	var getPrototype = overArg(Object.getPrototypeOf, Object);

	module.exports = getPrototype;


/***/ }),
/* 195 */
/***/ (function(module, exports) {

	/**
	 * Creates a unary function that invokes `func` with its argument transformed.
	 *
	 * @private
	 * @param {Function} func The function to wrap.
	 * @param {Function} transform The argument transform.
	 * @returns {Function} Returns the new function.
	 */
	function overArg(func, transform) {
	  return function(arg) {
	    return func(transform(arg));
	  };
	}

	module.exports = overArg;


/***/ }),
/* 196 */
/***/ (function(module, exports) {

	/**
	 * Checks if `value` is object-like. A value is object-like if it's not `null`
	 * and has a `typeof` result of "object".
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
	 * @example
	 *
	 * _.isObjectLike({});
	 * // => true
	 *
	 * _.isObjectLike([1, 2, 3]);
	 * // => true
	 *
	 * _.isObjectLike(_.noop);
	 * // => false
	 *
	 * _.isObjectLike(null);
	 * // => false
	 */
	function isObjectLike(value) {
	  return value != null && typeof value == 'object';
	}

	module.exports = isObjectLike;


/***/ }),
/* 197 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2015, Yahoo! Inc.
	 * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.
	 */
	'use strict';

	var REACT_STATICS = {
	    childContextTypes: true,
	    contextTypes: true,
	    defaultProps: true,
	    displayName: true,
	    getDefaultProps: true,
	    mixins: true,
	    propTypes: true,
	    type: true
	};

	var KNOWN_STATICS = {
	    name: true,
	    length: true,
	    prototype: true,
	    caller: true,
	    arguments: true,
	    arity: true
	};

	var isGetOwnPropertySymbolsAvailable = typeof Object.getOwnPropertySymbols === 'function';

	module.exports = function hoistNonReactStatics(targetComponent, sourceComponent, customStatics) {
	    if (typeof sourceComponent !== 'string') { // don't hoist over string (html) components
	        var keys = Object.getOwnPropertyNames(sourceComponent);

	        /* istanbul ignore else */
	        if (isGetOwnPropertySymbolsAvailable) {
	            keys = keys.concat(Object.getOwnPropertySymbols(sourceComponent));
	        }

	        for (var i = 0; i < keys.length; ++i) {
	            if (!REACT_STATICS[keys[i]] && !KNOWN_STATICS[keys[i]] && (!customStatics || !customStatics[keys[i]])) {
	                try {
	                    targetComponent[keys[i]] = sourceComponent[keys[i]];
	                } catch (error) {

	                }
	            }
	        }
	    }

	    return targetComponent;
	};


/***/ }),
/* 198 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 */

	'use strict';

	/**
	 * Use invariant() to assert state which your program assumes to be true.
	 *
	 * Provide sprintf-style format (only %s is supported) and arguments
	 * to provide information about what broke and what you were
	 * expecting.
	 *
	 * The invariant message will be stripped in production, but the invariant
	 * will remain to ensure logic does not differ in production.
	 */

	var invariant = function(condition, format, a, b, c, d, e, f) {
	  if (process.env.NODE_ENV !== 'production') {
	    if (format === undefined) {
	      throw new Error('invariant requires an error message argument');
	    }
	  }

	  if (!condition) {
	    var error;
	    if (format === undefined) {
	      error = new Error(
	        'Minified exception occurred; use the non-minified dev environment ' +
	        'for the full error message and additional helpful warnings.'
	      );
	    } else {
	      var args = [a, b, c, d, e, f];
	      var argIndex = 0;
	      error = new Error(
	        format.replace(/%s/g, function() { return args[argIndex++]; })
	      );
	      error.name = 'Invariant Violation';
	    }

	    error.framesToPop = 1; // we don't care about invariant's own frame
	    throw error;
	  }
	};

	module.exports = invariant;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)))

/***/ }),
/* 199 */
/***/ (function(module, exports) {

	'use strict';

	exports.__esModule = true;
	function createThunkMiddleware(extraArgument) {
	  return function (_ref) {
	    var dispatch = _ref.dispatch,
	        getState = _ref.getState;
	    return function (next) {
	      return function (action) {
	        if (typeof action === 'function') {
	          return action(dispatch, getState, extraArgument);
	        }

	        return next(action);
	      };
	    };
	  };
	}

	var thunk = createThunkMiddleware();
	thunk.withExtraArgument = createThunkMiddleware;

	exports['default'] = thunk;

/***/ }),
/* 200 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.REJECTED = exports.FULFILLED = exports.PENDING = undefined;

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

	exports.default = promiseMiddleware;

	var _isPromise = __webpack_require__(201);

	var _isPromise2 = _interopRequireDefault(_isPromise);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var PENDING = exports.PENDING = 'PENDING';
	var FULFILLED = exports.FULFILLED = 'FULFILLED';
	var REJECTED = exports.REJECTED = 'REJECTED';

	var defaultTypes = [PENDING, FULFILLED, REJECTED];

	/**
	 * @function promiseMiddleware
	 * @description
	 * @returns {function} thunk
	 */
	function promiseMiddleware() {
	  var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

	  var promiseTypeSuffixes = config.promiseTypeSuffixes || defaultTypes;

	  return function (ref) {
	    var dispatch = ref.dispatch;


	    return function (next) {
	      return function (action) {
	        if (action.payload) {
	          if (!(0, _isPromise2.default)(action.payload) && !(0, _isPromise2.default)(action.payload.promise)) {
	            return next(action);
	          }
	        } else {
	          return next(action);
	        }

	        // Deconstruct the properties of the original action object to constants
	        var type = action.type,
	            payload = action.payload,
	            meta = action.meta;

	        // Assign values for promise type suffixes

	        var _promiseTypeSuffixes = _slicedToArray(promiseTypeSuffixes, 3),
	            _PENDING = _promiseTypeSuffixes[0],
	            _FULFILLED = _promiseTypeSuffixes[1],
	            _REJECTED = _promiseTypeSuffixes[2];

	        /**
	         * @function getAction
	         * @description Utility function for creating a rejected or fulfilled
	         * flux standard action object.
	         * @param {boolean} Is the action rejected?
	         * @returns {object} action
	         */


	        var getAction = function getAction(newPayload, isRejected) {
	          return _extends({
	            type: type + '_' + (isRejected ? _REJECTED : _FULFILLED)
	          }, newPayload === null || typeof newPayload === 'undefined' ? {} : {
	            payload: newPayload
	          }, meta !== undefined ? { meta: meta } : {}, isRejected ? {
	            error: true
	          } : {});
	        };

	        /**
	         * Assign values for promise and data variables. In the case the payload
	         * is an object with a `promise` and `data` property, the values of those
	         * properties will be used. In the case the payload is a promise, the
	         * value of the payload will be used and data will be null.
	         */
	        var promise = void 0;
	        var data = void 0;

	        if (!(0, _isPromise2.default)(action.payload) && _typeof(action.payload) === 'object') {
	          promise = payload.promise;
	          data = payload.data;
	        } else {
	          promise = payload;
	          data = undefined;
	        }

	        /**
	         * First, dispatch the pending action. This flux standard action object
	         * describes the pending state of a promise and will include any data
	         * (for optimistic updates) and/or meta from the original action.
	         */
	        next(_extends({
	          type: type + '_' + _PENDING
	        }, data !== undefined ? { payload: data } : {}, meta !== undefined ? { meta: meta } : {}));

	        /*
	         * @function transformFulfill
	         * @description Transforms a fulfilled value into a success object.
	         * @returns {object}
	         */
	        var transformFulfill = function transformFulfill() {
	          var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;

	          var resolvedAction = getAction(value, false);
	          return { value: value, action: resolvedAction };
	        };

	        /*
	         * @function handleReject
	         * @description Dispatch the rejected action.
	         * @returns {void}
	         */
	        var handleReject = function handleReject(reason) {
	          var rejectedAction = getAction(reason, true);
	          dispatch(rejectedAction);
	        };

	        /*
	         * @function handleFulfill
	         * @description Dispatch the fulfilled action.
	         * @param successValue The value from transformFulfill
	         * @returns {void}
	         */
	        var handleFulfill = function handleFulfill(successValue) {
	          dispatch(successValue.action);
	        };

	        /**
	         * Second, dispatch a rejected or fulfilled action. This flux standard
	         * action object will describe the resolved state of the promise. In
	         * the case of a rejected promise, it will include an `error` property.
	         *
	         * In order to allow proper chaining of actions using `then`, a new
	         * promise is constructed and returned. This promise will resolve
	         * with two properties: (1) the value (if fulfilled) or reason
	         * (if rejected) and (2) the flux standard action.
	         *
	         * Rejected object:
	         * {
	         *   reason: ...
	         *   action: {
	         *     error: true,
	         *     type: 'ACTION_REJECTED',
	         *     payload: ...
	         *   }
	         * }
	         *
	         * Fulfilled object:
	         * {
	         *   value: ...
	         *   action: {
	         *     type: 'ACTION_FULFILLED',
	         *     payload: ...
	         *   }
	         * }
	         */
	        var promiseValue = promise.then(transformFulfill);
	        var sideEffects = promiseValue.then(handleFulfill, handleReject);
	        return sideEffects.then(function () {
	          return promiseValue;
	        }, function () {
	          return promiseValue;
	        });
	      };
	    };
	  };
	}

/***/ }),
/* 201 */
/***/ (function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	exports.default = isPromise;
	function isPromise(value) {
	  if (value !== null && (typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object') {
	    return value && typeof value.then === 'function';
	  }

	  return false;
	}

/***/ }),
/* 202 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _reactRouterDom = __webpack_require__(203);

	var _routes = __webpack_require__(247);

	var _routes2 = _interopRequireDefault(_routes);

	var _page_index = __webpack_require__(625);

	var _page_index2 = _interopRequireDefault(_page_index);

	var _page_error_ = __webpack_require__(626);

	var _page_error_2 = _interopRequireDefault(_page_error_);

	var _page_login = __webpack_require__(627);

	var _page_login2 = _interopRequireDefault(_page_login);

	var _page_register = __webpack_require__(635);

	var _page_register2 = _interopRequireDefault(_page_register);

	var _page_new_password = __webpack_require__(638);

	var _page_new_password2 = _interopRequireDefault(_page_new_password);

	var _page_confirm_account = __webpack_require__(640);

	var _page_confirm_account2 = _interopRequireDefault(_page_confirm_account);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/*
	    Componente que contém toda a lógica de topo
	    de routing da aplicação.
	    Contém todas as routes das páginas comuns a todos
	    os utilizadores e depois liga um outro component de
	    routing que trata do routing de todas as páginas da
	    aplicação após login.
	*/


	// Pages
	var App = function App(props) {
	    return _react2.default.createElement(
	        _reactRouterDom.BrowserRouter,
	        null,
	        _react2.default.createElement(
	            _reactRouterDom.Switch,
	            null,
	            _react2.default.createElement(_reactRouterDom.Route, { exact: true, path: '/', component: _page_index2.default }),
	            _react2.default.createElement(_reactRouterDom.Route, { path: '/login', component: _page_login2.default }),
	            _react2.default.createElement(_reactRouterDom.Route, { path: '/register', component: _page_register2.default }),
	            _react2.default.createElement(_reactRouterDom.Route, { path: '/newpassword/:key/:code', component: _page_new_password2.default }),
	            _react2.default.createElement(_reactRouterDom.Route, { path: '/confirm/:key/:code', component: _page_confirm_account2.default }),
	            _react2.default.createElement(_reactRouterDom.Route, { path: '/app', component: _routes2.default }),
	            _react2.default.createElement(_reactRouterDom.Route, { component: _page_error_2.default })
	        )
	    );
	};

	// Internal Modules
	// 3rd Party
	exports.default = App;

/***/ }),
/* 203 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;
	exports.withRouter = exports.matchPath = exports.Switch = exports.StaticRouter = exports.Router = exports.Route = exports.Redirect = exports.Prompt = exports.NavLink = exports.MemoryRouter = exports.Link = exports.HashRouter = exports.BrowserRouter = undefined;

	var _BrowserRouter2 = __webpack_require__(204);

	var _BrowserRouter3 = _interopRequireDefault(_BrowserRouter2);

	var _HashRouter2 = __webpack_require__(234);

	var _HashRouter3 = _interopRequireDefault(_HashRouter2);

	var _Link2 = __webpack_require__(236);

	var _Link3 = _interopRequireDefault(_Link2);

	var _MemoryRouter2 = __webpack_require__(237);

	var _MemoryRouter3 = _interopRequireDefault(_MemoryRouter2);

	var _NavLink2 = __webpack_require__(238);

	var _NavLink3 = _interopRequireDefault(_NavLink2);

	var _Prompt2 = __webpack_require__(239);

	var _Prompt3 = _interopRequireDefault(_Prompt2);

	var _Redirect2 = __webpack_require__(240);

	var _Redirect3 = _interopRequireDefault(_Redirect2);

	var _Route2 = __webpack_require__(241);

	var _Route3 = _interopRequireDefault(_Route2);

	var _Router2 = __webpack_require__(242);

	var _Router3 = _interopRequireDefault(_Router2);

	var _StaticRouter2 = __webpack_require__(243);

	var _StaticRouter3 = _interopRequireDefault(_StaticRouter2);

	var _Switch2 = __webpack_require__(244);

	var _Switch3 = _interopRequireDefault(_Switch2);

	var _matchPath2 = __webpack_require__(245);

	var _matchPath3 = _interopRequireDefault(_matchPath2);

	var _withRouter2 = __webpack_require__(246);

	var _withRouter3 = _interopRequireDefault(_withRouter2);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.BrowserRouter = _BrowserRouter3.default;
	exports.HashRouter = _HashRouter3.default;
	exports.Link = _Link3.default;
	exports.MemoryRouter = _MemoryRouter3.default;
	exports.NavLink = _NavLink3.default;
	exports.Prompt = _Prompt3.default;
	exports.Redirect = _Redirect3.default;
	exports.Route = _Route3.default;
	exports.Router = _Router3.default;
	exports.StaticRouter = _StaticRouter3.default;
	exports.Switch = _Switch3.default;
	exports.matchPath = _matchPath3.default;
	exports.withRouter = _withRouter3.default;

/***/ }),
/* 204 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(205);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _createBrowserHistory = __webpack_require__(213);

	var _createBrowserHistory2 = _interopRequireDefault(_createBrowserHistory);

	var _reactRouter = __webpack_require__(221);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	/**
	 * The public API for a <Router> that uses HTML5 history.
	 */
	var BrowserRouter = function (_React$Component) {
	  _inherits(BrowserRouter, _React$Component);

	  function BrowserRouter() {
	    var _temp, _this, _ret;

	    _classCallCheck(this, BrowserRouter);

	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.history = (0, _createBrowserHistory2.default)(_this.props), _temp), _possibleConstructorReturn(_this, _ret);
	  }

	  BrowserRouter.prototype.render = function render() {
	    return _react2.default.createElement(_reactRouter.Router, { history: this.history, children: this.props.children });
	  };

	  return BrowserRouter;
	}(_react2.default.Component);

	BrowserRouter.propTypes = {
	  basename: _propTypes2.default.string,
	  forceRefresh: _propTypes2.default.bool,
	  getUserConfirmation: _propTypes2.default.func,
	  keyLength: _propTypes2.default.number,
	  children: _propTypes2.default.node
	};
	exports.default = BrowserRouter;

/***/ }),
/* 205 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 */

	if (process.env.NODE_ENV !== 'production') {
	  var REACT_ELEMENT_TYPE = (typeof Symbol === 'function' &&
	    Symbol.for &&
	    Symbol.for('react.element')) ||
	    0xeac7;

	  var isValidElement = function(object) {
	    return typeof object === 'object' &&
	      object !== null &&
	      object.$$typeof === REACT_ELEMENT_TYPE;
	  };

	  // By explicitly using `prop-types` you are opting into new development behavior.
	  // http://fb.me/prop-types-in-prod
	  var throwOnDirectAccess = true;
	  module.exports = __webpack_require__(206)(isValidElement, throwOnDirectAccess);
	} else {
	  // By explicitly using `prop-types` you are opting into new production behavior.
	  // http://fb.me/prop-types-in-prod
	  module.exports = __webpack_require__(212)();
	}

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)))

/***/ }),
/* 206 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 */

	'use strict';

	var emptyFunction = __webpack_require__(207);
	var invariant = __webpack_require__(208);
	var warning = __webpack_require__(209);

	var ReactPropTypesSecret = __webpack_require__(210);
	var checkPropTypes = __webpack_require__(211);

	module.exports = function(isValidElement, throwOnDirectAccess) {
	  /* global Symbol */
	  var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
	  var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.

	  /**
	   * Returns the iterator method function contained on the iterable object.
	   *
	   * Be sure to invoke the function with the iterable as context:
	   *
	   *     var iteratorFn = getIteratorFn(myIterable);
	   *     if (iteratorFn) {
	   *       var iterator = iteratorFn.call(myIterable);
	   *       ...
	   *     }
	   *
	   * @param {?object} maybeIterable
	   * @return {?function}
	   */
	  function getIteratorFn(maybeIterable) {
	    var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
	    if (typeof iteratorFn === 'function') {
	      return iteratorFn;
	    }
	  }

	  /**
	   * Collection of methods that allow declaration and validation of props that are
	   * supplied to React components. Example usage:
	   *
	   *   var Props = require('ReactPropTypes');
	   *   var MyArticle = React.createClass({
	   *     propTypes: {
	   *       // An optional string prop named "description".
	   *       description: Props.string,
	   *
	   *       // A required enum prop named "category".
	   *       category: Props.oneOf(['News','Photos']).isRequired,
	   *
	   *       // A prop named "dialog" that requires an instance of Dialog.
	   *       dialog: Props.instanceOf(Dialog).isRequired
	   *     },
	   *     render: function() { ... }
	   *   });
	   *
	   * A more formal specification of how these methods are used:
	   *
	   *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)
	   *   decl := ReactPropTypes.{type}(.isRequired)?
	   *
	   * Each and every declaration produces a function with the same signature. This
	   * allows the creation of custom validation functions. For example:
	   *
	   *  var MyLink = React.createClass({
	   *    propTypes: {
	   *      // An optional string or URI prop named "href".
	   *      href: function(props, propName, componentName) {
	   *        var propValue = props[propName];
	   *        if (propValue != null && typeof propValue !== 'string' &&
	   *            !(propValue instanceof URI)) {
	   *          return new Error(
	   *            'Expected a string or an URI for ' + propName + ' in ' +
	   *            componentName
	   *          );
	   *        }
	   *      }
	   *    },
	   *    render: function() {...}
	   *  });
	   *
	   * @internal
	   */

	  var ANONYMOUS = '<<anonymous>>';

	  // Important!
	  // Keep this list in sync with production version in `./factoryWithThrowingShims.js`.
	  var ReactPropTypes = {
	    array: createPrimitiveTypeChecker('array'),
	    bool: createPrimitiveTypeChecker('boolean'),
	    func: createPrimitiveTypeChecker('function'),
	    number: createPrimitiveTypeChecker('number'),
	    object: createPrimitiveTypeChecker('object'),
	    string: createPrimitiveTypeChecker('string'),
	    symbol: createPrimitiveTypeChecker('symbol'),

	    any: createAnyTypeChecker(),
	    arrayOf: createArrayOfTypeChecker,
	    element: createElementTypeChecker(),
	    instanceOf: createInstanceTypeChecker,
	    node: createNodeChecker(),
	    objectOf: createObjectOfTypeChecker,
	    oneOf: createEnumTypeChecker,
	    oneOfType: createUnionTypeChecker,
	    shape: createShapeTypeChecker
	  };

	  /**
	   * inlined Object.is polyfill to avoid requiring consumers ship their own
	   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
	   */
	  /*eslint-disable no-self-compare*/
	  function is(x, y) {
	    // SameValue algorithm
	    if (x === y) {
	      // Steps 1-5, 7-10
	      // Steps 6.b-6.e: +0 != -0
	      return x !== 0 || 1 / x === 1 / y;
	    } else {
	      // Step 6.a: NaN == NaN
	      return x !== x && y !== y;
	    }
	  }
	  /*eslint-enable no-self-compare*/

	  /**
	   * We use an Error-like object for backward compatibility as people may call
	   * PropTypes directly and inspect their output. However, we don't use real
	   * Errors anymore. We don't inspect their stack anyway, and creating them
	   * is prohibitively expensive if they are created too often, such as what
	   * happens in oneOfType() for any type before the one that matched.
	   */
	  function PropTypeError(message) {
	    this.message = message;
	    this.stack = '';
	  }
	  // Make `instanceof Error` still work for returned errors.
	  PropTypeError.prototype = Error.prototype;

	  function createChainableTypeChecker(validate) {
	    if (process.env.NODE_ENV !== 'production') {
	      var manualPropTypeCallCache = {};
	      var manualPropTypeWarningCount = 0;
	    }
	    function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {
	      componentName = componentName || ANONYMOUS;
	      propFullName = propFullName || propName;

	      if (secret !== ReactPropTypesSecret) {
	        if (throwOnDirectAccess) {
	          // New behavior only for users of `prop-types` package
	          invariant(
	            false,
	            'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +
	            'Use `PropTypes.checkPropTypes()` to call them. ' +
	            'Read more at http://fb.me/use-check-prop-types'
	          );
	        } else if (process.env.NODE_ENV !== 'production' && typeof console !== 'undefined') {
	          // Old behavior for people using React.PropTypes
	          var cacheKey = componentName + ':' + propName;
	          if (
	            !manualPropTypeCallCache[cacheKey] &&
	            // Avoid spamming the console because they are often not actionable except for lib authors
	            manualPropTypeWarningCount < 3
	          ) {
	            warning(
	              false,
	              'You are manually calling a React.PropTypes validation ' +
	              'function for the `%s` prop on `%s`. This is deprecated ' +
	              'and will throw in the standalone `prop-types` package. ' +
	              'You may be seeing this warning due to a third-party PropTypes ' +
	              'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.',
	              propFullName,
	              componentName
	            );
	            manualPropTypeCallCache[cacheKey] = true;
	            manualPropTypeWarningCount++;
	          }
	        }
	      }
	      if (props[propName] == null) {
	        if (isRequired) {
	          if (props[propName] === null) {
	            return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));
	          }
	          return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));
	        }
	        return null;
	      } else {
	        return validate(props, propName, componentName, location, propFullName);
	      }
	    }

	    var chainedCheckType = checkType.bind(null, false);
	    chainedCheckType.isRequired = checkType.bind(null, true);

	    return chainedCheckType;
	  }

	  function createPrimitiveTypeChecker(expectedType) {
	    function validate(props, propName, componentName, location, propFullName, secret) {
	      var propValue = props[propName];
	      var propType = getPropType(propValue);
	      if (propType !== expectedType) {
	        // `propValue` being instance of, say, date/regexp, pass the 'object'
	        // check, but we can offer a more precise error message here rather than
	        // 'of type `object`'.
	        var preciseType = getPreciseType(propValue);

	        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));
	      }
	      return null;
	    }
	    return createChainableTypeChecker(validate);
	  }

	  function createAnyTypeChecker() {
	    return createChainableTypeChecker(emptyFunction.thatReturnsNull);
	  }

	  function createArrayOfTypeChecker(typeChecker) {
	    function validate(props, propName, componentName, location, propFullName) {
	      if (typeof typeChecker !== 'function') {
	        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');
	      }
	      var propValue = props[propName];
	      if (!Array.isArray(propValue)) {
	        var propType = getPropType(propValue);
	        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));
	      }
	      for (var i = 0; i < propValue.length; i++) {
	        var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);
	        if (error instanceof Error) {
	          return error;
	        }
	      }
	      return null;
	    }
	    return createChainableTypeChecker(validate);
	  }

	  function createElementTypeChecker() {
	    function validate(props, propName, componentName, location, propFullName) {
	      var propValue = props[propName];
	      if (!isValidElement(propValue)) {
	        var propType = getPropType(propValue);
	        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));
	      }
	      return null;
	    }
	    return createChainableTypeChecker(validate);
	  }

	  function createInstanceTypeChecker(expectedClass) {
	    function validate(props, propName, componentName, location, propFullName) {
	      if (!(props[propName] instanceof expectedClass)) {
	        var expectedClassName = expectedClass.name || ANONYMOUS;
	        var actualClassName = getClassName(props[propName]);
	        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));
	      }
	      return null;
	    }
	    return createChainableTypeChecker(validate);
	  }

	  function createEnumTypeChecker(expectedValues) {
	    if (!Array.isArray(expectedValues)) {
	      process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid argument supplied to oneOf, expected an instance of array.') : void 0;
	      return emptyFunction.thatReturnsNull;
	    }

	    function validate(props, propName, componentName, location, propFullName) {
	      var propValue = props[propName];
	      for (var i = 0; i < expectedValues.length; i++) {
	        if (is(propValue, expectedValues[i])) {
	          return null;
	        }
	      }

	      var valuesString = JSON.stringify(expectedValues);
	      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + propValue + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));
	    }
	    return createChainableTypeChecker(validate);
	  }

	  function createObjectOfTypeChecker(typeChecker) {
	    function validate(props, propName, componentName, location, propFullName) {
	      if (typeof typeChecker !== 'function') {
	        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');
	      }
	      var propValue = props[propName];
	      var propType = getPropType(propValue);
	      if (propType !== 'object') {
	        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));
	      }
	      for (var key in propValue) {
	        if (propValue.hasOwnProperty(key)) {
	          var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
	          if (error instanceof Error) {
	            return error;
	          }
	        }
	      }
	      return null;
	    }
	    return createChainableTypeChecker(validate);
	  }

	  function createUnionTypeChecker(arrayOfTypeCheckers) {
	    if (!Array.isArray(arrayOfTypeCheckers)) {
	      process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid argument supplied to oneOfType, expected an instance of array.') : void 0;
	      return emptyFunction.thatReturnsNull;
	    }

	    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
	      var checker = arrayOfTypeCheckers[i];
	      if (typeof checker !== 'function') {
	        warning(
	          false,
	          'Invalid argument supplid to oneOfType. Expected an array of check functions, but ' +
	          'received %s at index %s.',
	          getPostfixForTypeWarning(checker),
	          i
	        );
	        return emptyFunction.thatReturnsNull;
	      }
	    }

	    function validate(props, propName, componentName, location, propFullName) {
	      for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
	        var checker = arrayOfTypeCheckers[i];
	        if (checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret) == null) {
	          return null;
	        }
	      }

	      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));
	    }
	    return createChainableTypeChecker(validate);
	  }

	  function createNodeChecker() {
	    function validate(props, propName, componentName, location, propFullName) {
	      if (!isNode(props[propName])) {
	        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));
	      }
	      return null;
	    }
	    return createChainableTypeChecker(validate);
	  }

	  function createShapeTypeChecker(shapeTypes) {
	    function validate(props, propName, componentName, location, propFullName) {
	      var propValue = props[propName];
	      var propType = getPropType(propValue);
	      if (propType !== 'object') {
	        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
	      }
	      for (var key in shapeTypes) {
	        var checker = shapeTypes[key];
	        if (!checker) {
	          continue;
	        }
	        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
	        if (error) {
	          return error;
	        }
	      }
	      return null;
	    }
	    return createChainableTypeChecker(validate);
	  }

	  function isNode(propValue) {
	    switch (typeof propValue) {
	      case 'number':
	      case 'string':
	      case 'undefined':
	        return true;
	      case 'boolean':
	        return !propValue;
	      case 'object':
	        if (Array.isArray(propValue)) {
	          return propValue.every(isNode);
	        }
	        if (propValue === null || isValidElement(propValue)) {
	          return true;
	        }

	        var iteratorFn = getIteratorFn(propValue);
	        if (iteratorFn) {
	          var iterator = iteratorFn.call(propValue);
	          var step;
	          if (iteratorFn !== propValue.entries) {
	            while (!(step = iterator.next()).done) {
	              if (!isNode(step.value)) {
	                return false;
	              }
	            }
	          } else {
	            // Iterator will provide entry [k,v] tuples rather than values.
	            while (!(step = iterator.next()).done) {
	              var entry = step.value;
	              if (entry) {
	                if (!isNode(entry[1])) {
	                  return false;
	                }
	              }
	            }
	          }
	        } else {
	          return false;
	        }

	        return true;
	      default:
	        return false;
	    }
	  }

	  function isSymbol(propType, propValue) {
	    // Native Symbol.
	    if (propType === 'symbol') {
	      return true;
	    }

	    // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'
	    if (propValue['@@toStringTag'] === 'Symbol') {
	      return true;
	    }

	    // Fallback for non-spec compliant Symbols which are polyfilled.
	    if (typeof Symbol === 'function' && propValue instanceof Symbol) {
	      return true;
	    }

	    return false;
	  }

	  // Equivalent of `typeof` but with special handling for array and regexp.
	  function getPropType(propValue) {
	    var propType = typeof propValue;
	    if (Array.isArray(propValue)) {
	      return 'array';
	    }
	    if (propValue instanceof RegExp) {
	      // Old webkits (at least until Android 4.0) return 'function' rather than
	      // 'object' for typeof a RegExp. We'll normalize this here so that /bla/
	      // passes PropTypes.object.
	      return 'object';
	    }
	    if (isSymbol(propType, propValue)) {
	      return 'symbol';
	    }
	    return propType;
	  }

	  // This handles more types than `getPropType`. Only used for error messages.
	  // See `createPrimitiveTypeChecker`.
	  function getPreciseType(propValue) {
	    if (typeof propValue === 'undefined' || propValue === null) {
	      return '' + propValue;
	    }
	    var propType = getPropType(propValue);
	    if (propType === 'object') {
	      if (propValue instanceof Date) {
	        return 'date';
	      } else if (propValue instanceof RegExp) {
	        return 'regexp';
	      }
	    }
	    return propType;
	  }

	  // Returns a string that is postfixed to a warning about an invalid type.
	  // For example, "undefined" or "of type array"
	  function getPostfixForTypeWarning(value) {
	    var type = getPreciseType(value);
	    switch (type) {
	      case 'array':
	      case 'object':
	        return 'an ' + type;
	      case 'boolean':
	      case 'date':
	      case 'regexp':
	        return 'a ' + type;
	      default:
	        return type;
	    }
	  }

	  // Returns class name of the object, if any.
	  function getClassName(propValue) {
	    if (!propValue.constructor || !propValue.constructor.name) {
	      return ANONYMOUS;
	    }
	    return propValue.constructor.name;
	  }

	  ReactPropTypes.checkPropTypes = checkPropTypes;
	  ReactPropTypes.PropTypes = ReactPropTypes;

	  return ReactPropTypes;
	};

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)))

/***/ }),
/* 207 */
/***/ (function(module, exports) {

	"use strict";

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */

	function makeEmptyFunction(arg) {
	  return function () {
	    return arg;
	  };
	}

	/**
	 * This function accepts and discards inputs; it has no side effects. This is
	 * primarily useful idiomatically for overridable function endpoints which
	 * always need to be callable, since JS lacks a null-call idiom ala Cocoa.
	 */
	var emptyFunction = function emptyFunction() {};

	emptyFunction.thatReturns = makeEmptyFunction;
	emptyFunction.thatReturnsFalse = makeEmptyFunction(false);
	emptyFunction.thatReturnsTrue = makeEmptyFunction(true);
	emptyFunction.thatReturnsNull = makeEmptyFunction(null);
	emptyFunction.thatReturnsThis = function () {
	  return this;
	};
	emptyFunction.thatReturnsArgument = function (arg) {
	  return arg;
	};

	module.exports = emptyFunction;

/***/ }),
/* 208 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	/**
	 * Use invariant() to assert state which your program assumes to be true.
	 *
	 * Provide sprintf-style format (only %s is supported) and arguments
	 * to provide information about what broke and what you were
	 * expecting.
	 *
	 * The invariant message will be stripped in production, but the invariant
	 * will remain to ensure logic does not differ in production.
	 */

	var validateFormat = function validateFormat(format) {};

	if (process.env.NODE_ENV !== 'production') {
	  validateFormat = function validateFormat(format) {
	    if (format === undefined) {
	      throw new Error('invariant requires an error message argument');
	    }
	  };
	}

	function invariant(condition, format, a, b, c, d, e, f) {
	  validateFormat(format);

	  if (!condition) {
	    var error;
	    if (format === undefined) {
	      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');
	    } else {
	      var args = [a, b, c, d, e, f];
	      var argIndex = 0;
	      error = new Error(format.replace(/%s/g, function () {
	        return args[argIndex++];
	      }));
	      error.name = 'Invariant Violation';
	    }

	    error.framesToPop = 1; // we don't care about invariant's own frame
	    throw error;
	  }
	}

	module.exports = invariant;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)))

/***/ }),
/* 209 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var emptyFunction = __webpack_require__(207);

	/**
	 * Similar to invariant but only logs a warning if the condition is not met.
	 * This can be used to log issues in development environments in critical
	 * paths. Removing the logging code for production environments will keep the
	 * same logic and follow the same code paths.
	 */

	var warning = emptyFunction;

	if (process.env.NODE_ENV !== 'production') {
	  (function () {
	    var printWarning = function printWarning(format) {
	      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	        args[_key - 1] = arguments[_key];
	      }

	      var argIndex = 0;
	      var message = 'Warning: ' + format.replace(/%s/g, function () {
	        return args[argIndex++];
	      });
	      if (typeof console !== 'undefined') {
	        console.error(message);
	      }
	      try {
	        // --- Welcome to debugging React ---
	        // This error was thrown as a convenience so that you can use this stack
	        // to find the callsite that caused this warning to fire.
	        throw new Error(message);
	      } catch (x) {}
	    };

	    warning = function warning(condition, format) {
	      if (format === undefined) {
	        throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');
	      }

	      if (format.indexOf('Failed Composite propType: ') === 0) {
	        return; // Ignore CompositeComponent proptype check.
	      }

	      if (!condition) {
	        for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
	          args[_key2 - 2] = arguments[_key2];
	        }

	        printWarning.apply(undefined, [format].concat(args));
	      }
	    };
	  })();
	}

	module.exports = warning;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)))

/***/ }),
/* 210 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 */

	'use strict';

	var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';

	module.exports = ReactPropTypesSecret;


/***/ }),
/* 211 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 */

	'use strict';

	if (process.env.NODE_ENV !== 'production') {
	  var invariant = __webpack_require__(208);
	  var warning = __webpack_require__(209);
	  var ReactPropTypesSecret = __webpack_require__(210);
	  var loggedTypeFailures = {};
	}

	/**
	 * Assert that the values match with the type specs.
	 * Error messages are memorized and will only be shown once.
	 *
	 * @param {object} typeSpecs Map of name to a ReactPropType
	 * @param {object} values Runtime values that need to be type-checked
	 * @param {string} location e.g. "prop", "context", "child context"
	 * @param {string} componentName Name of the component for error messages.
	 * @param {?Function} getStack Returns the component stack.
	 * @private
	 */
	function checkPropTypes(typeSpecs, values, location, componentName, getStack) {
	  if (process.env.NODE_ENV !== 'production') {
	    for (var typeSpecName in typeSpecs) {
	      if (typeSpecs.hasOwnProperty(typeSpecName)) {
	        var error;
	        // Prop type validation may throw. In case they do, we don't want to
	        // fail the render phase where it didn't fail before. So we log it.
	        // After these have been cleaned up, we'll let them throw.
	        try {
	          // This is intentionally an invariant that gets caught. It's the same
	          // behavior as without this statement except with a better message.
	          invariant(typeof typeSpecs[typeSpecName] === 'function', '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'React.PropTypes.', componentName || 'React class', location, typeSpecName);
	          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
	        } catch (ex) {
	          error = ex;
	        }
	        warning(!error || error instanceof Error, '%s: type specification of %s `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error);
	        if (error instanceof Error && !(error.message in loggedTypeFailures)) {
	          // Only monitor this failure once because there tends to be a lot of the
	          // same error.
	          loggedTypeFailures[error.message] = true;

	          var stack = getStack ? getStack() : '';

	          warning(false, 'Failed %s type: %s%s', location, error.message, stack != null ? stack : '');
	        }
	      }
	    }
	  }
	}

	module.exports = checkPropTypes;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)))

/***/ }),
/* 212 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 */

	'use strict';

	var emptyFunction = __webpack_require__(207);
	var invariant = __webpack_require__(208);
	var ReactPropTypesSecret = __webpack_require__(210);

	module.exports = function() {
	  function shim(props, propName, componentName, location, propFullName, secret) {
	    if (secret === ReactPropTypesSecret) {
	      // It is still safe when called from React.
	      return;
	    }
	    invariant(
	      false,
	      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +
	      'Use PropTypes.checkPropTypes() to call them. ' +
	      'Read more at http://fb.me/use-check-prop-types'
	    );
	  };
	  shim.isRequired = shim;
	  function getShim() {
	    return shim;
	  };
	  // Important!
	  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.
	  var ReactPropTypes = {
	    array: shim,
	    bool: shim,
	    func: shim,
	    number: shim,
	    object: shim,
	    string: shim,
	    symbol: shim,

	    any: shim,
	    arrayOf: getShim,
	    element: shim,
	    instanceOf: getShim,
	    node: shim,
	    objectOf: getShim,
	    oneOf: getShim,
	    oneOfType: getShim,
	    shape: getShim
	  };

	  ReactPropTypes.checkPropTypes = emptyFunction;
	  ReactPropTypes.PropTypes = ReactPropTypes;

	  return ReactPropTypes;
	};


/***/ }),
/* 213 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _warning = __webpack_require__(214);

	var _warning2 = _interopRequireDefault(_warning);

	var _invariant = __webpack_require__(198);

	var _invariant2 = _interopRequireDefault(_invariant);

	var _LocationUtils = __webpack_require__(215);

	var _PathUtils = __webpack_require__(218);

	var _createTransitionManager = __webpack_require__(219);

	var _createTransitionManager2 = _interopRequireDefault(_createTransitionManager);

	var _DOMUtils = __webpack_require__(220);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var PopStateEvent = 'popstate';
	var HashChangeEvent = 'hashchange';

	var getHistoryState = function getHistoryState() {
	  try {
	    return window.history.state || {};
	  } catch (e) {
	    // IE 11 sometimes throws when accessing window.history.state
	    // See https://github.com/ReactTraining/history/pull/289
	    return {};
	  }
	};

	/**
	 * Creates a history object that uses the HTML5 history API including
	 * pushState, replaceState, and the popstate event.
	 */
	var createBrowserHistory = function createBrowserHistory() {
	  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

	  (0, _invariant2.default)(_DOMUtils.canUseDOM, 'Browser history needs a DOM');

	  var globalHistory = window.history;
	  var canUseHistory = (0, _DOMUtils.supportsHistory)();
	  var needsHashChangeListener = !(0, _DOMUtils.supportsPopStateOnHashChange)();

	  var _props$forceRefresh = props.forceRefresh,
	      forceRefresh = _props$forceRefresh === undefined ? false : _props$forceRefresh,
	      _props$getUserConfirm = props.getUserConfirmation,
	      getUserConfirmation = _props$getUserConfirm === undefined ? _DOMUtils.getConfirmation : _props$getUserConfirm,
	      _props$keyLength = props.keyLength,
	      keyLength = _props$keyLength === undefined ? 6 : _props$keyLength;

	  var basename = props.basename ? (0, _PathUtils.stripTrailingSlash)((0, _PathUtils.addLeadingSlash)(props.basename)) : '';

	  var getDOMLocation = function getDOMLocation(historyState) {
	    var _ref = historyState || {},
	        key = _ref.key,
	        state = _ref.state;

	    var _window$location = window.location,
	        pathname = _window$location.pathname,
	        search = _window$location.search,
	        hash = _window$location.hash;


	    var path = pathname + search + hash;

	    (0, _warning2.default)(!basename || (0, _PathUtils.hasBasename)(path, basename), 'You are attempting to use a basename on a page whose URL path does not begin ' + 'with the basename. Expected path "' + path + '" to begin with "' + basename + '".');

	    if (basename) path = (0, _PathUtils.stripBasename)(path, basename);

	    return (0, _LocationUtils.createLocation)(path, state, key);
	  };

	  var createKey = function createKey() {
	    return Math.random().toString(36).substr(2, keyLength);
	  };

	  var transitionManager = (0, _createTransitionManager2.default)();

	  var setState = function setState(nextState) {
	    _extends(history, nextState);

	    history.length = globalHistory.length;

	    transitionManager.notifyListeners(history.location, history.action);
	  };

	  var handlePopState = function handlePopState(event) {
	    // Ignore extraneous popstate events in WebKit.
	    if ((0, _DOMUtils.isExtraneousPopstateEvent)(event)) return;

	    handlePop(getDOMLocation(event.state));
	  };

	  var handleHashChange = function handleHashChange() {
	    handlePop(getDOMLocation(getHistoryState()));
	  };

	  var forceNextPop = false;

	  var handlePop = function handlePop(location) {
	    if (forceNextPop) {
	      forceNextPop = false;
	      setState();
	    } else {
	      var action = 'POP';

	      transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {
	        if (ok) {
	          setState({ action: action, location: location });
	        } else {
	          revertPop(location);
	        }
	      });
	    }
	  };

	  var revertPop = function revertPop(fromLocation) {
	    var toLocation = history.location;

	    // TODO: We could probably make this more reliable by
	    // keeping a list of keys we've seen in sessionStorage.
	    // Instead, we just default to 0 for keys we don't know.

	    var toIndex = allKeys.indexOf(toLocation.key);

	    if (toIndex === -1) toIndex = 0;

	    var fromIndex = allKeys.indexOf(fromLocation.key);

	    if (fromIndex === -1) fromIndex = 0;

	    var delta = toIndex - fromIndex;

	    if (delta) {
	      forceNextPop = true;
	      go(delta);
	    }
	  };

	  var initialLocation = getDOMLocation(getHistoryState());
	  var allKeys = [initialLocation.key];

	  // Public interface

	  var createHref = function createHref(location) {
	    return basename + (0, _PathUtils.createPath)(location);
	  };

	  var push = function push(path, state) {
	    (0, _warning2.default)(!((typeof path === 'undefined' ? 'undefined' : _typeof(path)) === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to push when the 1st ' + 'argument is a location-like object that already has state; it is ignored');

	    var action = 'PUSH';
	    var location = (0, _LocationUtils.createLocation)(path, state, createKey(), history.location);

	    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {
	      if (!ok) return;

	      var href = createHref(location);
	      var key = location.key,
	          state = location.state;


	      if (canUseHistory) {
	        globalHistory.pushState({ key: key, state: state }, null, href);

	        if (forceRefresh) {
	          window.location.href = href;
	        } else {
	          var prevIndex = allKeys.indexOf(history.location.key);
	          var nextKeys = allKeys.slice(0, prevIndex === -1 ? 0 : prevIndex + 1);

	          nextKeys.push(location.key);
	          allKeys = nextKeys;

	          setState({ action: action, location: location });
	        }
	      } else {
	        (0, _warning2.default)(state === undefined, 'Browser history cannot push state in browsers that do not support HTML5 history');

	        window.location.href = href;
	      }
	    });
	  };

	  var replace = function replace(path, state) {
	    (0, _warning2.default)(!((typeof path === 'undefined' ? 'undefined' : _typeof(path)) === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to replace when the 1st ' + 'argument is a location-like object that already has state; it is ignored');

	    var action = 'REPLACE';
	    var location = (0, _LocationUtils.createLocation)(path, state, createKey(), history.location);

	    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {
	      if (!ok) return;

	      var href = createHref(location);
	      var key = location.key,
	          state = location.state;


	      if (canUseHistory) {
	        globalHistory.replaceState({ key: key, state: state }, null, href);

	        if (forceRefresh) {
	          window.location.replace(href);
	        } else {
	          var prevIndex = allKeys.indexOf(history.location.key);

	          if (prevIndex !== -1) allKeys[prevIndex] = location.key;

	          setState({ action: action, location: location });
	        }
	      } else {
	        (0, _warning2.default)(state === undefined, 'Browser history cannot replace state in browsers that do not support HTML5 history');

	        window.location.replace(href);
	      }
	    });
	  };

	  var go = function go(n) {
	    globalHistory.go(n);
	  };

	  var goBack = function goBack() {
	    return go(-1);
	  };

	  var goForward = function goForward() {
	    return go(1);
	  };

	  var listenerCount = 0;

	  var checkDOMListeners = function checkDOMListeners(delta) {
	    listenerCount += delta;

	    if (listenerCount === 1) {
	      (0, _DOMUtils.addEventListener)(window, PopStateEvent, handlePopState);

	      if (needsHashChangeListener) (0, _DOMUtils.addEventListener)(window, HashChangeEvent, handleHashChange);
	    } else if (listenerCount === 0) {
	      (0, _DOMUtils.removeEventListener)(window, PopStateEvent, handlePopState);

	      if (needsHashChangeListener) (0, _DOMUtils.removeEventListener)(window, HashChangeEvent, handleHashChange);
	    }
	  };

	  var isBlocked = false;

	  var block = function block() {
	    var prompt = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;

	    var unblock = transitionManager.setPrompt(prompt);

	    if (!isBlocked) {
	      checkDOMListeners(1);
	      isBlocked = true;
	    }

	    return function () {
	      if (isBlocked) {
	        isBlocked = false;
	        checkDOMListeners(-1);
	      }

	      return unblock();
	    };
	  };

	  var listen = function listen(listener) {
	    var unlisten = transitionManager.appendListener(listener);
	    checkDOMListeners(1);

	    return function () {
	      checkDOMListeners(-1);
	      unlisten();
	    };
	  };

	  var history = {
	    length: globalHistory.length,
	    action: 'POP',
	    location: initialLocation,
	    createHref: createHref,
	    push: push,
	    replace: replace,
	    go: go,
	    goBack: goBack,
	    goForward: goForward,
	    block: block,
	    listen: listen
	  };

	  return history;
	};

	exports.default = createBrowserHistory;

/***/ }),
/* 214 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 */

	'use strict';

	/**
	 * Similar to invariant but only logs a warning if the condition is not met.
	 * This can be used to log issues in development environments in critical
	 * paths. Removing the logging code for production environments will keep the
	 * same logic and follow the same code paths.
	 */

	var warning = function() {};

	if (process.env.NODE_ENV !== 'production') {
	  warning = function(condition, format, args) {
	    var len = arguments.length;
	    args = new Array(len > 2 ? len - 2 : 0);
	    for (var key = 2; key < len; key++) {
	      args[key - 2] = arguments[key];
	    }
	    if (format === undefined) {
	      throw new Error(
	        '`warning(condition, format, ...args)` requires a warning ' +
	        'message argument'
	      );
	    }

	    if (format.length < 10 || (/^[s\W]*$/).test(format)) {
	      throw new Error(
	        'The warning format should be able to uniquely identify this ' +
	        'warning. Please, use a more descriptive format than: ' + format
	      );
	    }

	    if (!condition) {
	      var argIndex = 0;
	      var message = 'Warning: ' +
	        format.replace(/%s/g, function() {
	          return args[argIndex++];
	        });
	      if (typeof console !== 'undefined') {
	        console.error(message);
	      }
	      try {
	        // This error was thrown as a convenience so that you can use this stack
	        // to find the callsite that caused this warning to fire.
	        throw new Error(message);
	      } catch(x) {}
	    }
	  };
	}

	module.exports = warning;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)))

/***/ }),
/* 215 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;
	exports.locationsAreEqual = exports.createLocation = undefined;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _resolvePathname = __webpack_require__(216);

	var _resolvePathname2 = _interopRequireDefault(_resolvePathname);

	var _valueEqual = __webpack_require__(217);

	var _valueEqual2 = _interopRequireDefault(_valueEqual);

	var _PathUtils = __webpack_require__(218);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var createLocation = exports.createLocation = function createLocation(path, state, key, currentLocation) {
	  var location = void 0;
	  if (typeof path === 'string') {
	    // Two-arg form: push(path, state)
	    location = (0, _PathUtils.parsePath)(path);
	    location.state = state;
	  } else {
	    // One-arg form: push(location)
	    location = _extends({}, path);

	    if (location.pathname === undefined) location.pathname = '';

	    if (location.search) {
	      if (location.search.charAt(0) !== '?') location.search = '?' + location.search;
	    } else {
	      location.search = '';
	    }

	    if (location.hash) {
	      if (location.hash.charAt(0) !== '#') location.hash = '#' + location.hash;
	    } else {
	      location.hash = '';
	    }

	    if (state !== undefined && location.state === undefined) location.state = state;
	  }

	  try {
	    location.pathname = decodeURI(location.pathname);
	  } catch (e) {
	    if (e instanceof URIError) {
	      throw new URIError('Pathname "' + location.pathname + '" could not be decoded. ' + 'This is likely caused by an invalid percent-encoding.');
	    } else {
	      throw e;
	    }
	  }

	  if (key) location.key = key;

	  if (currentLocation) {
	    // Resolve incomplete/relative pathname relative to current location.
	    if (!location.pathname) {
	      location.pathname = currentLocation.pathname;
	    } else if (location.pathname.charAt(0) !== '/') {
	      location.pathname = (0, _resolvePathname2.default)(location.pathname, currentLocation.pathname);
	    }
	  } else {
	    // When there is no prior location and pathname is empty, set it to /
	    if (!location.pathname) {
	      location.pathname = '/';
	    }
	  }

	  return location;
	};

	var locationsAreEqual = exports.locationsAreEqual = function locationsAreEqual(a, b) {
	  return a.pathname === b.pathname && a.search === b.search && a.hash === b.hash && a.key === b.key && (0, _valueEqual2.default)(a.state, b.state);
	};

/***/ }),
/* 216 */
/***/ (function(module, exports) {

	'use strict';

	var isAbsolute = function isAbsolute(pathname) {
	  return pathname.charAt(0) === '/';
	};

	// About 1.5x faster than the two-arg version of Array#splice()
	var spliceOne = function spliceOne(list, index) {
	  for (var i = index, k = i + 1, n = list.length; k < n; i += 1, k += 1) {
	    list[i] = list[k];
	  }list.pop();
	};

	// This implementation is based heavily on node's url.parse
	var resolvePathname = function resolvePathname(to) {
	  var from = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';

	  var toParts = to && to.split('/') || [];
	  var fromParts = from && from.split('/') || [];

	  var isToAbs = to && isAbsolute(to);
	  var isFromAbs = from && isAbsolute(from);
	  var mustEndAbs = isToAbs || isFromAbs;

	  if (to && isAbsolute(to)) {
	    // to is absolute
	    fromParts = toParts;
	  } else if (toParts.length) {
	    // to is relative, drop the filename
	    fromParts.pop();
	    fromParts = fromParts.concat(toParts);
	  }

	  if (!fromParts.length) return '/';

	  var hasTrailingSlash = void 0;
	  if (fromParts.length) {
	    var last = fromParts[fromParts.length - 1];
	    hasTrailingSlash = last === '.' || last === '..' || last === '';
	  } else {
	    hasTrailingSlash = false;
	  }

	  var up = 0;
	  for (var i = fromParts.length; i >= 0; i--) {
	    var part = fromParts[i];

	    if (part === '.') {
	      spliceOne(fromParts, i);
	    } else if (part === '..') {
	      spliceOne(fromParts, i);
	      up++;
	    } else if (up) {
	      spliceOne(fromParts, i);
	      up--;
	    }
	  }

	  if (!mustEndAbs) for (; up--; up) {
	    fromParts.unshift('..');
	  }if (mustEndAbs && fromParts[0] !== '' && (!fromParts[0] || !isAbsolute(fromParts[0]))) fromParts.unshift('');

	  var result = fromParts.join('/');

	  if (hasTrailingSlash && result.substr(-1) !== '/') result += '/';

	  return result;
	};

	module.exports = resolvePathname;

/***/ }),
/* 217 */
/***/ (function(module, exports) {

	'use strict';

	exports.__esModule = true;

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	var valueEqual = function valueEqual(a, b) {
	  if (a === b) return true;

	  if (a == null || b == null) return false;

	  if (Array.isArray(a)) return Array.isArray(b) && a.length === b.length && a.every(function (item, index) {
	    return valueEqual(item, b[index]);
	  });

	  var aType = typeof a === 'undefined' ? 'undefined' : _typeof(a);
	  var bType = typeof b === 'undefined' ? 'undefined' : _typeof(b);

	  if (aType !== bType) return false;

	  if (aType === 'object') {
	    var aValue = a.valueOf();
	    var bValue = b.valueOf();

	    if (aValue !== a || bValue !== b) return valueEqual(aValue, bValue);

	    var aKeys = Object.keys(a);
	    var bKeys = Object.keys(b);

	    if (aKeys.length !== bKeys.length) return false;

	    return aKeys.every(function (key) {
	      return valueEqual(a[key], b[key]);
	    });
	  }

	  return false;
	};

	exports.default = valueEqual;

/***/ }),
/* 218 */
/***/ (function(module, exports) {

	'use strict';

	exports.__esModule = true;
	var addLeadingSlash = exports.addLeadingSlash = function addLeadingSlash(path) {
	  return path.charAt(0) === '/' ? path : '/' + path;
	};

	var stripLeadingSlash = exports.stripLeadingSlash = function stripLeadingSlash(path) {
	  return path.charAt(0) === '/' ? path.substr(1) : path;
	};

	var hasBasename = exports.hasBasename = function hasBasename(path, prefix) {
	  return new RegExp('^' + prefix + '(\\/|\\?|#|$)', 'i').test(path);
	};

	var stripBasename = exports.stripBasename = function stripBasename(path, prefix) {
	  return hasBasename(path, prefix) ? path.substr(prefix.length) : path;
	};

	var stripTrailingSlash = exports.stripTrailingSlash = function stripTrailingSlash(path) {
	  return path.charAt(path.length - 1) === '/' ? path.slice(0, -1) : path;
	};

	var parsePath = exports.parsePath = function parsePath(path) {
	  var pathname = path || '/';
	  var search = '';
	  var hash = '';

	  var hashIndex = pathname.indexOf('#');
	  if (hashIndex !== -1) {
	    hash = pathname.substr(hashIndex);
	    pathname = pathname.substr(0, hashIndex);
	  }

	  var searchIndex = pathname.indexOf('?');
	  if (searchIndex !== -1) {
	    search = pathname.substr(searchIndex);
	    pathname = pathname.substr(0, searchIndex);
	  }

	  return {
	    pathname: pathname,
	    search: search === '?' ? '' : search,
	    hash: hash === '#' ? '' : hash
	  };
	};

	var createPath = exports.createPath = function createPath(location) {
	  var pathname = location.pathname,
	      search = location.search,
	      hash = location.hash;


	  var path = pathname || '/';

	  if (search && search !== '?') path += search.charAt(0) === '?' ? search : '?' + search;

	  if (hash && hash !== '#') path += hash.charAt(0) === '#' ? hash : '#' + hash;

	  return path;
	};

/***/ }),
/* 219 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _warning = __webpack_require__(214);

	var _warning2 = _interopRequireDefault(_warning);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var createTransitionManager = function createTransitionManager() {
	  var prompt = null;

	  var setPrompt = function setPrompt(nextPrompt) {
	    (0, _warning2.default)(prompt == null, 'A history supports only one prompt at a time');

	    prompt = nextPrompt;

	    return function () {
	      if (prompt === nextPrompt) prompt = null;
	    };
	  };

	  var confirmTransitionTo = function confirmTransitionTo(location, action, getUserConfirmation, callback) {
	    // TODO: If another transition starts while we're still confirming
	    // the previous one, we may end up in a weird state. Figure out the
	    // best way to handle this.
	    if (prompt != null) {
	      var result = typeof prompt === 'function' ? prompt(location, action) : prompt;

	      if (typeof result === 'string') {
	        if (typeof getUserConfirmation === 'function') {
	          getUserConfirmation(result, callback);
	        } else {
	          (0, _warning2.default)(false, 'A history needs a getUserConfirmation function in order to use a prompt message');

	          callback(true);
	        }
	      } else {
	        // Return false from a transition hook to cancel the transition.
	        callback(result !== false);
	      }
	    } else {
	      callback(true);
	    }
	  };

	  var listeners = [];

	  var appendListener = function appendListener(fn) {
	    var isActive = true;

	    var listener = function listener() {
	      if (isActive) fn.apply(undefined, arguments);
	    };

	    listeners.push(listener);

	    return function () {
	      isActive = false;
	      listeners = listeners.filter(function (item) {
	        return item !== listener;
	      });
	    };
	  };

	  var notifyListeners = function notifyListeners() {
	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    listeners.forEach(function (listener) {
	      return listener.apply(undefined, args);
	    });
	  };

	  return {
	    setPrompt: setPrompt,
	    confirmTransitionTo: confirmTransitionTo,
	    appendListener: appendListener,
	    notifyListeners: notifyListeners
	  };
	};

	exports.default = createTransitionManager;

/***/ }),
/* 220 */
/***/ (function(module, exports) {

	'use strict';

	exports.__esModule = true;
	var canUseDOM = exports.canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);

	var addEventListener = exports.addEventListener = function addEventListener(node, event, listener) {
	  return node.addEventListener ? node.addEventListener(event, listener, false) : node.attachEvent('on' + event, listener);
	};

	var removeEventListener = exports.removeEventListener = function removeEventListener(node, event, listener) {
	  return node.removeEventListener ? node.removeEventListener(event, listener, false) : node.detachEvent('on' + event, listener);
	};

	var getConfirmation = exports.getConfirmation = function getConfirmation(message, callback) {
	  return callback(window.confirm(message));
	}; // eslint-disable-line no-alert

	/**
	 * Returns true if the HTML5 history API is supported. Taken from Modernizr.
	 *
	 * https://github.com/Modernizr/Modernizr/blob/master/LICENSE
	 * https://github.com/Modernizr/Modernizr/blob/master/feature-detects/history.js
	 * changed to avoid false negatives for Windows Phones: https://github.com/reactjs/react-router/issues/586
	 */
	var supportsHistory = exports.supportsHistory = function supportsHistory() {
	  var ua = window.navigator.userAgent;

	  if ((ua.indexOf('Android 2.') !== -1 || ua.indexOf('Android 4.0') !== -1) && ua.indexOf('Mobile Safari') !== -1 && ua.indexOf('Chrome') === -1 && ua.indexOf('Windows Phone') === -1) return false;

	  return window.history && 'pushState' in window.history;
	};

	/**
	 * Returns true if browser fires popstate on hash change.
	 * IE10 and IE11 do not.
	 */
	var supportsPopStateOnHashChange = exports.supportsPopStateOnHashChange = function supportsPopStateOnHashChange() {
	  return window.navigator.userAgent.indexOf('Trident') === -1;
	};

	/**
	 * Returns false if using go(n) with hash history causes a full page reload.
	 */
	var supportsGoWithoutReloadUsingHash = exports.supportsGoWithoutReloadUsingHash = function supportsGoWithoutReloadUsingHash() {
	  return window.navigator.userAgent.indexOf('Firefox') === -1;
	};

	/**
	 * Returns true if a given popstate event is an extraneous WebKit event.
	 * Accounts for the fact that Chrome on iOS fires real popstate events
	 * containing undefined state when pressing the back button.
	 */
	var isExtraneousPopstateEvent = exports.isExtraneousPopstateEvent = function isExtraneousPopstateEvent(event) {
	  return event.state === undefined && navigator.userAgent.indexOf('CriOS') === -1;
	};

/***/ }),
/* 221 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;
	exports.withRouter = exports.matchPath = exports.Switch = exports.StaticRouter = exports.Router = exports.Route = exports.Redirect = exports.Prompt = exports.MemoryRouter = undefined;

	var _MemoryRouter2 = __webpack_require__(222);

	var _MemoryRouter3 = _interopRequireDefault(_MemoryRouter2);

	var _Prompt2 = __webpack_require__(225);

	var _Prompt3 = _interopRequireDefault(_Prompt2);

	var _Redirect2 = __webpack_require__(226);

	var _Redirect3 = _interopRequireDefault(_Redirect2);

	var _Route2 = __webpack_require__(227);

	var _Route3 = _interopRequireDefault(_Route2);

	var _Router2 = __webpack_require__(224);

	var _Router3 = _interopRequireDefault(_Router2);

	var _StaticRouter2 = __webpack_require__(231);

	var _StaticRouter3 = _interopRequireDefault(_StaticRouter2);

	var _Switch2 = __webpack_require__(232);

	var _Switch3 = _interopRequireDefault(_Switch2);

	var _matchPath2 = __webpack_require__(228);

	var _matchPath3 = _interopRequireDefault(_matchPath2);

	var _withRouter2 = __webpack_require__(233);

	var _withRouter3 = _interopRequireDefault(_withRouter2);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.MemoryRouter = _MemoryRouter3.default;
	exports.Prompt = _Prompt3.default;
	exports.Redirect = _Redirect3.default;
	exports.Route = _Route3.default;
	exports.Router = _Router3.default;
	exports.StaticRouter = _StaticRouter3.default;
	exports.Switch = _Switch3.default;
	exports.matchPath = _matchPath3.default;
	exports.withRouter = _withRouter3.default;

/***/ }),
/* 222 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(205);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _createMemoryHistory = __webpack_require__(223);

	var _createMemoryHistory2 = _interopRequireDefault(_createMemoryHistory);

	var _Router = __webpack_require__(224);

	var _Router2 = _interopRequireDefault(_Router);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	/**
	 * The public API for a <Router> that stores location in memory.
	 */
	var MemoryRouter = function (_React$Component) {
	  _inherits(MemoryRouter, _React$Component);

	  function MemoryRouter() {
	    var _temp, _this, _ret;

	    _classCallCheck(this, MemoryRouter);

	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.history = (0, _createMemoryHistory2.default)(_this.props), _temp), _possibleConstructorReturn(_this, _ret);
	  }

	  MemoryRouter.prototype.render = function render() {
	    return _react2.default.createElement(_Router2.default, { history: this.history, children: this.props.children });
	  };

	  return MemoryRouter;
	}(_react2.default.Component);

	MemoryRouter.propTypes = {
	  initialEntries: _propTypes2.default.array,
	  initialIndex: _propTypes2.default.number,
	  getUserConfirmation: _propTypes2.default.func,
	  keyLength: _propTypes2.default.number,
	  children: _propTypes2.default.node
	};
	exports.default = MemoryRouter;

/***/ }),
/* 223 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _warning = __webpack_require__(214);

	var _warning2 = _interopRequireDefault(_warning);

	var _PathUtils = __webpack_require__(218);

	var _LocationUtils = __webpack_require__(215);

	var _createTransitionManager = __webpack_require__(219);

	var _createTransitionManager2 = _interopRequireDefault(_createTransitionManager);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var clamp = function clamp(n, lowerBound, upperBound) {
	  return Math.min(Math.max(n, lowerBound), upperBound);
	};

	/**
	 * Creates a history object that stores locations in memory.
	 */
	var createMemoryHistory = function createMemoryHistory() {
	  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	  var getUserConfirmation = props.getUserConfirmation,
	      _props$initialEntries = props.initialEntries,
	      initialEntries = _props$initialEntries === undefined ? ['/'] : _props$initialEntries,
	      _props$initialIndex = props.initialIndex,
	      initialIndex = _props$initialIndex === undefined ? 0 : _props$initialIndex,
	      _props$keyLength = props.keyLength,
	      keyLength = _props$keyLength === undefined ? 6 : _props$keyLength;


	  var transitionManager = (0, _createTransitionManager2.default)();

	  var setState = function setState(nextState) {
	    _extends(history, nextState);

	    history.length = history.entries.length;

	    transitionManager.notifyListeners(history.location, history.action);
	  };

	  var createKey = function createKey() {
	    return Math.random().toString(36).substr(2, keyLength);
	  };

	  var index = clamp(initialIndex, 0, initialEntries.length - 1);
	  var entries = initialEntries.map(function (entry) {
	    return typeof entry === 'string' ? (0, _LocationUtils.createLocation)(entry, undefined, createKey()) : (0, _LocationUtils.createLocation)(entry, undefined, entry.key || createKey());
	  });

	  // Public interface

	  var createHref = _PathUtils.createPath;

	  var push = function push(path, state) {
	    (0, _warning2.default)(!((typeof path === 'undefined' ? 'undefined' : _typeof(path)) === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to push when the 1st ' + 'argument is a location-like object that already has state; it is ignored');

	    var action = 'PUSH';
	    var location = (0, _LocationUtils.createLocation)(path, state, createKey(), history.location);

	    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {
	      if (!ok) return;

	      var prevIndex = history.index;
	      var nextIndex = prevIndex + 1;

	      var nextEntries = history.entries.slice(0);
	      if (nextEntries.length > nextIndex) {
	        nextEntries.splice(nextIndex, nextEntries.length - nextIndex, location);
	      } else {
	        nextEntries.push(location);
	      }

	      setState({
	        action: action,
	        location: location,
	        index: nextIndex,
	        entries: nextEntries
	      });
	    });
	  };

	  var replace = function replace(path, state) {
	    (0, _warning2.default)(!((typeof path === 'undefined' ? 'undefined' : _typeof(path)) === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to replace when the 1st ' + 'argument is a location-like object that already has state; it is ignored');

	    var action = 'REPLACE';
	    var location = (0, _LocationUtils.createLocation)(path, state, createKey(), history.location);

	    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {
	      if (!ok) return;

	      history.entries[history.index] = location;

	      setState({ action: action, location: location });
	    });
	  };

	  var go = function go(n) {
	    var nextIndex = clamp(history.index + n, 0, history.entries.length - 1);

	    var action = 'POP';
	    var location = history.entries[nextIndex];

	    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {
	      if (ok) {
	        setState({
	          action: action,
	          location: location,
	          index: nextIndex
	        });
	      } else {
	        // Mimic the behavior of DOM histories by
	        // causing a render after a cancelled POP.
	        setState();
	      }
	    });
	  };

	  var goBack = function goBack() {
	    return go(-1);
	  };

	  var goForward = function goForward() {
	    return go(1);
	  };

	  var canGo = function canGo(n) {
	    var nextIndex = history.index + n;
	    return nextIndex >= 0 && nextIndex < history.entries.length;
	  };

	  var block = function block() {
	    var prompt = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
	    return transitionManager.setPrompt(prompt);
	  };

	  var listen = function listen(listener) {
	    return transitionManager.appendListener(listener);
	  };

	  var history = {
	    length: entries.length,
	    action: 'POP',
	    location: entries[index],
	    index: index,
	    entries: entries,
	    createHref: createHref,
	    push: push,
	    replace: replace,
	    go: go,
	    goBack: goBack,
	    goForward: goForward,
	    canGo: canGo,
	    block: block,
	    listen: listen
	  };

	  return history;
	};

	exports.default = createMemoryHistory;

/***/ }),
/* 224 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _warning = __webpack_require__(214);

	var _warning2 = _interopRequireDefault(_warning);

	var _invariant = __webpack_require__(198);

	var _invariant2 = _interopRequireDefault(_invariant);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(205);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	/**
	 * The public API for putting history on context.
	 */
	var Router = function (_React$Component) {
	  _inherits(Router, _React$Component);

	  function Router() {
	    var _temp, _this, _ret;

	    _classCallCheck(this, Router);

	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.state = {
	      match: _this.computeMatch(_this.props.history.location.pathname)
	    }, _temp), _possibleConstructorReturn(_this, _ret);
	  }

	  Router.prototype.getChildContext = function getChildContext() {
	    return {
	      router: _extends({}, this.context.router, {
	        history: this.props.history,
	        route: {
	          location: this.props.history.location,
	          match: this.state.match
	        }
	      })
	    };
	  };

	  Router.prototype.computeMatch = function computeMatch(pathname) {
	    return {
	      path: '/',
	      url: '/',
	      params: {},
	      isExact: pathname === '/'
	    };
	  };

	  Router.prototype.componentWillMount = function componentWillMount() {
	    var _this2 = this;

	    var _props = this.props,
	        children = _props.children,
	        history = _props.history;


	    (0, _invariant2.default)(children == null || _react2.default.Children.count(children) === 1, 'A <Router> may have only one child element');

	    // Do this here so we can setState when a <Redirect> changes the
	    // location in componentWillMount. This happens e.g. when doing
	    // server rendering using a <StaticRouter>.
	    this.unlisten = history.listen(function () {
	      _this2.setState({
	        match: _this2.computeMatch(history.location.pathname)
	      });
	    });
	  };

	  Router.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
	    (0, _warning2.default)(this.props.history === nextProps.history, 'You cannot change <Router history>');
	  };

	  Router.prototype.componentWillUnmount = function componentWillUnmount() {
	    this.unlisten();
	  };

	  Router.prototype.render = function render() {
	    var children = this.props.children;

	    return children ? _react2.default.Children.only(children) : null;
	  };

	  return Router;
	}(_react2.default.Component);

	Router.propTypes = {
	  history: _propTypes2.default.object.isRequired,
	  children: _propTypes2.default.node
	};
	Router.contextTypes = {
	  router: _propTypes2.default.object
	};
	Router.childContextTypes = {
	  router: _propTypes2.default.object.isRequired
	};
	exports.default = Router;

/***/ }),
/* 225 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(205);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	/**
	 * The public API for prompting the user before navigating away
	 * from a screen with a component.
	 */
	var Prompt = function (_React$Component) {
	  _inherits(Prompt, _React$Component);

	  function Prompt() {
	    _classCallCheck(this, Prompt);

	    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));
	  }

	  Prompt.prototype.enable = function enable(message) {
	    if (this.unblock) this.unblock();

	    this.unblock = this.context.router.history.block(message);
	  };

	  Prompt.prototype.disable = function disable() {
	    if (this.unblock) {
	      this.unblock();
	      this.unblock = null;
	    }
	  };

	  Prompt.prototype.componentWillMount = function componentWillMount() {
	    if (this.props.when) this.enable(this.props.message);
	  };

	  Prompt.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
	    if (nextProps.when) {
	      if (!this.props.when || this.props.message !== nextProps.message) this.enable(nextProps.message);
	    } else {
	      this.disable();
	    }
	  };

	  Prompt.prototype.componentWillUnmount = function componentWillUnmount() {
	    this.disable();
	  };

	  Prompt.prototype.render = function render() {
	    return null;
	  };

	  return Prompt;
	}(_react2.default.Component);

	Prompt.propTypes = {
	  when: _propTypes2.default.bool,
	  message: _propTypes2.default.oneOfType([_propTypes2.default.func, _propTypes2.default.string]).isRequired
	};
	Prompt.defaultProps = {
	  when: true
	};
	Prompt.contextTypes = {
	  router: _propTypes2.default.shape({
	    history: _propTypes2.default.shape({
	      block: _propTypes2.default.func.isRequired
	    }).isRequired
	  }).isRequired
	};
	exports.default = Prompt;

/***/ }),
/* 226 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(205);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	/**
	 * The public API for updating the location programatically
	 * with a component.
	 */
	var Redirect = function (_React$Component) {
	  _inherits(Redirect, _React$Component);

	  function Redirect() {
	    _classCallCheck(this, Redirect);

	    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));
	  }

	  Redirect.prototype.isStatic = function isStatic() {
	    return this.context.router && this.context.router.staticContext;
	  };

	  Redirect.prototype.componentWillMount = function componentWillMount() {
	    if (this.isStatic()) this.perform();
	  };

	  Redirect.prototype.componentDidMount = function componentDidMount() {
	    if (!this.isStatic()) this.perform();
	  };

	  Redirect.prototype.perform = function perform() {
	    var history = this.context.router.history;
	    var _props = this.props,
	        push = _props.push,
	        to = _props.to;


	    if (push) {
	      history.push(to);
	    } else {
	      history.replace(to);
	    }
	  };

	  Redirect.prototype.render = function render() {
	    return null;
	  };

	  return Redirect;
	}(_react2.default.Component);

	Redirect.propTypes = {
	  push: _propTypes2.default.bool,
	  from: _propTypes2.default.string,
	  to: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.object])
	};
	Redirect.defaultProps = {
	  push: false
	};
	Redirect.contextTypes = {
	  router: _propTypes2.default.shape({
	    history: _propTypes2.default.shape({
	      push: _propTypes2.default.func.isRequired,
	      replace: _propTypes2.default.func.isRequired
	    }).isRequired,
	    staticContext: _propTypes2.default.object
	  }).isRequired
	};
	exports.default = Redirect;

/***/ }),
/* 227 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _warning = __webpack_require__(214);

	var _warning2 = _interopRequireDefault(_warning);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(205);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _matchPath = __webpack_require__(228);

	var _matchPath2 = _interopRequireDefault(_matchPath);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	/**
	 * The public API for matching a single path and rendering.
	 */
	var Route = function (_React$Component) {
	  _inherits(Route, _React$Component);

	  function Route() {
	    var _temp, _this, _ret;

	    _classCallCheck(this, Route);

	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.state = {
	      match: _this.computeMatch(_this.props, _this.context.router)
	    }, _temp), _possibleConstructorReturn(_this, _ret);
	  }

	  Route.prototype.getChildContext = function getChildContext() {
	    return {
	      router: _extends({}, this.context.router, {
	        route: {
	          location: this.props.location || this.context.router.route.location,
	          match: this.state.match
	        }
	      })
	    };
	  };

	  Route.prototype.computeMatch = function computeMatch(_ref, _ref2) {
	    var computedMatch = _ref.computedMatch,
	        location = _ref.location,
	        path = _ref.path,
	        strict = _ref.strict,
	        exact = _ref.exact;
	    var route = _ref2.route;

	    if (computedMatch) return computedMatch; // <Switch> already computed the match for us

	    var pathname = (location || route.location).pathname;

	    return path ? (0, _matchPath2.default)(pathname, { path: path, strict: strict, exact: exact }) : route.match;
	  };

	  Route.prototype.componentWillMount = function componentWillMount() {
	    var _props = this.props,
	        component = _props.component,
	        render = _props.render,
	        children = _props.children;


	    (0, _warning2.default)(!(component && render), 'You should not use <Route component> and <Route render> in the same route; <Route render> will be ignored');

	    (0, _warning2.default)(!(component && children), 'You should not use <Route component> and <Route children> in the same route; <Route children> will be ignored');

	    (0, _warning2.default)(!(render && children), 'You should not use <Route render> and <Route children> in the same route; <Route children> will be ignored');
	  };

	  Route.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps, nextContext) {
	    (0, _warning2.default)(!(nextProps.location && !this.props.location), '<Route> elements should not change from uncontrolled to controlled (or vice versa). You initially used no "location" prop and then provided one on a subsequent render.');

	    (0, _warning2.default)(!(!nextProps.location && this.props.location), '<Route> elements should not change from controlled to uncontrolled (or vice versa). You provided a "location" prop initially but omitted it on a subsequent render.');

	    this.setState({
	      match: this.computeMatch(nextProps, nextContext.router)
	    });
	  };

	  Route.prototype.render = function render() {
	    var match = this.state.match;
	    var _props2 = this.props,
	        children = _props2.children,
	        component = _props2.component,
	        render = _props2.render;
	    var _context$router = this.context.router,
	        history = _context$router.history,
	        route = _context$router.route,
	        staticContext = _context$router.staticContext;

	    var location = this.props.location || route.location;
	    var props = { match: match, location: location, history: history, staticContext: staticContext };

	    return component ? // component prop gets first priority, only called if there's a match
	    match ? _react2.default.createElement(component, props) : null : render ? // render prop is next, only called if there's a match
	    match ? render(props) : null : children ? // children come last, always called
	    typeof children === 'function' ? children(props) : !Array.isArray(children) || children.length ? // Preact defaults to empty children array
	    _react2.default.Children.only(children) : null : null;
	  };

	  return Route;
	}(_react2.default.Component);

	Route.propTypes = {
	  computedMatch: _propTypes2.default.object, // private, from <Switch>
	  path: _propTypes2.default.string,
	  exact: _propTypes2.default.bool,
	  strict: _propTypes2.default.bool,
	  component: _propTypes2.default.func,
	  render: _propTypes2.default.func,
	  children: _propTypes2.default.oneOfType([_propTypes2.default.func, _propTypes2.default.node]),
	  location: _propTypes2.default.object
	};
	Route.contextTypes = {
	  router: _propTypes2.default.shape({
	    history: _propTypes2.default.object.isRequired,
	    route: _propTypes2.default.object.isRequired,
	    staticContext: _propTypes2.default.object
	  })
	};
	Route.childContextTypes = {
	  router: _propTypes2.default.object.isRequired
	};
	exports.default = Route;

/***/ }),
/* 228 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _pathToRegexp = __webpack_require__(229);

	var _pathToRegexp2 = _interopRequireDefault(_pathToRegexp);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var patternCache = {};
	var cacheLimit = 10000;
	var cacheCount = 0;

	var compilePath = function compilePath(pattern, options) {
	  var cacheKey = '' + options.end + options.strict;
	  var cache = patternCache[cacheKey] || (patternCache[cacheKey] = {});

	  if (cache[pattern]) return cache[pattern];

	  var keys = [];
	  var re = (0, _pathToRegexp2.default)(pattern, keys, options);
	  var compiledPattern = { re: re, keys: keys };

	  if (cacheCount < cacheLimit) {
	    cache[pattern] = compiledPattern;
	    cacheCount++;
	  }

	  return compiledPattern;
	};

	/**
	 * Public API for matching a URL pathname to a path pattern.
	 */
	var matchPath = function matchPath(pathname) {
	  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

	  if (typeof options === 'string') options = { path: options };

	  var _options = options,
	      _options$path = _options.path,
	      path = _options$path === undefined ? '/' : _options$path,
	      _options$exact = _options.exact,
	      exact = _options$exact === undefined ? false : _options$exact,
	      _options$strict = _options.strict,
	      strict = _options$strict === undefined ? false : _options$strict;

	  var _compilePath = compilePath(path, { end: exact, strict: strict }),
	      re = _compilePath.re,
	      keys = _compilePath.keys;

	  var match = re.exec(pathname);

	  if (!match) return null;

	  var url = match[0],
	      values = match.slice(1);

	  var isExact = pathname === url;

	  if (exact && !isExact) return null;

	  return {
	    path: path, // the path pattern used to match
	    url: path === '/' && url === '' ? '/' : url, // the matched portion of the URL
	    isExact: isExact, // whether or not we matched exactly
	    params: keys.reduce(function (memo, key, index) {
	      memo[key.name] = values[index];
	      return memo;
	    }, {})
	  };
	};

	exports.default = matchPath;

/***/ }),
/* 229 */
/***/ (function(module, exports, __webpack_require__) {

	var isarray = __webpack_require__(230)

	/**
	 * Expose `pathToRegexp`.
	 */
	module.exports = pathToRegexp
	module.exports.parse = parse
	module.exports.compile = compile
	module.exports.tokensToFunction = tokensToFunction
	module.exports.tokensToRegExp = tokensToRegExp

	/**
	 * The main path matching regexp utility.
	 *
	 * @type {RegExp}
	 */
	var PATH_REGEXP = new RegExp([
	  // Match escaped characters that would otherwise appear in future matches.
	  // This allows the user to escape special characters that won't transform.
	  '(\\\\.)',
	  // Match Express-style parameters and un-named parameters with a prefix
	  // and optional suffixes. Matches appear as:
	  //
	  // "/:test(\\d+)?" => ["/", "test", "\d+", undefined, "?", undefined]
	  // "/route(\\d+)"  => [undefined, undefined, undefined, "\d+", undefined, undefined]
	  // "/*"            => ["/", undefined, undefined, undefined, undefined, "*"]
	  '([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))'
	].join('|'), 'g')

	/**
	 * Parse a string for the raw tokens.
	 *
	 * @param  {string}  str
	 * @param  {Object=} options
	 * @return {!Array}
	 */
	function parse (str, options) {
	  var tokens = []
	  var key = 0
	  var index = 0
	  var path = ''
	  var defaultDelimiter = options && options.delimiter || '/'
	  var res

	  while ((res = PATH_REGEXP.exec(str)) != null) {
	    var m = res[0]
	    var escaped = res[1]
	    var offset = res.index
	    path += str.slice(index, offset)
	    index = offset + m.length

	    // Ignore already escaped sequences.
	    if (escaped) {
	      path += escaped[1]
	      continue
	    }

	    var next = str[index]
	    var prefix = res[2]
	    var name = res[3]
	    var capture = res[4]
	    var group = res[5]
	    var modifier = res[6]
	    var asterisk = res[7]

	    // Push the current path onto the tokens.
	    if (path) {
	      tokens.push(path)
	      path = ''
	    }

	    var partial = prefix != null && next != null && next !== prefix
	    var repeat = modifier === '+' || modifier === '*'
	    var optional = modifier === '?' || modifier === '*'
	    var delimiter = res[2] || defaultDelimiter
	    var pattern = capture || group

	    tokens.push({
	      name: name || key++,
	      prefix: prefix || '',
	      delimiter: delimiter,
	      optional: optional,
	      repeat: repeat,
	      partial: partial,
	      asterisk: !!asterisk,
	      pattern: pattern ? escapeGroup(pattern) : (asterisk ? '.*' : '[^' + escapeString(delimiter) + ']+?')
	    })
	  }

	  // Match any characters still remaining.
	  if (index < str.length) {
	    path += str.substr(index)
	  }

	  // If the path exists, push it onto the end.
	  if (path) {
	    tokens.push(path)
	  }

	  return tokens
	}

	/**
	 * Compile a string to a template function for the path.
	 *
	 * @param  {string}             str
	 * @param  {Object=}            options
	 * @return {!function(Object=, Object=)}
	 */
	function compile (str, options) {
	  return tokensToFunction(parse(str, options))
	}

	/**
	 * Prettier encoding of URI path segments.
	 *
	 * @param  {string}
	 * @return {string}
	 */
	function encodeURIComponentPretty (str) {
	  return encodeURI(str).replace(/[\/?#]/g, function (c) {
	    return '%' + c.charCodeAt(0).toString(16).toUpperCase()
	  })
	}

	/**
	 * Encode the asterisk parameter. Similar to `pretty`, but allows slashes.
	 *
	 * @param  {string}
	 * @return {string}
	 */
	function encodeAsterisk (str) {
	  return encodeURI(str).replace(/[?#]/g, function (c) {
	    return '%' + c.charCodeAt(0).toString(16).toUpperCase()
	  })
	}

	/**
	 * Expose a method for transforming tokens into the path function.
	 */
	function tokensToFunction (tokens) {
	  // Compile all the tokens into regexps.
	  var matches = new Array(tokens.length)

	  // Compile all the patterns before compilation.
	  for (var i = 0; i < tokens.length; i++) {
	    if (typeof tokens[i] === 'object') {
	      matches[i] = new RegExp('^(?:' + tokens[i].pattern + ')$')
	    }
	  }

	  return function (obj, opts) {
	    var path = ''
	    var data = obj || {}
	    var options = opts || {}
	    var encode = options.pretty ? encodeURIComponentPretty : encodeURIComponent

	    for (var i = 0; i < tokens.length; i++) {
	      var token = tokens[i]

	      if (typeof token === 'string') {
	        path += token

	        continue
	      }

	      var value = data[token.name]
	      var segment

	      if (value == null) {
	        if (token.optional) {
	          // Prepend partial segment prefixes.
	          if (token.partial) {
	            path += token.prefix
	          }

	          continue
	        } else {
	          throw new TypeError('Expected "' + token.name + '" to be defined')
	        }
	      }

	      if (isarray(value)) {
	        if (!token.repeat) {
	          throw new TypeError('Expected "' + token.name + '" to not repeat, but received `' + JSON.stringify(value) + '`')
	        }

	        if (value.length === 0) {
	          if (token.optional) {
	            continue
	          } else {
	            throw new TypeError('Expected "' + token.name + '" to not be empty')
	          }
	        }

	        for (var j = 0; j < value.length; j++) {
	          segment = encode(value[j])

	          if (!matches[i].test(segment)) {
	            throw new TypeError('Expected all "' + token.name + '" to match "' + token.pattern + '", but received `' + JSON.stringify(segment) + '`')
	          }

	          path += (j === 0 ? token.prefix : token.delimiter) + segment
	        }

	        continue
	      }

	      segment = token.asterisk ? encodeAsterisk(value) : encode(value)

	      if (!matches[i].test(segment)) {
	        throw new TypeError('Expected "' + token.name + '" to match "' + token.pattern + '", but received "' + segment + '"')
	      }

	      path += token.prefix + segment
	    }

	    return path
	  }
	}

	/**
	 * Escape a regular expression string.
	 *
	 * @param  {string} str
	 * @return {string}
	 */
	function escapeString (str) {
	  return str.replace(/([.+*?=^!:${}()[\]|\/\\])/g, '\\$1')
	}

	/**
	 * Escape the capturing group by escaping special characters and meaning.
	 *
	 * @param  {string} group
	 * @return {string}
	 */
	function escapeGroup (group) {
	  return group.replace(/([=!:$\/()])/g, '\\$1')
	}

	/**
	 * Attach the keys as a property of the regexp.
	 *
	 * @param  {!RegExp} re
	 * @param  {Array}   keys
	 * @return {!RegExp}
	 */
	function attachKeys (re, keys) {
	  re.keys = keys
	  return re
	}

	/**
	 * Get the flags for a regexp from the options.
	 *
	 * @param  {Object} options
	 * @return {string}
	 */
	function flags (options) {
	  return options.sensitive ? '' : 'i'
	}

	/**
	 * Pull out keys from a regexp.
	 *
	 * @param  {!RegExp} path
	 * @param  {!Array}  keys
	 * @return {!RegExp}
	 */
	function regexpToRegexp (path, keys) {
	  // Use a negative lookahead to match only capturing groups.
	  var groups = path.source.match(/\((?!\?)/g)

	  if (groups) {
	    for (var i = 0; i < groups.length; i++) {
	      keys.push({
	        name: i,
	        prefix: null,
	        delimiter: null,
	        optional: false,
	        repeat: false,
	        partial: false,
	        asterisk: false,
	        pattern: null
	      })
	    }
	  }

	  return attachKeys(path, keys)
	}

	/**
	 * Transform an array into a regexp.
	 *
	 * @param  {!Array}  path
	 * @param  {Array}   keys
	 * @param  {!Object} options
	 * @return {!RegExp}
	 */
	function arrayToRegexp (path, keys, options) {
	  var parts = []

	  for (var i = 0; i < path.length; i++) {
	    parts.push(pathToRegexp(path[i], keys, options).source)
	  }

	  var regexp = new RegExp('(?:' + parts.join('|') + ')', flags(options))

	  return attachKeys(regexp, keys)
	}

	/**
	 * Create a path regexp from string input.
	 *
	 * @param  {string}  path
	 * @param  {!Array}  keys
	 * @param  {!Object} options
	 * @return {!RegExp}
	 */
	function stringToRegexp (path, keys, options) {
	  return tokensToRegExp(parse(path, options), keys, options)
	}

	/**
	 * Expose a function for taking tokens and returning a RegExp.
	 *
	 * @param  {!Array}          tokens
	 * @param  {(Array|Object)=} keys
	 * @param  {Object=}         options
	 * @return {!RegExp}
	 */
	function tokensToRegExp (tokens, keys, options) {
	  if (!isarray(keys)) {
	    options = /** @type {!Object} */ (keys || options)
	    keys = []
	  }

	  options = options || {}

	  var strict = options.strict
	  var end = options.end !== false
	  var route = ''

	  // Iterate over the tokens and create our regexp string.
	  for (var i = 0; i < tokens.length; i++) {
	    var token = tokens[i]

	    if (typeof token === 'string') {
	      route += escapeString(token)
	    } else {
	      var prefix = escapeString(token.prefix)
	      var capture = '(?:' + token.pattern + ')'

	      keys.push(token)

	      if (token.repeat) {
	        capture += '(?:' + prefix + capture + ')*'
	      }

	      if (token.optional) {
	        if (!token.partial) {
	          capture = '(?:' + prefix + '(' + capture + '))?'
	        } else {
	          capture = prefix + '(' + capture + ')?'
	        }
	      } else {
	        capture = prefix + '(' + capture + ')'
	      }

	      route += capture
	    }
	  }

	  var delimiter = escapeString(options.delimiter || '/')
	  var endsWithDelimiter = route.slice(-delimiter.length) === delimiter

	  // In non-strict mode we allow a slash at the end of match. If the path to
	  // match already ends with a slash, we remove it for consistency. The slash
	  // is valid at the end of a path match, not in the middle. This is important
	  // in non-ending mode, where "/test/" shouldn't match "/test//route".
	  if (!strict) {
	    route = (endsWithDelimiter ? route.slice(0, -delimiter.length) : route) + '(?:' + delimiter + '(?=$))?'
	  }

	  if (end) {
	    route += '$'
	  } else {
	    // In non-ending mode, we need the capturing groups to match as much as
	    // possible by using a positive lookahead to the end or next path segment.
	    route += strict && endsWithDelimiter ? '' : '(?=' + delimiter + '|$)'
	  }

	  return attachKeys(new RegExp('^' + route, flags(options)), keys)
	}

	/**
	 * Normalize the given path string, returning a regular expression.
	 *
	 * An empty array can be passed in for the keys, which will hold the
	 * placeholder key descriptions. For example, using `/user/:id`, `keys` will
	 * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.
	 *
	 * @param  {(string|RegExp|Array)} path
	 * @param  {(Array|Object)=}       keys
	 * @param  {Object=}               options
	 * @return {!RegExp}
	 */
	function pathToRegexp (path, keys, options) {
	  if (!isarray(keys)) {
	    options = /** @type {!Object} */ (keys || options)
	    keys = []
	  }

	  options = options || {}

	  if (path instanceof RegExp) {
	    return regexpToRegexp(path, /** @type {!Array} */ (keys))
	  }

	  if (isarray(path)) {
	    return arrayToRegexp(/** @type {!Array} */ (path), /** @type {!Array} */ (keys), options)
	  }

	  return stringToRegexp(/** @type {string} */ (path), /** @type {!Array} */ (keys), options)
	}


/***/ }),
/* 230 */
/***/ (function(module, exports) {

	module.exports = Array.isArray || function (arr) {
	  return Object.prototype.toString.call(arr) == '[object Array]';
	};


/***/ }),
/* 231 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _invariant = __webpack_require__(198);

	var _invariant2 = _interopRequireDefault(_invariant);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(205);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _PathUtils = __webpack_require__(218);

	var _Router = __webpack_require__(224);

	var _Router2 = _interopRequireDefault(_Router);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var normalizeLocation = function normalizeLocation(object) {
	  var _object$pathname = object.pathname,
	      pathname = _object$pathname === undefined ? '/' : _object$pathname,
	      _object$search = object.search,
	      search = _object$search === undefined ? '' : _object$search,
	      _object$hash = object.hash,
	      hash = _object$hash === undefined ? '' : _object$hash;


	  return {
	    pathname: pathname,
	    search: search === '?' ? '' : search,
	    hash: hash === '#' ? '' : hash
	  };
	};

	var addBasename = function addBasename(basename, location) {
	  if (!basename) return location;

	  return _extends({}, location, {
	    pathname: (0, _PathUtils.addLeadingSlash)(basename) + location.pathname
	  });
	};

	var stripBasename = function stripBasename(basename, location) {
	  if (!basename) return location;

	  var base = (0, _PathUtils.addLeadingSlash)(basename);

	  if (location.pathname.indexOf(base) !== 0) return location;

	  return _extends({}, location, {
	    pathname: location.pathname.substr(base.length)
	  });
	};

	var createLocation = function createLocation(location) {
	  return typeof location === 'string' ? (0, _PathUtils.parsePath)(location) : normalizeLocation(location);
	};

	var createURL = function createURL(location) {
	  return typeof location === 'string' ? location : (0, _PathUtils.createPath)(location);
	};

	var staticHandler = function staticHandler(methodName) {
	  return function () {
	    (0, _invariant2.default)(false, 'You cannot %s with <StaticRouter>', methodName);
	  };
	};

	var noop = function noop() {};

	/**
	 * The public top-level API for a "static" <Router>, so-called because it
	 * can't actually change the current location. Instead, it just records
	 * location changes in a context object. Useful mainly in testing and
	 * server-rendering scenarios.
	 */

	var StaticRouter = function (_React$Component) {
	  _inherits(StaticRouter, _React$Component);

	  function StaticRouter() {
	    var _temp, _this, _ret;

	    _classCallCheck(this, StaticRouter);

	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.createHref = function (path) {
	      return (0, _PathUtils.addLeadingSlash)(_this.props.basename + createURL(path));
	    }, _this.handlePush = function (location) {
	      var _this$props = _this.props,
	          basename = _this$props.basename,
	          context = _this$props.context;

	      context.action = 'PUSH';
	      context.location = addBasename(basename, createLocation(location));
	      context.url = createURL(context.location);
	    }, _this.handleReplace = function (location) {
	      var _this$props2 = _this.props,
	          basename = _this$props2.basename,
	          context = _this$props2.context;

	      context.action = 'REPLACE';
	      context.location = addBasename(basename, createLocation(location));
	      context.url = createURL(context.location);
	    }, _this.handleListen = function () {
	      return noop;
	    }, _this.handleBlock = function () {
	      return noop;
	    }, _temp), _possibleConstructorReturn(_this, _ret);
	  }

	  StaticRouter.prototype.getChildContext = function getChildContext() {
	    return {
	      router: {
	        staticContext: this.props.context
	      }
	    };
	  };

	  StaticRouter.prototype.render = function render() {
	    var _props = this.props,
	        basename = _props.basename,
	        context = _props.context,
	        location = _props.location,
	        props = _objectWithoutProperties(_props, ['basename', 'context', 'location']);

	    var history = {
	      createHref: this.createHref,
	      action: 'POP',
	      location: stripBasename(basename, createLocation(location)),
	      push: this.handlePush,
	      replace: this.handleReplace,
	      go: staticHandler('go'),
	      goBack: staticHandler('goBack'),
	      goForward: staticHandler('goForward'),
	      listen: this.handleListen,
	      block: this.handleBlock
	    };

	    return _react2.default.createElement(_Router2.default, _extends({}, props, { history: history }));
	  };

	  return StaticRouter;
	}(_react2.default.Component);

	StaticRouter.propTypes = {
	  basename: _propTypes2.default.string,
	  context: _propTypes2.default.object.isRequired,
	  location: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.object])
	};
	StaticRouter.defaultProps = {
	  basename: '',
	  location: '/'
	};
	StaticRouter.childContextTypes = {
	  router: _propTypes2.default.object.isRequired
	};
	exports.default = StaticRouter;

/***/ }),
/* 232 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(205);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _warning = __webpack_require__(214);

	var _warning2 = _interopRequireDefault(_warning);

	var _matchPath = __webpack_require__(228);

	var _matchPath2 = _interopRequireDefault(_matchPath);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	/**
	 * The public API for rendering the first <Route> that matches.
	 */
	var Switch = function (_React$Component) {
	  _inherits(Switch, _React$Component);

	  function Switch() {
	    _classCallCheck(this, Switch);

	    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));
	  }

	  Switch.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
	    (0, _warning2.default)(!(nextProps.location && !this.props.location), '<Switch> elements should not change from uncontrolled to controlled (or vice versa). You initially used no "location" prop and then provided one on a subsequent render.');

	    (0, _warning2.default)(!(!nextProps.location && this.props.location), '<Switch> elements should not change from controlled to uncontrolled (or vice versa). You provided a "location" prop initially but omitted it on a subsequent render.');
	  };

	  Switch.prototype.render = function render() {
	    var route = this.context.router.route;
	    var children = this.props.children;

	    var location = this.props.location || route.location;

	    var match = void 0,
	        child = void 0;
	    _react2.default.Children.forEach(children, function (element) {
	      if (!_react2.default.isValidElement(element)) return;

	      var _element$props = element.props,
	          pathProp = _element$props.path,
	          exact = _element$props.exact,
	          strict = _element$props.strict,
	          from = _element$props.from;

	      var path = pathProp || from;

	      if (match == null) {
	        child = element;
	        match = path ? (0, _matchPath2.default)(location.pathname, { path: path, exact: exact, strict: strict }) : route.match;
	      }
	    });

	    return match ? _react2.default.cloneElement(child, { location: location, computedMatch: match }) : null;
	  };

	  return Switch;
	}(_react2.default.Component);

	Switch.contextTypes = {
	  router: _propTypes2.default.shape({
	    route: _propTypes2.default.object.isRequired
	  }).isRequired
	};
	Switch.propTypes = {
	  children: _propTypes2.default.node,
	  location: _propTypes2.default.object
	};
	exports.default = Switch;

/***/ }),
/* 233 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(205);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _hoistNonReactStatics = __webpack_require__(197);

	var _hoistNonReactStatics2 = _interopRequireDefault(_hoistNonReactStatics);

	var _Route = __webpack_require__(227);

	var _Route2 = _interopRequireDefault(_Route);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

	/**
	 * A public higher-order component to access the imperative API
	 */
	var withRouter = function withRouter(Component) {
	  var C = function C(props) {
	    var wrappedComponentRef = props.wrappedComponentRef,
	        remainingProps = _objectWithoutProperties(props, ['wrappedComponentRef']);

	    return _react2.default.createElement(_Route2.default, { render: function render(routeComponentProps) {
	        return _react2.default.createElement(Component, _extends({}, remainingProps, routeComponentProps, { ref: wrappedComponentRef }));
	      } });
	  };

	  C.displayName = 'withRouter(' + (Component.displayName || Component.name) + ')';
	  C.WrappedComponent = Component;
	  C.propTypes = {
	    wrappedComponentRef: _propTypes2.default.func
	  };

	  return (0, _hoistNonReactStatics2.default)(C, Component);
	};

	exports.default = withRouter;

/***/ }),
/* 234 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(205);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _createHashHistory = __webpack_require__(235);

	var _createHashHistory2 = _interopRequireDefault(_createHashHistory);

	var _reactRouter = __webpack_require__(221);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	/**
	 * The public API for a <Router> that uses window.location.hash.
	 */
	var HashRouter = function (_React$Component) {
	  _inherits(HashRouter, _React$Component);

	  function HashRouter() {
	    var _temp, _this, _ret;

	    _classCallCheck(this, HashRouter);

	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.history = (0, _createHashHistory2.default)(_this.props), _temp), _possibleConstructorReturn(_this, _ret);
	  }

	  HashRouter.prototype.render = function render() {
	    return _react2.default.createElement(_reactRouter.Router, { history: this.history, children: this.props.children });
	  };

	  return HashRouter;
	}(_react2.default.Component);

	HashRouter.propTypes = {
	  basename: _propTypes2.default.string,
	  getUserConfirmation: _propTypes2.default.func,
	  hashType: _propTypes2.default.oneOf(['hashbang', 'noslash', 'slash']),
	  children: _propTypes2.default.node
	};
	exports.default = HashRouter;

/***/ }),
/* 235 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _warning = __webpack_require__(214);

	var _warning2 = _interopRequireDefault(_warning);

	var _invariant = __webpack_require__(198);

	var _invariant2 = _interopRequireDefault(_invariant);

	var _LocationUtils = __webpack_require__(215);

	var _PathUtils = __webpack_require__(218);

	var _createTransitionManager = __webpack_require__(219);

	var _createTransitionManager2 = _interopRequireDefault(_createTransitionManager);

	var _DOMUtils = __webpack_require__(220);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var HashChangeEvent = 'hashchange';

	var HashPathCoders = {
	  hashbang: {
	    encodePath: function encodePath(path) {
	      return path.charAt(0) === '!' ? path : '!/' + (0, _PathUtils.stripLeadingSlash)(path);
	    },
	    decodePath: function decodePath(path) {
	      return path.charAt(0) === '!' ? path.substr(1) : path;
	    }
	  },
	  noslash: {
	    encodePath: _PathUtils.stripLeadingSlash,
	    decodePath: _PathUtils.addLeadingSlash
	  },
	  slash: {
	    encodePath: _PathUtils.addLeadingSlash,
	    decodePath: _PathUtils.addLeadingSlash
	  }
	};

	var getHashPath = function getHashPath() {
	  // We can't use window.location.hash here because it's not
	  // consistent across browsers - Firefox will pre-decode it!
	  var href = window.location.href;
	  var hashIndex = href.indexOf('#');
	  return hashIndex === -1 ? '' : href.substring(hashIndex + 1);
	};

	var pushHashPath = function pushHashPath(path) {
	  return window.location.hash = path;
	};

	var replaceHashPath = function replaceHashPath(path) {
	  var hashIndex = window.location.href.indexOf('#');

	  window.location.replace(window.location.href.slice(0, hashIndex >= 0 ? hashIndex : 0) + '#' + path);
	};

	var createHashHistory = function createHashHistory() {
	  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

	  (0, _invariant2.default)(_DOMUtils.canUseDOM, 'Hash history needs a DOM');

	  var globalHistory = window.history;
	  var canGoWithoutReload = (0, _DOMUtils.supportsGoWithoutReloadUsingHash)();

	  var _props$getUserConfirm = props.getUserConfirmation,
	      getUserConfirmation = _props$getUserConfirm === undefined ? _DOMUtils.getConfirmation : _props$getUserConfirm,
	      _props$hashType = props.hashType,
	      hashType = _props$hashType === undefined ? 'slash' : _props$hashType;

	  var basename = props.basename ? (0, _PathUtils.stripTrailingSlash)((0, _PathUtils.addLeadingSlash)(props.basename)) : '';

	  var _HashPathCoders$hashT = HashPathCoders[hashType],
	      encodePath = _HashPathCoders$hashT.encodePath,
	      decodePath = _HashPathCoders$hashT.decodePath;


	  var getDOMLocation = function getDOMLocation() {
	    var path = decodePath(getHashPath());

	    (0, _warning2.default)(!basename || (0, _PathUtils.hasBasename)(path, basename), 'You are attempting to use a basename on a page whose URL path does not begin ' + 'with the basename. Expected path "' + path + '" to begin with "' + basename + '".');

	    if (basename) path = (0, _PathUtils.stripBasename)(path, basename);

	    return (0, _LocationUtils.createLocation)(path);
	  };

	  var transitionManager = (0, _createTransitionManager2.default)();

	  var setState = function setState(nextState) {
	    _extends(history, nextState);

	    history.length = globalHistory.length;

	    transitionManager.notifyListeners(history.location, history.action);
	  };

	  var forceNextPop = false;
	  var ignorePath = null;

	  var handleHashChange = function handleHashChange() {
	    var path = getHashPath();
	    var encodedPath = encodePath(path);

	    if (path !== encodedPath) {
	      // Ensure we always have a properly-encoded hash.
	      replaceHashPath(encodedPath);
	    } else {
	      var location = getDOMLocation();
	      var prevLocation = history.location;

	      if (!forceNextPop && (0, _LocationUtils.locationsAreEqual)(prevLocation, location)) return; // A hashchange doesn't always == location change.

	      if (ignorePath === (0, _PathUtils.createPath)(location)) return; // Ignore this change; we already setState in push/replace.

	      ignorePath = null;

	      handlePop(location);
	    }
	  };

	  var handlePop = function handlePop(location) {
	    if (forceNextPop) {
	      forceNextPop = false;
	      setState();
	    } else {
	      var action = 'POP';

	      transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {
	        if (ok) {
	          setState({ action: action, location: location });
	        } else {
	          revertPop(location);
	        }
	      });
	    }
	  };

	  var revertPop = function revertPop(fromLocation) {
	    var toLocation = history.location;

	    // TODO: We could probably make this more reliable by
	    // keeping a list of paths we've seen in sessionStorage.
	    // Instead, we just default to 0 for paths we don't know.

	    var toIndex = allPaths.lastIndexOf((0, _PathUtils.createPath)(toLocation));

	    if (toIndex === -1) toIndex = 0;

	    var fromIndex = allPaths.lastIndexOf((0, _PathUtils.createPath)(fromLocation));

	    if (fromIndex === -1) fromIndex = 0;

	    var delta = toIndex - fromIndex;

	    if (delta) {
	      forceNextPop = true;
	      go(delta);
	    }
	  };

	  // Ensure the hash is encoded properly before doing anything else.
	  var path = getHashPath();
	  var encodedPath = encodePath(path);

	  if (path !== encodedPath) replaceHashPath(encodedPath);

	  var initialLocation = getDOMLocation();
	  var allPaths = [(0, _PathUtils.createPath)(initialLocation)];

	  // Public interface

	  var createHref = function createHref(location) {
	    return '#' + encodePath(basename + (0, _PathUtils.createPath)(location));
	  };

	  var push = function push(path, state) {
	    (0, _warning2.default)(state === undefined, 'Hash history cannot push state; it is ignored');

	    var action = 'PUSH';
	    var location = (0, _LocationUtils.createLocation)(path, undefined, undefined, history.location);

	    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {
	      if (!ok) return;

	      var path = (0, _PathUtils.createPath)(location);
	      var encodedPath = encodePath(basename + path);
	      var hashChanged = getHashPath() !== encodedPath;

	      if (hashChanged) {
	        // We cannot tell if a hashchange was caused by a PUSH, so we'd
	        // rather setState here and ignore the hashchange. The caveat here
	        // is that other hash histories in the page will consider it a POP.
	        ignorePath = path;
	        pushHashPath(encodedPath);

	        var prevIndex = allPaths.lastIndexOf((0, _PathUtils.createPath)(history.location));
	        var nextPaths = allPaths.slice(0, prevIndex === -1 ? 0 : prevIndex + 1);

	        nextPaths.push(path);
	        allPaths = nextPaths;

	        setState({ action: action, location: location });
	      } else {
	        (0, _warning2.default)(false, 'Hash history cannot PUSH the same path; a new entry will not be added to the history stack');

	        setState();
	      }
	    });
	  };

	  var replace = function replace(path, state) {
	    (0, _warning2.default)(state === undefined, 'Hash history cannot replace state; it is ignored');

	    var action = 'REPLACE';
	    var location = (0, _LocationUtils.createLocation)(path, undefined, undefined, history.location);

	    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {
	      if (!ok) return;

	      var path = (0, _PathUtils.createPath)(location);
	      var encodedPath = encodePath(basename + path);
	      var hashChanged = getHashPath() !== encodedPath;

	      if (hashChanged) {
	        // We cannot tell if a hashchange was caused by a REPLACE, so we'd
	        // rather setState here and ignore the hashchange. The caveat here
	        // is that other hash histories in the page will consider it a POP.
	        ignorePath = path;
	        replaceHashPath(encodedPath);
	      }

	      var prevIndex = allPaths.indexOf((0, _PathUtils.createPath)(history.location));

	      if (prevIndex !== -1) allPaths[prevIndex] = path;

	      setState({ action: action, location: location });
	    });
	  };

	  var go = function go(n) {
	    (0, _warning2.default)(canGoWithoutReload, 'Hash history go(n) causes a full page reload in this browser');

	    globalHistory.go(n);
	  };

	  var goBack = function goBack() {
	    return go(-1);
	  };

	  var goForward = function goForward() {
	    return go(1);
	  };

	  var listenerCount = 0;

	  var checkDOMListeners = function checkDOMListeners(delta) {
	    listenerCount += delta;

	    if (listenerCount === 1) {
	      (0, _DOMUtils.addEventListener)(window, HashChangeEvent, handleHashChange);
	    } else if (listenerCount === 0) {
	      (0, _DOMUtils.removeEventListener)(window, HashChangeEvent, handleHashChange);
	    }
	  };

	  var isBlocked = false;

	  var block = function block() {
	    var prompt = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;

	    var unblock = transitionManager.setPrompt(prompt);

	    if (!isBlocked) {
	      checkDOMListeners(1);
	      isBlocked = true;
	    }

	    return function () {
	      if (isBlocked) {
	        isBlocked = false;
	        checkDOMListeners(-1);
	      }

	      return unblock();
	    };
	  };

	  var listen = function listen(listener) {
	    var unlisten = transitionManager.appendListener(listener);
	    checkDOMListeners(1);

	    return function () {
	      checkDOMListeners(-1);
	      unlisten();
	    };
	  };

	  var history = {
	    length: globalHistory.length,
	    action: 'POP',
	    location: initialLocation,
	    createHref: createHref,
	    push: push,
	    replace: replace,
	    go: go,
	    goBack: goBack,
	    goForward: goForward,
	    block: block,
	    listen: listen
	  };

	  return history;
	};

	exports.default = createHashHistory;

/***/ }),
/* 236 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(205);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var isModifiedEvent = function isModifiedEvent(event) {
	  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);
	};

	/**
	 * The public API for rendering a history-aware <a>.
	 */

	var Link = function (_React$Component) {
	  _inherits(Link, _React$Component);

	  function Link() {
	    var _temp, _this, _ret;

	    _classCallCheck(this, Link);

	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.handleClick = function (event) {
	      if (_this.props.onClick) _this.props.onClick(event);

	      if (!event.defaultPrevented && // onClick prevented default
	      event.button === 0 && // ignore right clicks
	      !_this.props.target && // let browser handle "target=_blank" etc.
	      !isModifiedEvent(event) // ignore clicks with modifier keys
	      ) {
	          event.preventDefault();

	          var history = _this.context.router.history;
	          var _this$props = _this.props,
	              replace = _this$props.replace,
	              to = _this$props.to;


	          if (replace) {
	            history.replace(to);
	          } else {
	            history.push(to);
	          }
	        }
	    }, _temp), _possibleConstructorReturn(_this, _ret);
	  }

	  Link.prototype.render = function render() {
	    var _props = this.props,
	        replace = _props.replace,
	        to = _props.to,
	        props = _objectWithoutProperties(_props, ['replace', 'to']); // eslint-disable-line no-unused-vars

	    var href = this.context.router.history.createHref(typeof to === 'string' ? { pathname: to } : to);

	    return _react2.default.createElement('a', _extends({}, props, { onClick: this.handleClick, href: href }));
	  };

	  return Link;
	}(_react2.default.Component);

	Link.propTypes = {
	  onClick: _propTypes2.default.func,
	  target: _propTypes2.default.string,
	  replace: _propTypes2.default.bool,
	  to: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.object]).isRequired
	};
	Link.defaultProps = {
	  replace: false
	};
	Link.contextTypes = {
	  router: _propTypes2.default.shape({
	    history: _propTypes2.default.shape({
	      push: _propTypes2.default.func.isRequired,
	      replace: _propTypes2.default.func.isRequired,
	      createHref: _propTypes2.default.func.isRequired
	    }).isRequired
	  }).isRequired
	};
	exports.default = Link;

/***/ }),
/* 237 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _reactRouter = __webpack_require__(221);

	Object.defineProperty(exports, 'default', {
	  enumerable: true,
	  get: function get() {
	    return _reactRouter.MemoryRouter;
	  }
	});

/***/ }),
/* 238 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(205);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _reactRouter = __webpack_require__(221);

	var _Link = __webpack_require__(236);

	var _Link2 = _interopRequireDefault(_Link);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

	/**
	 * A <Link> wrapper that knows if it's "active" or not.
	 */
	var NavLink = function NavLink(_ref) {
	  var to = _ref.to,
	      exact = _ref.exact,
	      strict = _ref.strict,
	      location = _ref.location,
	      activeClassName = _ref.activeClassName,
	      className = _ref.className,
	      activeStyle = _ref.activeStyle,
	      style = _ref.style,
	      getIsActive = _ref.isActive,
	      rest = _objectWithoutProperties(_ref, ['to', 'exact', 'strict', 'location', 'activeClassName', 'className', 'activeStyle', 'style', 'isActive']);

	  return _react2.default.createElement(_reactRouter.Route, {
	    path: (typeof to === 'undefined' ? 'undefined' : _typeof(to)) === 'object' ? to.pathname : to,
	    exact: exact,
	    strict: strict,
	    location: location,
	    children: function children(_ref2) {
	      var location = _ref2.location,
	          match = _ref2.match;

	      var isActive = !!(getIsActive ? getIsActive(match, location) : match);

	      return _react2.default.createElement(_Link2.default, _extends({
	        to: to,
	        className: isActive ? [activeClassName, className].filter(function (i) {
	          return i;
	        }).join(' ') : className,
	        style: isActive ? _extends({}, style, activeStyle) : style
	      }, rest));
	    }
	  });
	};

	NavLink.propTypes = {
	  to: _Link2.default.propTypes.to,
	  exact: _propTypes2.default.bool,
	  strict: _propTypes2.default.bool,
	  location: _propTypes2.default.object,
	  activeClassName: _propTypes2.default.string,
	  className: _propTypes2.default.string,
	  activeStyle: _propTypes2.default.object,
	  style: _propTypes2.default.object,
	  isActive: _propTypes2.default.func
	};

	NavLink.defaultProps = {
	  activeClassName: 'active'
	};

	exports.default = NavLink;

/***/ }),
/* 239 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _reactRouter = __webpack_require__(221);

	Object.defineProperty(exports, 'default', {
	  enumerable: true,
	  get: function get() {
	    return _reactRouter.Prompt;
	  }
	});

/***/ }),
/* 240 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _reactRouter = __webpack_require__(221);

	Object.defineProperty(exports, 'default', {
	  enumerable: true,
	  get: function get() {
	    return _reactRouter.Redirect;
	  }
	});

/***/ }),
/* 241 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _reactRouter = __webpack_require__(221);

	Object.defineProperty(exports, 'default', {
	  enumerable: true,
	  get: function get() {
	    return _reactRouter.Route;
	  }
	});

/***/ }),
/* 242 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _reactRouter = __webpack_require__(221);

	Object.defineProperty(exports, 'default', {
	  enumerable: true,
	  get: function get() {
	    return _reactRouter.Router;
	  }
	});

/***/ }),
/* 243 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _reactRouter = __webpack_require__(221);

	Object.defineProperty(exports, 'default', {
	  enumerable: true,
	  get: function get() {
	    return _reactRouter.StaticRouter;
	  }
	});

/***/ }),
/* 244 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _reactRouter = __webpack_require__(221);

	Object.defineProperty(exports, 'default', {
	  enumerable: true,
	  get: function get() {
	    return _reactRouter.Switch;
	  }
	});

/***/ }),
/* 245 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _reactRouter = __webpack_require__(221);

	Object.defineProperty(exports, 'default', {
	  enumerable: true,
	  get: function get() {
	    return _reactRouter.matchPath;
	  }
	});

/***/ }),
/* 246 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _reactRouter = __webpack_require__(221);

	Object.defineProperty(exports, 'default', {
	  enumerable: true,
	  get: function get() {
	    return _reactRouter.withRouter;
	  }
	});

/***/ }),
/* 247 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _reactRouterDom = __webpack_require__(203);

	var _navbar = __webpack_require__(248);

	var _navbar2 = _interopRequireDefault(_navbar);

	var _router_user = __webpack_require__(328);

	var _router_user2 = _interopRequireDefault(_router_user);

	var _router_core = __webpack_require__(580);

	var _router_core2 = _interopRequireDefault(_router_core);

	var _router_worker = __webpack_require__(615);

	var _router_worker2 = _interopRequireDefault(_router_worker);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/*
	    Trata do routing de todas as páginas da aplicação após login.
	    Junta as componentes de routing referentes a cada tipo de utilizador.
	*/


	// Internal Modules
	// 3rd Party
	var AppRouter = function AppRouter(props) {
	    return _react2.default.createElement(
	        'div',
	        null,
	        _react2.default.createElement(_reactRouterDom.Route, { path: '/app', component: _navbar2.default }),
	        _react2.default.createElement(
	            _reactRouterDom.Switch,
	            null,
	            _react2.default.createElement(_reactRouterDom.Route, { path: '/app/user', component: _router_user2.default }),
	            _react2.default.createElement(_reactRouterDom.Route, { path: '/app/core', component: _router_core2.default }),
	            _react2.default.createElement(_reactRouterDom.Route, { path: '/app/worker', component: _router_worker2.default })
	        )
	    );
	};

	exports.default = AppRouter;

/***/ }),
/* 248 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _reactRedux = __webpack_require__(160);

	var _reactRouterDom = __webpack_require__(203);

	var _nav_basic = __webpack_require__(249);

	var _nav_basic2 = _interopRequireDefault(_nav_basic);

	var _nav_core = __webpack_require__(280);

	var _nav_core2 = _interopRequireDefault(_nav_core);

	var _nav_worker = __webpack_require__(319);

	var _nav_worker2 = _interopRequireDefault(_nav_worker);

	var _modal = __webpack_require__(320);

	var _modal2 = _interopRequireDefault(_modal);

	var _spinner = __webpack_require__(321);

	var _spinner2 = _interopRequireDefault(_spinner);

	var _loading_text = __webpack_require__(322);

	var _loading_text2 = _interopRequireDefault(_loading_text);

	var _actions_token = __webpack_require__(323);

	var _notification_list = __webpack_require__(250);

	var _notification_list2 = _interopRequireDefault(_notification_list);

	var _actions_notifications = __webpack_require__(324);

	var _actions_search_location = __webpack_require__(325);

	var _actions_interval_reports = __webpack_require__(326);

	var _actions_reports = __webpack_require__(327);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // 3rd Party


	// Internal Modules


	// Actions 


	/*
	    Barra de navegação dinâmica presente em todas as páginas cuja route
	    contém /app.

	    É dinâmica no sentido em que se adapta a qualquer tipo de utilizador
	    recorrendo a outros componentes, sendo assim um componente mais
	    genérico.

	    É responsável por gerir a sessão do utilizador. (Routing condicional)
	*/
	var Navbar = function (_Component) {
	    _inherits(Navbar, _Component);

	    function Navbar(props) {
	        _classCallCheck(this, Navbar);

	        var _this = _possibleConstructorReturn(this, (Navbar.__proto__ || Object.getPrototypeOf(Navbar)).call(this, props));

	        _this.state = {
	            fetchedNotifications: false
	        };
	        return _this;
	    }
	    /*
	        Verifica se já temos um token no estado da aplicação.
	        Se não, tenta encontrar um token válido na localstorage.
	        Se encontrar o token na localstorage este será injectado
	        no estado e de seguida nas propriedades do componente,
	        manifestando-se primariamente em compotWillReceiveProps.
	    */


	    _createClass(Navbar, [{
	        key: 'componentWillMount',
	        value: function componentWillMount() {
	            if (!this.props.token.token) {
	                this.props.dispatch((0, _actions_token.fetchTokenFromLocalstorage)());
	            }
	        }
	    }, {
	        key: 'componentWillUpdate',
	        value: function componentWillUpdate() {
	            if (this.props.token.token) {
	                if ((this.props.token.token.role === 'basic' || this.props.token.token.role === 'trial') && !this.state.fetchedNotifications) {
	                    this.props.dispatch((0, _actions_notifications.loadNotifications)(JSON.parse(localStorage.getItem('token'))));
	                    this.setState({ fetchedNotifications: true });
	                }
	            }
	        }
	    }, {
	        key: 'componentDidUpdate',
	        value: function componentDidUpdate() {
	            if (this.props.token.token) {
	                if ((this.props.token.token.role === 'basic' || this.props.token.token.role === 'trial') && !this.state.fetchedNotifications) {
	                    this.props.dispatch((0, _actions_notifications.loadNotifications)(JSON.parse(localStorage.getItem('token'))));
	                    this.setState({ fetchedNotifications: true });
	                }
	            }
	        }

	        /*
	            Este método executa depois de componentWillMount e se
	            um token válido tiver sido repescado da localstorage
	            este obrigatóriamente estará em nextProps.
	            Se não estiver significa que não se encontrou um token
	            válido na localstorage e portanto redirecciona o
	            utilizador para o ecrã de login.
	        */

	    }, {
	        key: 'componentWillReceiveProps',
	        value: function componentWillReceiveProps(nextProps) {
	            if (!nextProps.token.token) {
	                this.props.history.push('/login');
	            }
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            var _this2 = this;

	            // Não faz render sem ter token
	            if (!this.props.token.token) {
	                return _react2.default.createElement('noscript', null);
	            }

	            return _react2.default.createElement(
	                'nav',
	                { className: 'navbar navbar-toggleable-md navbar-inverse bg-primary fixed-top' },
	                _react2.default.createElement(
	                    'button',
	                    { className: 'navbar-toggler navbar-toggler-right', type: 'button', 'data-toggle': 'collapse', 'data-target': '#navbarNav', 'aria-controls': 'navbarNav', 'aria-expanded': 'false', 'aria-label': 'Toggle navigation' },
	                    _react2.default.createElement('span', { className: 'navbar-toggler-icon' })
	                ),
	                _react2.default.createElement(
	                    'a',
	                    { className: 'navbar-brand', href: '#', onClick: function onClick(event) {
	                            event.preventDefault();

	                            _this2.props.dispatch((0, _actions_reports.unsetNewReportLocation)());
	                            _this2.props.history.push('/login');
	                        } },
	                    _react2.default.createElement('img', { src: '/img/logo.svg', width: 30, height: 30, className: 'd-inline-block align-top mr-2', alt: '' }),
	                    'Flag N\' Patch'
	                ),
	                _react2.default.createElement(
	                    'div',
	                    { className: 'collapse navbar-collapse mx-5', id: 'navbarNav' },
	                    function () {
	                        switch (this.props.token.token.role) {
	                            case 'trial':
	                            case 'basic':
	                                return _react2.default.createElement(_nav_basic2.default, {
	                                    notifications: this.props.notificationList,
	                                    onLocationSearch: this.onLocationSearch.bind(this),
	                                    onLogout: this.onLogout.bind(this)
	                                });
	                            case 'end':
	                                0;
	                                return _react2.default.createElement(_nav_core2.default, { onLogout: this.onLogout.bind(this) });
	                            case 'core':
	                                return _react2.default.createElement(_nav_core2.default, { core: 'coreUser', onLogout: this.onLogout.bind(this) });
	                            case 'work':
	                                return _react2.default.createElement(_nav_worker2.default, { onLogout: this.onLogout.bind(this) });
	                        }
	                    }.bind(this)()
	                ),
	                this.props.token.loggingOut && _react2.default.createElement(
	                    _modal2.default,
	                    null,
	                    _react2.default.createElement(
	                        'div',
	                        { className: 'd-flex justify-content-center align-items-center' },
	                        _react2.default.createElement(
	                            'div',
	                            { className: 'mr-3' },
	                            _react2.default.createElement(_spinner2.default, null)
	                        ),
	                        _react2.default.createElement(_loading_text2.default, { message: 'A terminar sess\xE3o' })
	                    )
	                )
	            );
	        }
	    }, {
	        key: 'onLogout',
	        value: function onLogout() {
	            this.props.dispatch((0, _actions_interval_reports.unsetIntervalReports)());
	            this.props.dispatch((0, _actions_token.doLogout)(this.props.token.token));
	        }
	    }, {
	        key: 'onLocationSearch',
	        value: function onLocationSearch(event) {
	            var _this3 = this;

	            //
	            event.preventDefault();

	            var address = $('#location-input').val();
	            $('#location-input').val('');

	            var geocoder = new google.maps.Geocoder();
	            geocoder.geocode({ address: address }, function (results, status) {
	                var lat = results[0].geometry.location.lat();
	                var lng = results[0].geometry.location.lng();
	                _this3.props.dispatch((0, _actions_search_location.searchLocation)({ lat: lat, lng: lng }));
	            });
	        }
	    }]);

	    return Navbar;
	}(_react.Component);

	/*
	    Função que filtra as propriedades da store que interessam ao componente
	    em questão e as torna disponíveis através de props.
	*/


	function mapStateToProps(store) {
	    return {
	        token: store.token,
	        notificationList: store.notificationList,
	        intervalReport: store.intervalReport
	    };
	}

	// Ligar componente ao Redux
	exports.default = (0, _reactRedux.connect)(mapStateToProps)(Navbar);

/***/ }),
/* 249 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _notification_list = __webpack_require__(250);

	var _notification_list2 = _interopRequireDefault(_notification_list);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	// 3rd Party
	var NavBasic = function NavBasic(props) {
	    var unseen = 0;
	    for (var i in props.notifications) {
	        if (!props.notifications[i].wasSeen) {
	            unseen++;
	        }
	    }

	    return _react2.default.createElement(
	        'ul',
	        { className: 'navbar-nav d-flex justify-content-end w-100' },
	        _react2.default.createElement(
	            'li',
	            { className: 'nav-item mx-auto w-75 mt-1' },
	            _react2.default.createElement(
	                'form',
	                { className: 'input-group', onSubmit: function onSubmit(e) {
	                        return props.onLocationSearch(e);
	                    } },
	                _react2.default.createElement('input', { type: 'text', className: 'form-control', id: 'location-input', placeholder: 'Procurar localiza\xE7\xE3o...' })
	            )
	        ),
	        _react2.default.createElement(
	            'li',
	            { className: 'nav-item mr-3' },
	            _react2.default.createElement(
	                'div',
	                { className: 'btn-group' },
	                _react2.default.createElement(
	                    'button',
	                    { className: 'btn btn-primary dropdown-toggle', 'data-toggle': 'dropdown', 'aria-haspopup': 'true', 'aria-expanded': 'false' },
	                    _react2.default.createElement(
	                        'i',
	                        { className: 'ion-android-notifications navbar-brand' },
	                        ' ',
	                        _react2.default.createElement(
	                            'span',
	                            { id: 'notiBadge', className: 'badge' },
	                            unseen
	                        )
	                    )
	                ),
	                _react2.default.createElement(_notification_list2.default, { notifications: props.notifications })
	            )
	        ),
	        _react2.default.createElement(
	            'li',
	            { className: 'nav-item' },
	            _react2.default.createElement(
	                'div',
	                { className: 'btn-group' },
	                _react2.default.createElement(
	                    'button',
	                    { type: 'button', className: 'btn btn-primary dropdown-toggle', 'data-toggle': 'dropdown', 'aria-haspopup': 'true', 'aria-expanded': 'false' },
	                    _react2.default.createElement('i', { className: 'ion-android-person navbar-brand' })
	                ),
	                _react2.default.createElement(
	                    'div',
	                    { className: 'dropdown-menu dropdown-menu-right' },
	                    _react2.default.createElement('div', { className: 'dropdown-divider' }),
	                    _react2.default.createElement(
	                        'button',
	                        { className: 'dropdown-item btn btn-primary', onClick: props.onLogout },
	                        'Logout'
	                    )
	                )
	            )
	        )
	    );
	};

	// Components 
	exports.default = NavBasic;

/***/ }),
/* 250 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _notification_item = __webpack_require__(251);

	var _notification_item2 = _interopRequireDefault(_notification_item);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	// Components 


	var NotificationList = function (_Component) {
	    _inherits(NotificationList, _Component);

	    function NotificationList() {
	        _classCallCheck(this, NotificationList);

	        return _possibleConstructorReturn(this, (NotificationList.__proto__ || Object.getPrototypeOf(NotificationList)).apply(this, arguments));
	    }

	    _createClass(NotificationList, [{
	        key: 'render',
	        value: function render() {
	            var items = void 0;
	            console.log("this.props.notifications", this.props.notifications);
	            if (this.props.notifications) {
	                if (this.props.notifications.length === 0) {
	                    console.log("length", this.props.notifications.length);
	                } else {
	                    items = this.props.notifications.sort(function (a, b) {
	                        return b.exactModifiedDate - a.exactModifiedDate;
	                    }).map(function (item) {
	                        return _react2.default.createElement(_notification_item2.default, { key: item.id, item: item });
	                    });
	                }
	            }
	            return _react2.default.createElement(
	                'div',
	                { className: 'dropdown-menu dropdown-menu-right scrollable-menu notificationDropdown' },
	                items || _react2.default.createElement(
	                    'div',
	                    null,
	                    'Sem notifica\xE7\xF5es'
	                )
	            );
	        }
	    }]);

	    return NotificationList;
	}(_react.Component);

	exports.default = NotificationList;

/***/ }),
/* 251 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _jquery = __webpack_require__(252);

	var _jquery2 = _interopRequireDefault(_jquery);

	var _axios = __webpack_require__(253);

	var _axios2 = _interopRequireDefault(_axios);

	var _reactRouterDom = __webpack_require__(203);

	var _config = __webpack_require__(279);

	var _config2 = _interopRequireDefault(_config);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var NotificationItem = function (_Component) {
	    _inherits(NotificationItem, _Component);

	    function NotificationItem() {
	        _classCallCheck(this, NotificationItem);

	        return _possibleConstructorReturn(this, (NotificationItem.__proto__ || Object.getPrototypeOf(NotificationItem)).apply(this, arguments));
	    }

	    _createClass(NotificationItem, [{
	        key: 'updateNotificationSymbolColor',
	        value: function updateNotificationSymbolColor() {
	            var notificationId = this.props.item.id;
	            if (this.props.item.wasSeen === false) {
	                (0, _jquery2.default)('#' + notificationId).css('background', '#43EF8A');
	                (0, _jquery2.default)('#' + notificationId).css('border', '#43EF8A');
	            } else {
	                (0, _jquery2.default)('#' + notificationId).css('background', '#D5D1D0');
	                (0, _jquery2.default)('#' + notificationId).css('border', '#D5D1D0');
	            }
	        }

	        /*
	        background: #A4F4C5;
	            border: 1px solid #A4F4C5;
	        */

	    }, {
	        key: 'updateSeenStatus',
	        value: function updateSeenStatus() {
	            var _this2 = this;

	            console.log("Entered updateSeenStatus");
	            var notificationId = this.props.item.id;
	            var token = JSON.parse(localStorage.getItem('token'));
	            if (this.props.item.wasSeen === false) {
	                _axios2.default.put(_config2.default + '/operation/seeNotification/' + notificationId, token).then(function (response) {
	                    if (response.status === 200) {
	                        _this2.props.item.wasSeen = true;
	                        _this2.updateNotificationSymbolColor();
	                    }
	                }).catch(function (err) {
	                    console.log("An error has occured when trying to see notification.");
	                });
	            }
	        }
	    }, {
	        key: 'handleDetailsRedirect',
	        value: function handleDetailsRedirect() {
	            localStorage.setItem("notification", JSON.stringify(this.props.item));
	            console.log("after stringify", localStorage.getItem("notification"));
	            console.log("after parse", JSON.parse(localStorage.getItem("notification")));
	        }
	    }, {
	        key: 'componentWillMount',
	        value: function componentWillMount() {
	            this.updateNotificationSymbolColor();
	        }
	    }, {
	        key: 'componentDidMount',
	        value: function componentDidMount() {
	            this.updateNotificationSymbolColor();
	        }
	    }, {
	        key: 'handleMouseEnter',
	        value: function handleMouseEnter() {
	            var notificationId = this.props.item.id;
	            (0, _jquery2.default)('#' + notificationId).css('background', 'white');
	            (0, _jquery2.default)('#' + notificationId).css('border', 'white');
	        }
	    }, {
	        key: 'handleMouseLeave',
	        value: function handleMouseLeave() {
	            var notificationId = this.props.item.id;
	            if (this.props.item.wasSeen === false) {
	                (0, _jquery2.default)('#' + notificationId).css('background', '#43EF8A');
	                (0, _jquery2.default)('#' + notificationId).css('border', '#43EF8A');
	            } else {
	                (0, _jquery2.default)('#' + notificationId).css('background', '#D5D1D0');
	                (0, _jquery2.default)('#' + notificationId).css('border', '#D5D1D0');
	            }
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            var link = "/app/user/notifications/".concat(this.props.item.id);
	            var notificationId = this.props.item.id;
	            return _react2.default.createElement(
	                'div',
	                { onMouseEnter: this.handleMouseEnter.bind(this), onMouseLeave: this.handleMouseLeave.bind(this),
	                    id: notificationId, className: 'notification-item dropdown-item', onClick: this.updateSeenStatus.bind(this) },
	                _react2.default.createElement(
	                    _reactRouterDom.Link,
	                    { style: { color: 'black' }, to: link, role: 'button', className: 'btn btn-pink', onClick: this.handleDetailsRedirect.bind(this) },
	                    _react2.default.createElement(
	                        'div',
	                        { className: 'notification-item-content' },
	                        'Uma ocorr\xEAncia seguida por si sofreu uma altera\xE7\xE3o de estado de ',
	                        _react2.default.createElement(
	                            'strong',
	                            null,
	                            ' ',
	                            this.props.item.prevStatus,
	                            ' '
	                        ),
	                        'para ',
	                        _react2.default.createElement(
	                            'strong',
	                            null,
	                            ' ',
	                            this.props.item.newStatus
	                        ),
	                        '.'
	                    )
	                )
	            );
	        }
	    }]);

	    return NotificationItem;
	}(_react.Component);

	exports.default = NotificationItem;

/***/ }),
/* 252 */
/***/ (function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
	 * jQuery JavaScript Library v2.2.4
	 * http://jquery.com/
	 *
	 * Includes Sizzle.js
	 * http://sizzlejs.com/
	 *
	 * Copyright jQuery Foundation and other contributors
	 * Released under the MIT license
	 * http://jquery.org/license
	 *
	 * Date: 2016-05-20T17:23Z
	 */

	(function( global, factory ) {

		if ( typeof module === "object" && typeof module.exports === "object" ) {
			// For CommonJS and CommonJS-like environments where a proper `window`
			// is present, execute the factory and get jQuery.
			// For environments that do not have a `window` with a `document`
			// (such as Node.js), expose a factory as module.exports.
			// This accentuates the need for the creation of a real `window`.
			// e.g. var jQuery = require("jquery")(window);
			// See ticket #14549 for more info.
			module.exports = global.document ?
				factory( global, true ) :
				function( w ) {
					if ( !w.document ) {
						throw new Error( "jQuery requires a window with a document" );
					}
					return factory( w );
				};
		} else {
			factory( global );
		}

	// Pass this if window is not defined yet
	}(typeof window !== "undefined" ? window : this, function( window, noGlobal ) {

	// Support: Firefox 18+
	// Can't be in strict mode, several libs including ASP.NET trace
	// the stack via arguments.caller.callee and Firefox dies if
	// you try to trace through "use strict" call chains. (#13335)
	//"use strict";
	var arr = [];

	var document = window.document;

	var slice = arr.slice;

	var concat = arr.concat;

	var push = arr.push;

	var indexOf = arr.indexOf;

	var class2type = {};

	var toString = class2type.toString;

	var hasOwn = class2type.hasOwnProperty;

	var support = {};



	var
		version = "2.2.4",

		// Define a local copy of jQuery
		jQuery = function( selector, context ) {

			// The jQuery object is actually just the init constructor 'enhanced'
			// Need init if jQuery is called (just allow error to be thrown if not included)
			return new jQuery.fn.init( selector, context );
		},

		// Support: Android<4.1
		// Make sure we trim BOM and NBSP
		rtrim = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,

		// Matches dashed string for camelizing
		rmsPrefix = /^-ms-/,
		rdashAlpha = /-([\da-z])/gi,

		// Used by jQuery.camelCase as callback to replace()
		fcamelCase = function( all, letter ) {
			return letter.toUpperCase();
		};

	jQuery.fn = jQuery.prototype = {

		// The current version of jQuery being used
		jquery: version,

		constructor: jQuery,

		// Start with an empty selector
		selector: "",

		// The default length of a jQuery object is 0
		length: 0,

		toArray: function() {
			return slice.call( this );
		},

		// Get the Nth element in the matched element set OR
		// Get the whole matched element set as a clean array
		get: function( num ) {
			return num != null ?

				// Return just the one element from the set
				( num < 0 ? this[ num + this.length ] : this[ num ] ) :

				// Return all the elements in a clean array
				slice.call( this );
		},

		// Take an array of elements and push it onto the stack
		// (returning the new matched element set)
		pushStack: function( elems ) {

			// Build a new jQuery matched element set
			var ret = jQuery.merge( this.constructor(), elems );

			// Add the old object onto the stack (as a reference)
			ret.prevObject = this;
			ret.context = this.context;

			// Return the newly-formed element set
			return ret;
		},

		// Execute a callback for every element in the matched set.
		each: function( callback ) {
			return jQuery.each( this, callback );
		},

		map: function( callback ) {
			return this.pushStack( jQuery.map( this, function( elem, i ) {
				return callback.call( elem, i, elem );
			} ) );
		},

		slice: function() {
			return this.pushStack( slice.apply( this, arguments ) );
		},

		first: function() {
			return this.eq( 0 );
		},

		last: function() {
			return this.eq( -1 );
		},

		eq: function( i ) {
			var len = this.length,
				j = +i + ( i < 0 ? len : 0 );
			return this.pushStack( j >= 0 && j < len ? [ this[ j ] ] : [] );
		},

		end: function() {
			return this.prevObject || this.constructor();
		},

		// For internal use only.
		// Behaves like an Array's method, not like a jQuery method.
		push: push,
		sort: arr.sort,
		splice: arr.splice
	};

	jQuery.extend = jQuery.fn.extend = function() {
		var options, name, src, copy, copyIsArray, clone,
			target = arguments[ 0 ] || {},
			i = 1,
			length = arguments.length,
			deep = false;

		// Handle a deep copy situation
		if ( typeof target === "boolean" ) {
			deep = target;

			// Skip the boolean and the target
			target = arguments[ i ] || {};
			i++;
		}

		// Handle case when target is a string or something (possible in deep copy)
		if ( typeof target !== "object" && !jQuery.isFunction( target ) ) {
			target = {};
		}

		// Extend jQuery itself if only one argument is passed
		if ( i === length ) {
			target = this;
			i--;
		}

		for ( ; i < length; i++ ) {

			// Only deal with non-null/undefined values
			if ( ( options = arguments[ i ] ) != null ) {

				// Extend the base object
				for ( name in options ) {
					src = target[ name ];
					copy = options[ name ];

					// Prevent never-ending loop
					if ( target === copy ) {
						continue;
					}

					// Recurse if we're merging plain objects or arrays
					if ( deep && copy && ( jQuery.isPlainObject( copy ) ||
						( copyIsArray = jQuery.isArray( copy ) ) ) ) {

						if ( copyIsArray ) {
							copyIsArray = false;
							clone = src && jQuery.isArray( src ) ? src : [];

						} else {
							clone = src && jQuery.isPlainObject( src ) ? src : {};
						}

						// Never move original objects, clone them
						target[ name ] = jQuery.extend( deep, clone, copy );

					// Don't bring in undefined values
					} else if ( copy !== undefined ) {
						target[ name ] = copy;
					}
				}
			}
		}

		// Return the modified object
		return target;
	};

	jQuery.extend( {

		// Unique for each copy of jQuery on the page
		expando: "jQuery" + ( version + Math.random() ).replace( /\D/g, "" ),

		// Assume jQuery is ready without the ready module
		isReady: true,

		error: function( msg ) {
			throw new Error( msg );
		},

		noop: function() {},

		isFunction: function( obj ) {
			return jQuery.type( obj ) === "function";
		},

		isArray: Array.isArray,

		isWindow: function( obj ) {
			return obj != null && obj === obj.window;
		},

		isNumeric: function( obj ) {

			// parseFloat NaNs numeric-cast false positives (null|true|false|"")
			// ...but misinterprets leading-number strings, particularly hex literals ("0x...")
			// subtraction forces infinities to NaN
			// adding 1 corrects loss of precision from parseFloat (#15100)
			var realStringObj = obj && obj.toString();
			return !jQuery.isArray( obj ) && ( realStringObj - parseFloat( realStringObj ) + 1 ) >= 0;
		},

		isPlainObject: function( obj ) {
			var key;

			// Not plain objects:
			// - Any object or value whose internal [[Class]] property is not "[object Object]"
			// - DOM nodes
			// - window
			if ( jQuery.type( obj ) !== "object" || obj.nodeType || jQuery.isWindow( obj ) ) {
				return false;
			}

			// Not own constructor property must be Object
			if ( obj.constructor &&
					!hasOwn.call( obj, "constructor" ) &&
					!hasOwn.call( obj.constructor.prototype || {}, "isPrototypeOf" ) ) {
				return false;
			}

			// Own properties are enumerated firstly, so to speed up,
			// if last one is own, then all properties are own
			for ( key in obj ) {}

			return key === undefined || hasOwn.call( obj, key );
		},

		isEmptyObject: function( obj ) {
			var name;
			for ( name in obj ) {
				return false;
			}
			return true;
		},

		type: function( obj ) {
			if ( obj == null ) {
				return obj + "";
			}

			// Support: Android<4.0, iOS<6 (functionish RegExp)
			return typeof obj === "object" || typeof obj === "function" ?
				class2type[ toString.call( obj ) ] || "object" :
				typeof obj;
		},

		// Evaluates a script in a global context
		globalEval: function( code ) {
			var script,
				indirect = eval;

			code = jQuery.trim( code );

			if ( code ) {

				// If the code includes a valid, prologue position
				// strict mode pragma, execute code by injecting a
				// script tag into the document.
				if ( code.indexOf( "use strict" ) === 1 ) {
					script = document.createElement( "script" );
					script.text = code;
					document.head.appendChild( script ).parentNode.removeChild( script );
				} else {

					// Otherwise, avoid the DOM node creation, insertion
					// and removal by using an indirect global eval

					indirect( code );
				}
			}
		},

		// Convert dashed to camelCase; used by the css and data modules
		// Support: IE9-11+
		// Microsoft forgot to hump their vendor prefix (#9572)
		camelCase: function( string ) {
			return string.replace( rmsPrefix, "ms-" ).replace( rdashAlpha, fcamelCase );
		},

		nodeName: function( elem, name ) {
			return elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();
		},

		each: function( obj, callback ) {
			var length, i = 0;

			if ( isArrayLike( obj ) ) {
				length = obj.length;
				for ( ; i < length; i++ ) {
					if ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {
						break;
					}
				}
			} else {
				for ( i in obj ) {
					if ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {
						break;
					}
				}
			}

			return obj;
		},

		// Support: Android<4.1
		trim: function( text ) {
			return text == null ?
				"" :
				( text + "" ).replace( rtrim, "" );
		},

		// results is for internal usage only
		makeArray: function( arr, results ) {
			var ret = results || [];

			if ( arr != null ) {
				if ( isArrayLike( Object( arr ) ) ) {
					jQuery.merge( ret,
						typeof arr === "string" ?
						[ arr ] : arr
					);
				} else {
					push.call( ret, arr );
				}
			}

			return ret;
		},

		inArray: function( elem, arr, i ) {
			return arr == null ? -1 : indexOf.call( arr, elem, i );
		},

		merge: function( first, second ) {
			var len = +second.length,
				j = 0,
				i = first.length;

			for ( ; j < len; j++ ) {
				first[ i++ ] = second[ j ];
			}

			first.length = i;

			return first;
		},

		grep: function( elems, callback, invert ) {
			var callbackInverse,
				matches = [],
				i = 0,
				length = elems.length,
				callbackExpect = !invert;

			// Go through the array, only saving the items
			// that pass the validator function
			for ( ; i < length; i++ ) {
				callbackInverse = !callback( elems[ i ], i );
				if ( callbackInverse !== callbackExpect ) {
					matches.push( elems[ i ] );
				}
			}

			return matches;
		},

		// arg is for internal usage only
		map: function( elems, callback, arg ) {
			var length, value,
				i = 0,
				ret = [];

			// Go through the array, translating each of the items to their new values
			if ( isArrayLike( elems ) ) {
				length = elems.length;
				for ( ; i < length; i++ ) {
					value = callback( elems[ i ], i, arg );

					if ( value != null ) {
						ret.push( value );
					}
				}

			// Go through every key on the object,
			} else {
				for ( i in elems ) {
					value = callback( elems[ i ], i, arg );

					if ( value != null ) {
						ret.push( value );
					}
				}
			}

			// Flatten any nested arrays
			return concat.apply( [], ret );
		},

		// A global GUID counter for objects
		guid: 1,

		// Bind a function to a context, optionally partially applying any
		// arguments.
		proxy: function( fn, context ) {
			var tmp, args, proxy;

			if ( typeof context === "string" ) {
				tmp = fn[ context ];
				context = fn;
				fn = tmp;
			}

			// Quick check to determine if target is callable, in the spec
			// this throws a TypeError, but we will just return undefined.
			if ( !jQuery.isFunction( fn ) ) {
				return undefined;
			}

			// Simulated bind
			args = slice.call( arguments, 2 );
			proxy = function() {
				return fn.apply( context || this, args.concat( slice.call( arguments ) ) );
			};

			// Set the guid of unique handler to the same of original handler, so it can be removed
			proxy.guid = fn.guid = fn.guid || jQuery.guid++;

			return proxy;
		},

		now: Date.now,

		// jQuery.support is not used in Core but other projects attach their
		// properties to it so it needs to exist.
		support: support
	} );

	// JSHint would error on this code due to the Symbol not being defined in ES5.
	// Defining this global in .jshintrc would create a danger of using the global
	// unguarded in another place, it seems safer to just disable JSHint for these
	// three lines.
	/* jshint ignore: start */
	if ( typeof Symbol === "function" ) {
		jQuery.fn[ Symbol.iterator ] = arr[ Symbol.iterator ];
	}
	/* jshint ignore: end */

	// Populate the class2type map
	jQuery.each( "Boolean Number String Function Array Date RegExp Object Error Symbol".split( " " ),
	function( i, name ) {
		class2type[ "[object " + name + "]" ] = name.toLowerCase();
	} );

	function isArrayLike( obj ) {

		// Support: iOS 8.2 (not reproducible in simulator)
		// `in` check used to prevent JIT error (gh-2145)
		// hasOwn isn't used here due to false negatives
		// regarding Nodelist length in IE
		var length = !!obj && "length" in obj && obj.length,
			type = jQuery.type( obj );

		if ( type === "function" || jQuery.isWindow( obj ) ) {
			return false;
		}

		return type === "array" || length === 0 ||
			typeof length === "number" && length > 0 && ( length - 1 ) in obj;
	}
	var Sizzle =
	/*!
	 * Sizzle CSS Selector Engine v2.2.1
	 * http://sizzlejs.com/
	 *
	 * Copyright jQuery Foundation and other contributors
	 * Released under the MIT license
	 * http://jquery.org/license
	 *
	 * Date: 2015-10-17
	 */
	(function( window ) {

	var i,
		support,
		Expr,
		getText,
		isXML,
		tokenize,
		compile,
		select,
		outermostContext,
		sortInput,
		hasDuplicate,

		// Local document vars
		setDocument,
		document,
		docElem,
		documentIsHTML,
		rbuggyQSA,
		rbuggyMatches,
		matches,
		contains,

		// Instance-specific data
		expando = "sizzle" + 1 * new Date(),
		preferredDoc = window.document,
		dirruns = 0,
		done = 0,
		classCache = createCache(),
		tokenCache = createCache(),
		compilerCache = createCache(),
		sortOrder = function( a, b ) {
			if ( a === b ) {
				hasDuplicate = true;
			}
			return 0;
		},

		// General-purpose constants
		MAX_NEGATIVE = 1 << 31,

		// Instance methods
		hasOwn = ({}).hasOwnProperty,
		arr = [],
		pop = arr.pop,
		push_native = arr.push,
		push = arr.push,
		slice = arr.slice,
		// Use a stripped-down indexOf as it's faster than native
		// http://jsperf.com/thor-indexof-vs-for/5
		indexOf = function( list, elem ) {
			var i = 0,
				len = list.length;
			for ( ; i < len; i++ ) {
				if ( list[i] === elem ) {
					return i;
				}
			}
			return -1;
		},

		booleans = "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",

		// Regular expressions

		// http://www.w3.org/TR/css3-selectors/#whitespace
		whitespace = "[\\x20\\t\\r\\n\\f]",

		// http://www.w3.org/TR/CSS21/syndata.html#value-def-identifier
		identifier = "(?:\\\\.|[\\w-]|[^\\x00-\\xa0])+",

		// Attribute selectors: http://www.w3.org/TR/selectors/#attribute-selectors
		attributes = "\\[" + whitespace + "*(" + identifier + ")(?:" + whitespace +
			// Operator (capture 2)
			"*([*^$|!~]?=)" + whitespace +
			// "Attribute values must be CSS identifiers [capture 5] or strings [capture 3 or capture 4]"
			"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|(" + identifier + "))|)" + whitespace +
			"*\\]",

		pseudos = ":(" + identifier + ")(?:\\((" +
			// To reduce the number of selectors needing tokenize in the preFilter, prefer arguments:
			// 1. quoted (capture 3; capture 4 or capture 5)
			"('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|" +
			// 2. simple (capture 6)
			"((?:\\\\.|[^\\\\()[\\]]|" + attributes + ")*)|" +
			// 3. anything else (capture 2)
			".*" +
			")\\)|)",

		// Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter
		rwhitespace = new RegExp( whitespace + "+", "g" ),
		rtrim = new RegExp( "^" + whitespace + "+|((?:^|[^\\\\])(?:\\\\.)*)" + whitespace + "+$", "g" ),

		rcomma = new RegExp( "^" + whitespace + "*," + whitespace + "*" ),
		rcombinators = new RegExp( "^" + whitespace + "*([>+~]|" + whitespace + ")" + whitespace + "*" ),

		rattributeQuotes = new RegExp( "=" + whitespace + "*([^\\]'\"]*?)" + whitespace + "*\\]", "g" ),

		rpseudo = new RegExp( pseudos ),
		ridentifier = new RegExp( "^" + identifier + "$" ),

		matchExpr = {
			"ID": new RegExp( "^#(" + identifier + ")" ),
			"CLASS": new RegExp( "^\\.(" + identifier + ")" ),
			"TAG": new RegExp( "^(" + identifier + "|[*])" ),
			"ATTR": new RegExp( "^" + attributes ),
			"PSEUDO": new RegExp( "^" + pseudos ),
			"CHILD": new RegExp( "^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" + whitespace +
				"*(even|odd|(([+-]|)(\\d*)n|)" + whitespace + "*(?:([+-]|)" + whitespace +
				"*(\\d+)|))" + whitespace + "*\\)|)", "i" ),
			"bool": new RegExp( "^(?:" + booleans + ")$", "i" ),
			// For use in libraries implementing .is()
			// We use this for POS matching in `select`
			"needsContext": new RegExp( "^" + whitespace + "*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" +
				whitespace + "*((?:-\\d)?\\d*)" + whitespace + "*\\)|)(?=[^-]|$)", "i" )
		},

		rinputs = /^(?:input|select|textarea|button)$/i,
		rheader = /^h\d$/i,

		rnative = /^[^{]+\{\s*\[native \w/,

		// Easily-parseable/retrievable ID or TAG or CLASS selectors
		rquickExpr = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,

		rsibling = /[+~]/,
		rescape = /'|\\/g,

		// CSS escapes http://www.w3.org/TR/CSS21/syndata.html#escaped-characters
		runescape = new RegExp( "\\\\([\\da-f]{1,6}" + whitespace + "?|(" + whitespace + ")|.)", "ig" ),
		funescape = function( _, escaped, escapedWhitespace ) {
			var high = "0x" + escaped - 0x10000;
			// NaN means non-codepoint
			// Support: Firefox<24
			// Workaround erroneous numeric interpretation of +"0x"
			return high !== high || escapedWhitespace ?
				escaped :
				high < 0 ?
					// BMP codepoint
					String.fromCharCode( high + 0x10000 ) :
					// Supplemental Plane codepoint (surrogate pair)
					String.fromCharCode( high >> 10 | 0xD800, high & 0x3FF | 0xDC00 );
		},

		// Used for iframes
		// See setDocument()
		// Removing the function wrapper causes a "Permission Denied"
		// error in IE
		unloadHandler = function() {
			setDocument();
		};

	// Optimize for push.apply( _, NodeList )
	try {
		push.apply(
			(arr = slice.call( preferredDoc.childNodes )),
			preferredDoc.childNodes
		);
		// Support: Android<4.0
		// Detect silently failing push.apply
		arr[ preferredDoc.childNodes.length ].nodeType;
	} catch ( e ) {
		push = { apply: arr.length ?

			// Leverage slice if possible
			function( target, els ) {
				push_native.apply( target, slice.call(els) );
			} :

			// Support: IE<9
			// Otherwise append directly
			function( target, els ) {
				var j = target.length,
					i = 0;
				// Can't trust NodeList.length
				while ( (target[j++] = els[i++]) ) {}
				target.length = j - 1;
			}
		};
	}

	function Sizzle( selector, context, results, seed ) {
		var m, i, elem, nid, nidselect, match, groups, newSelector,
			newContext = context && context.ownerDocument,

			// nodeType defaults to 9, since context defaults to document
			nodeType = context ? context.nodeType : 9;

		results = results || [];

		// Return early from calls with invalid selector or context
		if ( typeof selector !== "string" || !selector ||
			nodeType !== 1 && nodeType !== 9 && nodeType !== 11 ) {

			return results;
		}

		// Try to shortcut find operations (as opposed to filters) in HTML documents
		if ( !seed ) {

			if ( ( context ? context.ownerDocument || context : preferredDoc ) !== document ) {
				setDocument( context );
			}
			context = context || document;

			if ( documentIsHTML ) {

				// If the selector is sufficiently simple, try using a "get*By*" DOM method
				// (excepting DocumentFragment context, where the methods don't exist)
				if ( nodeType !== 11 && (match = rquickExpr.exec( selector )) ) {

					// ID selector
					if ( (m = match[1]) ) {

						// Document context
						if ( nodeType === 9 ) {
							if ( (elem = context.getElementById( m )) ) {

								// Support: IE, Opera, Webkit
								// TODO: identify versions
								// getElementById can match elements by name instead of ID
								if ( elem.id === m ) {
									results.push( elem );
									return results;
								}
							} else {
								return results;
							}

						// Element context
						} else {

							// Support: IE, Opera, Webkit
							// TODO: identify versions
							// getElementById can match elements by name instead of ID
							if ( newContext && (elem = newContext.getElementById( m )) &&
								contains( context, elem ) &&
								elem.id === m ) {

								results.push( elem );
								return results;
							}
						}

					// Type selector
					} else if ( match[2] ) {
						push.apply( results, context.getElementsByTagName( selector ) );
						return results;

					// Class selector
					} else if ( (m = match[3]) && support.getElementsByClassName &&
						context.getElementsByClassName ) {

						push.apply( results, context.getElementsByClassName( m ) );
						return results;
					}
				}

				// Take advantage of querySelectorAll
				if ( support.qsa &&
					!compilerCache[ selector + " " ] &&
					(!rbuggyQSA || !rbuggyQSA.test( selector )) ) {

					if ( nodeType !== 1 ) {
						newContext = context;
						newSelector = selector;

					// qSA looks outside Element context, which is not what we want
					// Thanks to Andrew Dupont for this workaround technique
					// Support: IE <=8
					// Exclude object elements
					} else if ( context.nodeName.toLowerCase() !== "object" ) {

						// Capture the context ID, setting it first if necessary
						if ( (nid = context.getAttribute( "id" )) ) {
							nid = nid.replace( rescape, "\\$&" );
						} else {
							context.setAttribute( "id", (nid = expando) );
						}

						// Prefix every selector in the list
						groups = tokenize( selector );
						i = groups.length;
						nidselect = ridentifier.test( nid ) ? "#" + nid : "[id='" + nid + "']";
						while ( i-- ) {
							groups[i] = nidselect + " " + toSelector( groups[i] );
						}
						newSelector = groups.join( "," );

						// Expand context for sibling selectors
						newContext = rsibling.test( selector ) && testContext( context.parentNode ) ||
							context;
					}

					if ( newSelector ) {
						try {
							push.apply( results,
								newContext.querySelectorAll( newSelector )
							);
							return results;
						} catch ( qsaError ) {
						} finally {
							if ( nid === expando ) {
								context.removeAttribute( "id" );
							}
						}
					}
				}
			}
		}

		// All others
		return select( selector.replace( rtrim, "$1" ), context, results, seed );
	}

	/**
	 * Create key-value caches of limited size
	 * @returns {function(string, object)} Returns the Object data after storing it on itself with
	 *	property name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)
	 *	deleting the oldest entry
	 */
	function createCache() {
		var keys = [];

		function cache( key, value ) {
			// Use (key + " ") to avoid collision with native prototype properties (see Issue #157)
			if ( keys.push( key + " " ) > Expr.cacheLength ) {
				// Only keep the most recent entries
				delete cache[ keys.shift() ];
			}
			return (cache[ key + " " ] = value);
		}
		return cache;
	}

	/**
	 * Mark a function for special use by Sizzle
	 * @param {Function} fn The function to mark
	 */
	function markFunction( fn ) {
		fn[ expando ] = true;
		return fn;
	}

	/**
	 * Support testing using an element
	 * @param {Function} fn Passed the created div and expects a boolean result
	 */
	function assert( fn ) {
		var div = document.createElement("div");

		try {
			return !!fn( div );
		} catch (e) {
			return false;
		} finally {
			// Remove from its parent by default
			if ( div.parentNode ) {
				div.parentNode.removeChild( div );
			}
			// release memory in IE
			div = null;
		}
	}

	/**
	 * Adds the same handler for all of the specified attrs
	 * @param {String} attrs Pipe-separated list of attributes
	 * @param {Function} handler The method that will be applied
	 */
	function addHandle( attrs, handler ) {
		var arr = attrs.split("|"),
			i = arr.length;

		while ( i-- ) {
			Expr.attrHandle[ arr[i] ] = handler;
		}
	}

	/**
	 * Checks document order of two siblings
	 * @param {Element} a
	 * @param {Element} b
	 * @returns {Number} Returns less than 0 if a precedes b, greater than 0 if a follows b
	 */
	function siblingCheck( a, b ) {
		var cur = b && a,
			diff = cur && a.nodeType === 1 && b.nodeType === 1 &&
				( ~b.sourceIndex || MAX_NEGATIVE ) -
				( ~a.sourceIndex || MAX_NEGATIVE );

		// Use IE sourceIndex if available on both nodes
		if ( diff ) {
			return diff;
		}

		// Check if b follows a
		if ( cur ) {
			while ( (cur = cur.nextSibling) ) {
				if ( cur === b ) {
					return -1;
				}
			}
		}

		return a ? 1 : -1;
	}

	/**
	 * Returns a function to use in pseudos for input types
	 * @param {String} type
	 */
	function createInputPseudo( type ) {
		return function( elem ) {
			var name = elem.nodeName.toLowerCase();
			return name === "input" && elem.type === type;
		};
	}

	/**
	 * Returns a function to use in pseudos for buttons
	 * @param {String} type
	 */
	function createButtonPseudo( type ) {
		return function( elem ) {
			var name = elem.nodeName.toLowerCase();
			return (name === "input" || name === "button") && elem.type === type;
		};
	}

	/**
	 * Returns a function to use in pseudos for positionals
	 * @param {Function} fn
	 */
	function createPositionalPseudo( fn ) {
		return markFunction(function( argument ) {
			argument = +argument;
			return markFunction(function( seed, matches ) {
				var j,
					matchIndexes = fn( [], seed.length, argument ),
					i = matchIndexes.length;

				// Match elements found at the specified indexes
				while ( i-- ) {
					if ( seed[ (j = matchIndexes[i]) ] ) {
						seed[j] = !(matches[j] = seed[j]);
					}
				}
			});
		});
	}

	/**
	 * Checks a node for validity as a Sizzle context
	 * @param {Element|Object=} context
	 * @returns {Element|Object|Boolean} The input node if acceptable, otherwise a falsy value
	 */
	function testContext( context ) {
		return context && typeof context.getElementsByTagName !== "undefined" && context;
	}

	// Expose support vars for convenience
	support = Sizzle.support = {};

	/**
	 * Detects XML nodes
	 * @param {Element|Object} elem An element or a document
	 * @returns {Boolean} True iff elem is a non-HTML XML node
	 */
	isXML = Sizzle.isXML = function( elem ) {
		// documentElement is verified for cases where it doesn't yet exist
		// (such as loading iframes in IE - #4833)
		var documentElement = elem && (elem.ownerDocument || elem).documentElement;
		return documentElement ? documentElement.nodeName !== "HTML" : false;
	};

	/**
	 * Sets document-related variables once based on the current document
	 * @param {Element|Object} [doc] An element or document object to use to set the document
	 * @returns {Object} Returns the current document
	 */
	setDocument = Sizzle.setDocument = function( node ) {
		var hasCompare, parent,
			doc = node ? node.ownerDocument || node : preferredDoc;

		// Return early if doc is invalid or already selected
		if ( doc === document || doc.nodeType !== 9 || !doc.documentElement ) {
			return document;
		}

		// Update global variables
		document = doc;
		docElem = document.documentElement;
		documentIsHTML = !isXML( document );

		// Support: IE 9-11, Edge
		// Accessing iframe documents after unload throws "permission denied" errors (jQuery #13936)
		if ( (parent = document.defaultView) && parent.top !== parent ) {
			// Support: IE 11
			if ( parent.addEventListener ) {
				parent.addEventListener( "unload", unloadHandler, false );

			// Support: IE 9 - 10 only
			} else if ( parent.attachEvent ) {
				parent.attachEvent( "onunload", unloadHandler );
			}
		}

		/* Attributes
		---------------------------------------------------------------------- */

		// Support: IE<8
		// Verify that getAttribute really returns attributes and not properties
		// (excepting IE8 booleans)
		support.attributes = assert(function( div ) {
			div.className = "i";
			return !div.getAttribute("className");
		});

		/* getElement(s)By*
		---------------------------------------------------------------------- */

		// Check if getElementsByTagName("*") returns only elements
		support.getElementsByTagName = assert(function( div ) {
			div.appendChild( document.createComment("") );
			return !div.getElementsByTagName("*").length;
		});

		// Support: IE<9
		support.getElementsByClassName = rnative.test( document.getElementsByClassName );

		// Support: IE<10
		// Check if getElementById returns elements by name
		// The broken getElementById methods don't pick up programatically-set names,
		// so use a roundabout getElementsByName test
		support.getById = assert(function( div ) {
			docElem.appendChild( div ).id = expando;
			return !document.getElementsByName || !document.getElementsByName( expando ).length;
		});

		// ID find and filter
		if ( support.getById ) {
			Expr.find["ID"] = function( id, context ) {
				if ( typeof context.getElementById !== "undefined" && documentIsHTML ) {
					var m = context.getElementById( id );
					return m ? [ m ] : [];
				}
			};
			Expr.filter["ID"] = function( id ) {
				var attrId = id.replace( runescape, funescape );
				return function( elem ) {
					return elem.getAttribute("id") === attrId;
				};
			};
		} else {
			// Support: IE6/7
			// getElementById is not reliable as a find shortcut
			delete Expr.find["ID"];

			Expr.filter["ID"] =  function( id ) {
				var attrId = id.replace( runescape, funescape );
				return function( elem ) {
					var node = typeof elem.getAttributeNode !== "undefined" &&
						elem.getAttributeNode("id");
					return node && node.value === attrId;
				};
			};
		}

		// Tag
		Expr.find["TAG"] = support.getElementsByTagName ?
			function( tag, context ) {
				if ( typeof context.getElementsByTagName !== "undefined" ) {
					return context.getElementsByTagName( tag );

				// DocumentFragment nodes don't have gEBTN
				} else if ( support.qsa ) {
					return context.querySelectorAll( tag );
				}
			} :

			function( tag, context ) {
				var elem,
					tmp = [],
					i = 0,
					// By happy coincidence, a (broken) gEBTN appears on DocumentFragment nodes too
					results = context.getElementsByTagName( tag );

				// Filter out possible comments
				if ( tag === "*" ) {
					while ( (elem = results[i++]) ) {
						if ( elem.nodeType === 1 ) {
							tmp.push( elem );
						}
					}

					return tmp;
				}
				return results;
			};

		// Class
		Expr.find["CLASS"] = support.getElementsByClassName && function( className, context ) {
			if ( typeof context.getElementsByClassName !== "undefined" && documentIsHTML ) {
				return context.getElementsByClassName( className );
			}
		};

		/* QSA/matchesSelector
		---------------------------------------------------------------------- */

		// QSA and matchesSelector support

		// matchesSelector(:active) reports false when true (IE9/Opera 11.5)
		rbuggyMatches = [];

		// qSa(:focus) reports false when true (Chrome 21)
		// We allow this because of a bug in IE8/9 that throws an error
		// whenever `document.activeElement` is accessed on an iframe
		// So, we allow :focus to pass through QSA all the time to avoid the IE error
		// See http://bugs.jquery.com/ticket/13378
		rbuggyQSA = [];

		if ( (support.qsa = rnative.test( document.querySelectorAll )) ) {
			// Build QSA regex
			// Regex strategy adopted from Diego Perini
			assert(function( div ) {
				// Select is set to empty string on purpose
				// This is to test IE's treatment of not explicitly
				// setting a boolean content attribute,
				// since its presence should be enough
				// http://bugs.jquery.com/ticket/12359
				docElem.appendChild( div ).innerHTML = "<a id='" + expando + "'></a>" +
					"<select id='" + expando + "-\r\\' msallowcapture=''>" +
					"<option selected=''></option></select>";

				// Support: IE8, Opera 11-12.16
				// Nothing should be selected when empty strings follow ^= or $= or *=
				// The test attribute must be unknown in Opera but "safe" for WinRT
				// http://msdn.microsoft.com/en-us/library/ie/hh465388.aspx#attribute_section
				if ( div.querySelectorAll("[msallowcapture^='']").length ) {
					rbuggyQSA.push( "[*^$]=" + whitespace + "*(?:''|\"\")" );
				}

				// Support: IE8
				// Boolean attributes and "value" are not treated correctly
				if ( !div.querySelectorAll("[selected]").length ) {
					rbuggyQSA.push( "\\[" + whitespace + "*(?:value|" + booleans + ")" );
				}

				// Support: Chrome<29, Android<4.4, Safari<7.0+, iOS<7.0+, PhantomJS<1.9.8+
				if ( !div.querySelectorAll( "[id~=" + expando + "-]" ).length ) {
					rbuggyQSA.push("~=");
				}

				// Webkit/Opera - :checked should return selected option elements
				// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked
				// IE8 throws error here and will not see later tests
				if ( !div.querySelectorAll(":checked").length ) {
					rbuggyQSA.push(":checked");
				}

				// Support: Safari 8+, iOS 8+
				// https://bugs.webkit.org/show_bug.cgi?id=136851
				// In-page `selector#id sibing-combinator selector` fails
				if ( !div.querySelectorAll( "a#" + expando + "+*" ).length ) {
					rbuggyQSA.push(".#.+[+~]");
				}
			});

			assert(function( div ) {
				// Support: Windows 8 Native Apps
				// The type and name attributes are restricted during .innerHTML assignment
				var input = document.createElement("input");
				input.setAttribute( "type", "hidden" );
				div.appendChild( input ).setAttribute( "name", "D" );

				// Support: IE8
				// Enforce case-sensitivity of name attribute
				if ( div.querySelectorAll("[name=d]").length ) {
					rbuggyQSA.push( "name" + whitespace + "*[*^$|!~]?=" );
				}

				// FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)
				// IE8 throws error here and will not see later tests
				if ( !div.querySelectorAll(":enabled").length ) {
					rbuggyQSA.push( ":enabled", ":disabled" );
				}

				// Opera 10-11 does not throw on post-comma invalid pseudos
				div.querySelectorAll("*,:x");
				rbuggyQSA.push(",.*:");
			});
		}

		if ( (support.matchesSelector = rnative.test( (matches = docElem.matches ||
			docElem.webkitMatchesSelector ||
			docElem.mozMatchesSelector ||
			docElem.oMatchesSelector ||
			docElem.msMatchesSelector) )) ) {

			assert(function( div ) {
				// Check to see if it's possible to do matchesSelector
				// on a disconnected node (IE 9)
				support.disconnectedMatch = matches.call( div, "div" );

				// This should fail with an exception
				// Gecko does not error, returns false instead
				matches.call( div, "[s!='']:x" );
				rbuggyMatches.push( "!=", pseudos );
			});
		}

		rbuggyQSA = rbuggyQSA.length && new RegExp( rbuggyQSA.join("|") );
		rbuggyMatches = rbuggyMatches.length && new RegExp( rbuggyMatches.join("|") );

		/* Contains
		---------------------------------------------------------------------- */
		hasCompare = rnative.test( docElem.compareDocumentPosition );

		// Element contains another
		// Purposefully self-exclusive
		// As in, an element does not contain itself
		contains = hasCompare || rnative.test( docElem.contains ) ?
			function( a, b ) {
				var adown = a.nodeType === 9 ? a.documentElement : a,
					bup = b && b.parentNode;
				return a === bup || !!( bup && bup.nodeType === 1 && (
					adown.contains ?
						adown.contains( bup ) :
						a.compareDocumentPosition && a.compareDocumentPosition( bup ) & 16
				));
			} :
			function( a, b ) {
				if ( b ) {
					while ( (b = b.parentNode) ) {
						if ( b === a ) {
							return true;
						}
					}
				}
				return false;
			};

		/* Sorting
		---------------------------------------------------------------------- */

		// Document order sorting
		sortOrder = hasCompare ?
		function( a, b ) {

			// Flag for duplicate removal
			if ( a === b ) {
				hasDuplicate = true;
				return 0;
			}

			// Sort on method existence if only one input has compareDocumentPosition
			var compare = !a.compareDocumentPosition - !b.compareDocumentPosition;
			if ( compare ) {
				return compare;
			}

			// Calculate position if both inputs belong to the same document
			compare = ( a.ownerDocument || a ) === ( b.ownerDocument || b ) ?
				a.compareDocumentPosition( b ) :

				// Otherwise we know they are disconnected
				1;

			// Disconnected nodes
			if ( compare & 1 ||
				(!support.sortDetached && b.compareDocumentPosition( a ) === compare) ) {

				// Choose the first element that is related to our preferred document
				if ( a === document || a.ownerDocument === preferredDoc && contains(preferredDoc, a) ) {
					return -1;
				}
				if ( b === document || b.ownerDocument === preferredDoc && contains(preferredDoc, b) ) {
					return 1;
				}

				// Maintain original order
				return sortInput ?
					( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :
					0;
			}

			return compare & 4 ? -1 : 1;
		} :
		function( a, b ) {
			// Exit early if the nodes are identical
			if ( a === b ) {
				hasDuplicate = true;
				return 0;
			}

			var cur,
				i = 0,
				aup = a.parentNode,
				bup = b.parentNode,
				ap = [ a ],
				bp = [ b ];

			// Parentless nodes are either documents or disconnected
			if ( !aup || !bup ) {
				return a === document ? -1 :
					b === document ? 1 :
					aup ? -1 :
					bup ? 1 :
					sortInput ?
					( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :
					0;

			// If the nodes are siblings, we can do a quick check
			} else if ( aup === bup ) {
				return siblingCheck( a, b );
			}

			// Otherwise we need full lists of their ancestors for comparison
			cur = a;
			while ( (cur = cur.parentNode) ) {
				ap.unshift( cur );
			}
			cur = b;
			while ( (cur = cur.parentNode) ) {
				bp.unshift( cur );
			}

			// Walk down the tree looking for a discrepancy
			while ( ap[i] === bp[i] ) {
				i++;
			}

			return i ?
				// Do a sibling check if the nodes have a common ancestor
				siblingCheck( ap[i], bp[i] ) :

				// Otherwise nodes in our document sort first
				ap[i] === preferredDoc ? -1 :
				bp[i] === preferredDoc ? 1 :
				0;
		};

		return document;
	};

	Sizzle.matches = function( expr, elements ) {
		return Sizzle( expr, null, null, elements );
	};

	Sizzle.matchesSelector = function( elem, expr ) {
		// Set document vars if needed
		if ( ( elem.ownerDocument || elem ) !== document ) {
			setDocument( elem );
		}

		// Make sure that attribute selectors are quoted
		expr = expr.replace( rattributeQuotes, "='$1']" );

		if ( support.matchesSelector && documentIsHTML &&
			!compilerCache[ expr + " " ] &&
			( !rbuggyMatches || !rbuggyMatches.test( expr ) ) &&
			( !rbuggyQSA     || !rbuggyQSA.test( expr ) ) ) {

			try {
				var ret = matches.call( elem, expr );

				// IE 9's matchesSelector returns false on disconnected nodes
				if ( ret || support.disconnectedMatch ||
						// As well, disconnected nodes are said to be in a document
						// fragment in IE 9
						elem.document && elem.document.nodeType !== 11 ) {
					return ret;
				}
			} catch (e) {}
		}

		return Sizzle( expr, document, null, [ elem ] ).length > 0;
	};

	Sizzle.contains = function( context, elem ) {
		// Set document vars if needed
		if ( ( context.ownerDocument || context ) !== document ) {
			setDocument( context );
		}
		return contains( context, elem );
	};

	Sizzle.attr = function( elem, name ) {
		// Set document vars if needed
		if ( ( elem.ownerDocument || elem ) !== document ) {
			setDocument( elem );
		}

		var fn = Expr.attrHandle[ name.toLowerCase() ],
			// Don't get fooled by Object.prototype properties (jQuery #13807)
			val = fn && hasOwn.call( Expr.attrHandle, name.toLowerCase() ) ?
				fn( elem, name, !documentIsHTML ) :
				undefined;

		return val !== undefined ?
			val :
			support.attributes || !documentIsHTML ?
				elem.getAttribute( name ) :
				(val = elem.getAttributeNode(name)) && val.specified ?
					val.value :
					null;
	};

	Sizzle.error = function( msg ) {
		throw new Error( "Syntax error, unrecognized expression: " + msg );
	};

	/**
	 * Document sorting and removing duplicates
	 * @param {ArrayLike} results
	 */
	Sizzle.uniqueSort = function( results ) {
		var elem,
			duplicates = [],
			j = 0,
			i = 0;

		// Unless we *know* we can detect duplicates, assume their presence
		hasDuplicate = !support.detectDuplicates;
		sortInput = !support.sortStable && results.slice( 0 );
		results.sort( sortOrder );

		if ( hasDuplicate ) {
			while ( (elem = results[i++]) ) {
				if ( elem === results[ i ] ) {
					j = duplicates.push( i );
				}
			}
			while ( j-- ) {
				results.splice( duplicates[ j ], 1 );
			}
		}

		// Clear input after sorting to release objects
		// See https://github.com/jquery/sizzle/pull/225
		sortInput = null;

		return results;
	};

	/**
	 * Utility function for retrieving the text value of an array of DOM nodes
	 * @param {Array|Element} elem
	 */
	getText = Sizzle.getText = function( elem ) {
		var node,
			ret = "",
			i = 0,
			nodeType = elem.nodeType;

		if ( !nodeType ) {
			// If no nodeType, this is expected to be an array
			while ( (node = elem[i++]) ) {
				// Do not traverse comment nodes
				ret += getText( node );
			}
		} else if ( nodeType === 1 || nodeType === 9 || nodeType === 11 ) {
			// Use textContent for elements
			// innerText usage removed for consistency of new lines (jQuery #11153)
			if ( typeof elem.textContent === "string" ) {
				return elem.textContent;
			} else {
				// Traverse its children
				for ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {
					ret += getText( elem );
				}
			}
		} else if ( nodeType === 3 || nodeType === 4 ) {
			return elem.nodeValue;
		}
		// Do not include comment or processing instruction nodes

		return ret;
	};

	Expr = Sizzle.selectors = {

		// Can be adjusted by the user
		cacheLength: 50,

		createPseudo: markFunction,

		match: matchExpr,

		attrHandle: {},

		find: {},

		relative: {
			">": { dir: "parentNode", first: true },
			" ": { dir: "parentNode" },
			"+": { dir: "previousSibling", first: true },
			"~": { dir: "previousSibling" }
		},

		preFilter: {
			"ATTR": function( match ) {
				match[1] = match[1].replace( runescape, funescape );

				// Move the given value to match[3] whether quoted or unquoted
				match[3] = ( match[3] || match[4] || match[5] || "" ).replace( runescape, funescape );

				if ( match[2] === "~=" ) {
					match[3] = " " + match[3] + " ";
				}

				return match.slice( 0, 4 );
			},

			"CHILD": function( match ) {
				/* matches from matchExpr["CHILD"]
					1 type (only|nth|...)
					2 what (child|of-type)
					3 argument (even|odd|\d*|\d*n([+-]\d+)?|...)
					4 xn-component of xn+y argument ([+-]?\d*n|)
					5 sign of xn-component
					6 x of xn-component
					7 sign of y-component
					8 y of y-component
				*/
				match[1] = match[1].toLowerCase();

				if ( match[1].slice( 0, 3 ) === "nth" ) {
					// nth-* requires argument
					if ( !match[3] ) {
						Sizzle.error( match[0] );
					}

					// numeric x and y parameters for Expr.filter.CHILD
					// remember that false/true cast respectively to 0/1
					match[4] = +( match[4] ? match[5] + (match[6] || 1) : 2 * ( match[3] === "even" || match[3] === "odd" ) );
					match[5] = +( ( match[7] + match[8] ) || match[3] === "odd" );

				// other types prohibit arguments
				} else if ( match[3] ) {
					Sizzle.error( match[0] );
				}

				return match;
			},

			"PSEUDO": function( match ) {
				var excess,
					unquoted = !match[6] && match[2];

				if ( matchExpr["CHILD"].test( match[0] ) ) {
					return null;
				}

				// Accept quoted arguments as-is
				if ( match[3] ) {
					match[2] = match[4] || match[5] || "";

				// Strip excess characters from unquoted arguments
				} else if ( unquoted && rpseudo.test( unquoted ) &&
					// Get excess from tokenize (recursively)
					(excess = tokenize( unquoted, true )) &&
					// advance to the next closing parenthesis
					(excess = unquoted.indexOf( ")", unquoted.length - excess ) - unquoted.length) ) {

					// excess is a negative index
					match[0] = match[0].slice( 0, excess );
					match[2] = unquoted.slice( 0, excess );
				}

				// Return only captures needed by the pseudo filter method (type and argument)
				return match.slice( 0, 3 );
			}
		},

		filter: {

			"TAG": function( nodeNameSelector ) {
				var nodeName = nodeNameSelector.replace( runescape, funescape ).toLowerCase();
				return nodeNameSelector === "*" ?
					function() { return true; } :
					function( elem ) {
						return elem.nodeName && elem.nodeName.toLowerCase() === nodeName;
					};
			},

			"CLASS": function( className ) {
				var pattern = classCache[ className + " " ];

				return pattern ||
					(pattern = new RegExp( "(^|" + whitespace + ")" + className + "(" + whitespace + "|$)" )) &&
					classCache( className, function( elem ) {
						return pattern.test( typeof elem.className === "string" && elem.className || typeof elem.getAttribute !== "undefined" && elem.getAttribute("class") || "" );
					});
			},

			"ATTR": function( name, operator, check ) {
				return function( elem ) {
					var result = Sizzle.attr( elem, name );

					if ( result == null ) {
						return operator === "!=";
					}
					if ( !operator ) {
						return true;
					}

					result += "";

					return operator === "=" ? result === check :
						operator === "!=" ? result !== check :
						operator === "^=" ? check && result.indexOf( check ) === 0 :
						operator === "*=" ? check && result.indexOf( check ) > -1 :
						operator === "$=" ? check && result.slice( -check.length ) === check :
						operator === "~=" ? ( " " + result.replace( rwhitespace, " " ) + " " ).indexOf( check ) > -1 :
						operator === "|=" ? result === check || result.slice( 0, check.length + 1 ) === check + "-" :
						false;
				};
			},

			"CHILD": function( type, what, argument, first, last ) {
				var simple = type.slice( 0, 3 ) !== "nth",
					forward = type.slice( -4 ) !== "last",
					ofType = what === "of-type";

				return first === 1 && last === 0 ?

					// Shortcut for :nth-*(n)
					function( elem ) {
						return !!elem.parentNode;
					} :

					function( elem, context, xml ) {
						var cache, uniqueCache, outerCache, node, nodeIndex, start,
							dir = simple !== forward ? "nextSibling" : "previousSibling",
							parent = elem.parentNode,
							name = ofType && elem.nodeName.toLowerCase(),
							useCache = !xml && !ofType,
							diff = false;

						if ( parent ) {

							// :(first|last|only)-(child|of-type)
							if ( simple ) {
								while ( dir ) {
									node = elem;
									while ( (node = node[ dir ]) ) {
										if ( ofType ?
											node.nodeName.toLowerCase() === name :
											node.nodeType === 1 ) {

											return false;
										}
									}
									// Reverse direction for :only-* (if we haven't yet done so)
									start = dir = type === "only" && !start && "nextSibling";
								}
								return true;
							}

							start = [ forward ? parent.firstChild : parent.lastChild ];

							// non-xml :nth-child(...) stores cache data on `parent`
							if ( forward && useCache ) {

								// Seek `elem` from a previously-cached index

								// ...in a gzip-friendly way
								node = parent;
								outerCache = node[ expando ] || (node[ expando ] = {});

								// Support: IE <9 only
								// Defend against cloned attroperties (jQuery gh-1709)
								uniqueCache = outerCache[ node.uniqueID ] ||
									(outerCache[ node.uniqueID ] = {});

								cache = uniqueCache[ type ] || [];
								nodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];
								diff = nodeIndex && cache[ 2 ];
								node = nodeIndex && parent.childNodes[ nodeIndex ];

								while ( (node = ++nodeIndex && node && node[ dir ] ||

									// Fallback to seeking `elem` from the start
									(diff = nodeIndex = 0) || start.pop()) ) {

									// When found, cache indexes on `parent` and break
									if ( node.nodeType === 1 && ++diff && node === elem ) {
										uniqueCache[ type ] = [ dirruns, nodeIndex, diff ];
										break;
									}
								}

							} else {
								// Use previously-cached element index if available
								if ( useCache ) {
									// ...in a gzip-friendly way
									node = elem;
									outerCache = node[ expando ] || (node[ expando ] = {});

									// Support: IE <9 only
									// Defend against cloned attroperties (jQuery gh-1709)
									uniqueCache = outerCache[ node.uniqueID ] ||
										(outerCache[ node.uniqueID ] = {});

									cache = uniqueCache[ type ] || [];
									nodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];
									diff = nodeIndex;
								}

								// xml :nth-child(...)
								// or :nth-last-child(...) or :nth(-last)?-of-type(...)
								if ( diff === false ) {
									// Use the same loop as above to seek `elem` from the start
									while ( (node = ++nodeIndex && node && node[ dir ] ||
										(diff = nodeIndex = 0) || start.pop()) ) {

										if ( ( ofType ?
											node.nodeName.toLowerCase() === name :
											node.nodeType === 1 ) &&
											++diff ) {

											// Cache the index of each encountered element
											if ( useCache ) {
												outerCache = node[ expando ] || (node[ expando ] = {});

												// Support: IE <9 only
												// Defend against cloned attroperties (jQuery gh-1709)
												uniqueCache = outerCache[ node.uniqueID ] ||
													(outerCache[ node.uniqueID ] = {});

												uniqueCache[ type ] = [ dirruns, diff ];
											}

											if ( node === elem ) {
												break;
											}
										}
									}
								}
							}

							// Incorporate the offset, then check against cycle size
							diff -= last;
							return diff === first || ( diff % first === 0 && diff / first >= 0 );
						}
					};
			},

			"PSEUDO": function( pseudo, argument ) {
				// pseudo-class names are case-insensitive
				// http://www.w3.org/TR/selectors/#pseudo-classes
				// Prioritize by case sensitivity in case custom pseudos are added with uppercase letters
				// Remember that setFilters inherits from pseudos
				var args,
					fn = Expr.pseudos[ pseudo ] || Expr.setFilters[ pseudo.toLowerCase() ] ||
						Sizzle.error( "unsupported pseudo: " + pseudo );

				// The user may use createPseudo to indicate that
				// arguments are needed to create the filter function
				// just as Sizzle does
				if ( fn[ expando ] ) {
					return fn( argument );
				}

				// But maintain support for old signatures
				if ( fn.length > 1 ) {
					args = [ pseudo, pseudo, "", argument ];
					return Expr.setFilters.hasOwnProperty( pseudo.toLowerCase() ) ?
						markFunction(function( seed, matches ) {
							var idx,
								matched = fn( seed, argument ),
								i = matched.length;
							while ( i-- ) {
								idx = indexOf( seed, matched[i] );
								seed[ idx ] = !( matches[ idx ] = matched[i] );
							}
						}) :
						function( elem ) {
							return fn( elem, 0, args );
						};
				}

				return fn;
			}
		},

		pseudos: {
			// Potentially complex pseudos
			"not": markFunction(function( selector ) {
				// Trim the selector passed to compile
				// to avoid treating leading and trailing
				// spaces as combinators
				var input = [],
					results = [],
					matcher = compile( selector.replace( rtrim, "$1" ) );

				return matcher[ expando ] ?
					markFunction(function( seed, matches, context, xml ) {
						var elem,
							unmatched = matcher( seed, null, xml, [] ),
							i = seed.length;

						// Match elements unmatched by `matcher`
						while ( i-- ) {
							if ( (elem = unmatched[i]) ) {
								seed[i] = !(matches[i] = elem);
							}
						}
					}) :
					function( elem, context, xml ) {
						input[0] = elem;
						matcher( input, null, xml, results );
						// Don't keep the element (issue #299)
						input[0] = null;
						return !results.pop();
					};
			}),

			"has": markFunction(function( selector ) {
				return function( elem ) {
					return Sizzle( selector, elem ).length > 0;
				};
			}),

			"contains": markFunction(function( text ) {
				text = text.replace( runescape, funescape );
				return function( elem ) {
					return ( elem.textContent || elem.innerText || getText( elem ) ).indexOf( text ) > -1;
				};
			}),

			// "Whether an element is represented by a :lang() selector
			// is based solely on the element's language value
			// being equal to the identifier C,
			// or beginning with the identifier C immediately followed by "-".
			// The matching of C against the element's language value is performed case-insensitively.
			// The identifier C does not have to be a valid language name."
			// http://www.w3.org/TR/selectors/#lang-pseudo
			"lang": markFunction( function( lang ) {
				// lang value must be a valid identifier
				if ( !ridentifier.test(lang || "") ) {
					Sizzle.error( "unsupported lang: " + lang );
				}
				lang = lang.replace( runescape, funescape ).toLowerCase();
				return function( elem ) {
					var elemLang;
					do {
						if ( (elemLang = documentIsHTML ?
							elem.lang :
							elem.getAttribute("xml:lang") || elem.getAttribute("lang")) ) {

							elemLang = elemLang.toLowerCase();
							return elemLang === lang || elemLang.indexOf( lang + "-" ) === 0;
						}
					} while ( (elem = elem.parentNode) && elem.nodeType === 1 );
					return false;
				};
			}),

			// Miscellaneous
			"target": function( elem ) {
				var hash = window.location && window.location.hash;
				return hash && hash.slice( 1 ) === elem.id;
			},

			"root": function( elem ) {
				return elem === docElem;
			},

			"focus": function( elem ) {
				return elem === document.activeElement && (!document.hasFocus || document.hasFocus()) && !!(elem.type || elem.href || ~elem.tabIndex);
			},

			// Boolean properties
			"enabled": function( elem ) {
				return elem.disabled === false;
			},

			"disabled": function( elem ) {
				return elem.disabled === true;
			},

			"checked": function( elem ) {
				// In CSS3, :checked should return both checked and selected elements
				// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked
				var nodeName = elem.nodeName.toLowerCase();
				return (nodeName === "input" && !!elem.checked) || (nodeName === "option" && !!elem.selected);
			},

			"selected": function( elem ) {
				// Accessing this property makes selected-by-default
				// options in Safari work properly
				if ( elem.parentNode ) {
					elem.parentNode.selectedIndex;
				}

				return elem.selected === true;
			},

			// Contents
			"empty": function( elem ) {
				// http://www.w3.org/TR/selectors/#empty-pseudo
				// :empty is negated by element (1) or content nodes (text: 3; cdata: 4; entity ref: 5),
				//   but not by others (comment: 8; processing instruction: 7; etc.)
				// nodeType < 6 works because attributes (2) do not appear as children
				for ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {
					if ( elem.nodeType < 6 ) {
						return false;
					}
				}
				return true;
			},

			"parent": function( elem ) {
				return !Expr.pseudos["empty"]( elem );
			},

			// Element/input types
			"header": function( elem ) {
				return rheader.test( elem.nodeName );
			},

			"input": function( elem ) {
				return rinputs.test( elem.nodeName );
			},

			"button": function( elem ) {
				var name = elem.nodeName.toLowerCase();
				return name === "input" && elem.type === "button" || name === "button";
			},

			"text": function( elem ) {
				var attr;
				return elem.nodeName.toLowerCase() === "input" &&
					elem.type === "text" &&

					// Support: IE<8
					// New HTML5 attribute values (e.g., "search") appear with elem.type === "text"
					( (attr = elem.getAttribute("type")) == null || attr.toLowerCase() === "text" );
			},

			// Position-in-collection
			"first": createPositionalPseudo(function() {
				return [ 0 ];
			}),

			"last": createPositionalPseudo(function( matchIndexes, length ) {
				return [ length - 1 ];
			}),

			"eq": createPositionalPseudo(function( matchIndexes, length, argument ) {
				return [ argument < 0 ? argument + length : argument ];
			}),

			"even": createPositionalPseudo(function( matchIndexes, length ) {
				var i = 0;
				for ( ; i < length; i += 2 ) {
					matchIndexes.push( i );
				}
				return matchIndexes;
			}),

			"odd": createPositionalPseudo(function( matchIndexes, length ) {
				var i = 1;
				for ( ; i < length; i += 2 ) {
					matchIndexes.push( i );
				}
				return matchIndexes;
			}),

			"lt": createPositionalPseudo(function( matchIndexes, length, argument ) {
				var i = argument < 0 ? argument + length : argument;
				for ( ; --i >= 0; ) {
					matchIndexes.push( i );
				}
				return matchIndexes;
			}),

			"gt": createPositionalPseudo(function( matchIndexes, length, argument ) {
				var i = argument < 0 ? argument + length : argument;
				for ( ; ++i < length; ) {
					matchIndexes.push( i );
				}
				return matchIndexes;
			})
		}
	};

	Expr.pseudos["nth"] = Expr.pseudos["eq"];

	// Add button/input type pseudos
	for ( i in { radio: true, checkbox: true, file: true, password: true, image: true } ) {
		Expr.pseudos[ i ] = createInputPseudo( i );
	}
	for ( i in { submit: true, reset: true } ) {
		Expr.pseudos[ i ] = createButtonPseudo( i );
	}

	// Easy API for creating new setFilters
	function setFilters() {}
	setFilters.prototype = Expr.filters = Expr.pseudos;
	Expr.setFilters = new setFilters();

	tokenize = Sizzle.tokenize = function( selector, parseOnly ) {
		var matched, match, tokens, type,
			soFar, groups, preFilters,
			cached = tokenCache[ selector + " " ];

		if ( cached ) {
			return parseOnly ? 0 : cached.slice( 0 );
		}

		soFar = selector;
		groups = [];
		preFilters = Expr.preFilter;

		while ( soFar ) {

			// Comma and first run
			if ( !matched || (match = rcomma.exec( soFar )) ) {
				if ( match ) {
					// Don't consume trailing commas as valid
					soFar = soFar.slice( match[0].length ) || soFar;
				}
				groups.push( (tokens = []) );
			}

			matched = false;

			// Combinators
			if ( (match = rcombinators.exec( soFar )) ) {
				matched = match.shift();
				tokens.push({
					value: matched,
					// Cast descendant combinators to space
					type: match[0].replace( rtrim, " " )
				});
				soFar = soFar.slice( matched.length );
			}

			// Filters
			for ( type in Expr.filter ) {
				if ( (match = matchExpr[ type ].exec( soFar )) && (!preFilters[ type ] ||
					(match = preFilters[ type ]( match ))) ) {
					matched = match.shift();
					tokens.push({
						value: matched,
						type: type,
						matches: match
					});
					soFar = soFar.slice( matched.length );
				}
			}

			if ( !matched ) {
				break;
			}
		}

		// Return the length of the invalid excess
		// if we're just parsing
		// Otherwise, throw an error or return tokens
		return parseOnly ?
			soFar.length :
			soFar ?
				Sizzle.error( selector ) :
				// Cache the tokens
				tokenCache( selector, groups ).slice( 0 );
	};

	function toSelector( tokens ) {
		var i = 0,
			len = tokens.length,
			selector = "";
		for ( ; i < len; i++ ) {
			selector += tokens[i].value;
		}
		return selector;
	}

	function addCombinator( matcher, combinator, base ) {
		var dir = combinator.dir,
			checkNonElements = base && dir === "parentNode",
			doneName = done++;

		return combinator.first ?
			// Check against closest ancestor/preceding element
			function( elem, context, xml ) {
				while ( (elem = elem[ dir ]) ) {
					if ( elem.nodeType === 1 || checkNonElements ) {
						return matcher( elem, context, xml );
					}
				}
			} :

			// Check against all ancestor/preceding elements
			function( elem, context, xml ) {
				var oldCache, uniqueCache, outerCache,
					newCache = [ dirruns, doneName ];

				// We can't set arbitrary data on XML nodes, so they don't benefit from combinator caching
				if ( xml ) {
					while ( (elem = elem[ dir ]) ) {
						if ( elem.nodeType === 1 || checkNonElements ) {
							if ( matcher( elem, context, xml ) ) {
								return true;
							}
						}
					}
				} else {
					while ( (elem = elem[ dir ]) ) {
						if ( elem.nodeType === 1 || checkNonElements ) {
							outerCache = elem[ expando ] || (elem[ expando ] = {});

							// Support: IE <9 only
							// Defend against cloned attroperties (jQuery gh-1709)
							uniqueCache = outerCache[ elem.uniqueID ] || (outerCache[ elem.uniqueID ] = {});

							if ( (oldCache = uniqueCache[ dir ]) &&
								oldCache[ 0 ] === dirruns && oldCache[ 1 ] === doneName ) {

								// Assign to newCache so results back-propagate to previous elements
								return (newCache[ 2 ] = oldCache[ 2 ]);
							} else {
								// Reuse newcache so results back-propagate to previous elements
								uniqueCache[ dir ] = newCache;

								// A match means we're done; a fail means we have to keep checking
								if ( (newCache[ 2 ] = matcher( elem, context, xml )) ) {
									return true;
								}
							}
						}
					}
				}
			};
	}

	function elementMatcher( matchers ) {
		return matchers.length > 1 ?
			function( elem, context, xml ) {
				var i = matchers.length;
				while ( i-- ) {
					if ( !matchers[i]( elem, context, xml ) ) {
						return false;
					}
				}
				return true;
			} :
			matchers[0];
	}

	function multipleContexts( selector, contexts, results ) {
		var i = 0,
			len = contexts.length;
		for ( ; i < len; i++ ) {
			Sizzle( selector, contexts[i], results );
		}
		return results;
	}

	function condense( unmatched, map, filter, context, xml ) {
		var elem,
			newUnmatched = [],
			i = 0,
			len = unmatched.length,
			mapped = map != null;

		for ( ; i < len; i++ ) {
			if ( (elem = unmatched[i]) ) {
				if ( !filter || filter( elem, context, xml ) ) {
					newUnmatched.push( elem );
					if ( mapped ) {
						map.push( i );
					}
				}
			}
		}

		return newUnmatched;
	}

	function setMatcher( preFilter, selector, matcher, postFilter, postFinder, postSelector ) {
		if ( postFilter && !postFilter[ expando ] ) {
			postFilter = setMatcher( postFilter );
		}
		if ( postFinder && !postFinder[ expando ] ) {
			postFinder = setMatcher( postFinder, postSelector );
		}
		return markFunction(function( seed, results, context, xml ) {
			var temp, i, elem,
				preMap = [],
				postMap = [],
				preexisting = results.length,

				// Get initial elements from seed or context
				elems = seed || multipleContexts( selector || "*", context.nodeType ? [ context ] : context, [] ),

				// Prefilter to get matcher input, preserving a map for seed-results synchronization
				matcherIn = preFilter && ( seed || !selector ) ?
					condense( elems, preMap, preFilter, context, xml ) :
					elems,

				matcherOut = matcher ?
					// If we have a postFinder, or filtered seed, or non-seed postFilter or preexisting results,
					postFinder || ( seed ? preFilter : preexisting || postFilter ) ?

						// ...intermediate processing is necessary
						[] :

						// ...otherwise use results directly
						results :
					matcherIn;

			// Find primary matches
			if ( matcher ) {
				matcher( matcherIn, matcherOut, context, xml );
			}

			// Apply postFilter
			if ( postFilter ) {
				temp = condense( matcherOut, postMap );
				postFilter( temp, [], context, xml );

				// Un-match failing elements by moving them back to matcherIn
				i = temp.length;
				while ( i-- ) {
					if ( (elem = temp[i]) ) {
						matcherOut[ postMap[i] ] = !(matcherIn[ postMap[i] ] = elem);
					}
				}
			}

			if ( seed ) {
				if ( postFinder || preFilter ) {
					if ( postFinder ) {
						// Get the final matcherOut by condensing this intermediate into postFinder contexts
						temp = [];
						i = matcherOut.length;
						while ( i-- ) {
							if ( (elem = matcherOut[i]) ) {
								// Restore matcherIn since elem is not yet a final match
								temp.push( (matcherIn[i] = elem) );
							}
						}
						postFinder( null, (matcherOut = []), temp, xml );
					}

					// Move matched elements from seed to results to keep them synchronized
					i = matcherOut.length;
					while ( i-- ) {
						if ( (elem = matcherOut[i]) &&
							(temp = postFinder ? indexOf( seed, elem ) : preMap[i]) > -1 ) {

							seed[temp] = !(results[temp] = elem);
						}
					}
				}

			// Add elements to results, through postFinder if defined
			} else {
				matcherOut = condense(
					matcherOut === results ?
						matcherOut.splice( preexisting, matcherOut.length ) :
						matcherOut
				);
				if ( postFinder ) {
					postFinder( null, results, matcherOut, xml );
				} else {
					push.apply( results, matcherOut );
				}
			}
		});
	}

	function matcherFromTokens( tokens ) {
		var checkContext, matcher, j,
			len = tokens.length,
			leadingRelative = Expr.relative[ tokens[0].type ],
			implicitRelative = leadingRelative || Expr.relative[" "],
			i = leadingRelative ? 1 : 0,

			// The foundational matcher ensures that elements are reachable from top-level context(s)
			matchContext = addCombinator( function( elem ) {
				return elem === checkContext;
			}, implicitRelative, true ),
			matchAnyContext = addCombinator( function( elem ) {
				return indexOf( checkContext, elem ) > -1;
			}, implicitRelative, true ),
			matchers = [ function( elem, context, xml ) {
				var ret = ( !leadingRelative && ( xml || context !== outermostContext ) ) || (
					(checkContext = context).nodeType ?
						matchContext( elem, context, xml ) :
						matchAnyContext( elem, context, xml ) );
				// Avoid hanging onto element (issue #299)
				checkContext = null;
				return ret;
			} ];

		for ( ; i < len; i++ ) {
			if ( (matcher = Expr.relative[ tokens[i].type ]) ) {
				matchers = [ addCombinator(elementMatcher( matchers ), matcher) ];
			} else {
				matcher = Expr.filter[ tokens[i].type ].apply( null, tokens[i].matches );

				// Return special upon seeing a positional matcher
				if ( matcher[ expando ] ) {
					// Find the next relative operator (if any) for proper handling
					j = ++i;
					for ( ; j < len; j++ ) {
						if ( Expr.relative[ tokens[j].type ] ) {
							break;
						}
					}
					return setMatcher(
						i > 1 && elementMatcher( matchers ),
						i > 1 && toSelector(
							// If the preceding token was a descendant combinator, insert an implicit any-element `*`
							tokens.slice( 0, i - 1 ).concat({ value: tokens[ i - 2 ].type === " " ? "*" : "" })
						).replace( rtrim, "$1" ),
						matcher,
						i < j && matcherFromTokens( tokens.slice( i, j ) ),
						j < len && matcherFromTokens( (tokens = tokens.slice( j )) ),
						j < len && toSelector( tokens )
					);
				}
				matchers.push( matcher );
			}
		}

		return elementMatcher( matchers );
	}

	function matcherFromGroupMatchers( elementMatchers, setMatchers ) {
		var bySet = setMatchers.length > 0,
			byElement = elementMatchers.length > 0,
			superMatcher = function( seed, context, xml, results, outermost ) {
				var elem, j, matcher,
					matchedCount = 0,
					i = "0",
					unmatched = seed && [],
					setMatched = [],
					contextBackup = outermostContext,
					// We must always have either seed elements or outermost context
					elems = seed || byElement && Expr.find["TAG"]( "*", outermost ),
					// Use integer dirruns iff this is the outermost matcher
					dirrunsUnique = (dirruns += contextBackup == null ? 1 : Math.random() || 0.1),
					len = elems.length;

				if ( outermost ) {
					outermostContext = context === document || context || outermost;
				}

				// Add elements passing elementMatchers directly to results
				// Support: IE<9, Safari
				// Tolerate NodeList properties (IE: "length"; Safari: <number>) matching elements by id
				for ( ; i !== len && (elem = elems[i]) != null; i++ ) {
					if ( byElement && elem ) {
						j = 0;
						if ( !context && elem.ownerDocument !== document ) {
							setDocument( elem );
							xml = !documentIsHTML;
						}
						while ( (matcher = elementMatchers[j++]) ) {
							if ( matcher( elem, context || document, xml) ) {
								results.push( elem );
								break;
							}
						}
						if ( outermost ) {
							dirruns = dirrunsUnique;
						}
					}

					// Track unmatched elements for set filters
					if ( bySet ) {
						// They will have gone through all possible matchers
						if ( (elem = !matcher && elem) ) {
							matchedCount--;
						}

						// Lengthen the array for every element, matched or not
						if ( seed ) {
							unmatched.push( elem );
						}
					}
				}

				// `i` is now the count of elements visited above, and adding it to `matchedCount`
				// makes the latter nonnegative.
				matchedCount += i;

				// Apply set filters to unmatched elements
				// NOTE: This can be skipped if there are no unmatched elements (i.e., `matchedCount`
				// equals `i`), unless we didn't visit _any_ elements in the above loop because we have
				// no element matchers and no seed.
				// Incrementing an initially-string "0" `i` allows `i` to remain a string only in that
				// case, which will result in a "00" `matchedCount` that differs from `i` but is also
				// numerically zero.
				if ( bySet && i !== matchedCount ) {
					j = 0;
					while ( (matcher = setMatchers[j++]) ) {
						matcher( unmatched, setMatched, context, xml );
					}

					if ( seed ) {
						// Reintegrate element matches to eliminate the need for sorting
						if ( matchedCount > 0 ) {
							while ( i-- ) {
								if ( !(unmatched[i] || setMatched[i]) ) {
									setMatched[i] = pop.call( results );
								}
							}
						}

						// Discard index placeholder values to get only actual matches
						setMatched = condense( setMatched );
					}

					// Add matches to results
					push.apply( results, setMatched );

					// Seedless set matches succeeding multiple successful matchers stipulate sorting
					if ( outermost && !seed && setMatched.length > 0 &&
						( matchedCount + setMatchers.length ) > 1 ) {

						Sizzle.uniqueSort( results );
					}
				}

				// Override manipulation of globals by nested matchers
				if ( outermost ) {
					dirruns = dirrunsUnique;
					outermostContext = contextBackup;
				}

				return unmatched;
			};

		return bySet ?
			markFunction( superMatcher ) :
			superMatcher;
	}

	compile = Sizzle.compile = function( selector, match /* Internal Use Only */ ) {
		var i,
			setMatchers = [],
			elementMatchers = [],
			cached = compilerCache[ selector + " " ];

		if ( !cached ) {
			// Generate a function of recursive functions that can be used to check each element
			if ( !match ) {
				match = tokenize( selector );
			}
			i = match.length;
			while ( i-- ) {
				cached = matcherFromTokens( match[i] );
				if ( cached[ expando ] ) {
					setMatchers.push( cached );
				} else {
					elementMatchers.push( cached );
				}
			}

			// Cache the compiled function
			cached = compilerCache( selector, matcherFromGroupMatchers( elementMatchers, setMatchers ) );

			// Save selector and tokenization
			cached.selector = selector;
		}
		return cached;
	};

	/**
	 * A low-level selection function that works with Sizzle's compiled
	 *  selector functions
	 * @param {String|Function} selector A selector or a pre-compiled
	 *  selector function built with Sizzle.compile
	 * @param {Element} context
	 * @param {Array} [results]
	 * @param {Array} [seed] A set of elements to match against
	 */
	select = Sizzle.select = function( selector, context, results, seed ) {
		var i, tokens, token, type, find,
			compiled = typeof selector === "function" && selector,
			match = !seed && tokenize( (selector = compiled.selector || selector) );

		results = results || [];

		// Try to minimize operations if there is only one selector in the list and no seed
		// (the latter of which guarantees us context)
		if ( match.length === 1 ) {

			// Reduce context if the leading compound selector is an ID
			tokens = match[0] = match[0].slice( 0 );
			if ( tokens.length > 2 && (token = tokens[0]).type === "ID" &&
					support.getById && context.nodeType === 9 && documentIsHTML &&
					Expr.relative[ tokens[1].type ] ) {

				context = ( Expr.find["ID"]( token.matches[0].replace(runescape, funescape), context ) || [] )[0];
				if ( !context ) {
					return results;

				// Precompiled matchers will still verify ancestry, so step up a level
				} else if ( compiled ) {
					context = context.parentNode;
				}

				selector = selector.slice( tokens.shift().value.length );
			}

			// Fetch a seed set for right-to-left matching
			i = matchExpr["needsContext"].test( selector ) ? 0 : tokens.length;
			while ( i-- ) {
				token = tokens[i];

				// Abort if we hit a combinator
				if ( Expr.relative[ (type = token.type) ] ) {
					break;
				}
				if ( (find = Expr.find[ type ]) ) {
					// Search, expanding context for leading sibling combinators
					if ( (seed = find(
						token.matches[0].replace( runescape, funescape ),
						rsibling.test( tokens[0].type ) && testContext( context.parentNode ) || context
					)) ) {

						// If seed is empty or no tokens remain, we can return early
						tokens.splice( i, 1 );
						selector = seed.length && toSelector( tokens );
						if ( !selector ) {
							push.apply( results, seed );
							return results;
						}

						break;
					}
				}
			}
		}

		// Compile and execute a filtering function if one is not provided
		// Provide `match` to avoid retokenization if we modified the selector above
		( compiled || compile( selector, match ) )(
			seed,
			context,
			!documentIsHTML,
			results,
			!context || rsibling.test( selector ) && testContext( context.parentNode ) || context
		);
		return results;
	};

	// One-time assignments

	// Sort stability
	support.sortStable = expando.split("").sort( sortOrder ).join("") === expando;

	// Support: Chrome 14-35+
	// Always assume duplicates if they aren't passed to the comparison function
	support.detectDuplicates = !!hasDuplicate;

	// Initialize against the default document
	setDocument();

	// Support: Webkit<537.32 - Safari 6.0.3/Chrome 25 (fixed in Chrome 27)
	// Detached nodes confoundingly follow *each other*
	support.sortDetached = assert(function( div1 ) {
		// Should return 1, but returns 4 (following)
		return div1.compareDocumentPosition( document.createElement("div") ) & 1;
	});

	// Support: IE<8
	// Prevent attribute/property "interpolation"
	// http://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx
	if ( !assert(function( div ) {
		div.innerHTML = "<a href='#'></a>";
		return div.firstChild.getAttribute("href") === "#" ;
	}) ) {
		addHandle( "type|href|height|width", function( elem, name, isXML ) {
			if ( !isXML ) {
				return elem.getAttribute( name, name.toLowerCase() === "type" ? 1 : 2 );
			}
		});
	}

	// Support: IE<9
	// Use defaultValue in place of getAttribute("value")
	if ( !support.attributes || !assert(function( div ) {
		div.innerHTML = "<input/>";
		div.firstChild.setAttribute( "value", "" );
		return div.firstChild.getAttribute( "value" ) === "";
	}) ) {
		addHandle( "value", function( elem, name, isXML ) {
			if ( !isXML && elem.nodeName.toLowerCase() === "input" ) {
				return elem.defaultValue;
			}
		});
	}

	// Support: IE<9
	// Use getAttributeNode to fetch booleans when getAttribute lies
	if ( !assert(function( div ) {
		return div.getAttribute("disabled") == null;
	}) ) {
		addHandle( booleans, function( elem, name, isXML ) {
			var val;
			if ( !isXML ) {
				return elem[ name ] === true ? name.toLowerCase() :
						(val = elem.getAttributeNode( name )) && val.specified ?
						val.value :
					null;
			}
		});
	}

	return Sizzle;

	})( window );



	jQuery.find = Sizzle;
	jQuery.expr = Sizzle.selectors;
	jQuery.expr[ ":" ] = jQuery.expr.pseudos;
	jQuery.uniqueSort = jQuery.unique = Sizzle.uniqueSort;
	jQuery.text = Sizzle.getText;
	jQuery.isXMLDoc = Sizzle.isXML;
	jQuery.contains = Sizzle.contains;



	var dir = function( elem, dir, until ) {
		var matched = [],
			truncate = until !== undefined;

		while ( ( elem = elem[ dir ] ) && elem.nodeType !== 9 ) {
			if ( elem.nodeType === 1 ) {
				if ( truncate && jQuery( elem ).is( until ) ) {
					break;
				}
				matched.push( elem );
			}
		}
		return matched;
	};


	var siblings = function( n, elem ) {
		var matched = [];

		for ( ; n; n = n.nextSibling ) {
			if ( n.nodeType === 1 && n !== elem ) {
				matched.push( n );
			}
		}

		return matched;
	};


	var rneedsContext = jQuery.expr.match.needsContext;

	var rsingleTag = ( /^<([\w-]+)\s*\/?>(?:<\/\1>|)$/ );



	var risSimple = /^.[^:#\[\.,]*$/;

	// Implement the identical functionality for filter and not
	function winnow( elements, qualifier, not ) {
		if ( jQuery.isFunction( qualifier ) ) {
			return jQuery.grep( elements, function( elem, i ) {
				/* jshint -W018 */
				return !!qualifier.call( elem, i, elem ) !== not;
			} );

		}

		if ( qualifier.nodeType ) {
			return jQuery.grep( elements, function( elem ) {
				return ( elem === qualifier ) !== not;
			} );

		}

		if ( typeof qualifier === "string" ) {
			if ( risSimple.test( qualifier ) ) {
				return jQuery.filter( qualifier, elements, not );
			}

			qualifier = jQuery.filter( qualifier, elements );
		}

		return jQuery.grep( elements, function( elem ) {
			return ( indexOf.call( qualifier, elem ) > -1 ) !== not;
		} );
	}

	jQuery.filter = function( expr, elems, not ) {
		var elem = elems[ 0 ];

		if ( not ) {
			expr = ":not(" + expr + ")";
		}

		return elems.length === 1 && elem.nodeType === 1 ?
			jQuery.find.matchesSelector( elem, expr ) ? [ elem ] : [] :
			jQuery.find.matches( expr, jQuery.grep( elems, function( elem ) {
				return elem.nodeType === 1;
			} ) );
	};

	jQuery.fn.extend( {
		find: function( selector ) {
			var i,
				len = this.length,
				ret = [],
				self = this;

			if ( typeof selector !== "string" ) {
				return this.pushStack( jQuery( selector ).filter( function() {
					for ( i = 0; i < len; i++ ) {
						if ( jQuery.contains( self[ i ], this ) ) {
							return true;
						}
					}
				} ) );
			}

			for ( i = 0; i < len; i++ ) {
				jQuery.find( selector, self[ i ], ret );
			}

			// Needed because $( selector, context ) becomes $( context ).find( selector )
			ret = this.pushStack( len > 1 ? jQuery.unique( ret ) : ret );
			ret.selector = this.selector ? this.selector + " " + selector : selector;
			return ret;
		},
		filter: function( selector ) {
			return this.pushStack( winnow( this, selector || [], false ) );
		},
		not: function( selector ) {
			return this.pushStack( winnow( this, selector || [], true ) );
		},
		is: function( selector ) {
			return !!winnow(
				this,

				// If this is a positional/relative selector, check membership in the returned set
				// so $("p:first").is("p:last") won't return true for a doc with two "p".
				typeof selector === "string" && rneedsContext.test( selector ) ?
					jQuery( selector ) :
					selector || [],
				false
			).length;
		}
	} );


	// Initialize a jQuery object


	// A central reference to the root jQuery(document)
	var rootjQuery,

		// A simple way to check for HTML strings
		// Prioritize #id over <tag> to avoid XSS via location.hash (#9521)
		// Strict HTML recognition (#11290: must start with <)
		rquickExpr = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]*))$/,

		init = jQuery.fn.init = function( selector, context, root ) {
			var match, elem;

			// HANDLE: $(""), $(null), $(undefined), $(false)
			if ( !selector ) {
				return this;
			}

			// Method init() accepts an alternate rootjQuery
			// so migrate can support jQuery.sub (gh-2101)
			root = root || rootjQuery;

			// Handle HTML strings
			if ( typeof selector === "string" ) {
				if ( selector[ 0 ] === "<" &&
					selector[ selector.length - 1 ] === ">" &&
					selector.length >= 3 ) {

					// Assume that strings that start and end with <> are HTML and skip the regex check
					match = [ null, selector, null ];

				} else {
					match = rquickExpr.exec( selector );
				}

				// Match html or make sure no context is specified for #id
				if ( match && ( match[ 1 ] || !context ) ) {

					// HANDLE: $(html) -> $(array)
					if ( match[ 1 ] ) {
						context = context instanceof jQuery ? context[ 0 ] : context;

						// Option to run scripts is true for back-compat
						// Intentionally let the error be thrown if parseHTML is not present
						jQuery.merge( this, jQuery.parseHTML(
							match[ 1 ],
							context && context.nodeType ? context.ownerDocument || context : document,
							true
						) );

						// HANDLE: $(html, props)
						if ( rsingleTag.test( match[ 1 ] ) && jQuery.isPlainObject( context ) ) {
							for ( match in context ) {

								// Properties of context are called as methods if possible
								if ( jQuery.isFunction( this[ match ] ) ) {
									this[ match ]( context[ match ] );

								// ...and otherwise set as attributes
								} else {
									this.attr( match, context[ match ] );
								}
							}
						}

						return this;

					// HANDLE: $(#id)
					} else {
						elem = document.getElementById( match[ 2 ] );

						// Support: Blackberry 4.6
						// gEBID returns nodes no longer in the document (#6963)
						if ( elem && elem.parentNode ) {

							// Inject the element directly into the jQuery object
							this.length = 1;
							this[ 0 ] = elem;
						}

						this.context = document;
						this.selector = selector;
						return this;
					}

				// HANDLE: $(expr, $(...))
				} else if ( !context || context.jquery ) {
					return ( context || root ).find( selector );

				// HANDLE: $(expr, context)
				// (which is just equivalent to: $(context).find(expr)
				} else {
					return this.constructor( context ).find( selector );
				}

			// HANDLE: $(DOMElement)
			} else if ( selector.nodeType ) {
				this.context = this[ 0 ] = selector;
				this.length = 1;
				return this;

			// HANDLE: $(function)
			// Shortcut for document ready
			} else if ( jQuery.isFunction( selector ) ) {
				return root.ready !== undefined ?
					root.ready( selector ) :

					// Execute immediately if ready is not present
					selector( jQuery );
			}

			if ( selector.selector !== undefined ) {
				this.selector = selector.selector;
				this.context = selector.context;
			}

			return jQuery.makeArray( selector, this );
		};

	// Give the init function the jQuery prototype for later instantiation
	init.prototype = jQuery.fn;

	// Initialize central reference
	rootjQuery = jQuery( document );


	var rparentsprev = /^(?:parents|prev(?:Until|All))/,

		// Methods guaranteed to produce a unique set when starting from a unique set
		guaranteedUnique = {
			children: true,
			contents: true,
			next: true,
			prev: true
		};

	jQuery.fn.extend( {
		has: function( target ) {
			var targets = jQuery( target, this ),
				l = targets.length;

			return this.filter( function() {
				var i = 0;
				for ( ; i < l; i++ ) {
					if ( jQuery.contains( this, targets[ i ] ) ) {
						return true;
					}
				}
			} );
		},

		closest: function( selectors, context ) {
			var cur,
				i = 0,
				l = this.length,
				matched = [],
				pos = rneedsContext.test( selectors ) || typeof selectors !== "string" ?
					jQuery( selectors, context || this.context ) :
					0;

			for ( ; i < l; i++ ) {
				for ( cur = this[ i ]; cur && cur !== context; cur = cur.parentNode ) {

					// Always skip document fragments
					if ( cur.nodeType < 11 && ( pos ?
						pos.index( cur ) > -1 :

						// Don't pass non-elements to Sizzle
						cur.nodeType === 1 &&
							jQuery.find.matchesSelector( cur, selectors ) ) ) {

						matched.push( cur );
						break;
					}
				}
			}

			return this.pushStack( matched.length > 1 ? jQuery.uniqueSort( matched ) : matched );
		},

		// Determine the position of an element within the set
		index: function( elem ) {

			// No argument, return index in parent
			if ( !elem ) {
				return ( this[ 0 ] && this[ 0 ].parentNode ) ? this.first().prevAll().length : -1;
			}

			// Index in selector
			if ( typeof elem === "string" ) {
				return indexOf.call( jQuery( elem ), this[ 0 ] );
			}

			// Locate the position of the desired element
			return indexOf.call( this,

				// If it receives a jQuery object, the first element is used
				elem.jquery ? elem[ 0 ] : elem
			);
		},

		add: function( selector, context ) {
			return this.pushStack(
				jQuery.uniqueSort(
					jQuery.merge( this.get(), jQuery( selector, context ) )
				)
			);
		},

		addBack: function( selector ) {
			return this.add( selector == null ?
				this.prevObject : this.prevObject.filter( selector )
			);
		}
	} );

	function sibling( cur, dir ) {
		while ( ( cur = cur[ dir ] ) && cur.nodeType !== 1 ) {}
		return cur;
	}

	jQuery.each( {
		parent: function( elem ) {
			var parent = elem.parentNode;
			return parent && parent.nodeType !== 11 ? parent : null;
		},
		parents: function( elem ) {
			return dir( elem, "parentNode" );
		},
		parentsUntil: function( elem, i, until ) {
			return dir( elem, "parentNode", until );
		},
		next: function( elem ) {
			return sibling( elem, "nextSibling" );
		},
		prev: function( elem ) {
			return sibling( elem, "previousSibling" );
		},
		nextAll: function( elem ) {
			return dir( elem, "nextSibling" );
		},
		prevAll: function( elem ) {
			return dir( elem, "previousSibling" );
		},
		nextUntil: function( elem, i, until ) {
			return dir( elem, "nextSibling", until );
		},
		prevUntil: function( elem, i, until ) {
			return dir( elem, "previousSibling", until );
		},
		siblings: function( elem ) {
			return siblings( ( elem.parentNode || {} ).firstChild, elem );
		},
		children: function( elem ) {
			return siblings( elem.firstChild );
		},
		contents: function( elem ) {
			return elem.contentDocument || jQuery.merge( [], elem.childNodes );
		}
	}, function( name, fn ) {
		jQuery.fn[ name ] = function( until, selector ) {
			var matched = jQuery.map( this, fn, until );

			if ( name.slice( -5 ) !== "Until" ) {
				selector = until;
			}

			if ( selector && typeof selector === "string" ) {
				matched = jQuery.filter( selector, matched );
			}

			if ( this.length > 1 ) {

				// Remove duplicates
				if ( !guaranteedUnique[ name ] ) {
					jQuery.uniqueSort( matched );
				}

				// Reverse order for parents* and prev-derivatives
				if ( rparentsprev.test( name ) ) {
					matched.reverse();
				}
			}

			return this.pushStack( matched );
		};
	} );
	var rnotwhite = ( /\S+/g );



	// Convert String-formatted options into Object-formatted ones
	function createOptions( options ) {
		var object = {};
		jQuery.each( options.match( rnotwhite ) || [], function( _, flag ) {
			object[ flag ] = true;
		} );
		return object;
	}

	/*
	 * Create a callback list using the following parameters:
	 *
	 *	options: an optional list of space-separated options that will change how
	 *			the callback list behaves or a more traditional option object
	 *
	 * By default a callback list will act like an event callback list and can be
	 * "fired" multiple times.
	 *
	 * Possible options:
	 *
	 *	once:			will ensure the callback list can only be fired once (like a Deferred)
	 *
	 *	memory:			will keep track of previous values and will call any callback added
	 *					after the list has been fired right away with the latest "memorized"
	 *					values (like a Deferred)
	 *
	 *	unique:			will ensure a callback can only be added once (no duplicate in the list)
	 *
	 *	stopOnFalse:	interrupt callings when a callback returns false
	 *
	 */
	jQuery.Callbacks = function( options ) {

		// Convert options from String-formatted to Object-formatted if needed
		// (we check in cache first)
		options = typeof options === "string" ?
			createOptions( options ) :
			jQuery.extend( {}, options );

		var // Flag to know if list is currently firing
			firing,

			// Last fire value for non-forgettable lists
			memory,

			// Flag to know if list was already fired
			fired,

			// Flag to prevent firing
			locked,

			// Actual callback list
			list = [],

			// Queue of execution data for repeatable lists
			queue = [],

			// Index of currently firing callback (modified by add/remove as needed)
			firingIndex = -1,

			// Fire callbacks
			fire = function() {

				// Enforce single-firing
				locked = options.once;

				// Execute callbacks for all pending executions,
				// respecting firingIndex overrides and runtime changes
				fired = firing = true;
				for ( ; queue.length; firingIndex = -1 ) {
					memory = queue.shift();
					while ( ++firingIndex < list.length ) {

						// Run callback and check for early termination
						if ( list[ firingIndex ].apply( memory[ 0 ], memory[ 1 ] ) === false &&
							options.stopOnFalse ) {

							// Jump to end and forget the data so .add doesn't re-fire
							firingIndex = list.length;
							memory = false;
						}
					}
				}

				// Forget the data if we're done with it
				if ( !options.memory ) {
					memory = false;
				}

				firing = false;

				// Clean up if we're done firing for good
				if ( locked ) {

					// Keep an empty list if we have data for future add calls
					if ( memory ) {
						list = [];

					// Otherwise, this object is spent
					} else {
						list = "";
					}
				}
			},

			// Actual Callbacks object
			self = {

				// Add a callback or a collection of callbacks to the list
				add: function() {
					if ( list ) {

						// If we have memory from a past run, we should fire after adding
						if ( memory && !firing ) {
							firingIndex = list.length - 1;
							queue.push( memory );
						}

						( function add( args ) {
							jQuery.each( args, function( _, arg ) {
								if ( jQuery.isFunction( arg ) ) {
									if ( !options.unique || !self.has( arg ) ) {
										list.push( arg );
									}
								} else if ( arg && arg.length && jQuery.type( arg ) !== "string" ) {

									// Inspect recursively
									add( arg );
								}
							} );
						} )( arguments );

						if ( memory && !firing ) {
							fire();
						}
					}
					return this;
				},

				// Remove a callback from the list
				remove: function() {
					jQuery.each( arguments, function( _, arg ) {
						var index;
						while ( ( index = jQuery.inArray( arg, list, index ) ) > -1 ) {
							list.splice( index, 1 );

							// Handle firing indexes
							if ( index <= firingIndex ) {
								firingIndex--;
							}
						}
					} );
					return this;
				},

				// Check if a given callback is in the list.
				// If no argument is given, return whether or not list has callbacks attached.
				has: function( fn ) {
					return fn ?
						jQuery.inArray( fn, list ) > -1 :
						list.length > 0;
				},

				// Remove all callbacks from the list
				empty: function() {
					if ( list ) {
						list = [];
					}
					return this;
				},

				// Disable .fire and .add
				// Abort any current/pending executions
				// Clear all callbacks and values
				disable: function() {
					locked = queue = [];
					list = memory = "";
					return this;
				},
				disabled: function() {
					return !list;
				},

				// Disable .fire
				// Also disable .add unless we have memory (since it would have no effect)
				// Abort any pending executions
				lock: function() {
					locked = queue = [];
					if ( !memory ) {
						list = memory = "";
					}
					return this;
				},
				locked: function() {
					return !!locked;
				},

				// Call all callbacks with the given context and arguments
				fireWith: function( context, args ) {
					if ( !locked ) {
						args = args || [];
						args = [ context, args.slice ? args.slice() : args ];
						queue.push( args );
						if ( !firing ) {
							fire();
						}
					}
					return this;
				},

				// Call all the callbacks with the given arguments
				fire: function() {
					self.fireWith( this, arguments );
					return this;
				},

				// To know if the callbacks have already been called at least once
				fired: function() {
					return !!fired;
				}
			};

		return self;
	};


	jQuery.extend( {

		Deferred: function( func ) {
			var tuples = [

					// action, add listener, listener list, final state
					[ "resolve", "done", jQuery.Callbacks( "once memory" ), "resolved" ],
					[ "reject", "fail", jQuery.Callbacks( "once memory" ), "rejected" ],
					[ "notify", "progress", jQuery.Callbacks( "memory" ) ]
				],
				state = "pending",
				promise = {
					state: function() {
						return state;
					},
					always: function() {
						deferred.done( arguments ).fail( arguments );
						return this;
					},
					then: function( /* fnDone, fnFail, fnProgress */ ) {
						var fns = arguments;
						return jQuery.Deferred( function( newDefer ) {
							jQuery.each( tuples, function( i, tuple ) {
								var fn = jQuery.isFunction( fns[ i ] ) && fns[ i ];

								// deferred[ done | fail | progress ] for forwarding actions to newDefer
								deferred[ tuple[ 1 ] ]( function() {
									var returned = fn && fn.apply( this, arguments );
									if ( returned && jQuery.isFunction( returned.promise ) ) {
										returned.promise()
											.progress( newDefer.notify )
											.done( newDefer.resolve )
											.fail( newDefer.reject );
									} else {
										newDefer[ tuple[ 0 ] + "With" ](
											this === promise ? newDefer.promise() : this,
											fn ? [ returned ] : arguments
										);
									}
								} );
							} );
							fns = null;
						} ).promise();
					},

					// Get a promise for this deferred
					// If obj is provided, the promise aspect is added to the object
					promise: function( obj ) {
						return obj != null ? jQuery.extend( obj, promise ) : promise;
					}
				},
				deferred = {};

			// Keep pipe for back-compat
			promise.pipe = promise.then;

			// Add list-specific methods
			jQuery.each( tuples, function( i, tuple ) {
				var list = tuple[ 2 ],
					stateString = tuple[ 3 ];

				// promise[ done | fail | progress ] = list.add
				promise[ tuple[ 1 ] ] = list.add;

				// Handle state
				if ( stateString ) {
					list.add( function() {

						// state = [ resolved | rejected ]
						state = stateString;

					// [ reject_list | resolve_list ].disable; progress_list.lock
					}, tuples[ i ^ 1 ][ 2 ].disable, tuples[ 2 ][ 2 ].lock );
				}

				// deferred[ resolve | reject | notify ]
				deferred[ tuple[ 0 ] ] = function() {
					deferred[ tuple[ 0 ] + "With" ]( this === deferred ? promise : this, arguments );
					return this;
				};
				deferred[ tuple[ 0 ] + "With" ] = list.fireWith;
			} );

			// Make the deferred a promise
			promise.promise( deferred );

			// Call given func if any
			if ( func ) {
				func.call( deferred, deferred );
			}

			// All done!
			return deferred;
		},

		// Deferred helper
		when: function( subordinate /* , ..., subordinateN */ ) {
			var i = 0,
				resolveValues = slice.call( arguments ),
				length = resolveValues.length,

				// the count of uncompleted subordinates
				remaining = length !== 1 ||
					( subordinate && jQuery.isFunction( subordinate.promise ) ) ? length : 0,

				// the master Deferred.
				// If resolveValues consist of only a single Deferred, just use that.
				deferred = remaining === 1 ? subordinate : jQuery.Deferred(),

				// Update function for both resolve and progress values
				updateFunc = function( i, contexts, values ) {
					return function( value ) {
						contexts[ i ] = this;
						values[ i ] = arguments.length > 1 ? slice.call( arguments ) : value;
						if ( values === progressValues ) {
							deferred.notifyWith( contexts, values );
						} else if ( !( --remaining ) ) {
							deferred.resolveWith( contexts, values );
						}
					};
				},

				progressValues, progressContexts, resolveContexts;

			// Add listeners to Deferred subordinates; treat others as resolved
			if ( length > 1 ) {
				progressValues = new Array( length );
				progressContexts = new Array( length );
				resolveContexts = new Array( length );
				for ( ; i < length; i++ ) {
					if ( resolveValues[ i ] && jQuery.isFunction( resolveValues[ i ].promise ) ) {
						resolveValues[ i ].promise()
							.progress( updateFunc( i, progressContexts, progressValues ) )
							.done( updateFunc( i, resolveContexts, resolveValues ) )
							.fail( deferred.reject );
					} else {
						--remaining;
					}
				}
			}

			// If we're not waiting on anything, resolve the master
			if ( !remaining ) {
				deferred.resolveWith( resolveContexts, resolveValues );
			}

			return deferred.promise();
		}
	} );


	// The deferred used on DOM ready
	var readyList;

	jQuery.fn.ready = function( fn ) {

		// Add the callback
		jQuery.ready.promise().done( fn );

		return this;
	};

	jQuery.extend( {

		// Is the DOM ready to be used? Set to true once it occurs.
		isReady: false,

		// A counter to track how many items to wait for before
		// the ready event fires. See #6781
		readyWait: 1,

		// Hold (or release) the ready event
		holdReady: function( hold ) {
			if ( hold ) {
				jQuery.readyWait++;
			} else {
				jQuery.ready( true );
			}
		},

		// Handle when the DOM is ready
		ready: function( wait ) {

			// Abort if there are pending holds or we're already ready
			if ( wait === true ? --jQuery.readyWait : jQuery.isReady ) {
				return;
			}

			// Remember that the DOM is ready
			jQuery.isReady = true;

			// If a normal DOM Ready event fired, decrement, and wait if need be
			if ( wait !== true && --jQuery.readyWait > 0 ) {
				return;
			}

			// If there are functions bound, to execute
			readyList.resolveWith( document, [ jQuery ] );

			// Trigger any bound ready events
			if ( jQuery.fn.triggerHandler ) {
				jQuery( document ).triggerHandler( "ready" );
				jQuery( document ).off( "ready" );
			}
		}
	} );

	/**
	 * The ready event handler and self cleanup method
	 */
	function completed() {
		document.removeEventListener( "DOMContentLoaded", completed );
		window.removeEventListener( "load", completed );
		jQuery.ready();
	}

	jQuery.ready.promise = function( obj ) {
		if ( !readyList ) {

			readyList = jQuery.Deferred();

			// Catch cases where $(document).ready() is called
			// after the browser event has already occurred.
			// Support: IE9-10 only
			// Older IE sometimes signals "interactive" too soon
			if ( document.readyState === "complete" ||
				( document.readyState !== "loading" && !document.documentElement.doScroll ) ) {

				// Handle it asynchronously to allow scripts the opportunity to delay ready
				window.setTimeout( jQuery.ready );

			} else {

				// Use the handy event callback
				document.addEventListener( "DOMContentLoaded", completed );

				// A fallback to window.onload, that will always work
				window.addEventListener( "load", completed );
			}
		}
		return readyList.promise( obj );
	};

	// Kick off the DOM ready check even if the user does not
	jQuery.ready.promise();




	// Multifunctional method to get and set values of a collection
	// The value/s can optionally be executed if it's a function
	var access = function( elems, fn, key, value, chainable, emptyGet, raw ) {
		var i = 0,
			len = elems.length,
			bulk = key == null;

		// Sets many values
		if ( jQuery.type( key ) === "object" ) {
			chainable = true;
			for ( i in key ) {
				access( elems, fn, i, key[ i ], true, emptyGet, raw );
			}

		// Sets one value
		} else if ( value !== undefined ) {
			chainable = true;

			if ( !jQuery.isFunction( value ) ) {
				raw = true;
			}

			if ( bulk ) {

				// Bulk operations run against the entire set
				if ( raw ) {
					fn.call( elems, value );
					fn = null;

				// ...except when executing function values
				} else {
					bulk = fn;
					fn = function( elem, key, value ) {
						return bulk.call( jQuery( elem ), value );
					};
				}
			}

			if ( fn ) {
				for ( ; i < len; i++ ) {
					fn(
						elems[ i ], key, raw ?
						value :
						value.call( elems[ i ], i, fn( elems[ i ], key ) )
					);
				}
			}
		}

		return chainable ?
			elems :

			// Gets
			bulk ?
				fn.call( elems ) :
				len ? fn( elems[ 0 ], key ) : emptyGet;
	};
	var acceptData = function( owner ) {

		// Accepts only:
		//  - Node
		//    - Node.ELEMENT_NODE
		//    - Node.DOCUMENT_NODE
		//  - Object
		//    - Any
		/* jshint -W018 */
		return owner.nodeType === 1 || owner.nodeType === 9 || !( +owner.nodeType );
	};




	function Data() {
		this.expando = jQuery.expando + Data.uid++;
	}

	Data.uid = 1;

	Data.prototype = {

		register: function( owner, initial ) {
			var value = initial || {};

			// If it is a node unlikely to be stringify-ed or looped over
			// use plain assignment
			if ( owner.nodeType ) {
				owner[ this.expando ] = value;

			// Otherwise secure it in a non-enumerable, non-writable property
			// configurability must be true to allow the property to be
			// deleted with the delete operator
			} else {
				Object.defineProperty( owner, this.expando, {
					value: value,
					writable: true,
					configurable: true
				} );
			}
			return owner[ this.expando ];
		},
		cache: function( owner ) {

			// We can accept data for non-element nodes in modern browsers,
			// but we should not, see #8335.
			// Always return an empty object.
			if ( !acceptData( owner ) ) {
				return {};
			}

			// Check if the owner object already has a cache
			var value = owner[ this.expando ];

			// If not, create one
			if ( !value ) {
				value = {};

				// We can accept data for non-element nodes in modern browsers,
				// but we should not, see #8335.
				// Always return an empty object.
				if ( acceptData( owner ) ) {

					// If it is a node unlikely to be stringify-ed or looped over
					// use plain assignment
					if ( owner.nodeType ) {
						owner[ this.expando ] = value;

					// Otherwise secure it in a non-enumerable property
					// configurable must be true to allow the property to be
					// deleted when data is removed
					} else {
						Object.defineProperty( owner, this.expando, {
							value: value,
							configurable: true
						} );
					}
				}
			}

			return value;
		},
		set: function( owner, data, value ) {
			var prop,
				cache = this.cache( owner );

			// Handle: [ owner, key, value ] args
			if ( typeof data === "string" ) {
				cache[ data ] = value;

			// Handle: [ owner, { properties } ] args
			} else {

				// Copy the properties one-by-one to the cache object
				for ( prop in data ) {
					cache[ prop ] = data[ prop ];
				}
			}
			return cache;
		},
		get: function( owner, key ) {
			return key === undefined ?
				this.cache( owner ) :
				owner[ this.expando ] && owner[ this.expando ][ key ];
		},
		access: function( owner, key, value ) {
			var stored;

			// In cases where either:
			//
			//   1. No key was specified
			//   2. A string key was specified, but no value provided
			//
			// Take the "read" path and allow the get method to determine
			// which value to return, respectively either:
			//
			//   1. The entire cache object
			//   2. The data stored at the key
			//
			if ( key === undefined ||
					( ( key && typeof key === "string" ) && value === undefined ) ) {

				stored = this.get( owner, key );

				return stored !== undefined ?
					stored : this.get( owner, jQuery.camelCase( key ) );
			}

			// When the key is not a string, or both a key and value
			// are specified, set or extend (existing objects) with either:
			//
			//   1. An object of properties
			//   2. A key and value
			//
			this.set( owner, key, value );

			// Since the "set" path can have two possible entry points
			// return the expected data based on which path was taken[*]
			return value !== undefined ? value : key;
		},
		remove: function( owner, key ) {
			var i, name, camel,
				cache = owner[ this.expando ];

			if ( cache === undefined ) {
				return;
			}

			if ( key === undefined ) {
				this.register( owner );

			} else {

				// Support array or space separated string of keys
				if ( jQuery.isArray( key ) ) {

					// If "name" is an array of keys...
					// When data is initially created, via ("key", "val") signature,
					// keys will be converted to camelCase.
					// Since there is no way to tell _how_ a key was added, remove
					// both plain key and camelCase key. #12786
					// This will only penalize the array argument path.
					name = key.concat( key.map( jQuery.camelCase ) );
				} else {
					camel = jQuery.camelCase( key );

					// Try the string as a key before any manipulation
					if ( key in cache ) {
						name = [ key, camel ];
					} else {

						// If a key with the spaces exists, use it.
						// Otherwise, create an array by matching non-whitespace
						name = camel;
						name = name in cache ?
							[ name ] : ( name.match( rnotwhite ) || [] );
					}
				}

				i = name.length;

				while ( i-- ) {
					delete cache[ name[ i ] ];
				}
			}

			// Remove the expando if there's no more data
			if ( key === undefined || jQuery.isEmptyObject( cache ) ) {

				// Support: Chrome <= 35-45+
				// Webkit & Blink performance suffers when deleting properties
				// from DOM nodes, so set to undefined instead
				// https://code.google.com/p/chromium/issues/detail?id=378607
				if ( owner.nodeType ) {
					owner[ this.expando ] = undefined;
				} else {
					delete owner[ this.expando ];
				}
			}
		},
		hasData: function( owner ) {
			var cache = owner[ this.expando ];
			return cache !== undefined && !jQuery.isEmptyObject( cache );
		}
	};
	var dataPriv = new Data();

	var dataUser = new Data();



	//	Implementation Summary
	//
	//	1. Enforce API surface and semantic compatibility with 1.9.x branch
	//	2. Improve the module's maintainability by reducing the storage
	//		paths to a single mechanism.
	//	3. Use the same single mechanism to support "private" and "user" data.
	//	4. _Never_ expose "private" data to user code (TODO: Drop _data, _removeData)
	//	5. Avoid exposing implementation details on user objects (eg. expando properties)
	//	6. Provide a clear path for implementation upgrade to WeakMap in 2014

	var rbrace = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,
		rmultiDash = /[A-Z]/g;

	function dataAttr( elem, key, data ) {
		var name;

		// If nothing was found internally, try to fetch any
		// data from the HTML5 data-* attribute
		if ( data === undefined && elem.nodeType === 1 ) {
			name = "data-" + key.replace( rmultiDash, "-$&" ).toLowerCase();
			data = elem.getAttribute( name );

			if ( typeof data === "string" ) {
				try {
					data = data === "true" ? true :
						data === "false" ? false :
						data === "null" ? null :

						// Only convert to a number if it doesn't change the string
						+data + "" === data ? +data :
						rbrace.test( data ) ? jQuery.parseJSON( data ) :
						data;
				} catch ( e ) {}

				// Make sure we set the data so it isn't changed later
				dataUser.set( elem, key, data );
			} else {
				data = undefined;
			}
		}
		return data;
	}

	jQuery.extend( {
		hasData: function( elem ) {
			return dataUser.hasData( elem ) || dataPriv.hasData( elem );
		},

		data: function( elem, name, data ) {
			return dataUser.access( elem, name, data );
		},

		removeData: function( elem, name ) {
			dataUser.remove( elem, name );
		},

		// TODO: Now that all calls to _data and _removeData have been replaced
		// with direct calls to dataPriv methods, these can be deprecated.
		_data: function( elem, name, data ) {
			return dataPriv.access( elem, name, data );
		},

		_removeData: function( elem, name ) {
			dataPriv.remove( elem, name );
		}
	} );

	jQuery.fn.extend( {
		data: function( key, value ) {
			var i, name, data,
				elem = this[ 0 ],
				attrs = elem && elem.attributes;

			// Gets all values
			if ( key === undefined ) {
				if ( this.length ) {
					data = dataUser.get( elem );

					if ( elem.nodeType === 1 && !dataPriv.get( elem, "hasDataAttrs" ) ) {
						i = attrs.length;
						while ( i-- ) {

							// Support: IE11+
							// The attrs elements can be null (#14894)
							if ( attrs[ i ] ) {
								name = attrs[ i ].name;
								if ( name.indexOf( "data-" ) === 0 ) {
									name = jQuery.camelCase( name.slice( 5 ) );
									dataAttr( elem, name, data[ name ] );
								}
							}
						}
						dataPriv.set( elem, "hasDataAttrs", true );
					}
				}

				return data;
			}

			// Sets multiple values
			if ( typeof key === "object" ) {
				return this.each( function() {
					dataUser.set( this, key );
				} );
			}

			return access( this, function( value ) {
				var data, camelKey;

				// The calling jQuery object (element matches) is not empty
				// (and therefore has an element appears at this[ 0 ]) and the
				// `value` parameter was not undefined. An empty jQuery object
				// will result in `undefined` for elem = this[ 0 ] which will
				// throw an exception if an attempt to read a data cache is made.
				if ( elem && value === undefined ) {

					// Attempt to get data from the cache
					// with the key as-is
					data = dataUser.get( elem, key ) ||

						// Try to find dashed key if it exists (gh-2779)
						// This is for 2.2.x only
						dataUser.get( elem, key.replace( rmultiDash, "-$&" ).toLowerCase() );

					if ( data !== undefined ) {
						return data;
					}

					camelKey = jQuery.camelCase( key );

					// Attempt to get data from the cache
					// with the key camelized
					data = dataUser.get( elem, camelKey );
					if ( data !== undefined ) {
						return data;
					}

					// Attempt to "discover" the data in
					// HTML5 custom data-* attrs
					data = dataAttr( elem, camelKey, undefined );
					if ( data !== undefined ) {
						return data;
					}

					// We tried really hard, but the data doesn't exist.
					return;
				}

				// Set the data...
				camelKey = jQuery.camelCase( key );
				this.each( function() {

					// First, attempt to store a copy or reference of any
					// data that might've been store with a camelCased key.
					var data = dataUser.get( this, camelKey );

					// For HTML5 data-* attribute interop, we have to
					// store property names with dashes in a camelCase form.
					// This might not apply to all properties...*
					dataUser.set( this, camelKey, value );

					// *... In the case of properties that might _actually_
					// have dashes, we need to also store a copy of that
					// unchanged property.
					if ( key.indexOf( "-" ) > -1 && data !== undefined ) {
						dataUser.set( this, key, value );
					}
				} );
			}, null, value, arguments.length > 1, null, true );
		},

		removeData: function( key ) {
			return this.each( function() {
				dataUser.remove( this, key );
			} );
		}
	} );


	jQuery.extend( {
		queue: function( elem, type, data ) {
			var queue;

			if ( elem ) {
				type = ( type || "fx" ) + "queue";
				queue = dataPriv.get( elem, type );

				// Speed up dequeue by getting out quickly if this is just a lookup
				if ( data ) {
					if ( !queue || jQuery.isArray( data ) ) {
						queue = dataPriv.access( elem, type, jQuery.makeArray( data ) );
					} else {
						queue.push( data );
					}
				}
				return queue || [];
			}
		},

		dequeue: function( elem, type ) {
			type = type || "fx";

			var queue = jQuery.queue( elem, type ),
				startLength = queue.length,
				fn = queue.shift(),
				hooks = jQuery._queueHooks( elem, type ),
				next = function() {
					jQuery.dequeue( elem, type );
				};

			// If the fx queue is dequeued, always remove the progress sentinel
			if ( fn === "inprogress" ) {
				fn = queue.shift();
				startLength--;
			}

			if ( fn ) {

				// Add a progress sentinel to prevent the fx queue from being
				// automatically dequeued
				if ( type === "fx" ) {
					queue.unshift( "inprogress" );
				}

				// Clear up the last queue stop function
				delete hooks.stop;
				fn.call( elem, next, hooks );
			}

			if ( !startLength && hooks ) {
				hooks.empty.fire();
			}
		},

		// Not public - generate a queueHooks object, or return the current one
		_queueHooks: function( elem, type ) {
			var key = type + "queueHooks";
			return dataPriv.get( elem, key ) || dataPriv.access( elem, key, {
				empty: jQuery.Callbacks( "once memory" ).add( function() {
					dataPriv.remove( elem, [ type + "queue", key ] );
				} )
			} );
		}
	} );

	jQuery.fn.extend( {
		queue: function( type, data ) {
			var setter = 2;

			if ( typeof type !== "string" ) {
				data = type;
				type = "fx";
				setter--;
			}

			if ( arguments.length < setter ) {
				return jQuery.queue( this[ 0 ], type );
			}

			return data === undefined ?
				this :
				this.each( function() {
					var queue = jQuery.queue( this, type, data );

					// Ensure a hooks for this queue
					jQuery._queueHooks( this, type );

					if ( type === "fx" && queue[ 0 ] !== "inprogress" ) {
						jQuery.dequeue( this, type );
					}
				} );
		},
		dequeue: function( type ) {
			return this.each( function() {
				jQuery.dequeue( this, type );
			} );
		},
		clearQueue: function( type ) {
			return this.queue( type || "fx", [] );
		},

		// Get a promise resolved when queues of a certain type
		// are emptied (fx is the type by default)
		promise: function( type, obj ) {
			var tmp,
				count = 1,
				defer = jQuery.Deferred(),
				elements = this,
				i = this.length,
				resolve = function() {
					if ( !( --count ) ) {
						defer.resolveWith( elements, [ elements ] );
					}
				};

			if ( typeof type !== "string" ) {
				obj = type;
				type = undefined;
			}
			type = type || "fx";

			while ( i-- ) {
				tmp = dataPriv.get( elements[ i ], type + "queueHooks" );
				if ( tmp && tmp.empty ) {
					count++;
					tmp.empty.add( resolve );
				}
			}
			resolve();
			return defer.promise( obj );
		}
	} );
	var pnum = ( /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/ ).source;

	var rcssNum = new RegExp( "^(?:([+-])=|)(" + pnum + ")([a-z%]*)$", "i" );


	var cssExpand = [ "Top", "Right", "Bottom", "Left" ];

	var isHidden = function( elem, el ) {

			// isHidden might be called from jQuery#filter function;
			// in that case, element will be second argument
			elem = el || elem;
			return jQuery.css( elem, "display" ) === "none" ||
				!jQuery.contains( elem.ownerDocument, elem );
		};



	function adjustCSS( elem, prop, valueParts, tween ) {
		var adjusted,
			scale = 1,
			maxIterations = 20,
			currentValue = tween ?
				function() { return tween.cur(); } :
				function() { return jQuery.css( elem, prop, "" ); },
			initial = currentValue(),
			unit = valueParts && valueParts[ 3 ] || ( jQuery.cssNumber[ prop ] ? "" : "px" ),

			// Starting value computation is required for potential unit mismatches
			initialInUnit = ( jQuery.cssNumber[ prop ] || unit !== "px" && +initial ) &&
				rcssNum.exec( jQuery.css( elem, prop ) );

		if ( initialInUnit && initialInUnit[ 3 ] !== unit ) {

			// Trust units reported by jQuery.css
			unit = unit || initialInUnit[ 3 ];

			// Make sure we update the tween properties later on
			valueParts = valueParts || [];

			// Iteratively approximate from a nonzero starting point
			initialInUnit = +initial || 1;

			do {

				// If previous iteration zeroed out, double until we get *something*.
				// Use string for doubling so we don't accidentally see scale as unchanged below
				scale = scale || ".5";

				// Adjust and apply
				initialInUnit = initialInUnit / scale;
				jQuery.style( elem, prop, initialInUnit + unit );

			// Update scale, tolerating zero or NaN from tween.cur()
			// Break the loop if scale is unchanged or perfect, or if we've just had enough.
			} while (
				scale !== ( scale = currentValue() / initial ) && scale !== 1 && --maxIterations
			);
		}

		if ( valueParts ) {
			initialInUnit = +initialInUnit || +initial || 0;

			// Apply relative offset (+=/-=) if specified
			adjusted = valueParts[ 1 ] ?
				initialInUnit + ( valueParts[ 1 ] + 1 ) * valueParts[ 2 ] :
				+valueParts[ 2 ];
			if ( tween ) {
				tween.unit = unit;
				tween.start = initialInUnit;
				tween.end = adjusted;
			}
		}
		return adjusted;
	}
	var rcheckableType = ( /^(?:checkbox|radio)$/i );

	var rtagName = ( /<([\w:-]+)/ );

	var rscriptType = ( /^$|\/(?:java|ecma)script/i );



	// We have to close these tags to support XHTML (#13200)
	var wrapMap = {

		// Support: IE9
		option: [ 1, "<select multiple='multiple'>", "</select>" ],

		// XHTML parsers do not magically insert elements in the
		// same way that tag soup parsers do. So we cannot shorten
		// this by omitting <tbody> or other required elements.
		thead: [ 1, "<table>", "</table>" ],
		col: [ 2, "<table><colgroup>", "</colgroup></table>" ],
		tr: [ 2, "<table><tbody>", "</tbody></table>" ],
		td: [ 3, "<table><tbody><tr>", "</tr></tbody></table>" ],

		_default: [ 0, "", "" ]
	};

	// Support: IE9
	wrapMap.optgroup = wrapMap.option;

	wrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;
	wrapMap.th = wrapMap.td;


	function getAll( context, tag ) {

		// Support: IE9-11+
		// Use typeof to avoid zero-argument method invocation on host objects (#15151)
		var ret = typeof context.getElementsByTagName !== "undefined" ?
				context.getElementsByTagName( tag || "*" ) :
				typeof context.querySelectorAll !== "undefined" ?
					context.querySelectorAll( tag || "*" ) :
				[];

		return tag === undefined || tag && jQuery.nodeName( context, tag ) ?
			jQuery.merge( [ context ], ret ) :
			ret;
	}


	// Mark scripts as having already been evaluated
	function setGlobalEval( elems, refElements ) {
		var i = 0,
			l = elems.length;

		for ( ; i < l; i++ ) {
			dataPriv.set(
				elems[ i ],
				"globalEval",
				!refElements || dataPriv.get( refElements[ i ], "globalEval" )
			);
		}
	}


	var rhtml = /<|&#?\w+;/;

	function buildFragment( elems, context, scripts, selection, ignored ) {
		var elem, tmp, tag, wrap, contains, j,
			fragment = context.createDocumentFragment(),
			nodes = [],
			i = 0,
			l = elems.length;

		for ( ; i < l; i++ ) {
			elem = elems[ i ];

			if ( elem || elem === 0 ) {

				// Add nodes directly
				if ( jQuery.type( elem ) === "object" ) {

					// Support: Android<4.1, PhantomJS<2
					// push.apply(_, arraylike) throws on ancient WebKit
					jQuery.merge( nodes, elem.nodeType ? [ elem ] : elem );

				// Convert non-html into a text node
				} else if ( !rhtml.test( elem ) ) {
					nodes.push( context.createTextNode( elem ) );

				// Convert html into DOM nodes
				} else {
					tmp = tmp || fragment.appendChild( context.createElement( "div" ) );

					// Deserialize a standard representation
					tag = ( rtagName.exec( elem ) || [ "", "" ] )[ 1 ].toLowerCase();
					wrap = wrapMap[ tag ] || wrapMap._default;
					tmp.innerHTML = wrap[ 1 ] + jQuery.htmlPrefilter( elem ) + wrap[ 2 ];

					// Descend through wrappers to the right content
					j = wrap[ 0 ];
					while ( j-- ) {
						tmp = tmp.lastChild;
					}

					// Support: Android<4.1, PhantomJS<2
					// push.apply(_, arraylike) throws on ancient WebKit
					jQuery.merge( nodes, tmp.childNodes );

					// Remember the top-level container
					tmp = fragment.firstChild;

					// Ensure the created nodes are orphaned (#12392)
					tmp.textContent = "";
				}
			}
		}

		// Remove wrapper from fragment
		fragment.textContent = "";

		i = 0;
		while ( ( elem = nodes[ i++ ] ) ) {

			// Skip elements already in the context collection (trac-4087)
			if ( selection && jQuery.inArray( elem, selection ) > -1 ) {
				if ( ignored ) {
					ignored.push( elem );
				}
				continue;
			}

			contains = jQuery.contains( elem.ownerDocument, elem );

			// Append to fragment
			tmp = getAll( fragment.appendChild( elem ), "script" );

			// Preserve script evaluation history
			if ( contains ) {
				setGlobalEval( tmp );
			}

			// Capture executables
			if ( scripts ) {
				j = 0;
				while ( ( elem = tmp[ j++ ] ) ) {
					if ( rscriptType.test( elem.type || "" ) ) {
						scripts.push( elem );
					}
				}
			}
		}

		return fragment;
	}


	( function() {
		var fragment = document.createDocumentFragment(),
			div = fragment.appendChild( document.createElement( "div" ) ),
			input = document.createElement( "input" );

		// Support: Android 4.0-4.3, Safari<=5.1
		// Check state lost if the name is set (#11217)
		// Support: Windows Web Apps (WWA)
		// `name` and `type` must use .setAttribute for WWA (#14901)
		input.setAttribute( "type", "radio" );
		input.setAttribute( "checked", "checked" );
		input.setAttribute( "name", "t" );

		div.appendChild( input );

		// Support: Safari<=5.1, Android<4.2
		// Older WebKit doesn't clone checked state correctly in fragments
		support.checkClone = div.cloneNode( true ).cloneNode( true ).lastChild.checked;

		// Support: IE<=11+
		// Make sure textarea (and checkbox) defaultValue is properly cloned
		div.innerHTML = "<textarea>x</textarea>";
		support.noCloneChecked = !!div.cloneNode( true ).lastChild.defaultValue;
	} )();


	var
		rkeyEvent = /^key/,
		rmouseEvent = /^(?:mouse|pointer|contextmenu|drag|drop)|click/,
		rtypenamespace = /^([^.]*)(?:\.(.+)|)/;

	function returnTrue() {
		return true;
	}

	function returnFalse() {
		return false;
	}

	// Support: IE9
	// See #13393 for more info
	function safeActiveElement() {
		try {
			return document.activeElement;
		} catch ( err ) { }
	}

	function on( elem, types, selector, data, fn, one ) {
		var origFn, type;

		// Types can be a map of types/handlers
		if ( typeof types === "object" ) {

			// ( types-Object, selector, data )
			if ( typeof selector !== "string" ) {

				// ( types-Object, data )
				data = data || selector;
				selector = undefined;
			}
			for ( type in types ) {
				on( elem, type, selector, data, types[ type ], one );
			}
			return elem;
		}

		if ( data == null && fn == null ) {

			// ( types, fn )
			fn = selector;
			data = selector = undefined;
		} else if ( fn == null ) {
			if ( typeof selector === "string" ) {

				// ( types, selector, fn )
				fn = data;
				data = undefined;
			} else {

				// ( types, data, fn )
				fn = data;
				data = selector;
				selector = undefined;
			}
		}
		if ( fn === false ) {
			fn = returnFalse;
		} else if ( !fn ) {
			return elem;
		}

		if ( one === 1 ) {
			origFn = fn;
			fn = function( event ) {

				// Can use an empty set, since event contains the info
				jQuery().off( event );
				return origFn.apply( this, arguments );
			};

			// Use same guid so caller can remove using origFn
			fn.guid = origFn.guid || ( origFn.guid = jQuery.guid++ );
		}
		return elem.each( function() {
			jQuery.event.add( this, types, fn, data, selector );
		} );
	}

	/*
	 * Helper functions for managing events -- not part of the public interface.
	 * Props to Dean Edwards' addEvent library for many of the ideas.
	 */
	jQuery.event = {

		global: {},

		add: function( elem, types, handler, data, selector ) {

			var handleObjIn, eventHandle, tmp,
				events, t, handleObj,
				special, handlers, type, namespaces, origType,
				elemData = dataPriv.get( elem );

			// Don't attach events to noData or text/comment nodes (but allow plain objects)
			if ( !elemData ) {
				return;
			}

			// Caller can pass in an object of custom data in lieu of the handler
			if ( handler.handler ) {
				handleObjIn = handler;
				handler = handleObjIn.handler;
				selector = handleObjIn.selector;
			}

			// Make sure that the handler has a unique ID, used to find/remove it later
			if ( !handler.guid ) {
				handler.guid = jQuery.guid++;
			}

			// Init the element's event structure and main handler, if this is the first
			if ( !( events = elemData.events ) ) {
				events = elemData.events = {};
			}
			if ( !( eventHandle = elemData.handle ) ) {
				eventHandle = elemData.handle = function( e ) {

					// Discard the second event of a jQuery.event.trigger() and
					// when an event is called after a page has unloaded
					return typeof jQuery !== "undefined" && jQuery.event.triggered !== e.type ?
						jQuery.event.dispatch.apply( elem, arguments ) : undefined;
				};
			}

			// Handle multiple events separated by a space
			types = ( types || "" ).match( rnotwhite ) || [ "" ];
			t = types.length;
			while ( t-- ) {
				tmp = rtypenamespace.exec( types[ t ] ) || [];
				type = origType = tmp[ 1 ];
				namespaces = ( tmp[ 2 ] || "" ).split( "." ).sort();

				// There *must* be a type, no attaching namespace-only handlers
				if ( !type ) {
					continue;
				}

				// If event changes its type, use the special event handlers for the changed type
				special = jQuery.event.special[ type ] || {};

				// If selector defined, determine special event api type, otherwise given type
				type = ( selector ? special.delegateType : special.bindType ) || type;

				// Update special based on newly reset type
				special = jQuery.event.special[ type ] || {};

				// handleObj is passed to all event handlers
				handleObj = jQuery.extend( {
					type: type,
					origType: origType,
					data: data,
					handler: handler,
					guid: handler.guid,
					selector: selector,
					needsContext: selector && jQuery.expr.match.needsContext.test( selector ),
					namespace: namespaces.join( "." )
				}, handleObjIn );

				// Init the event handler queue if we're the first
				if ( !( handlers = events[ type ] ) ) {
					handlers = events[ type ] = [];
					handlers.delegateCount = 0;

					// Only use addEventListener if the special events handler returns false
					if ( !special.setup ||
						special.setup.call( elem, data, namespaces, eventHandle ) === false ) {

						if ( elem.addEventListener ) {
							elem.addEventListener( type, eventHandle );
						}
					}
				}

				if ( special.add ) {
					special.add.call( elem, handleObj );

					if ( !handleObj.handler.guid ) {
						handleObj.handler.guid = handler.guid;
					}
				}

				// Add to the element's handler list, delegates in front
				if ( selector ) {
					handlers.splice( handlers.delegateCount++, 0, handleObj );
				} else {
					handlers.push( handleObj );
				}

				// Keep track of which events have ever been used, for event optimization
				jQuery.event.global[ type ] = true;
			}

		},

		// Detach an event or set of events from an element
		remove: function( elem, types, handler, selector, mappedTypes ) {

			var j, origCount, tmp,
				events, t, handleObj,
				special, handlers, type, namespaces, origType,
				elemData = dataPriv.hasData( elem ) && dataPriv.get( elem );

			if ( !elemData || !( events = elemData.events ) ) {
				return;
			}

			// Once for each type.namespace in types; type may be omitted
			types = ( types || "" ).match( rnotwhite ) || [ "" ];
			t = types.length;
			while ( t-- ) {
				tmp = rtypenamespace.exec( types[ t ] ) || [];
				type = origType = tmp[ 1 ];
				namespaces = ( tmp[ 2 ] || "" ).split( "." ).sort();

				// Unbind all events (on this namespace, if provided) for the element
				if ( !type ) {
					for ( type in events ) {
						jQuery.event.remove( elem, type + types[ t ], handler, selector, true );
					}
					continue;
				}

				special = jQuery.event.special[ type ] || {};
				type = ( selector ? special.delegateType : special.bindType ) || type;
				handlers = events[ type ] || [];
				tmp = tmp[ 2 ] &&
					new RegExp( "(^|\\.)" + namespaces.join( "\\.(?:.*\\.|)" ) + "(\\.|$)" );

				// Remove matching events
				origCount = j = handlers.length;
				while ( j-- ) {
					handleObj = handlers[ j ];

					if ( ( mappedTypes || origType === handleObj.origType ) &&
						( !handler || handler.guid === handleObj.guid ) &&
						( !tmp || tmp.test( handleObj.namespace ) ) &&
						( !selector || selector === handleObj.selector ||
							selector === "**" && handleObj.selector ) ) {
						handlers.splice( j, 1 );

						if ( handleObj.selector ) {
							handlers.delegateCount--;
						}
						if ( special.remove ) {
							special.remove.call( elem, handleObj );
						}
					}
				}

				// Remove generic event handler if we removed something and no more handlers exist
				// (avoids potential for endless recursion during removal of special event handlers)
				if ( origCount && !handlers.length ) {
					if ( !special.teardown ||
						special.teardown.call( elem, namespaces, elemData.handle ) === false ) {

						jQuery.removeEvent( elem, type, elemData.handle );
					}

					delete events[ type ];
				}
			}

			// Remove data and the expando if it's no longer used
			if ( jQuery.isEmptyObject( events ) ) {
				dataPriv.remove( elem, "handle events" );
			}
		},

		dispatch: function( event ) {

			// Make a writable jQuery.Event from the native event object
			event = jQuery.event.fix( event );

			var i, j, ret, matched, handleObj,
				handlerQueue = [],
				args = slice.call( arguments ),
				handlers = ( dataPriv.get( this, "events" ) || {} )[ event.type ] || [],
				special = jQuery.event.special[ event.type ] || {};

			// Use the fix-ed jQuery.Event rather than the (read-only) native event
			args[ 0 ] = event;
			event.delegateTarget = this;

			// Call the preDispatch hook for the mapped type, and let it bail if desired
			if ( special.preDispatch && special.preDispatch.call( this, event ) === false ) {
				return;
			}

			// Determine handlers
			handlerQueue = jQuery.event.handlers.call( this, event, handlers );

			// Run delegates first; they may want to stop propagation beneath us
			i = 0;
			while ( ( matched = handlerQueue[ i++ ] ) && !event.isPropagationStopped() ) {
				event.currentTarget = matched.elem;

				j = 0;
				while ( ( handleObj = matched.handlers[ j++ ] ) &&
					!event.isImmediatePropagationStopped() ) {

					// Triggered event must either 1) have no namespace, or 2) have namespace(s)
					// a subset or equal to those in the bound event (both can have no namespace).
					if ( !event.rnamespace || event.rnamespace.test( handleObj.namespace ) ) {

						event.handleObj = handleObj;
						event.data = handleObj.data;

						ret = ( ( jQuery.event.special[ handleObj.origType ] || {} ).handle ||
							handleObj.handler ).apply( matched.elem, args );

						if ( ret !== undefined ) {
							if ( ( event.result = ret ) === false ) {
								event.preventDefault();
								event.stopPropagation();
							}
						}
					}
				}
			}

			// Call the postDispatch hook for the mapped type
			if ( special.postDispatch ) {
				special.postDispatch.call( this, event );
			}

			return event.result;
		},

		handlers: function( event, handlers ) {
			var i, matches, sel, handleObj,
				handlerQueue = [],
				delegateCount = handlers.delegateCount,
				cur = event.target;

			// Support (at least): Chrome, IE9
			// Find delegate handlers
			// Black-hole SVG <use> instance trees (#13180)
			//
			// Support: Firefox<=42+
			// Avoid non-left-click in FF but don't block IE radio events (#3861, gh-2343)
			if ( delegateCount && cur.nodeType &&
				( event.type !== "click" || isNaN( event.button ) || event.button < 1 ) ) {

				for ( ; cur !== this; cur = cur.parentNode || this ) {

					// Don't check non-elements (#13208)
					// Don't process clicks on disabled elements (#6911, #8165, #11382, #11764)
					if ( cur.nodeType === 1 && ( cur.disabled !== true || event.type !== "click" ) ) {
						matches = [];
						for ( i = 0; i < delegateCount; i++ ) {
							handleObj = handlers[ i ];

							// Don't conflict with Object.prototype properties (#13203)
							sel = handleObj.selector + " ";

							if ( matches[ sel ] === undefined ) {
								matches[ sel ] = handleObj.needsContext ?
									jQuery( sel, this ).index( cur ) > -1 :
									jQuery.find( sel, this, null, [ cur ] ).length;
							}
							if ( matches[ sel ] ) {
								matches.push( handleObj );
							}
						}
						if ( matches.length ) {
							handlerQueue.push( { elem: cur, handlers: matches } );
						}
					}
				}
			}

			// Add the remaining (directly-bound) handlers
			if ( delegateCount < handlers.length ) {
				handlerQueue.push( { elem: this, handlers: handlers.slice( delegateCount ) } );
			}

			return handlerQueue;
		},

		// Includes some event props shared by KeyEvent and MouseEvent
		props: ( "altKey bubbles cancelable ctrlKey currentTarget detail eventPhase " +
			"metaKey relatedTarget shiftKey target timeStamp view which" ).split( " " ),

		fixHooks: {},

		keyHooks: {
			props: "char charCode key keyCode".split( " " ),
			filter: function( event, original ) {

				// Add which for key events
				if ( event.which == null ) {
					event.which = original.charCode != null ? original.charCode : original.keyCode;
				}

				return event;
			}
		},

		mouseHooks: {
			props: ( "button buttons clientX clientY offsetX offsetY pageX pageY " +
				"screenX screenY toElement" ).split( " " ),
			filter: function( event, original ) {
				var eventDoc, doc, body,
					button = original.button;

				// Calculate pageX/Y if missing and clientX/Y available
				if ( event.pageX == null && original.clientX != null ) {
					eventDoc = event.target.ownerDocument || document;
					doc = eventDoc.documentElement;
					body = eventDoc.body;

					event.pageX = original.clientX +
						( doc && doc.scrollLeft || body && body.scrollLeft || 0 ) -
						( doc && doc.clientLeft || body && body.clientLeft || 0 );
					event.pageY = original.clientY +
						( doc && doc.scrollTop  || body && body.scrollTop  || 0 ) -
						( doc && doc.clientTop  || body && body.clientTop  || 0 );
				}

				// Add which for click: 1 === left; 2 === middle; 3 === right
				// Note: button is not normalized, so don't use it
				if ( !event.which && button !== undefined ) {
					event.which = ( button & 1 ? 1 : ( button & 2 ? 3 : ( button & 4 ? 2 : 0 ) ) );
				}

				return event;
			}
		},

		fix: function( event ) {
			if ( event[ jQuery.expando ] ) {
				return event;
			}

			// Create a writable copy of the event object and normalize some properties
			var i, prop, copy,
				type = event.type,
				originalEvent = event,
				fixHook = this.fixHooks[ type ];

			if ( !fixHook ) {
				this.fixHooks[ type ] = fixHook =
					rmouseEvent.test( type ) ? this.mouseHooks :
					rkeyEvent.test( type ) ? this.keyHooks :
					{};
			}
			copy = fixHook.props ? this.props.concat( fixHook.props ) : this.props;

			event = new jQuery.Event( originalEvent );

			i = copy.length;
			while ( i-- ) {
				prop = copy[ i ];
				event[ prop ] = originalEvent[ prop ];
			}

			// Support: Cordova 2.5 (WebKit) (#13255)
			// All events should have a target; Cordova deviceready doesn't
			if ( !event.target ) {
				event.target = document;
			}

			// Support: Safari 6.0+, Chrome<28
			// Target should not be a text node (#504, #13143)
			if ( event.target.nodeType === 3 ) {
				event.target = event.target.parentNode;
			}

			return fixHook.filter ? fixHook.filter( event, originalEvent ) : event;
		},

		special: {
			load: {

				// Prevent triggered image.load events from bubbling to window.load
				noBubble: true
			},
			focus: {

				// Fire native event if possible so blur/focus sequence is correct
				trigger: function() {
					if ( this !== safeActiveElement() && this.focus ) {
						this.focus();
						return false;
					}
				},
				delegateType: "focusin"
			},
			blur: {
				trigger: function() {
					if ( this === safeActiveElement() && this.blur ) {
						this.blur();
						return false;
					}
				},
				delegateType: "focusout"
			},
			click: {

				// For checkbox, fire native event so checked state will be right
				trigger: function() {
					if ( this.type === "checkbox" && this.click && jQuery.nodeName( this, "input" ) ) {
						this.click();
						return false;
					}
				},

				// For cross-browser consistency, don't fire native .click() on links
				_default: function( event ) {
					return jQuery.nodeName( event.target, "a" );
				}
			},

			beforeunload: {
				postDispatch: function( event ) {

					// Support: Firefox 20+
					// Firefox doesn't alert if the returnValue field is not set.
					if ( event.result !== undefined && event.originalEvent ) {
						event.originalEvent.returnValue = event.result;
					}
				}
			}
		}
	};

	jQuery.removeEvent = function( elem, type, handle ) {

		// This "if" is needed for plain objects
		if ( elem.removeEventListener ) {
			elem.removeEventListener( type, handle );
		}
	};

	jQuery.Event = function( src, props ) {

		// Allow instantiation without the 'new' keyword
		if ( !( this instanceof jQuery.Event ) ) {
			return new jQuery.Event( src, props );
		}

		// Event object
		if ( src && src.type ) {
			this.originalEvent = src;
			this.type = src.type;

			// Events bubbling up the document may have been marked as prevented
			// by a handler lower down the tree; reflect the correct value.
			this.isDefaultPrevented = src.defaultPrevented ||
					src.defaultPrevented === undefined &&

					// Support: Android<4.0
					src.returnValue === false ?
				returnTrue :
				returnFalse;

		// Event type
		} else {
			this.type = src;
		}

		// Put explicitly provided properties onto the event object
		if ( props ) {
			jQuery.extend( this, props );
		}

		// Create a timestamp if incoming event doesn't have one
		this.timeStamp = src && src.timeStamp || jQuery.now();

		// Mark it as fixed
		this[ jQuery.expando ] = true;
	};

	// jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding
	// http://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html
	jQuery.Event.prototype = {
		constructor: jQuery.Event,
		isDefaultPrevented: returnFalse,
		isPropagationStopped: returnFalse,
		isImmediatePropagationStopped: returnFalse,
		isSimulated: false,

		preventDefault: function() {
			var e = this.originalEvent;

			this.isDefaultPrevented = returnTrue;

			if ( e && !this.isSimulated ) {
				e.preventDefault();
			}
		},
		stopPropagation: function() {
			var e = this.originalEvent;

			this.isPropagationStopped = returnTrue;

			if ( e && !this.isSimulated ) {
				e.stopPropagation();
			}
		},
		stopImmediatePropagation: function() {
			var e = this.originalEvent;

			this.isImmediatePropagationStopped = returnTrue;

			if ( e && !this.isSimulated ) {
				e.stopImmediatePropagation();
			}

			this.stopPropagation();
		}
	};

	// Create mouseenter/leave events using mouseover/out and event-time checks
	// so that event delegation works in jQuery.
	// Do the same for pointerenter/pointerleave and pointerover/pointerout
	//
	// Support: Safari 7 only
	// Safari sends mouseenter too often; see:
	// https://code.google.com/p/chromium/issues/detail?id=470258
	// for the description of the bug (it existed in older Chrome versions as well).
	jQuery.each( {
		mouseenter: "mouseover",
		mouseleave: "mouseout",
		pointerenter: "pointerover",
		pointerleave: "pointerout"
	}, function( orig, fix ) {
		jQuery.event.special[ orig ] = {
			delegateType: fix,
			bindType: fix,

			handle: function( event ) {
				var ret,
					target = this,
					related = event.relatedTarget,
					handleObj = event.handleObj;

				// For mouseenter/leave call the handler if related is outside the target.
				// NB: No relatedTarget if the mouse left/entered the browser window
				if ( !related || ( related !== target && !jQuery.contains( target, related ) ) ) {
					event.type = handleObj.origType;
					ret = handleObj.handler.apply( this, arguments );
					event.type = fix;
				}
				return ret;
			}
		};
	} );

	jQuery.fn.extend( {
		on: function( types, selector, data, fn ) {
			return on( this, types, selector, data, fn );
		},
		one: function( types, selector, data, fn ) {
			return on( this, types, selector, data, fn, 1 );
		},
		off: function( types, selector, fn ) {
			var handleObj, type;
			if ( types && types.preventDefault && types.handleObj ) {

				// ( event )  dispatched jQuery.Event
				handleObj = types.handleObj;
				jQuery( types.delegateTarget ).off(
					handleObj.namespace ?
						handleObj.origType + "." + handleObj.namespace :
						handleObj.origType,
					handleObj.selector,
					handleObj.handler
				);
				return this;
			}
			if ( typeof types === "object" ) {

				// ( types-object [, selector] )
				for ( type in types ) {
					this.off( type, selector, types[ type ] );
				}
				return this;
			}
			if ( selector === false || typeof selector === "function" ) {

				// ( types [, fn] )
				fn = selector;
				selector = undefined;
			}
			if ( fn === false ) {
				fn = returnFalse;
			}
			return this.each( function() {
				jQuery.event.remove( this, types, fn, selector );
			} );
		}
	} );


	var
		rxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:-]+)[^>]*)\/>/gi,

		// Support: IE 10-11, Edge 10240+
		// In IE/Edge using regex groups here causes severe slowdowns.
		// See https://connect.microsoft.com/IE/feedback/details/1736512/
		rnoInnerhtml = /<script|<style|<link/i,

		// checked="checked" or checked
		rchecked = /checked\s*(?:[^=]|=\s*.checked.)/i,
		rscriptTypeMasked = /^true\/(.*)/,
		rcleanScript = /^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g;

	// Manipulating tables requires a tbody
	function manipulationTarget( elem, content ) {
		return jQuery.nodeName( elem, "table" ) &&
			jQuery.nodeName( content.nodeType !== 11 ? content : content.firstChild, "tr" ) ?

			elem.getElementsByTagName( "tbody" )[ 0 ] ||
				elem.appendChild( elem.ownerDocument.createElement( "tbody" ) ) :
			elem;
	}

	// Replace/restore the type attribute of script elements for safe DOM manipulation
	function disableScript( elem ) {
		elem.type = ( elem.getAttribute( "type" ) !== null ) + "/" + elem.type;
		return elem;
	}
	function restoreScript( elem ) {
		var match = rscriptTypeMasked.exec( elem.type );

		if ( match ) {
			elem.type = match[ 1 ];
		} else {
			elem.removeAttribute( "type" );
		}

		return elem;
	}

	function cloneCopyEvent( src, dest ) {
		var i, l, type, pdataOld, pdataCur, udataOld, udataCur, events;

		if ( dest.nodeType !== 1 ) {
			return;
		}

		// 1. Copy private data: events, handlers, etc.
		if ( dataPriv.hasData( src ) ) {
			pdataOld = dataPriv.access( src );
			pdataCur = dataPriv.set( dest, pdataOld );
			events = pdataOld.events;

			if ( events ) {
				delete pdataCur.handle;
				pdataCur.events = {};

				for ( type in events ) {
					for ( i = 0, l = events[ type ].length; i < l; i++ ) {
						jQuery.event.add( dest, type, events[ type ][ i ] );
					}
				}
			}
		}

		// 2. Copy user data
		if ( dataUser.hasData( src ) ) {
			udataOld = dataUser.access( src );
			udataCur = jQuery.extend( {}, udataOld );

			dataUser.set( dest, udataCur );
		}
	}

	// Fix IE bugs, see support tests
	function fixInput( src, dest ) {
		var nodeName = dest.nodeName.toLowerCase();

		// Fails to persist the checked state of a cloned checkbox or radio button.
		if ( nodeName === "input" && rcheckableType.test( src.type ) ) {
			dest.checked = src.checked;

		// Fails to return the selected option to the default selected state when cloning options
		} else if ( nodeName === "input" || nodeName === "textarea" ) {
			dest.defaultValue = src.defaultValue;
		}
	}

	function domManip( collection, args, callback, ignored ) {

		// Flatten any nested arrays
		args = concat.apply( [], args );

		var fragment, first, scripts, hasScripts, node, doc,
			i = 0,
			l = collection.length,
			iNoClone = l - 1,
			value = args[ 0 ],
			isFunction = jQuery.isFunction( value );

		// We can't cloneNode fragments that contain checked, in WebKit
		if ( isFunction ||
				( l > 1 && typeof value === "string" &&
					!support.checkClone && rchecked.test( value ) ) ) {
			return collection.each( function( index ) {
				var self = collection.eq( index );
				if ( isFunction ) {
					args[ 0 ] = value.call( this, index, self.html() );
				}
				domManip( self, args, callback, ignored );
			} );
		}

		if ( l ) {
			fragment = buildFragment( args, collection[ 0 ].ownerDocument, false, collection, ignored );
			first = fragment.firstChild;

			if ( fragment.childNodes.length === 1 ) {
				fragment = first;
			}

			// Require either new content or an interest in ignored elements to invoke the callback
			if ( first || ignored ) {
				scripts = jQuery.map( getAll( fragment, "script" ), disableScript );
				hasScripts = scripts.length;

				// Use the original fragment for the last item
				// instead of the first because it can end up
				// being emptied incorrectly in certain situations (#8070).
				for ( ; i < l; i++ ) {
					node = fragment;

					if ( i !== iNoClone ) {
						node = jQuery.clone( node, true, true );

						// Keep references to cloned scripts for later restoration
						if ( hasScripts ) {

							// Support: Android<4.1, PhantomJS<2
							// push.apply(_, arraylike) throws on ancient WebKit
							jQuery.merge( scripts, getAll( node, "script" ) );
						}
					}

					callback.call( collection[ i ], node, i );
				}

				if ( hasScripts ) {
					doc = scripts[ scripts.length - 1 ].ownerDocument;

					// Reenable scripts
					jQuery.map( scripts, restoreScript );

					// Evaluate executable scripts on first document insertion
					for ( i = 0; i < hasScripts; i++ ) {
						node = scripts[ i ];
						if ( rscriptType.test( node.type || "" ) &&
							!dataPriv.access( node, "globalEval" ) &&
							jQuery.contains( doc, node ) ) {

							if ( node.src ) {

								// Optional AJAX dependency, but won't run scripts if not present
								if ( jQuery._evalUrl ) {
									jQuery._evalUrl( node.src );
								}
							} else {
								jQuery.globalEval( node.textContent.replace( rcleanScript, "" ) );
							}
						}
					}
				}
			}
		}

		return collection;
	}

	function remove( elem, selector, keepData ) {
		var node,
			nodes = selector ? jQuery.filter( selector, elem ) : elem,
			i = 0;

		for ( ; ( node = nodes[ i ] ) != null; i++ ) {
			if ( !keepData && node.nodeType === 1 ) {
				jQuery.cleanData( getAll( node ) );
			}

			if ( node.parentNode ) {
				if ( keepData && jQuery.contains( node.ownerDocument, node ) ) {
					setGlobalEval( getAll( node, "script" ) );
				}
				node.parentNode.removeChild( node );
			}
		}

		return elem;
	}

	jQuery.extend( {
		htmlPrefilter: function( html ) {
			return html.replace( rxhtmlTag, "<$1></$2>" );
		},

		clone: function( elem, dataAndEvents, deepDataAndEvents ) {
			var i, l, srcElements, destElements,
				clone = elem.cloneNode( true ),
				inPage = jQuery.contains( elem.ownerDocument, elem );

			// Fix IE cloning issues
			if ( !support.noCloneChecked && ( elem.nodeType === 1 || elem.nodeType === 11 ) &&
					!jQuery.isXMLDoc( elem ) ) {

				// We eschew Sizzle here for performance reasons: http://jsperf.com/getall-vs-sizzle/2
				destElements = getAll( clone );
				srcElements = getAll( elem );

				for ( i = 0, l = srcElements.length; i < l; i++ ) {
					fixInput( srcElements[ i ], destElements[ i ] );
				}
			}

			// Copy the events from the original to the clone
			if ( dataAndEvents ) {
				if ( deepDataAndEvents ) {
					srcElements = srcElements || getAll( elem );
					destElements = destElements || getAll( clone );

					for ( i = 0, l = srcElements.length; i < l; i++ ) {
						cloneCopyEvent( srcElements[ i ], destElements[ i ] );
					}
				} else {
					cloneCopyEvent( elem, clone );
				}
			}

			// Preserve script evaluation history
			destElements = getAll( clone, "script" );
			if ( destElements.length > 0 ) {
				setGlobalEval( destElements, !inPage && getAll( elem, "script" ) );
			}

			// Return the cloned set
			return clone;
		},

		cleanData: function( elems ) {
			var data, elem, type,
				special = jQuery.event.special,
				i = 0;

			for ( ; ( elem = elems[ i ] ) !== undefined; i++ ) {
				if ( acceptData( elem ) ) {
					if ( ( data = elem[ dataPriv.expando ] ) ) {
						if ( data.events ) {
							for ( type in data.events ) {
								if ( special[ type ] ) {
									jQuery.event.remove( elem, type );

								// This is a shortcut to avoid jQuery.event.remove's overhead
								} else {
									jQuery.removeEvent( elem, type, data.handle );
								}
							}
						}

						// Support: Chrome <= 35-45+
						// Assign undefined instead of using delete, see Data#remove
						elem[ dataPriv.expando ] = undefined;
					}
					if ( elem[ dataUser.expando ] ) {

						// Support: Chrome <= 35-45+
						// Assign undefined instead of using delete, see Data#remove
						elem[ dataUser.expando ] = undefined;
					}
				}
			}
		}
	} );

	jQuery.fn.extend( {

		// Keep domManip exposed until 3.0 (gh-2225)
		domManip: domManip,

		detach: function( selector ) {
			return remove( this, selector, true );
		},

		remove: function( selector ) {
			return remove( this, selector );
		},

		text: function( value ) {
			return access( this, function( value ) {
				return value === undefined ?
					jQuery.text( this ) :
					this.empty().each( function() {
						if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
							this.textContent = value;
						}
					} );
			}, null, value, arguments.length );
		},

		append: function() {
			return domManip( this, arguments, function( elem ) {
				if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
					var target = manipulationTarget( this, elem );
					target.appendChild( elem );
				}
			} );
		},

		prepend: function() {
			return domManip( this, arguments, function( elem ) {
				if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
					var target = manipulationTarget( this, elem );
					target.insertBefore( elem, target.firstChild );
				}
			} );
		},

		before: function() {
			return domManip( this, arguments, function( elem ) {
				if ( this.parentNode ) {
					this.parentNode.insertBefore( elem, this );
				}
			} );
		},

		after: function() {
			return domManip( this, arguments, function( elem ) {
				if ( this.parentNode ) {
					this.parentNode.insertBefore( elem, this.nextSibling );
				}
			} );
		},

		empty: function() {
			var elem,
				i = 0;

			for ( ; ( elem = this[ i ] ) != null; i++ ) {
				if ( elem.nodeType === 1 ) {

					// Prevent memory leaks
					jQuery.cleanData( getAll( elem, false ) );

					// Remove any remaining nodes
					elem.textContent = "";
				}
			}

			return this;
		},

		clone: function( dataAndEvents, deepDataAndEvents ) {
			dataAndEvents = dataAndEvents == null ? false : dataAndEvents;
			deepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;

			return this.map( function() {
				return jQuery.clone( this, dataAndEvents, deepDataAndEvents );
			} );
		},

		html: function( value ) {
			return access( this, function( value ) {
				var elem = this[ 0 ] || {},
					i = 0,
					l = this.length;

				if ( value === undefined && elem.nodeType === 1 ) {
					return elem.innerHTML;
				}

				// See if we can take a shortcut and just use innerHTML
				if ( typeof value === "string" && !rnoInnerhtml.test( value ) &&
					!wrapMap[ ( rtagName.exec( value ) || [ "", "" ] )[ 1 ].toLowerCase() ] ) {

					value = jQuery.htmlPrefilter( value );

					try {
						for ( ; i < l; i++ ) {
							elem = this[ i ] || {};

							// Remove element nodes and prevent memory leaks
							if ( elem.nodeType === 1 ) {
								jQuery.cleanData( getAll( elem, false ) );
								elem.innerHTML = value;
							}
						}

						elem = 0;

					// If using innerHTML throws an exception, use the fallback method
					} catch ( e ) {}
				}

				if ( elem ) {
					this.empty().append( value );
				}
			}, null, value, arguments.length );
		},

		replaceWith: function() {
			var ignored = [];

			// Make the changes, replacing each non-ignored context element with the new content
			return domManip( this, arguments, function( elem ) {
				var parent = this.parentNode;

				if ( jQuery.inArray( this, ignored ) < 0 ) {
					jQuery.cleanData( getAll( this ) );
					if ( parent ) {
						parent.replaceChild( elem, this );
					}
				}

			// Force callback invocation
			}, ignored );
		}
	} );

	jQuery.each( {
		appendTo: "append",
		prependTo: "prepend",
		insertBefore: "before",
		insertAfter: "after",
		replaceAll: "replaceWith"
	}, function( name, original ) {
		jQuery.fn[ name ] = function( selector ) {
			var elems,
				ret = [],
				insert = jQuery( selector ),
				last = insert.length - 1,
				i = 0;

			for ( ; i <= last; i++ ) {
				elems = i === last ? this : this.clone( true );
				jQuery( insert[ i ] )[ original ]( elems );

				// Support: QtWebKit
				// .get() because push.apply(_, arraylike) throws
				push.apply( ret, elems.get() );
			}

			return this.pushStack( ret );
		};
	} );


	var iframe,
		elemdisplay = {

			// Support: Firefox
			// We have to pre-define these values for FF (#10227)
			HTML: "block",
			BODY: "block"
		};

	/**
	 * Retrieve the actual display of a element
	 * @param {String} name nodeName of the element
	 * @param {Object} doc Document object
	 */

	// Called only from within defaultDisplay
	function actualDisplay( name, doc ) {
		var elem = jQuery( doc.createElement( name ) ).appendTo( doc.body ),

			display = jQuery.css( elem[ 0 ], "display" );

		// We don't have any data stored on the element,
		// so use "detach" method as fast way to get rid of the element
		elem.detach();

		return display;
	}

	/**
	 * Try to determine the default display value of an element
	 * @param {String} nodeName
	 */
	function defaultDisplay( nodeName ) {
		var doc = document,
			display = elemdisplay[ nodeName ];

		if ( !display ) {
			display = actualDisplay( nodeName, doc );

			// If the simple way fails, read from inside an iframe
			if ( display === "none" || !display ) {

				// Use the already-created iframe if possible
				iframe = ( iframe || jQuery( "<iframe frameborder='0' width='0' height='0'/>" ) )
					.appendTo( doc.documentElement );

				// Always write a new HTML skeleton so Webkit and Firefox don't choke on reuse
				doc = iframe[ 0 ].contentDocument;

				// Support: IE
				doc.write();
				doc.close();

				display = actualDisplay( nodeName, doc );
				iframe.detach();
			}

			// Store the correct default display
			elemdisplay[ nodeName ] = display;
		}

		return display;
	}
	var rmargin = ( /^margin/ );

	var rnumnonpx = new RegExp( "^(" + pnum + ")(?!px)[a-z%]+$", "i" );

	var getStyles = function( elem ) {

			// Support: IE<=11+, Firefox<=30+ (#15098, #14150)
			// IE throws on elements created in popups
			// FF meanwhile throws on frame elements through "defaultView.getComputedStyle"
			var view = elem.ownerDocument.defaultView;

			if ( !view || !view.opener ) {
				view = window;
			}

			return view.getComputedStyle( elem );
		};

	var swap = function( elem, options, callback, args ) {
		var ret, name,
			old = {};

		// Remember the old values, and insert the new ones
		for ( name in options ) {
			old[ name ] = elem.style[ name ];
			elem.style[ name ] = options[ name ];
		}

		ret = callback.apply( elem, args || [] );

		// Revert the old values
		for ( name in options ) {
			elem.style[ name ] = old[ name ];
		}

		return ret;
	};


	var documentElement = document.documentElement;



	( function() {
		var pixelPositionVal, boxSizingReliableVal, pixelMarginRightVal, reliableMarginLeftVal,
			container = document.createElement( "div" ),
			div = document.createElement( "div" );

		// Finish early in limited (non-browser) environments
		if ( !div.style ) {
			return;
		}

		// Support: IE9-11+
		// Style of cloned element affects source element cloned (#8908)
		div.style.backgroundClip = "content-box";
		div.cloneNode( true ).style.backgroundClip = "";
		support.clearCloneStyle = div.style.backgroundClip === "content-box";

		container.style.cssText = "border:0;width:8px;height:0;top:0;left:-9999px;" +
			"padding:0;margin-top:1px;position:absolute";
		container.appendChild( div );

		// Executing both pixelPosition & boxSizingReliable tests require only one layout
		// so they're executed at the same time to save the second computation.
		function computeStyleTests() {
			div.style.cssText =

				// Support: Firefox<29, Android 2.3
				// Vendor-prefix box-sizing
				"-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;" +
				"position:relative;display:block;" +
				"margin:auto;border:1px;padding:1px;" +
				"top:1%;width:50%";
			div.innerHTML = "";
			documentElement.appendChild( container );

			var divStyle = window.getComputedStyle( div );
			pixelPositionVal = divStyle.top !== "1%";
			reliableMarginLeftVal = divStyle.marginLeft === "2px";
			boxSizingReliableVal = divStyle.width === "4px";

			// Support: Android 4.0 - 4.3 only
			// Some styles come back with percentage values, even though they shouldn't
			div.style.marginRight = "50%";
			pixelMarginRightVal = divStyle.marginRight === "4px";

			documentElement.removeChild( container );
		}

		jQuery.extend( support, {
			pixelPosition: function() {

				// This test is executed only once but we still do memoizing
				// since we can use the boxSizingReliable pre-computing.
				// No need to check if the test was already performed, though.
				computeStyleTests();
				return pixelPositionVal;
			},
			boxSizingReliable: function() {
				if ( boxSizingReliableVal == null ) {
					computeStyleTests();
				}
				return boxSizingReliableVal;
			},
			pixelMarginRight: function() {

				// Support: Android 4.0-4.3
				// We're checking for boxSizingReliableVal here instead of pixelMarginRightVal
				// since that compresses better and they're computed together anyway.
				if ( boxSizingReliableVal == null ) {
					computeStyleTests();
				}
				return pixelMarginRightVal;
			},
			reliableMarginLeft: function() {

				// Support: IE <=8 only, Android 4.0 - 4.3 only, Firefox <=3 - 37
				if ( boxSizingReliableVal == null ) {
					computeStyleTests();
				}
				return reliableMarginLeftVal;
			},
			reliableMarginRight: function() {

				// Support: Android 2.3
				// Check if div with explicit width and no margin-right incorrectly
				// gets computed margin-right based on width of container. (#3333)
				// WebKit Bug 13343 - getComputedStyle returns wrong value for margin-right
				// This support function is only executed once so no memoizing is needed.
				var ret,
					marginDiv = div.appendChild( document.createElement( "div" ) );

				// Reset CSS: box-sizing; display; margin; border; padding
				marginDiv.style.cssText = div.style.cssText =

					// Support: Android 2.3
					// Vendor-prefix box-sizing
					"-webkit-box-sizing:content-box;box-sizing:content-box;" +
					"display:block;margin:0;border:0;padding:0";
				marginDiv.style.marginRight = marginDiv.style.width = "0";
				div.style.width = "1px";
				documentElement.appendChild( container );

				ret = !parseFloat( window.getComputedStyle( marginDiv ).marginRight );

				documentElement.removeChild( container );
				div.removeChild( marginDiv );

				return ret;
			}
		} );
	} )();


	function curCSS( elem, name, computed ) {
		var width, minWidth, maxWidth, ret,
			style = elem.style;

		computed = computed || getStyles( elem );
		ret = computed ? computed.getPropertyValue( name ) || computed[ name ] : undefined;

		// Support: Opera 12.1x only
		// Fall back to style even without computed
		// computed is undefined for elems on document fragments
		if ( ( ret === "" || ret === undefined ) && !jQuery.contains( elem.ownerDocument, elem ) ) {
			ret = jQuery.style( elem, name );
		}

		// Support: IE9
		// getPropertyValue is only needed for .css('filter') (#12537)
		if ( computed ) {

			// A tribute to the "awesome hack by Dean Edwards"
			// Android Browser returns percentage for some values,
			// but width seems to be reliably pixels.
			// This is against the CSSOM draft spec:
			// http://dev.w3.org/csswg/cssom/#resolved-values
			if ( !support.pixelMarginRight() && rnumnonpx.test( ret ) && rmargin.test( name ) ) {

				// Remember the original values
				width = style.width;
				minWidth = style.minWidth;
				maxWidth = style.maxWidth;

				// Put in the new values to get a computed value out
				style.minWidth = style.maxWidth = style.width = ret;
				ret = computed.width;

				// Revert the changed values
				style.width = width;
				style.minWidth = minWidth;
				style.maxWidth = maxWidth;
			}
		}

		return ret !== undefined ?

			// Support: IE9-11+
			// IE returns zIndex value as an integer.
			ret + "" :
			ret;
	}


	function addGetHookIf( conditionFn, hookFn ) {

		// Define the hook, we'll check on the first run if it's really needed.
		return {
			get: function() {
				if ( conditionFn() ) {

					// Hook not needed (or it's not possible to use it due
					// to missing dependency), remove it.
					delete this.get;
					return;
				}

				// Hook needed; redefine it so that the support test is not executed again.
				return ( this.get = hookFn ).apply( this, arguments );
			}
		};
	}


	var

		// Swappable if display is none or starts with table
		// except "table", "table-cell", or "table-caption"
		// See here for display values: https://developer.mozilla.org/en-US/docs/CSS/display
		rdisplayswap = /^(none|table(?!-c[ea]).+)/,

		cssShow = { position: "absolute", visibility: "hidden", display: "block" },
		cssNormalTransform = {
			letterSpacing: "0",
			fontWeight: "400"
		},

		cssPrefixes = [ "Webkit", "O", "Moz", "ms" ],
		emptyStyle = document.createElement( "div" ).style;

	// Return a css property mapped to a potentially vendor prefixed property
	function vendorPropName( name ) {

		// Shortcut for names that are not vendor prefixed
		if ( name in emptyStyle ) {
			return name;
		}

		// Check for vendor prefixed names
		var capName = name[ 0 ].toUpperCase() + name.slice( 1 ),
			i = cssPrefixes.length;

		while ( i-- ) {
			name = cssPrefixes[ i ] + capName;
			if ( name in emptyStyle ) {
				return name;
			}
		}
	}

	function setPositiveNumber( elem, value, subtract ) {

		// Any relative (+/-) values have already been
		// normalized at this point
		var matches = rcssNum.exec( value );
		return matches ?

			// Guard against undefined "subtract", e.g., when used as in cssHooks
			Math.max( 0, matches[ 2 ] - ( subtract || 0 ) ) + ( matches[ 3 ] || "px" ) :
			value;
	}

	function augmentWidthOrHeight( elem, name, extra, isBorderBox, styles ) {
		var i = extra === ( isBorderBox ? "border" : "content" ) ?

			// If we already have the right measurement, avoid augmentation
			4 :

			// Otherwise initialize for horizontal or vertical properties
			name === "width" ? 1 : 0,

			val = 0;

		for ( ; i < 4; i += 2 ) {

			// Both box models exclude margin, so add it if we want it
			if ( extra === "margin" ) {
				val += jQuery.css( elem, extra + cssExpand[ i ], true, styles );
			}

			if ( isBorderBox ) {

				// border-box includes padding, so remove it if we want content
				if ( extra === "content" ) {
					val -= jQuery.css( elem, "padding" + cssExpand[ i ], true, styles );
				}

				// At this point, extra isn't border nor margin, so remove border
				if ( extra !== "margin" ) {
					val -= jQuery.css( elem, "border" + cssExpand[ i ] + "Width", true, styles );
				}
			} else {

				// At this point, extra isn't content, so add padding
				val += jQuery.css( elem, "padding" + cssExpand[ i ], true, styles );

				// At this point, extra isn't content nor padding, so add border
				if ( extra !== "padding" ) {
					val += jQuery.css( elem, "border" + cssExpand[ i ] + "Width", true, styles );
				}
			}
		}

		return val;
	}

	function getWidthOrHeight( elem, name, extra ) {

		// Start with offset property, which is equivalent to the border-box value
		var valueIsBorderBox = true,
			val = name === "width" ? elem.offsetWidth : elem.offsetHeight,
			styles = getStyles( elem ),
			isBorderBox = jQuery.css( elem, "boxSizing", false, styles ) === "border-box";

		// Some non-html elements return undefined for offsetWidth, so check for null/undefined
		// svg - https://bugzilla.mozilla.org/show_bug.cgi?id=649285
		// MathML - https://bugzilla.mozilla.org/show_bug.cgi?id=491668
		if ( val <= 0 || val == null ) {

			// Fall back to computed then uncomputed css if necessary
			val = curCSS( elem, name, styles );
			if ( val < 0 || val == null ) {
				val = elem.style[ name ];
			}

			// Computed unit is not pixels. Stop here and return.
			if ( rnumnonpx.test( val ) ) {
				return val;
			}

			// Check for style in case a browser which returns unreliable values
			// for getComputedStyle silently falls back to the reliable elem.style
			valueIsBorderBox = isBorderBox &&
				( support.boxSizingReliable() || val === elem.style[ name ] );

			// Normalize "", auto, and prepare for extra
			val = parseFloat( val ) || 0;
		}

		// Use the active box-sizing model to add/subtract irrelevant styles
		return ( val +
			augmentWidthOrHeight(
				elem,
				name,
				extra || ( isBorderBox ? "border" : "content" ),
				valueIsBorderBox,
				styles
			)
		) + "px";
	}

	function showHide( elements, show ) {
		var display, elem, hidden,
			values = [],
			index = 0,
			length = elements.length;

		for ( ; index < length; index++ ) {
			elem = elements[ index ];
			if ( !elem.style ) {
				continue;
			}

			values[ index ] = dataPriv.get( elem, "olddisplay" );
			display = elem.style.display;
			if ( show ) {

				// Reset the inline display of this element to learn if it is
				// being hidden by cascaded rules or not
				if ( !values[ index ] && display === "none" ) {
					elem.style.display = "";
				}

				// Set elements which have been overridden with display: none
				// in a stylesheet to whatever the default browser style is
				// for such an element
				if ( elem.style.display === "" && isHidden( elem ) ) {
					values[ index ] = dataPriv.access(
						elem,
						"olddisplay",
						defaultDisplay( elem.nodeName )
					);
				}
			} else {
				hidden = isHidden( elem );

				if ( display !== "none" || !hidden ) {
					dataPriv.set(
						elem,
						"olddisplay",
						hidden ? display : jQuery.css( elem, "display" )
					);
				}
			}
		}

		// Set the display of most of the elements in a second loop
		// to avoid the constant reflow
		for ( index = 0; index < length; index++ ) {
			elem = elements[ index ];
			if ( !elem.style ) {
				continue;
			}
			if ( !show || elem.style.display === "none" || elem.style.display === "" ) {
				elem.style.display = show ? values[ index ] || "" : "none";
			}
		}

		return elements;
	}

	jQuery.extend( {

		// Add in style property hooks for overriding the default
		// behavior of getting and setting a style property
		cssHooks: {
			opacity: {
				get: function( elem, computed ) {
					if ( computed ) {

						// We should always get a number back from opacity
						var ret = curCSS( elem, "opacity" );
						return ret === "" ? "1" : ret;
					}
				}
			}
		},

		// Don't automatically add "px" to these possibly-unitless properties
		cssNumber: {
			"animationIterationCount": true,
			"columnCount": true,
			"fillOpacity": true,
			"flexGrow": true,
			"flexShrink": true,
			"fontWeight": true,
			"lineHeight": true,
			"opacity": true,
			"order": true,
			"orphans": true,
			"widows": true,
			"zIndex": true,
			"zoom": true
		},

		// Add in properties whose names you wish to fix before
		// setting or getting the value
		cssProps: {
			"float": "cssFloat"
		},

		// Get and set the style property on a DOM Node
		style: function( elem, name, value, extra ) {

			// Don't set styles on text and comment nodes
			if ( !elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style ) {
				return;
			}

			// Make sure that we're working with the right name
			var ret, type, hooks,
				origName = jQuery.camelCase( name ),
				style = elem.style;

			name = jQuery.cssProps[ origName ] ||
				( jQuery.cssProps[ origName ] = vendorPropName( origName ) || origName );

			// Gets hook for the prefixed version, then unprefixed version
			hooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];

			// Check if we're setting a value
			if ( value !== undefined ) {
				type = typeof value;

				// Convert "+=" or "-=" to relative numbers (#7345)
				if ( type === "string" && ( ret = rcssNum.exec( value ) ) && ret[ 1 ] ) {
					value = adjustCSS( elem, name, ret );

					// Fixes bug #9237
					type = "number";
				}

				// Make sure that null and NaN values aren't set (#7116)
				if ( value == null || value !== value ) {
					return;
				}

				// If a number was passed in, add the unit (except for certain CSS properties)
				if ( type === "number" ) {
					value += ret && ret[ 3 ] || ( jQuery.cssNumber[ origName ] ? "" : "px" );
				}

				// Support: IE9-11+
				// background-* props affect original clone's values
				if ( !support.clearCloneStyle && value === "" && name.indexOf( "background" ) === 0 ) {
					style[ name ] = "inherit";
				}

				// If a hook was provided, use that value, otherwise just set the specified value
				if ( !hooks || !( "set" in hooks ) ||
					( value = hooks.set( elem, value, extra ) ) !== undefined ) {

					style[ name ] = value;
				}

			} else {

				// If a hook was provided get the non-computed value from there
				if ( hooks && "get" in hooks &&
					( ret = hooks.get( elem, false, extra ) ) !== undefined ) {

					return ret;
				}

				// Otherwise just get the value from the style object
				return style[ name ];
			}
		},

		css: function( elem, name, extra, styles ) {
			var val, num, hooks,
				origName = jQuery.camelCase( name );

			// Make sure that we're working with the right name
			name = jQuery.cssProps[ origName ] ||
				( jQuery.cssProps[ origName ] = vendorPropName( origName ) || origName );

			// Try prefixed name followed by the unprefixed name
			hooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];

			// If a hook was provided get the computed value from there
			if ( hooks && "get" in hooks ) {
				val = hooks.get( elem, true, extra );
			}

			// Otherwise, if a way to get the computed value exists, use that
			if ( val === undefined ) {
				val = curCSS( elem, name, styles );
			}

			// Convert "normal" to computed value
			if ( val === "normal" && name in cssNormalTransform ) {
				val = cssNormalTransform[ name ];
			}

			// Make numeric if forced or a qualifier was provided and val looks numeric
			if ( extra === "" || extra ) {
				num = parseFloat( val );
				return extra === true || isFinite( num ) ? num || 0 : val;
			}
			return val;
		}
	} );

	jQuery.each( [ "height", "width" ], function( i, name ) {
		jQuery.cssHooks[ name ] = {
			get: function( elem, computed, extra ) {
				if ( computed ) {

					// Certain elements can have dimension info if we invisibly show them
					// but it must have a current display style that would benefit
					return rdisplayswap.test( jQuery.css( elem, "display" ) ) &&
						elem.offsetWidth === 0 ?
							swap( elem, cssShow, function() {
								return getWidthOrHeight( elem, name, extra );
							} ) :
							getWidthOrHeight( elem, name, extra );
				}
			},

			set: function( elem, value, extra ) {
				var matches,
					styles = extra && getStyles( elem ),
					subtract = extra && augmentWidthOrHeight(
						elem,
						name,
						extra,
						jQuery.css( elem, "boxSizing", false, styles ) === "border-box",
						styles
					);

				// Convert to pixels if value adjustment is needed
				if ( subtract && ( matches = rcssNum.exec( value ) ) &&
					( matches[ 3 ] || "px" ) !== "px" ) {

					elem.style[ name ] = value;
					value = jQuery.css( elem, name );
				}

				return setPositiveNumber( elem, value, subtract );
			}
		};
	} );

	jQuery.cssHooks.marginLeft = addGetHookIf( support.reliableMarginLeft,
		function( elem, computed ) {
			if ( computed ) {
				return ( parseFloat( curCSS( elem, "marginLeft" ) ) ||
					elem.getBoundingClientRect().left -
						swap( elem, { marginLeft: 0 }, function() {
							return elem.getBoundingClientRect().left;
						} )
					) + "px";
			}
		}
	);

	// Support: Android 2.3
	jQuery.cssHooks.marginRight = addGetHookIf( support.reliableMarginRight,
		function( elem, computed ) {
			if ( computed ) {
				return swap( elem, { "display": "inline-block" },
					curCSS, [ elem, "marginRight" ] );
			}
		}
	);

	// These hooks are used by animate to expand properties
	jQuery.each( {
		margin: "",
		padding: "",
		border: "Width"
	}, function( prefix, suffix ) {
		jQuery.cssHooks[ prefix + suffix ] = {
			expand: function( value ) {
				var i = 0,
					expanded = {},

					// Assumes a single number if not a string
					parts = typeof value === "string" ? value.split( " " ) : [ value ];

				for ( ; i < 4; i++ ) {
					expanded[ prefix + cssExpand[ i ] + suffix ] =
						parts[ i ] || parts[ i - 2 ] || parts[ 0 ];
				}

				return expanded;
			}
		};

		if ( !rmargin.test( prefix ) ) {
			jQuery.cssHooks[ prefix + suffix ].set = setPositiveNumber;
		}
	} );

	jQuery.fn.extend( {
		css: function( name, value ) {
			return access( this, function( elem, name, value ) {
				var styles, len,
					map = {},
					i = 0;

				if ( jQuery.isArray( name ) ) {
					styles = getStyles( elem );
					len = name.length;

					for ( ; i < len; i++ ) {
						map[ name[ i ] ] = jQuery.css( elem, name[ i ], false, styles );
					}

					return map;
				}

				return value !== undefined ?
					jQuery.style( elem, name, value ) :
					jQuery.css( elem, name );
			}, name, value, arguments.length > 1 );
		},
		show: function() {
			return showHide( this, true );
		},
		hide: function() {
			return showHide( this );
		},
		toggle: function( state ) {
			if ( typeof state === "boolean" ) {
				return state ? this.show() : this.hide();
			}

			return this.each( function() {
				if ( isHidden( this ) ) {
					jQuery( this ).show();
				} else {
					jQuery( this ).hide();
				}
			} );
		}
	} );


	function Tween( elem, options, prop, end, easing ) {
		return new Tween.prototype.init( elem, options, prop, end, easing );
	}
	jQuery.Tween = Tween;

	Tween.prototype = {
		constructor: Tween,
		init: function( elem, options, prop, end, easing, unit ) {
			this.elem = elem;
			this.prop = prop;
			this.easing = easing || jQuery.easing._default;
			this.options = options;
			this.start = this.now = this.cur();
			this.end = end;
			this.unit = unit || ( jQuery.cssNumber[ prop ] ? "" : "px" );
		},
		cur: function() {
			var hooks = Tween.propHooks[ this.prop ];

			return hooks && hooks.get ?
				hooks.get( this ) :
				Tween.propHooks._default.get( this );
		},
		run: function( percent ) {
			var eased,
				hooks = Tween.propHooks[ this.prop ];

			if ( this.options.duration ) {
				this.pos = eased = jQuery.easing[ this.easing ](
					percent, this.options.duration * percent, 0, 1, this.options.duration
				);
			} else {
				this.pos = eased = percent;
			}
			this.now = ( this.end - this.start ) * eased + this.start;

			if ( this.options.step ) {
				this.options.step.call( this.elem, this.now, this );
			}

			if ( hooks && hooks.set ) {
				hooks.set( this );
			} else {
				Tween.propHooks._default.set( this );
			}
			return this;
		}
	};

	Tween.prototype.init.prototype = Tween.prototype;

	Tween.propHooks = {
		_default: {
			get: function( tween ) {
				var result;

				// Use a property on the element directly when it is not a DOM element,
				// or when there is no matching style property that exists.
				if ( tween.elem.nodeType !== 1 ||
					tween.elem[ tween.prop ] != null && tween.elem.style[ tween.prop ] == null ) {
					return tween.elem[ tween.prop ];
				}

				// Passing an empty string as a 3rd parameter to .css will automatically
				// attempt a parseFloat and fallback to a string if the parse fails.
				// Simple values such as "10px" are parsed to Float;
				// complex values such as "rotate(1rad)" are returned as-is.
				result = jQuery.css( tween.elem, tween.prop, "" );

				// Empty strings, null, undefined and "auto" are converted to 0.
				return !result || result === "auto" ? 0 : result;
			},
			set: function( tween ) {

				// Use step hook for back compat.
				// Use cssHook if its there.
				// Use .style if available and use plain properties where available.
				if ( jQuery.fx.step[ tween.prop ] ) {
					jQuery.fx.step[ tween.prop ]( tween );
				} else if ( tween.elem.nodeType === 1 &&
					( tween.elem.style[ jQuery.cssProps[ tween.prop ] ] != null ||
						jQuery.cssHooks[ tween.prop ] ) ) {
					jQuery.style( tween.elem, tween.prop, tween.now + tween.unit );
				} else {
					tween.elem[ tween.prop ] = tween.now;
				}
			}
		}
	};

	// Support: IE9
	// Panic based approach to setting things on disconnected nodes
	Tween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {
		set: function( tween ) {
			if ( tween.elem.nodeType && tween.elem.parentNode ) {
				tween.elem[ tween.prop ] = tween.now;
			}
		}
	};

	jQuery.easing = {
		linear: function( p ) {
			return p;
		},
		swing: function( p ) {
			return 0.5 - Math.cos( p * Math.PI ) / 2;
		},
		_default: "swing"
	};

	jQuery.fx = Tween.prototype.init;

	// Back Compat <1.8 extension point
	jQuery.fx.step = {};




	var
		fxNow, timerId,
		rfxtypes = /^(?:toggle|show|hide)$/,
		rrun = /queueHooks$/;

	// Animations created synchronously will run synchronously
	function createFxNow() {
		window.setTimeout( function() {
			fxNow = undefined;
		} );
		return ( fxNow = jQuery.now() );
	}

	// Generate parameters to create a standard animation
	function genFx( type, includeWidth ) {
		var which,
			i = 0,
			attrs = { height: type };

		// If we include width, step value is 1 to do all cssExpand values,
		// otherwise step value is 2 to skip over Left and Right
		includeWidth = includeWidth ? 1 : 0;
		for ( ; i < 4 ; i += 2 - includeWidth ) {
			which = cssExpand[ i ];
			attrs[ "margin" + which ] = attrs[ "padding" + which ] = type;
		}

		if ( includeWidth ) {
			attrs.opacity = attrs.width = type;
		}

		return attrs;
	}

	function createTween( value, prop, animation ) {
		var tween,
			collection = ( Animation.tweeners[ prop ] || [] ).concat( Animation.tweeners[ "*" ] ),
			index = 0,
			length = collection.length;
		for ( ; index < length; index++ ) {
			if ( ( tween = collection[ index ].call( animation, prop, value ) ) ) {

				// We're done with this property
				return tween;
			}
		}
	}

	function defaultPrefilter( elem, props, opts ) {
		/* jshint validthis: true */
		var prop, value, toggle, tween, hooks, oldfire, display, checkDisplay,
			anim = this,
			orig = {},
			style = elem.style,
			hidden = elem.nodeType && isHidden( elem ),
			dataShow = dataPriv.get( elem, "fxshow" );

		// Handle queue: false promises
		if ( !opts.queue ) {
			hooks = jQuery._queueHooks( elem, "fx" );
			if ( hooks.unqueued == null ) {
				hooks.unqueued = 0;
				oldfire = hooks.empty.fire;
				hooks.empty.fire = function() {
					if ( !hooks.unqueued ) {
						oldfire();
					}
				};
			}
			hooks.unqueued++;

			anim.always( function() {

				// Ensure the complete handler is called before this completes
				anim.always( function() {
					hooks.unqueued--;
					if ( !jQuery.queue( elem, "fx" ).length ) {
						hooks.empty.fire();
					}
				} );
			} );
		}

		// Height/width overflow pass
		if ( elem.nodeType === 1 && ( "height" in props || "width" in props ) ) {

			// Make sure that nothing sneaks out
			// Record all 3 overflow attributes because IE9-10 do not
			// change the overflow attribute when overflowX and
			// overflowY are set to the same value
			opts.overflow = [ style.overflow, style.overflowX, style.overflowY ];

			// Set display property to inline-block for height/width
			// animations on inline elements that are having width/height animated
			display = jQuery.css( elem, "display" );

			// Test default display if display is currently "none"
			checkDisplay = display === "none" ?
				dataPriv.get( elem, "olddisplay" ) || defaultDisplay( elem.nodeName ) : display;

			if ( checkDisplay === "inline" && jQuery.css( elem, "float" ) === "none" ) {
				style.display = "inline-block";
			}
		}

		if ( opts.overflow ) {
			style.overflow = "hidden";
			anim.always( function() {
				style.overflow = opts.overflow[ 0 ];
				style.overflowX = opts.overflow[ 1 ];
				style.overflowY = opts.overflow[ 2 ];
			} );
		}

		// show/hide pass
		for ( prop in props ) {
			value = props[ prop ];
			if ( rfxtypes.exec( value ) ) {
				delete props[ prop ];
				toggle = toggle || value === "toggle";
				if ( value === ( hidden ? "hide" : "show" ) ) {

					// If there is dataShow left over from a stopped hide or show
					// and we are going to proceed with show, we should pretend to be hidden
					if ( value === "show" && dataShow && dataShow[ prop ] !== undefined ) {
						hidden = true;
					} else {
						continue;
					}
				}
				orig[ prop ] = dataShow && dataShow[ prop ] || jQuery.style( elem, prop );

			// Any non-fx value stops us from restoring the original display value
			} else {
				display = undefined;
			}
		}

		if ( !jQuery.isEmptyObject( orig ) ) {
			if ( dataShow ) {
				if ( "hidden" in dataShow ) {
					hidden = dataShow.hidden;
				}
			} else {
				dataShow = dataPriv.access( elem, "fxshow", {} );
			}

			// Store state if its toggle - enables .stop().toggle() to "reverse"
			if ( toggle ) {
				dataShow.hidden = !hidden;
			}
			if ( hidden ) {
				jQuery( elem ).show();
			} else {
				anim.done( function() {
					jQuery( elem ).hide();
				} );
			}
			anim.done( function() {
				var prop;

				dataPriv.remove( elem, "fxshow" );
				for ( prop in orig ) {
					jQuery.style( elem, prop, orig[ prop ] );
				}
			} );
			for ( prop in orig ) {
				tween = createTween( hidden ? dataShow[ prop ] : 0, prop, anim );

				if ( !( prop in dataShow ) ) {
					dataShow[ prop ] = tween.start;
					if ( hidden ) {
						tween.end = tween.start;
						tween.start = prop === "width" || prop === "height" ? 1 : 0;
					}
				}
			}

		// If this is a noop like .hide().hide(), restore an overwritten display value
		} else if ( ( display === "none" ? defaultDisplay( elem.nodeName ) : display ) === "inline" ) {
			style.display = display;
		}
	}

	function propFilter( props, specialEasing ) {
		var index, name, easing, value, hooks;

		// camelCase, specialEasing and expand cssHook pass
		for ( index in props ) {
			name = jQuery.camelCase( index );
			easing = specialEasing[ name ];
			value = props[ index ];
			if ( jQuery.isArray( value ) ) {
				easing = value[ 1 ];
				value = props[ index ] = value[ 0 ];
			}

			if ( index !== name ) {
				props[ name ] = value;
				delete props[ index ];
			}

			hooks = jQuery.cssHooks[ name ];
			if ( hooks && "expand" in hooks ) {
				value = hooks.expand( value );
				delete props[ name ];

				// Not quite $.extend, this won't overwrite existing keys.
				// Reusing 'index' because we have the correct "name"
				for ( index in value ) {
					if ( !( index in props ) ) {
						props[ index ] = value[ index ];
						specialEasing[ index ] = easing;
					}
				}
			} else {
				specialEasing[ name ] = easing;
			}
		}
	}

	function Animation( elem, properties, options ) {
		var result,
			stopped,
			index = 0,
			length = Animation.prefilters.length,
			deferred = jQuery.Deferred().always( function() {

				// Don't match elem in the :animated selector
				delete tick.elem;
			} ),
			tick = function() {
				if ( stopped ) {
					return false;
				}
				var currentTime = fxNow || createFxNow(),
					remaining = Math.max( 0, animation.startTime + animation.duration - currentTime ),

					// Support: Android 2.3
					// Archaic crash bug won't allow us to use `1 - ( 0.5 || 0 )` (#12497)
					temp = remaining / animation.duration || 0,
					percent = 1 - temp,
					index = 0,
					length = animation.tweens.length;

				for ( ; index < length ; index++ ) {
					animation.tweens[ index ].run( percent );
				}

				deferred.notifyWith( elem, [ animation, percent, remaining ] );

				if ( percent < 1 && length ) {
					return remaining;
				} else {
					deferred.resolveWith( elem, [ animation ] );
					return false;
				}
			},
			animation = deferred.promise( {
				elem: elem,
				props: jQuery.extend( {}, properties ),
				opts: jQuery.extend( true, {
					specialEasing: {},
					easing: jQuery.easing._default
				}, options ),
				originalProperties: properties,
				originalOptions: options,
				startTime: fxNow || createFxNow(),
				duration: options.duration,
				tweens: [],
				createTween: function( prop, end ) {
					var tween = jQuery.Tween( elem, animation.opts, prop, end,
							animation.opts.specialEasing[ prop ] || animation.opts.easing );
					animation.tweens.push( tween );
					return tween;
				},
				stop: function( gotoEnd ) {
					var index = 0,

						// If we are going to the end, we want to run all the tweens
						// otherwise we skip this part
						length = gotoEnd ? animation.tweens.length : 0;
					if ( stopped ) {
						return this;
					}
					stopped = true;
					for ( ; index < length ; index++ ) {
						animation.tweens[ index ].run( 1 );
					}

					// Resolve when we played the last frame; otherwise, reject
					if ( gotoEnd ) {
						deferred.notifyWith( elem, [ animation, 1, 0 ] );
						deferred.resolveWith( elem, [ animation, gotoEnd ] );
					} else {
						deferred.rejectWith( elem, [ animation, gotoEnd ] );
					}
					return this;
				}
			} ),
			props = animation.props;

		propFilter( props, animation.opts.specialEasing );

		for ( ; index < length ; index++ ) {
			result = Animation.prefilters[ index ].call( animation, elem, props, animation.opts );
			if ( result ) {
				if ( jQuery.isFunction( result.stop ) ) {
					jQuery._queueHooks( animation.elem, animation.opts.queue ).stop =
						jQuery.proxy( result.stop, result );
				}
				return result;
			}
		}

		jQuery.map( props, createTween, animation );

		if ( jQuery.isFunction( animation.opts.start ) ) {
			animation.opts.start.call( elem, animation );
		}

		jQuery.fx.timer(
			jQuery.extend( tick, {
				elem: elem,
				anim: animation,
				queue: animation.opts.queue
			} )
		);

		// attach callbacks from options
		return animation.progress( animation.opts.progress )
			.done( animation.opts.done, animation.opts.complete )
			.fail( animation.opts.fail )
			.always( animation.opts.always );
	}

	jQuery.Animation = jQuery.extend( Animation, {
		tweeners: {
			"*": [ function( prop, value ) {
				var tween = this.createTween( prop, value );
				adjustCSS( tween.elem, prop, rcssNum.exec( value ), tween );
				return tween;
			} ]
		},

		tweener: function( props, callback ) {
			if ( jQuery.isFunction( props ) ) {
				callback = props;
				props = [ "*" ];
			} else {
				props = props.match( rnotwhite );
			}

			var prop,
				index = 0,
				length = props.length;

			for ( ; index < length ; index++ ) {
				prop = props[ index ];
				Animation.tweeners[ prop ] = Animation.tweeners[ prop ] || [];
				Animation.tweeners[ prop ].unshift( callback );
			}
		},

		prefilters: [ defaultPrefilter ],

		prefilter: function( callback, prepend ) {
			if ( prepend ) {
				Animation.prefilters.unshift( callback );
			} else {
				Animation.prefilters.push( callback );
			}
		}
	} );

	jQuery.speed = function( speed, easing, fn ) {
		var opt = speed && typeof speed === "object" ? jQuery.extend( {}, speed ) : {
			complete: fn || !fn && easing ||
				jQuery.isFunction( speed ) && speed,
			duration: speed,
			easing: fn && easing || easing && !jQuery.isFunction( easing ) && easing
		};

		opt.duration = jQuery.fx.off ? 0 : typeof opt.duration === "number" ?
			opt.duration : opt.duration in jQuery.fx.speeds ?
				jQuery.fx.speeds[ opt.duration ] : jQuery.fx.speeds._default;

		// Normalize opt.queue - true/undefined/null -> "fx"
		if ( opt.queue == null || opt.queue === true ) {
			opt.queue = "fx";
		}

		// Queueing
		opt.old = opt.complete;

		opt.complete = function() {
			if ( jQuery.isFunction( opt.old ) ) {
				opt.old.call( this );
			}

			if ( opt.queue ) {
				jQuery.dequeue( this, opt.queue );
			}
		};

		return opt;
	};

	jQuery.fn.extend( {
		fadeTo: function( speed, to, easing, callback ) {

			// Show any hidden elements after setting opacity to 0
			return this.filter( isHidden ).css( "opacity", 0 ).show()

				// Animate to the value specified
				.end().animate( { opacity: to }, speed, easing, callback );
		},
		animate: function( prop, speed, easing, callback ) {
			var empty = jQuery.isEmptyObject( prop ),
				optall = jQuery.speed( speed, easing, callback ),
				doAnimation = function() {

					// Operate on a copy of prop so per-property easing won't be lost
					var anim = Animation( this, jQuery.extend( {}, prop ), optall );

					// Empty animations, or finishing resolves immediately
					if ( empty || dataPriv.get( this, "finish" ) ) {
						anim.stop( true );
					}
				};
				doAnimation.finish = doAnimation;

			return empty || optall.queue === false ?
				this.each( doAnimation ) :
				this.queue( optall.queue, doAnimation );
		},
		stop: function( type, clearQueue, gotoEnd ) {
			var stopQueue = function( hooks ) {
				var stop = hooks.stop;
				delete hooks.stop;
				stop( gotoEnd );
			};

			if ( typeof type !== "string" ) {
				gotoEnd = clearQueue;
				clearQueue = type;
				type = undefined;
			}
			if ( clearQueue && type !== false ) {
				this.queue( type || "fx", [] );
			}

			return this.each( function() {
				var dequeue = true,
					index = type != null && type + "queueHooks",
					timers = jQuery.timers,
					data = dataPriv.get( this );

				if ( index ) {
					if ( data[ index ] && data[ index ].stop ) {
						stopQueue( data[ index ] );
					}
				} else {
					for ( index in data ) {
						if ( data[ index ] && data[ index ].stop && rrun.test( index ) ) {
							stopQueue( data[ index ] );
						}
					}
				}

				for ( index = timers.length; index--; ) {
					if ( timers[ index ].elem === this &&
						( type == null || timers[ index ].queue === type ) ) {

						timers[ index ].anim.stop( gotoEnd );
						dequeue = false;
						timers.splice( index, 1 );
					}
				}

				// Start the next in the queue if the last step wasn't forced.
				// Timers currently will call their complete callbacks, which
				// will dequeue but only if they were gotoEnd.
				if ( dequeue || !gotoEnd ) {
					jQuery.dequeue( this, type );
				}
			} );
		},
		finish: function( type ) {
			if ( type !== false ) {
				type = type || "fx";
			}
			return this.each( function() {
				var index,
					data = dataPriv.get( this ),
					queue = data[ type + "queue" ],
					hooks = data[ type + "queueHooks" ],
					timers = jQuery.timers,
					length = queue ? queue.length : 0;

				// Enable finishing flag on private data
				data.finish = true;

				// Empty the queue first
				jQuery.queue( this, type, [] );

				if ( hooks && hooks.stop ) {
					hooks.stop.call( this, true );
				}

				// Look for any active animations, and finish them
				for ( index = timers.length; index--; ) {
					if ( timers[ index ].elem === this && timers[ index ].queue === type ) {
						timers[ index ].anim.stop( true );
						timers.splice( index, 1 );
					}
				}

				// Look for any animations in the old queue and finish them
				for ( index = 0; index < length; index++ ) {
					if ( queue[ index ] && queue[ index ].finish ) {
						queue[ index ].finish.call( this );
					}
				}

				// Turn off finishing flag
				delete data.finish;
			} );
		}
	} );

	jQuery.each( [ "toggle", "show", "hide" ], function( i, name ) {
		var cssFn = jQuery.fn[ name ];
		jQuery.fn[ name ] = function( speed, easing, callback ) {
			return speed == null || typeof speed === "boolean" ?
				cssFn.apply( this, arguments ) :
				this.animate( genFx( name, true ), speed, easing, callback );
		};
	} );

	// Generate shortcuts for custom animations
	jQuery.each( {
		slideDown: genFx( "show" ),
		slideUp: genFx( "hide" ),
		slideToggle: genFx( "toggle" ),
		fadeIn: { opacity: "show" },
		fadeOut: { opacity: "hide" },
		fadeToggle: { opacity: "toggle" }
	}, function( name, props ) {
		jQuery.fn[ name ] = function( speed, easing, callback ) {
			return this.animate( props, speed, easing, callback );
		};
	} );

	jQuery.timers = [];
	jQuery.fx.tick = function() {
		var timer,
			i = 0,
			timers = jQuery.timers;

		fxNow = jQuery.now();

		for ( ; i < timers.length; i++ ) {
			timer = timers[ i ];

			// Checks the timer has not already been removed
			if ( !timer() && timers[ i ] === timer ) {
				timers.splice( i--, 1 );
			}
		}

		if ( !timers.length ) {
			jQuery.fx.stop();
		}
		fxNow = undefined;
	};

	jQuery.fx.timer = function( timer ) {
		jQuery.timers.push( timer );
		if ( timer() ) {
			jQuery.fx.start();
		} else {
			jQuery.timers.pop();
		}
	};

	jQuery.fx.interval = 13;
	jQuery.fx.start = function() {
		if ( !timerId ) {
			timerId = window.setInterval( jQuery.fx.tick, jQuery.fx.interval );
		}
	};

	jQuery.fx.stop = function() {
		window.clearInterval( timerId );

		timerId = null;
	};

	jQuery.fx.speeds = {
		slow: 600,
		fast: 200,

		// Default speed
		_default: 400
	};


	// Based off of the plugin by Clint Helfers, with permission.
	// http://web.archive.org/web/20100324014747/http://blindsignals.com/index.php/2009/07/jquery-delay/
	jQuery.fn.delay = function( time, type ) {
		time = jQuery.fx ? jQuery.fx.speeds[ time ] || time : time;
		type = type || "fx";

		return this.queue( type, function( next, hooks ) {
			var timeout = window.setTimeout( next, time );
			hooks.stop = function() {
				window.clearTimeout( timeout );
			};
		} );
	};


	( function() {
		var input = document.createElement( "input" ),
			select = document.createElement( "select" ),
			opt = select.appendChild( document.createElement( "option" ) );

		input.type = "checkbox";

		// Support: iOS<=5.1, Android<=4.2+
		// Default value for a checkbox should be "on"
		support.checkOn = input.value !== "";

		// Support: IE<=11+
		// Must access selectedIndex to make default options select
		support.optSelected = opt.selected;

		// Support: Android<=2.3
		// Options inside disabled selects are incorrectly marked as disabled
		select.disabled = true;
		support.optDisabled = !opt.disabled;

		// Support: IE<=11+
		// An input loses its value after becoming a radio
		input = document.createElement( "input" );
		input.value = "t";
		input.type = "radio";
		support.radioValue = input.value === "t";
	} )();


	var boolHook,
		attrHandle = jQuery.expr.attrHandle;

	jQuery.fn.extend( {
		attr: function( name, value ) {
			return access( this, jQuery.attr, name, value, arguments.length > 1 );
		},

		removeAttr: function( name ) {
			return this.each( function() {
				jQuery.removeAttr( this, name );
			} );
		}
	} );

	jQuery.extend( {
		attr: function( elem, name, value ) {
			var ret, hooks,
				nType = elem.nodeType;

			// Don't get/set attributes on text, comment and attribute nodes
			if ( nType === 3 || nType === 8 || nType === 2 ) {
				return;
			}

			// Fallback to prop when attributes are not supported
			if ( typeof elem.getAttribute === "undefined" ) {
				return jQuery.prop( elem, name, value );
			}

			// All attributes are lowercase
			// Grab necessary hook if one is defined
			if ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {
				name = name.toLowerCase();
				hooks = jQuery.attrHooks[ name ] ||
					( jQuery.expr.match.bool.test( name ) ? boolHook : undefined );
			}

			if ( value !== undefined ) {
				if ( value === null ) {
					jQuery.removeAttr( elem, name );
					return;
				}

				if ( hooks && "set" in hooks &&
					( ret = hooks.set( elem, value, name ) ) !== undefined ) {
					return ret;
				}

				elem.setAttribute( name, value + "" );
				return value;
			}

			if ( hooks && "get" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {
				return ret;
			}

			ret = jQuery.find.attr( elem, name );

			// Non-existent attributes return null, we normalize to undefined
			return ret == null ? undefined : ret;
		},

		attrHooks: {
			type: {
				set: function( elem, value ) {
					if ( !support.radioValue && value === "radio" &&
						jQuery.nodeName( elem, "input" ) ) {
						var val = elem.value;
						elem.setAttribute( "type", value );
						if ( val ) {
							elem.value = val;
						}
						return value;
					}
				}
			}
		},

		removeAttr: function( elem, value ) {
			var name, propName,
				i = 0,
				attrNames = value && value.match( rnotwhite );

			if ( attrNames && elem.nodeType === 1 ) {
				while ( ( name = attrNames[ i++ ] ) ) {
					propName = jQuery.propFix[ name ] || name;

					// Boolean attributes get special treatment (#10870)
					if ( jQuery.expr.match.bool.test( name ) ) {

						// Set corresponding property to false
						elem[ propName ] = false;
					}

					elem.removeAttribute( name );
				}
			}
		}
	} );

	// Hooks for boolean attributes
	boolHook = {
		set: function( elem, value, name ) {
			if ( value === false ) {

				// Remove boolean attributes when set to false
				jQuery.removeAttr( elem, name );
			} else {
				elem.setAttribute( name, name );
			}
			return name;
		}
	};
	jQuery.each( jQuery.expr.match.bool.source.match( /\w+/g ), function( i, name ) {
		var getter = attrHandle[ name ] || jQuery.find.attr;

		attrHandle[ name ] = function( elem, name, isXML ) {
			var ret, handle;
			if ( !isXML ) {

				// Avoid an infinite loop by temporarily removing this function from the getter
				handle = attrHandle[ name ];
				attrHandle[ name ] = ret;
				ret = getter( elem, name, isXML ) != null ?
					name.toLowerCase() :
					null;
				attrHandle[ name ] = handle;
			}
			return ret;
		};
	} );




	var rfocusable = /^(?:input|select|textarea|button)$/i,
		rclickable = /^(?:a|area)$/i;

	jQuery.fn.extend( {
		prop: function( name, value ) {
			return access( this, jQuery.prop, name, value, arguments.length > 1 );
		},

		removeProp: function( name ) {
			return this.each( function() {
				delete this[ jQuery.propFix[ name ] || name ];
			} );
		}
	} );

	jQuery.extend( {
		prop: function( elem, name, value ) {
			var ret, hooks,
				nType = elem.nodeType;

			// Don't get/set properties on text, comment and attribute nodes
			if ( nType === 3 || nType === 8 || nType === 2 ) {
				return;
			}

			if ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {

				// Fix name and attach hooks
				name = jQuery.propFix[ name ] || name;
				hooks = jQuery.propHooks[ name ];
			}

			if ( value !== undefined ) {
				if ( hooks && "set" in hooks &&
					( ret = hooks.set( elem, value, name ) ) !== undefined ) {
					return ret;
				}

				return ( elem[ name ] = value );
			}

			if ( hooks && "get" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {
				return ret;
			}

			return elem[ name ];
		},

		propHooks: {
			tabIndex: {
				get: function( elem ) {

					// elem.tabIndex doesn't always return the
					// correct value when it hasn't been explicitly set
					// http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/
					// Use proper attribute retrieval(#12072)
					var tabindex = jQuery.find.attr( elem, "tabindex" );

					return tabindex ?
						parseInt( tabindex, 10 ) :
						rfocusable.test( elem.nodeName ) ||
							rclickable.test( elem.nodeName ) && elem.href ?
								0 :
								-1;
				}
			}
		},

		propFix: {
			"for": "htmlFor",
			"class": "className"
		}
	} );

	// Support: IE <=11 only
	// Accessing the selectedIndex property
	// forces the browser to respect setting selected
	// on the option
	// The getter ensures a default option is selected
	// when in an optgroup
	if ( !support.optSelected ) {
		jQuery.propHooks.selected = {
			get: function( elem ) {
				var parent = elem.parentNode;
				if ( parent && parent.parentNode ) {
					parent.parentNode.selectedIndex;
				}
				return null;
			},
			set: function( elem ) {
				var parent = elem.parentNode;
				if ( parent ) {
					parent.selectedIndex;

					if ( parent.parentNode ) {
						parent.parentNode.selectedIndex;
					}
				}
			}
		};
	}

	jQuery.each( [
		"tabIndex",
		"readOnly",
		"maxLength",
		"cellSpacing",
		"cellPadding",
		"rowSpan",
		"colSpan",
		"useMap",
		"frameBorder",
		"contentEditable"
	], function() {
		jQuery.propFix[ this.toLowerCase() ] = this;
	} );




	var rclass = /[\t\r\n\f]/g;

	function getClass( elem ) {
		return elem.getAttribute && elem.getAttribute( "class" ) || "";
	}

	jQuery.fn.extend( {
		addClass: function( value ) {
			var classes, elem, cur, curValue, clazz, j, finalValue,
				i = 0;

			if ( jQuery.isFunction( value ) ) {
				return this.each( function( j ) {
					jQuery( this ).addClass( value.call( this, j, getClass( this ) ) );
				} );
			}

			if ( typeof value === "string" && value ) {
				classes = value.match( rnotwhite ) || [];

				while ( ( elem = this[ i++ ] ) ) {
					curValue = getClass( elem );
					cur = elem.nodeType === 1 &&
						( " " + curValue + " " ).replace( rclass, " " );

					if ( cur ) {
						j = 0;
						while ( ( clazz = classes[ j++ ] ) ) {
							if ( cur.indexOf( " " + clazz + " " ) < 0 ) {
								cur += clazz + " ";
							}
						}

						// Only assign if different to avoid unneeded rendering.
						finalValue = jQuery.trim( cur );
						if ( curValue !== finalValue ) {
							elem.setAttribute( "class", finalValue );
						}
					}
				}
			}

			return this;
		},

		removeClass: function( value ) {
			var classes, elem, cur, curValue, clazz, j, finalValue,
				i = 0;

			if ( jQuery.isFunction( value ) ) {
				return this.each( function( j ) {
					jQuery( this ).removeClass( value.call( this, j, getClass( this ) ) );
				} );
			}

			if ( !arguments.length ) {
				return this.attr( "class", "" );
			}

			if ( typeof value === "string" && value ) {
				classes = value.match( rnotwhite ) || [];

				while ( ( elem = this[ i++ ] ) ) {
					curValue = getClass( elem );

					// This expression is here for better compressibility (see addClass)
					cur = elem.nodeType === 1 &&
						( " " + curValue + " " ).replace( rclass, " " );

					if ( cur ) {
						j = 0;
						while ( ( clazz = classes[ j++ ] ) ) {

							// Remove *all* instances
							while ( cur.indexOf( " " + clazz + " " ) > -1 ) {
								cur = cur.replace( " " + clazz + " ", " " );
							}
						}

						// Only assign if different to avoid unneeded rendering.
						finalValue = jQuery.trim( cur );
						if ( curValue !== finalValue ) {
							elem.setAttribute( "class", finalValue );
						}
					}
				}
			}

			return this;
		},

		toggleClass: function( value, stateVal ) {
			var type = typeof value;

			if ( typeof stateVal === "boolean" && type === "string" ) {
				return stateVal ? this.addClass( value ) : this.removeClass( value );
			}

			if ( jQuery.isFunction( value ) ) {
				return this.each( function( i ) {
					jQuery( this ).toggleClass(
						value.call( this, i, getClass( this ), stateVal ),
						stateVal
					);
				} );
			}

			return this.each( function() {
				var className, i, self, classNames;

				if ( type === "string" ) {

					// Toggle individual class names
					i = 0;
					self = jQuery( this );
					classNames = value.match( rnotwhite ) || [];

					while ( ( className = classNames[ i++ ] ) ) {

						// Check each className given, space separated list
						if ( self.hasClass( className ) ) {
							self.removeClass( className );
						} else {
							self.addClass( className );
						}
					}

				// Toggle whole class name
				} else if ( value === undefined || type === "boolean" ) {
					className = getClass( this );
					if ( className ) {

						// Store className if set
						dataPriv.set( this, "__className__", className );
					}

					// If the element has a class name or if we're passed `false`,
					// then remove the whole classname (if there was one, the above saved it).
					// Otherwise bring back whatever was previously saved (if anything),
					// falling back to the empty string if nothing was stored.
					if ( this.setAttribute ) {
						this.setAttribute( "class",
							className || value === false ?
							"" :
							dataPriv.get( this, "__className__" ) || ""
						);
					}
				}
			} );
		},

		hasClass: function( selector ) {
			var className, elem,
				i = 0;

			className = " " + selector + " ";
			while ( ( elem = this[ i++ ] ) ) {
				if ( elem.nodeType === 1 &&
					( " " + getClass( elem ) + " " ).replace( rclass, " " )
						.indexOf( className ) > -1
				) {
					return true;
				}
			}

			return false;
		}
	} );




	var rreturn = /\r/g,
		rspaces = /[\x20\t\r\n\f]+/g;

	jQuery.fn.extend( {
		val: function( value ) {
			var hooks, ret, isFunction,
				elem = this[ 0 ];

			if ( !arguments.length ) {
				if ( elem ) {
					hooks = jQuery.valHooks[ elem.type ] ||
						jQuery.valHooks[ elem.nodeName.toLowerCase() ];

					if ( hooks &&
						"get" in hooks &&
						( ret = hooks.get( elem, "value" ) ) !== undefined
					) {
						return ret;
					}

					ret = elem.value;

					return typeof ret === "string" ?

						// Handle most common string cases
						ret.replace( rreturn, "" ) :

						// Handle cases where value is null/undef or number
						ret == null ? "" : ret;
				}

				return;
			}

			isFunction = jQuery.isFunction( value );

			return this.each( function( i ) {
				var val;

				if ( this.nodeType !== 1 ) {
					return;
				}

				if ( isFunction ) {
					val = value.call( this, i, jQuery( this ).val() );
				} else {
					val = value;
				}

				// Treat null/undefined as ""; convert numbers to string
				if ( val == null ) {
					val = "";

				} else if ( typeof val === "number" ) {
					val += "";

				} else if ( jQuery.isArray( val ) ) {
					val = jQuery.map( val, function( value ) {
						return value == null ? "" : value + "";
					} );
				}

				hooks = jQuery.valHooks[ this.type ] || jQuery.valHooks[ this.nodeName.toLowerCase() ];

				// If set returns undefined, fall back to normal setting
				if ( !hooks || !( "set" in hooks ) || hooks.set( this, val, "value" ) === undefined ) {
					this.value = val;
				}
			} );
		}
	} );

	jQuery.extend( {
		valHooks: {
			option: {
				get: function( elem ) {

					var val = jQuery.find.attr( elem, "value" );
					return val != null ?
						val :

						// Support: IE10-11+
						// option.text throws exceptions (#14686, #14858)
						// Strip and collapse whitespace
						// https://html.spec.whatwg.org/#strip-and-collapse-whitespace
						jQuery.trim( jQuery.text( elem ) ).replace( rspaces, " " );
				}
			},
			select: {
				get: function( elem ) {
					var value, option,
						options = elem.options,
						index = elem.selectedIndex,
						one = elem.type === "select-one" || index < 0,
						values = one ? null : [],
						max = one ? index + 1 : options.length,
						i = index < 0 ?
							max :
							one ? index : 0;

					// Loop through all the selected options
					for ( ; i < max; i++ ) {
						option = options[ i ];

						// IE8-9 doesn't update selected after form reset (#2551)
						if ( ( option.selected || i === index ) &&

								// Don't return options that are disabled or in a disabled optgroup
								( support.optDisabled ?
									!option.disabled : option.getAttribute( "disabled" ) === null ) &&
								( !option.parentNode.disabled ||
									!jQuery.nodeName( option.parentNode, "optgroup" ) ) ) {

							// Get the specific value for the option
							value = jQuery( option ).val();

							// We don't need an array for one selects
							if ( one ) {
								return value;
							}

							// Multi-Selects return an array
							values.push( value );
						}
					}

					return values;
				},

				set: function( elem, value ) {
					var optionSet, option,
						options = elem.options,
						values = jQuery.makeArray( value ),
						i = options.length;

					while ( i-- ) {
						option = options[ i ];
						if ( option.selected =
							jQuery.inArray( jQuery.valHooks.option.get( option ), values ) > -1
						) {
							optionSet = true;
						}
					}

					// Force browsers to behave consistently when non-matching value is set
					if ( !optionSet ) {
						elem.selectedIndex = -1;
					}
					return values;
				}
			}
		}
	} );

	// Radios and checkboxes getter/setter
	jQuery.each( [ "radio", "checkbox" ], function() {
		jQuery.valHooks[ this ] = {
			set: function( elem, value ) {
				if ( jQuery.isArray( value ) ) {
					return ( elem.checked = jQuery.inArray( jQuery( elem ).val(), value ) > -1 );
				}
			}
		};
		if ( !support.checkOn ) {
			jQuery.valHooks[ this ].get = function( elem ) {
				return elem.getAttribute( "value" ) === null ? "on" : elem.value;
			};
		}
	} );




	// Return jQuery for attributes-only inclusion


	var rfocusMorph = /^(?:focusinfocus|focusoutblur)$/;

	jQuery.extend( jQuery.event, {

		trigger: function( event, data, elem, onlyHandlers ) {

			var i, cur, tmp, bubbleType, ontype, handle, special,
				eventPath = [ elem || document ],
				type = hasOwn.call( event, "type" ) ? event.type : event,
				namespaces = hasOwn.call( event, "namespace" ) ? event.namespace.split( "." ) : [];

			cur = tmp = elem = elem || document;

			// Don't do events on text and comment nodes
			if ( elem.nodeType === 3 || elem.nodeType === 8 ) {
				return;
			}

			// focus/blur morphs to focusin/out; ensure we're not firing them right now
			if ( rfocusMorph.test( type + jQuery.event.triggered ) ) {
				return;
			}

			if ( type.indexOf( "." ) > -1 ) {

				// Namespaced trigger; create a regexp to match event type in handle()
				namespaces = type.split( "." );
				type = namespaces.shift();
				namespaces.sort();
			}
			ontype = type.indexOf( ":" ) < 0 && "on" + type;

			// Caller can pass in a jQuery.Event object, Object, or just an event type string
			event = event[ jQuery.expando ] ?
				event :
				new jQuery.Event( type, typeof event === "object" && event );

			// Trigger bitmask: & 1 for native handlers; & 2 for jQuery (always true)
			event.isTrigger = onlyHandlers ? 2 : 3;
			event.namespace = namespaces.join( "." );
			event.rnamespace = event.namespace ?
				new RegExp( "(^|\\.)" + namespaces.join( "\\.(?:.*\\.|)" ) + "(\\.|$)" ) :
				null;

			// Clean up the event in case it is being reused
			event.result = undefined;
			if ( !event.target ) {
				event.target = elem;
			}

			// Clone any incoming data and prepend the event, creating the handler arg list
			data = data == null ?
				[ event ] :
				jQuery.makeArray( data, [ event ] );

			// Allow special events to draw outside the lines
			special = jQuery.event.special[ type ] || {};
			if ( !onlyHandlers && special.trigger && special.trigger.apply( elem, data ) === false ) {
				return;
			}

			// Determine event propagation path in advance, per W3C events spec (#9951)
			// Bubble up to document, then to window; watch for a global ownerDocument var (#9724)
			if ( !onlyHandlers && !special.noBubble && !jQuery.isWindow( elem ) ) {

				bubbleType = special.delegateType || type;
				if ( !rfocusMorph.test( bubbleType + type ) ) {
					cur = cur.parentNode;
				}
				for ( ; cur; cur = cur.parentNode ) {
					eventPath.push( cur );
					tmp = cur;
				}

				// Only add window if we got to document (e.g., not plain obj or detached DOM)
				if ( tmp === ( elem.ownerDocument || document ) ) {
					eventPath.push( tmp.defaultView || tmp.parentWindow || window );
				}
			}

			// Fire handlers on the event path
			i = 0;
			while ( ( cur = eventPath[ i++ ] ) && !event.isPropagationStopped() ) {

				event.type = i > 1 ?
					bubbleType :
					special.bindType || type;

				// jQuery handler
				handle = ( dataPriv.get( cur, "events" ) || {} )[ event.type ] &&
					dataPriv.get( cur, "handle" );
				if ( handle ) {
					handle.apply( cur, data );
				}

				// Native handler
				handle = ontype && cur[ ontype ];
				if ( handle && handle.apply && acceptData( cur ) ) {
					event.result = handle.apply( cur, data );
					if ( event.result === false ) {
						event.preventDefault();
					}
				}
			}
			event.type = type;

			// If nobody prevented the default action, do it now
			if ( !onlyHandlers && !event.isDefaultPrevented() ) {

				if ( ( !special._default ||
					special._default.apply( eventPath.pop(), data ) === false ) &&
					acceptData( elem ) ) {

					// Call a native DOM method on the target with the same name name as the event.
					// Don't do default actions on window, that's where global variables be (#6170)
					if ( ontype && jQuery.isFunction( elem[ type ] ) && !jQuery.isWindow( elem ) ) {

						// Don't re-trigger an onFOO event when we call its FOO() method
						tmp = elem[ ontype ];

						if ( tmp ) {
							elem[ ontype ] = null;
						}

						// Prevent re-triggering of the same event, since we already bubbled it above
						jQuery.event.triggered = type;
						elem[ type ]();
						jQuery.event.triggered = undefined;

						if ( tmp ) {
							elem[ ontype ] = tmp;
						}
					}
				}
			}

			return event.result;
		},

		// Piggyback on a donor event to simulate a different one
		// Used only for `focus(in | out)` events
		simulate: function( type, elem, event ) {
			var e = jQuery.extend(
				new jQuery.Event(),
				event,
				{
					type: type,
					isSimulated: true
				}
			);

			jQuery.event.trigger( e, null, elem );
		}

	} );

	jQuery.fn.extend( {

		trigger: function( type, data ) {
			return this.each( function() {
				jQuery.event.trigger( type, data, this );
			} );
		},
		triggerHandler: function( type, data ) {
			var elem = this[ 0 ];
			if ( elem ) {
				return jQuery.event.trigger( type, data, elem, true );
			}
		}
	} );


	jQuery.each( ( "blur focus focusin focusout load resize scroll unload click dblclick " +
		"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave " +
		"change select submit keydown keypress keyup error contextmenu" ).split( " " ),
		function( i, name ) {

		// Handle event binding
		jQuery.fn[ name ] = function( data, fn ) {
			return arguments.length > 0 ?
				this.on( name, null, data, fn ) :
				this.trigger( name );
		};
	} );

	jQuery.fn.extend( {
		hover: function( fnOver, fnOut ) {
			return this.mouseenter( fnOver ).mouseleave( fnOut || fnOver );
		}
	} );




	support.focusin = "onfocusin" in window;


	// Support: Firefox
	// Firefox doesn't have focus(in | out) events
	// Related ticket - https://bugzilla.mozilla.org/show_bug.cgi?id=687787
	//
	// Support: Chrome, Safari
	// focus(in | out) events fire after focus & blur events,
	// which is spec violation - http://www.w3.org/TR/DOM-Level-3-Events/#events-focusevent-event-order
	// Related ticket - https://code.google.com/p/chromium/issues/detail?id=449857
	if ( !support.focusin ) {
		jQuery.each( { focus: "focusin", blur: "focusout" }, function( orig, fix ) {

			// Attach a single capturing handler on the document while someone wants focusin/focusout
			var handler = function( event ) {
				jQuery.event.simulate( fix, event.target, jQuery.event.fix( event ) );
			};

			jQuery.event.special[ fix ] = {
				setup: function() {
					var doc = this.ownerDocument || this,
						attaches = dataPriv.access( doc, fix );

					if ( !attaches ) {
						doc.addEventListener( orig, handler, true );
					}
					dataPriv.access( doc, fix, ( attaches || 0 ) + 1 );
				},
				teardown: function() {
					var doc = this.ownerDocument || this,
						attaches = dataPriv.access( doc, fix ) - 1;

					if ( !attaches ) {
						doc.removeEventListener( orig, handler, true );
						dataPriv.remove( doc, fix );

					} else {
						dataPriv.access( doc, fix, attaches );
					}
				}
			};
		} );
	}
	var location = window.location;

	var nonce = jQuery.now();

	var rquery = ( /\?/ );



	// Support: Android 2.3
	// Workaround failure to string-cast null input
	jQuery.parseJSON = function( data ) {
		return JSON.parse( data + "" );
	};


	// Cross-browser xml parsing
	jQuery.parseXML = function( data ) {
		var xml;
		if ( !data || typeof data !== "string" ) {
			return null;
		}

		// Support: IE9
		try {
			xml = ( new window.DOMParser() ).parseFromString( data, "text/xml" );
		} catch ( e ) {
			xml = undefined;
		}

		if ( !xml || xml.getElementsByTagName( "parsererror" ).length ) {
			jQuery.error( "Invalid XML: " + data );
		}
		return xml;
	};


	var
		rhash = /#.*$/,
		rts = /([?&])_=[^&]*/,
		rheaders = /^(.*?):[ \t]*([^\r\n]*)$/mg,

		// #7653, #8125, #8152: local protocol detection
		rlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,
		rnoContent = /^(?:GET|HEAD)$/,
		rprotocol = /^\/\//,

		/* Prefilters
		 * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)
		 * 2) These are called:
		 *    - BEFORE asking for a transport
		 *    - AFTER param serialization (s.data is a string if s.processData is true)
		 * 3) key is the dataType
		 * 4) the catchall symbol "*" can be used
		 * 5) execution will start with transport dataType and THEN continue down to "*" if needed
		 */
		prefilters = {},

		/* Transports bindings
		 * 1) key is the dataType
		 * 2) the catchall symbol "*" can be used
		 * 3) selection will start with transport dataType and THEN go to "*" if needed
		 */
		transports = {},

		// Avoid comment-prolog char sequence (#10098); must appease lint and evade compression
		allTypes = "*/".concat( "*" ),

		// Anchor tag for parsing the document origin
		originAnchor = document.createElement( "a" );
		originAnchor.href = location.href;

	// Base "constructor" for jQuery.ajaxPrefilter and jQuery.ajaxTransport
	function addToPrefiltersOrTransports( structure ) {

		// dataTypeExpression is optional and defaults to "*"
		return function( dataTypeExpression, func ) {

			if ( typeof dataTypeExpression !== "string" ) {
				func = dataTypeExpression;
				dataTypeExpression = "*";
			}

			var dataType,
				i = 0,
				dataTypes = dataTypeExpression.toLowerCase().match( rnotwhite ) || [];

			if ( jQuery.isFunction( func ) ) {

				// For each dataType in the dataTypeExpression
				while ( ( dataType = dataTypes[ i++ ] ) ) {

					// Prepend if requested
					if ( dataType[ 0 ] === "+" ) {
						dataType = dataType.slice( 1 ) || "*";
						( structure[ dataType ] = structure[ dataType ] || [] ).unshift( func );

					// Otherwise append
					} else {
						( structure[ dataType ] = structure[ dataType ] || [] ).push( func );
					}
				}
			}
		};
	}

	// Base inspection function for prefilters and transports
	function inspectPrefiltersOrTransports( structure, options, originalOptions, jqXHR ) {

		var inspected = {},
			seekingTransport = ( structure === transports );

		function inspect( dataType ) {
			var selected;
			inspected[ dataType ] = true;
			jQuery.each( structure[ dataType ] || [], function( _, prefilterOrFactory ) {
				var dataTypeOrTransport = prefilterOrFactory( options, originalOptions, jqXHR );
				if ( typeof dataTypeOrTransport === "string" &&
					!seekingTransport && !inspected[ dataTypeOrTransport ] ) {

					options.dataTypes.unshift( dataTypeOrTransport );
					inspect( dataTypeOrTransport );
					return false;
				} else if ( seekingTransport ) {
					return !( selected = dataTypeOrTransport );
				}
			} );
			return selected;
		}

		return inspect( options.dataTypes[ 0 ] ) || !inspected[ "*" ] && inspect( "*" );
	}

	// A special extend for ajax options
	// that takes "flat" options (not to be deep extended)
	// Fixes #9887
	function ajaxExtend( target, src ) {
		var key, deep,
			flatOptions = jQuery.ajaxSettings.flatOptions || {};

		for ( key in src ) {
			if ( src[ key ] !== undefined ) {
				( flatOptions[ key ] ? target : ( deep || ( deep = {} ) ) )[ key ] = src[ key ];
			}
		}
		if ( deep ) {
			jQuery.extend( true, target, deep );
		}

		return target;
	}

	/* Handles responses to an ajax request:
	 * - finds the right dataType (mediates between content-type and expected dataType)
	 * - returns the corresponding response
	 */
	function ajaxHandleResponses( s, jqXHR, responses ) {

		var ct, type, finalDataType, firstDataType,
			contents = s.contents,
			dataTypes = s.dataTypes;

		// Remove auto dataType and get content-type in the process
		while ( dataTypes[ 0 ] === "*" ) {
			dataTypes.shift();
			if ( ct === undefined ) {
				ct = s.mimeType || jqXHR.getResponseHeader( "Content-Type" );
			}
		}

		// Check if we're dealing with a known content-type
		if ( ct ) {
			for ( type in contents ) {
				if ( contents[ type ] && contents[ type ].test( ct ) ) {
					dataTypes.unshift( type );
					break;
				}
			}
		}

		// Check to see if we have a response for the expected dataType
		if ( dataTypes[ 0 ] in responses ) {
			finalDataType = dataTypes[ 0 ];
		} else {

			// Try convertible dataTypes
			for ( type in responses ) {
				if ( !dataTypes[ 0 ] || s.converters[ type + " " + dataTypes[ 0 ] ] ) {
					finalDataType = type;
					break;
				}
				if ( !firstDataType ) {
					firstDataType = type;
				}
			}

			// Or just use first one
			finalDataType = finalDataType || firstDataType;
		}

		// If we found a dataType
		// We add the dataType to the list if needed
		// and return the corresponding response
		if ( finalDataType ) {
			if ( finalDataType !== dataTypes[ 0 ] ) {
				dataTypes.unshift( finalDataType );
			}
			return responses[ finalDataType ];
		}
	}

	/* Chain conversions given the request and the original response
	 * Also sets the responseXXX fields on the jqXHR instance
	 */
	function ajaxConvert( s, response, jqXHR, isSuccess ) {
		var conv2, current, conv, tmp, prev,
			converters = {},

			// Work with a copy of dataTypes in case we need to modify it for conversion
			dataTypes = s.dataTypes.slice();

		// Create converters map with lowercased keys
		if ( dataTypes[ 1 ] ) {
			for ( conv in s.converters ) {
				converters[ conv.toLowerCase() ] = s.converters[ conv ];
			}
		}

		current = dataTypes.shift();

		// Convert to each sequential dataType
		while ( current ) {

			if ( s.responseFields[ current ] ) {
				jqXHR[ s.responseFields[ current ] ] = response;
			}

			// Apply the dataFilter if provided
			if ( !prev && isSuccess && s.dataFilter ) {
				response = s.dataFilter( response, s.dataType );
			}

			prev = current;
			current = dataTypes.shift();

			if ( current ) {

			// There's only work to do if current dataType is non-auto
				if ( current === "*" ) {

					current = prev;

				// Convert response if prev dataType is non-auto and differs from current
				} else if ( prev !== "*" && prev !== current ) {

					// Seek a direct converter
					conv = converters[ prev + " " + current ] || converters[ "* " + current ];

					// If none found, seek a pair
					if ( !conv ) {
						for ( conv2 in converters ) {

							// If conv2 outputs current
							tmp = conv2.split( " " );
							if ( tmp[ 1 ] === current ) {

								// If prev can be converted to accepted input
								conv = converters[ prev + " " + tmp[ 0 ] ] ||
									converters[ "* " + tmp[ 0 ] ];
								if ( conv ) {

									// Condense equivalence converters
									if ( conv === true ) {
										conv = converters[ conv2 ];

									// Otherwise, insert the intermediate dataType
									} else if ( converters[ conv2 ] !== true ) {
										current = tmp[ 0 ];
										dataTypes.unshift( tmp[ 1 ] );
									}
									break;
								}
							}
						}
					}

					// Apply converter (if not an equivalence)
					if ( conv !== true ) {

						// Unless errors are allowed to bubble, catch and return them
						if ( conv && s.throws ) {
							response = conv( response );
						} else {
							try {
								response = conv( response );
							} catch ( e ) {
								return {
									state: "parsererror",
									error: conv ? e : "No conversion from " + prev + " to " + current
								};
							}
						}
					}
				}
			}
		}

		return { state: "success", data: response };
	}

	jQuery.extend( {

		// Counter for holding the number of active queries
		active: 0,

		// Last-Modified header cache for next request
		lastModified: {},
		etag: {},

		ajaxSettings: {
			url: location.href,
			type: "GET",
			isLocal: rlocalProtocol.test( location.protocol ),
			global: true,
			processData: true,
			async: true,
			contentType: "application/x-www-form-urlencoded; charset=UTF-8",
			/*
			timeout: 0,
			data: null,
			dataType: null,
			username: null,
			password: null,
			cache: null,
			throws: false,
			traditional: false,
			headers: {},
			*/

			accepts: {
				"*": allTypes,
				text: "text/plain",
				html: "text/html",
				xml: "application/xml, text/xml",
				json: "application/json, text/javascript"
			},

			contents: {
				xml: /\bxml\b/,
				html: /\bhtml/,
				json: /\bjson\b/
			},

			responseFields: {
				xml: "responseXML",
				text: "responseText",
				json: "responseJSON"
			},

			// Data converters
			// Keys separate source (or catchall "*") and destination types with a single space
			converters: {

				// Convert anything to text
				"* text": String,

				// Text to html (true = no transformation)
				"text html": true,

				// Evaluate text as a json expression
				"text json": jQuery.parseJSON,

				// Parse text as xml
				"text xml": jQuery.parseXML
			},

			// For options that shouldn't be deep extended:
			// you can add your own custom options here if
			// and when you create one that shouldn't be
			// deep extended (see ajaxExtend)
			flatOptions: {
				url: true,
				context: true
			}
		},

		// Creates a full fledged settings object into target
		// with both ajaxSettings and settings fields.
		// If target is omitted, writes into ajaxSettings.
		ajaxSetup: function( target, settings ) {
			return settings ?

				// Building a settings object
				ajaxExtend( ajaxExtend( target, jQuery.ajaxSettings ), settings ) :

				// Extending ajaxSettings
				ajaxExtend( jQuery.ajaxSettings, target );
		},

		ajaxPrefilter: addToPrefiltersOrTransports( prefilters ),
		ajaxTransport: addToPrefiltersOrTransports( transports ),

		// Main method
		ajax: function( url, options ) {

			// If url is an object, simulate pre-1.5 signature
			if ( typeof url === "object" ) {
				options = url;
				url = undefined;
			}

			// Force options to be an object
			options = options || {};

			var transport,

				// URL without anti-cache param
				cacheURL,

				// Response headers
				responseHeadersString,
				responseHeaders,

				// timeout handle
				timeoutTimer,

				// Url cleanup var
				urlAnchor,

				// To know if global events are to be dispatched
				fireGlobals,

				// Loop variable
				i,

				// Create the final options object
				s = jQuery.ajaxSetup( {}, options ),

				// Callbacks context
				callbackContext = s.context || s,

				// Context for global events is callbackContext if it is a DOM node or jQuery collection
				globalEventContext = s.context &&
					( callbackContext.nodeType || callbackContext.jquery ) ?
						jQuery( callbackContext ) :
						jQuery.event,

				// Deferreds
				deferred = jQuery.Deferred(),
				completeDeferred = jQuery.Callbacks( "once memory" ),

				// Status-dependent callbacks
				statusCode = s.statusCode || {},

				// Headers (they are sent all at once)
				requestHeaders = {},
				requestHeadersNames = {},

				// The jqXHR state
				state = 0,

				// Default abort message
				strAbort = "canceled",

				// Fake xhr
				jqXHR = {
					readyState: 0,

					// Builds headers hashtable if needed
					getResponseHeader: function( key ) {
						var match;
						if ( state === 2 ) {
							if ( !responseHeaders ) {
								responseHeaders = {};
								while ( ( match = rheaders.exec( responseHeadersString ) ) ) {
									responseHeaders[ match[ 1 ].toLowerCase() ] = match[ 2 ];
								}
							}
							match = responseHeaders[ key.toLowerCase() ];
						}
						return match == null ? null : match;
					},

					// Raw string
					getAllResponseHeaders: function() {
						return state === 2 ? responseHeadersString : null;
					},

					// Caches the header
					setRequestHeader: function( name, value ) {
						var lname = name.toLowerCase();
						if ( !state ) {
							name = requestHeadersNames[ lname ] = requestHeadersNames[ lname ] || name;
							requestHeaders[ name ] = value;
						}
						return this;
					},

					// Overrides response content-type header
					overrideMimeType: function( type ) {
						if ( !state ) {
							s.mimeType = type;
						}
						return this;
					},

					// Status-dependent callbacks
					statusCode: function( map ) {
						var code;
						if ( map ) {
							if ( state < 2 ) {
								for ( code in map ) {

									// Lazy-add the new callback in a way that preserves old ones
									statusCode[ code ] = [ statusCode[ code ], map[ code ] ];
								}
							} else {

								// Execute the appropriate callbacks
								jqXHR.always( map[ jqXHR.status ] );
							}
						}
						return this;
					},

					// Cancel the request
					abort: function( statusText ) {
						var finalText = statusText || strAbort;
						if ( transport ) {
							transport.abort( finalText );
						}
						done( 0, finalText );
						return this;
					}
				};

			// Attach deferreds
			deferred.promise( jqXHR ).complete = completeDeferred.add;
			jqXHR.success = jqXHR.done;
			jqXHR.error = jqXHR.fail;

			// Remove hash character (#7531: and string promotion)
			// Add protocol if not provided (prefilters might expect it)
			// Handle falsy url in the settings object (#10093: consistency with old signature)
			// We also use the url parameter if available
			s.url = ( ( url || s.url || location.href ) + "" ).replace( rhash, "" )
				.replace( rprotocol, location.protocol + "//" );

			// Alias method option to type as per ticket #12004
			s.type = options.method || options.type || s.method || s.type;

			// Extract dataTypes list
			s.dataTypes = jQuery.trim( s.dataType || "*" ).toLowerCase().match( rnotwhite ) || [ "" ];

			// A cross-domain request is in order when the origin doesn't match the current origin.
			if ( s.crossDomain == null ) {
				urlAnchor = document.createElement( "a" );

				// Support: IE8-11+
				// IE throws exception if url is malformed, e.g. http://example.com:80x/
				try {
					urlAnchor.href = s.url;

					// Support: IE8-11+
					// Anchor's host property isn't correctly set when s.url is relative
					urlAnchor.href = urlAnchor.href;
					s.crossDomain = originAnchor.protocol + "//" + originAnchor.host !==
						urlAnchor.protocol + "//" + urlAnchor.host;
				} catch ( e ) {

					// If there is an error parsing the URL, assume it is crossDomain,
					// it can be rejected by the transport if it is invalid
					s.crossDomain = true;
				}
			}

			// Convert data if not already a string
			if ( s.data && s.processData && typeof s.data !== "string" ) {
				s.data = jQuery.param( s.data, s.traditional );
			}

			// Apply prefilters
			inspectPrefiltersOrTransports( prefilters, s, options, jqXHR );

			// If request was aborted inside a prefilter, stop there
			if ( state === 2 ) {
				return jqXHR;
			}

			// We can fire global events as of now if asked to
			// Don't fire events if jQuery.event is undefined in an AMD-usage scenario (#15118)
			fireGlobals = jQuery.event && s.global;

			// Watch for a new set of requests
			if ( fireGlobals && jQuery.active++ === 0 ) {
				jQuery.event.trigger( "ajaxStart" );
			}

			// Uppercase the type
			s.type = s.type.toUpperCase();

			// Determine if request has content
			s.hasContent = !rnoContent.test( s.type );

			// Save the URL in case we're toying with the If-Modified-Since
			// and/or If-None-Match header later on
			cacheURL = s.url;

			// More options handling for requests with no content
			if ( !s.hasContent ) {

				// If data is available, append data to url
				if ( s.data ) {
					cacheURL = ( s.url += ( rquery.test( cacheURL ) ? "&" : "?" ) + s.data );

					// #9682: remove data so that it's not used in an eventual retry
					delete s.data;
				}

				// Add anti-cache in url if needed
				if ( s.cache === false ) {
					s.url = rts.test( cacheURL ) ?

						// If there is already a '_' parameter, set its value
						cacheURL.replace( rts, "$1_=" + nonce++ ) :

						// Otherwise add one to the end
						cacheURL + ( rquery.test( cacheURL ) ? "&" : "?" ) + "_=" + nonce++;
				}
			}

			// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.
			if ( s.ifModified ) {
				if ( jQuery.lastModified[ cacheURL ] ) {
					jqXHR.setRequestHeader( "If-Modified-Since", jQuery.lastModified[ cacheURL ] );
				}
				if ( jQuery.etag[ cacheURL ] ) {
					jqXHR.setRequestHeader( "If-None-Match", jQuery.etag[ cacheURL ] );
				}
			}

			// Set the correct header, if data is being sent
			if ( s.data && s.hasContent && s.contentType !== false || options.contentType ) {
				jqXHR.setRequestHeader( "Content-Type", s.contentType );
			}

			// Set the Accepts header for the server, depending on the dataType
			jqXHR.setRequestHeader(
				"Accept",
				s.dataTypes[ 0 ] && s.accepts[ s.dataTypes[ 0 ] ] ?
					s.accepts[ s.dataTypes[ 0 ] ] +
						( s.dataTypes[ 0 ] !== "*" ? ", " + allTypes + "; q=0.01" : "" ) :
					s.accepts[ "*" ]
			);

			// Check for headers option
			for ( i in s.headers ) {
				jqXHR.setRequestHeader( i, s.headers[ i ] );
			}

			// Allow custom headers/mimetypes and early abort
			if ( s.beforeSend &&
				( s.beforeSend.call( callbackContext, jqXHR, s ) === false || state === 2 ) ) {

				// Abort if not done already and return
				return jqXHR.abort();
			}

			// Aborting is no longer a cancellation
			strAbort = "abort";

			// Install callbacks on deferreds
			for ( i in { success: 1, error: 1, complete: 1 } ) {
				jqXHR[ i ]( s[ i ] );
			}

			// Get transport
			transport = inspectPrefiltersOrTransports( transports, s, options, jqXHR );

			// If no transport, we auto-abort
			if ( !transport ) {
				done( -1, "No Transport" );
			} else {
				jqXHR.readyState = 1;

				// Send global event
				if ( fireGlobals ) {
					globalEventContext.trigger( "ajaxSend", [ jqXHR, s ] );
				}

				// If request was aborted inside ajaxSend, stop there
				if ( state === 2 ) {
					return jqXHR;
				}

				// Timeout
				if ( s.async && s.timeout > 0 ) {
					timeoutTimer = window.setTimeout( function() {
						jqXHR.abort( "timeout" );
					}, s.timeout );
				}

				try {
					state = 1;
					transport.send( requestHeaders, done );
				} catch ( e ) {

					// Propagate exception as error if not done
					if ( state < 2 ) {
						done( -1, e );

					// Simply rethrow otherwise
					} else {
						throw e;
					}
				}
			}

			// Callback for when everything is done
			function done( status, nativeStatusText, responses, headers ) {
				var isSuccess, success, error, response, modified,
					statusText = nativeStatusText;

				// Called once
				if ( state === 2 ) {
					return;
				}

				// State is "done" now
				state = 2;

				// Clear timeout if it exists
				if ( timeoutTimer ) {
					window.clearTimeout( timeoutTimer );
				}

				// Dereference transport for early garbage collection
				// (no matter how long the jqXHR object will be used)
				transport = undefined;

				// Cache response headers
				responseHeadersString = headers || "";

				// Set readyState
				jqXHR.readyState = status > 0 ? 4 : 0;

				// Determine if successful
				isSuccess = status >= 200 && status < 300 || status === 304;

				// Get response data
				if ( responses ) {
					response = ajaxHandleResponses( s, jqXHR, responses );
				}

				// Convert no matter what (that way responseXXX fields are always set)
				response = ajaxConvert( s, response, jqXHR, isSuccess );

				// If successful, handle type chaining
				if ( isSuccess ) {

					// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.
					if ( s.ifModified ) {
						modified = jqXHR.getResponseHeader( "Last-Modified" );
						if ( modified ) {
							jQuery.lastModified[ cacheURL ] = modified;
						}
						modified = jqXHR.getResponseHeader( "etag" );
						if ( modified ) {
							jQuery.etag[ cacheURL ] = modified;
						}
					}

					// if no content
					if ( status === 204 || s.type === "HEAD" ) {
						statusText = "nocontent";

					// if not modified
					} else if ( status === 304 ) {
						statusText = "notmodified";

					// If we have data, let's convert it
					} else {
						statusText = response.state;
						success = response.data;
						error = response.error;
						isSuccess = !error;
					}
				} else {

					// Extract error from statusText and normalize for non-aborts
					error = statusText;
					if ( status || !statusText ) {
						statusText = "error";
						if ( status < 0 ) {
							status = 0;
						}
					}
				}

				// Set data for the fake xhr object
				jqXHR.status = status;
				jqXHR.statusText = ( nativeStatusText || statusText ) + "";

				// Success/Error
				if ( isSuccess ) {
					deferred.resolveWith( callbackContext, [ success, statusText, jqXHR ] );
				} else {
					deferred.rejectWith( callbackContext, [ jqXHR, statusText, error ] );
				}

				// Status-dependent callbacks
				jqXHR.statusCode( statusCode );
				statusCode = undefined;

				if ( fireGlobals ) {
					globalEventContext.trigger( isSuccess ? "ajaxSuccess" : "ajaxError",
						[ jqXHR, s, isSuccess ? success : error ] );
				}

				// Complete
				completeDeferred.fireWith( callbackContext, [ jqXHR, statusText ] );

				if ( fireGlobals ) {
					globalEventContext.trigger( "ajaxComplete", [ jqXHR, s ] );

					// Handle the global AJAX counter
					if ( !( --jQuery.active ) ) {
						jQuery.event.trigger( "ajaxStop" );
					}
				}
			}

			return jqXHR;
		},

		getJSON: function( url, data, callback ) {
			return jQuery.get( url, data, callback, "json" );
		},

		getScript: function( url, callback ) {
			return jQuery.get( url, undefined, callback, "script" );
		}
	} );

	jQuery.each( [ "get", "post" ], function( i, method ) {
		jQuery[ method ] = function( url, data, callback, type ) {

			// Shift arguments if data argument was omitted
			if ( jQuery.isFunction( data ) ) {
				type = type || callback;
				callback = data;
				data = undefined;
			}

			// The url can be an options object (which then must have .url)
			return jQuery.ajax( jQuery.extend( {
				url: url,
				type: method,
				dataType: type,
				data: data,
				success: callback
			}, jQuery.isPlainObject( url ) && url ) );
		};
	} );


	jQuery._evalUrl = function( url ) {
		return jQuery.ajax( {
			url: url,

			// Make this explicit, since user can override this through ajaxSetup (#11264)
			type: "GET",
			dataType: "script",
			async: false,
			global: false,
			"throws": true
		} );
	};


	jQuery.fn.extend( {
		wrapAll: function( html ) {
			var wrap;

			if ( jQuery.isFunction( html ) ) {
				return this.each( function( i ) {
					jQuery( this ).wrapAll( html.call( this, i ) );
				} );
			}

			if ( this[ 0 ] ) {

				// The elements to wrap the target around
				wrap = jQuery( html, this[ 0 ].ownerDocument ).eq( 0 ).clone( true );

				if ( this[ 0 ].parentNode ) {
					wrap.insertBefore( this[ 0 ] );
				}

				wrap.map( function() {
					var elem = this;

					while ( elem.firstElementChild ) {
						elem = elem.firstElementChild;
					}

					return elem;
				} ).append( this );
			}

			return this;
		},

		wrapInner: function( html ) {
			if ( jQuery.isFunction( html ) ) {
				return this.each( function( i ) {
					jQuery( this ).wrapInner( html.call( this, i ) );
				} );
			}

			return this.each( function() {
				var self = jQuery( this ),
					contents = self.contents();

				if ( contents.length ) {
					contents.wrapAll( html );

				} else {
					self.append( html );
				}
			} );
		},

		wrap: function( html ) {
			var isFunction = jQuery.isFunction( html );

			return this.each( function( i ) {
				jQuery( this ).wrapAll( isFunction ? html.call( this, i ) : html );
			} );
		},

		unwrap: function() {
			return this.parent().each( function() {
				if ( !jQuery.nodeName( this, "body" ) ) {
					jQuery( this ).replaceWith( this.childNodes );
				}
			} ).end();
		}
	} );


	jQuery.expr.filters.hidden = function( elem ) {
		return !jQuery.expr.filters.visible( elem );
	};
	jQuery.expr.filters.visible = function( elem ) {

		// Support: Opera <= 12.12
		// Opera reports offsetWidths and offsetHeights less than zero on some elements
		// Use OR instead of AND as the element is not visible if either is true
		// See tickets #10406 and #13132
		return elem.offsetWidth > 0 || elem.offsetHeight > 0 || elem.getClientRects().length > 0;
	};




	var r20 = /%20/g,
		rbracket = /\[\]$/,
		rCRLF = /\r?\n/g,
		rsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,
		rsubmittable = /^(?:input|select|textarea|keygen)/i;

	function buildParams( prefix, obj, traditional, add ) {
		var name;

		if ( jQuery.isArray( obj ) ) {

			// Serialize array item.
			jQuery.each( obj, function( i, v ) {
				if ( traditional || rbracket.test( prefix ) ) {

					// Treat each array item as a scalar.
					add( prefix, v );

				} else {

					// Item is non-scalar (array or object), encode its numeric index.
					buildParams(
						prefix + "[" + ( typeof v === "object" && v != null ? i : "" ) + "]",
						v,
						traditional,
						add
					);
				}
			} );

		} else if ( !traditional && jQuery.type( obj ) === "object" ) {

			// Serialize object item.
			for ( name in obj ) {
				buildParams( prefix + "[" + name + "]", obj[ name ], traditional, add );
			}

		} else {

			// Serialize scalar item.
			add( prefix, obj );
		}
	}

	// Serialize an array of form elements or a set of
	// key/values into a query string
	jQuery.param = function( a, traditional ) {
		var prefix,
			s = [],
			add = function( key, value ) {

				// If value is a function, invoke it and return its value
				value = jQuery.isFunction( value ) ? value() : ( value == null ? "" : value );
				s[ s.length ] = encodeURIComponent( key ) + "=" + encodeURIComponent( value );
			};

		// Set traditional to true for jQuery <= 1.3.2 behavior.
		if ( traditional === undefined ) {
			traditional = jQuery.ajaxSettings && jQuery.ajaxSettings.traditional;
		}

		// If an array was passed in, assume that it is an array of form elements.
		if ( jQuery.isArray( a ) || ( a.jquery && !jQuery.isPlainObject( a ) ) ) {

			// Serialize the form elements
			jQuery.each( a, function() {
				add( this.name, this.value );
			} );

		} else {

			// If traditional, encode the "old" way (the way 1.3.2 or older
			// did it), otherwise encode params recursively.
			for ( prefix in a ) {
				buildParams( prefix, a[ prefix ], traditional, add );
			}
		}

		// Return the resulting serialization
		return s.join( "&" ).replace( r20, "+" );
	};

	jQuery.fn.extend( {
		serialize: function() {
			return jQuery.param( this.serializeArray() );
		},
		serializeArray: function() {
			return this.map( function() {

				// Can add propHook for "elements" to filter or add form elements
				var elements = jQuery.prop( this, "elements" );
				return elements ? jQuery.makeArray( elements ) : this;
			} )
			.filter( function() {
				var type = this.type;

				// Use .is( ":disabled" ) so that fieldset[disabled] works
				return this.name && !jQuery( this ).is( ":disabled" ) &&
					rsubmittable.test( this.nodeName ) && !rsubmitterTypes.test( type ) &&
					( this.checked || !rcheckableType.test( type ) );
			} )
			.map( function( i, elem ) {
				var val = jQuery( this ).val();

				return val == null ?
					null :
					jQuery.isArray( val ) ?
						jQuery.map( val, function( val ) {
							return { name: elem.name, value: val.replace( rCRLF, "\r\n" ) };
						} ) :
						{ name: elem.name, value: val.replace( rCRLF, "\r\n" ) };
			} ).get();
		}
	} );


	jQuery.ajaxSettings.xhr = function() {
		try {
			return new window.XMLHttpRequest();
		} catch ( e ) {}
	};

	var xhrSuccessStatus = {

			// File protocol always yields status code 0, assume 200
			0: 200,

			// Support: IE9
			// #1450: sometimes IE returns 1223 when it should be 204
			1223: 204
		},
		xhrSupported = jQuery.ajaxSettings.xhr();

	support.cors = !!xhrSupported && ( "withCredentials" in xhrSupported );
	support.ajax = xhrSupported = !!xhrSupported;

	jQuery.ajaxTransport( function( options ) {
		var callback, errorCallback;

		// Cross domain only allowed if supported through XMLHttpRequest
		if ( support.cors || xhrSupported && !options.crossDomain ) {
			return {
				send: function( headers, complete ) {
					var i,
						xhr = options.xhr();

					xhr.open(
						options.type,
						options.url,
						options.async,
						options.username,
						options.password
					);

					// Apply custom fields if provided
					if ( options.xhrFields ) {
						for ( i in options.xhrFields ) {
							xhr[ i ] = options.xhrFields[ i ];
						}
					}

					// Override mime type if needed
					if ( options.mimeType && xhr.overrideMimeType ) {
						xhr.overrideMimeType( options.mimeType );
					}

					// X-Requested-With header
					// For cross-domain requests, seeing as conditions for a preflight are
					// akin to a jigsaw puzzle, we simply never set it to be sure.
					// (it can always be set on a per-request basis or even using ajaxSetup)
					// For same-domain requests, won't change header if already provided.
					if ( !options.crossDomain && !headers[ "X-Requested-With" ] ) {
						headers[ "X-Requested-With" ] = "XMLHttpRequest";
					}

					// Set headers
					for ( i in headers ) {
						xhr.setRequestHeader( i, headers[ i ] );
					}

					// Callback
					callback = function( type ) {
						return function() {
							if ( callback ) {
								callback = errorCallback = xhr.onload =
									xhr.onerror = xhr.onabort = xhr.onreadystatechange = null;

								if ( type === "abort" ) {
									xhr.abort();
								} else if ( type === "error" ) {

									// Support: IE9
									// On a manual native abort, IE9 throws
									// errors on any property access that is not readyState
									if ( typeof xhr.status !== "number" ) {
										complete( 0, "error" );
									} else {
										complete(

											// File: protocol always yields status 0; see #8605, #14207
											xhr.status,
											xhr.statusText
										);
									}
								} else {
									complete(
										xhrSuccessStatus[ xhr.status ] || xhr.status,
										xhr.statusText,

										// Support: IE9 only
										// IE9 has no XHR2 but throws on binary (trac-11426)
										// For XHR2 non-text, let the caller handle it (gh-2498)
										( xhr.responseType || "text" ) !== "text"  ||
										typeof xhr.responseText !== "string" ?
											{ binary: xhr.response } :
											{ text: xhr.responseText },
										xhr.getAllResponseHeaders()
									);
								}
							}
						};
					};

					// Listen to events
					xhr.onload = callback();
					errorCallback = xhr.onerror = callback( "error" );

					// Support: IE9
					// Use onreadystatechange to replace onabort
					// to handle uncaught aborts
					if ( xhr.onabort !== undefined ) {
						xhr.onabort = errorCallback;
					} else {
						xhr.onreadystatechange = function() {

							// Check readyState before timeout as it changes
							if ( xhr.readyState === 4 ) {

								// Allow onerror to be called first,
								// but that will not handle a native abort
								// Also, save errorCallback to a variable
								// as xhr.onerror cannot be accessed
								window.setTimeout( function() {
									if ( callback ) {
										errorCallback();
									}
								} );
							}
						};
					}

					// Create the abort callback
					callback = callback( "abort" );

					try {

						// Do send the request (this may raise an exception)
						xhr.send( options.hasContent && options.data || null );
					} catch ( e ) {

						// #14683: Only rethrow if this hasn't been notified as an error yet
						if ( callback ) {
							throw e;
						}
					}
				},

				abort: function() {
					if ( callback ) {
						callback();
					}
				}
			};
		}
	} );




	// Install script dataType
	jQuery.ajaxSetup( {
		accepts: {
			script: "text/javascript, application/javascript, " +
				"application/ecmascript, application/x-ecmascript"
		},
		contents: {
			script: /\b(?:java|ecma)script\b/
		},
		converters: {
			"text script": function( text ) {
				jQuery.globalEval( text );
				return text;
			}
		}
	} );

	// Handle cache's special case and crossDomain
	jQuery.ajaxPrefilter( "script", function( s ) {
		if ( s.cache === undefined ) {
			s.cache = false;
		}
		if ( s.crossDomain ) {
			s.type = "GET";
		}
	} );

	// Bind script tag hack transport
	jQuery.ajaxTransport( "script", function( s ) {

		// This transport only deals with cross domain requests
		if ( s.crossDomain ) {
			var script, callback;
			return {
				send: function( _, complete ) {
					script = jQuery( "<script>" ).prop( {
						charset: s.scriptCharset,
						src: s.url
					} ).on(
						"load error",
						callback = function( evt ) {
							script.remove();
							callback = null;
							if ( evt ) {
								complete( evt.type === "error" ? 404 : 200, evt.type );
							}
						}
					);

					// Use native DOM manipulation to avoid our domManip AJAX trickery
					document.head.appendChild( script[ 0 ] );
				},
				abort: function() {
					if ( callback ) {
						callback();
					}
				}
			};
		}
	} );




	var oldCallbacks = [],
		rjsonp = /(=)\?(?=&|$)|\?\?/;

	// Default jsonp settings
	jQuery.ajaxSetup( {
		jsonp: "callback",
		jsonpCallback: function() {
			var callback = oldCallbacks.pop() || ( jQuery.expando + "_" + ( nonce++ ) );
			this[ callback ] = true;
			return callback;
		}
	} );

	// Detect, normalize options and install callbacks for jsonp requests
	jQuery.ajaxPrefilter( "json jsonp", function( s, originalSettings, jqXHR ) {

		var callbackName, overwritten, responseContainer,
			jsonProp = s.jsonp !== false && ( rjsonp.test( s.url ) ?
				"url" :
				typeof s.data === "string" &&
					( s.contentType || "" )
						.indexOf( "application/x-www-form-urlencoded" ) === 0 &&
					rjsonp.test( s.data ) && "data"
			);

		// Handle iff the expected data type is "jsonp" or we have a parameter to set
		if ( jsonProp || s.dataTypes[ 0 ] === "jsonp" ) {

			// Get callback name, remembering preexisting value associated with it
			callbackName = s.jsonpCallback = jQuery.isFunction( s.jsonpCallback ) ?
				s.jsonpCallback() :
				s.jsonpCallback;

			// Insert callback into url or form data
			if ( jsonProp ) {
				s[ jsonProp ] = s[ jsonProp ].replace( rjsonp, "$1" + callbackName );
			} else if ( s.jsonp !== false ) {
				s.url += ( rquery.test( s.url ) ? "&" : "?" ) + s.jsonp + "=" + callbackName;
			}

			// Use data converter to retrieve json after script execution
			s.converters[ "script json" ] = function() {
				if ( !responseContainer ) {
					jQuery.error( callbackName + " was not called" );
				}
				return responseContainer[ 0 ];
			};

			// Force json dataType
			s.dataTypes[ 0 ] = "json";

			// Install callback
			overwritten = window[ callbackName ];
			window[ callbackName ] = function() {
				responseContainer = arguments;
			};

			// Clean-up function (fires after converters)
			jqXHR.always( function() {

				// If previous value didn't exist - remove it
				if ( overwritten === undefined ) {
					jQuery( window ).removeProp( callbackName );

				// Otherwise restore preexisting value
				} else {
					window[ callbackName ] = overwritten;
				}

				// Save back as free
				if ( s[ callbackName ] ) {

					// Make sure that re-using the options doesn't screw things around
					s.jsonpCallback = originalSettings.jsonpCallback;

					// Save the callback name for future use
					oldCallbacks.push( callbackName );
				}

				// Call if it was a function and we have a response
				if ( responseContainer && jQuery.isFunction( overwritten ) ) {
					overwritten( responseContainer[ 0 ] );
				}

				responseContainer = overwritten = undefined;
			} );

			// Delegate to script
			return "script";
		}
	} );




	// Argument "data" should be string of html
	// context (optional): If specified, the fragment will be created in this context,
	// defaults to document
	// keepScripts (optional): If true, will include scripts passed in the html string
	jQuery.parseHTML = function( data, context, keepScripts ) {
		if ( !data || typeof data !== "string" ) {
			return null;
		}
		if ( typeof context === "boolean" ) {
			keepScripts = context;
			context = false;
		}
		context = context || document;

		var parsed = rsingleTag.exec( data ),
			scripts = !keepScripts && [];

		// Single tag
		if ( parsed ) {
			return [ context.createElement( parsed[ 1 ] ) ];
		}

		parsed = buildFragment( [ data ], context, scripts );

		if ( scripts && scripts.length ) {
			jQuery( scripts ).remove();
		}

		return jQuery.merge( [], parsed.childNodes );
	};


	// Keep a copy of the old load method
	var _load = jQuery.fn.load;

	/**
	 * Load a url into a page
	 */
	jQuery.fn.load = function( url, params, callback ) {
		if ( typeof url !== "string" && _load ) {
			return _load.apply( this, arguments );
		}

		var selector, type, response,
			self = this,
			off = url.indexOf( " " );

		if ( off > -1 ) {
			selector = jQuery.trim( url.slice( off ) );
			url = url.slice( 0, off );
		}

		// If it's a function
		if ( jQuery.isFunction( params ) ) {

			// We assume that it's the callback
			callback = params;
			params = undefined;

		// Otherwise, build a param string
		} else if ( params && typeof params === "object" ) {
			type = "POST";
		}

		// If we have elements to modify, make the request
		if ( self.length > 0 ) {
			jQuery.ajax( {
				url: url,

				// If "type" variable is undefined, then "GET" method will be used.
				// Make value of this field explicit since
				// user can override it through ajaxSetup method
				type: type || "GET",
				dataType: "html",
				data: params
			} ).done( function( responseText ) {

				// Save response for use in complete callback
				response = arguments;

				self.html( selector ?

					// If a selector was specified, locate the right elements in a dummy div
					// Exclude scripts to avoid IE 'Permission Denied' errors
					jQuery( "<div>" ).append( jQuery.parseHTML( responseText ) ).find( selector ) :

					// Otherwise use the full result
					responseText );

			// If the request succeeds, this function gets "data", "status", "jqXHR"
			// but they are ignored because response was set above.
			// If it fails, this function gets "jqXHR", "status", "error"
			} ).always( callback && function( jqXHR, status ) {
				self.each( function() {
					callback.apply( this, response || [ jqXHR.responseText, status, jqXHR ] );
				} );
			} );
		}

		return this;
	};




	// Attach a bunch of functions for handling common AJAX events
	jQuery.each( [
		"ajaxStart",
		"ajaxStop",
		"ajaxComplete",
		"ajaxError",
		"ajaxSuccess",
		"ajaxSend"
	], function( i, type ) {
		jQuery.fn[ type ] = function( fn ) {
			return this.on( type, fn );
		};
	} );




	jQuery.expr.filters.animated = function( elem ) {
		return jQuery.grep( jQuery.timers, function( fn ) {
			return elem === fn.elem;
		} ).length;
	};




	/**
	 * Gets a window from an element
	 */
	function getWindow( elem ) {
		return jQuery.isWindow( elem ) ? elem : elem.nodeType === 9 && elem.defaultView;
	}

	jQuery.offset = {
		setOffset: function( elem, options, i ) {
			var curPosition, curLeft, curCSSTop, curTop, curOffset, curCSSLeft, calculatePosition,
				position = jQuery.css( elem, "position" ),
				curElem = jQuery( elem ),
				props = {};

			// Set position first, in-case top/left are set even on static elem
			if ( position === "static" ) {
				elem.style.position = "relative";
			}

			curOffset = curElem.offset();
			curCSSTop = jQuery.css( elem, "top" );
			curCSSLeft = jQuery.css( elem, "left" );
			calculatePosition = ( position === "absolute" || position === "fixed" ) &&
				( curCSSTop + curCSSLeft ).indexOf( "auto" ) > -1;

			// Need to be able to calculate position if either
			// top or left is auto and position is either absolute or fixed
			if ( calculatePosition ) {
				curPosition = curElem.position();
				curTop = curPosition.top;
				curLeft = curPosition.left;

			} else {
				curTop = parseFloat( curCSSTop ) || 0;
				curLeft = parseFloat( curCSSLeft ) || 0;
			}

			if ( jQuery.isFunction( options ) ) {

				// Use jQuery.extend here to allow modification of coordinates argument (gh-1848)
				options = options.call( elem, i, jQuery.extend( {}, curOffset ) );
			}

			if ( options.top != null ) {
				props.top = ( options.top - curOffset.top ) + curTop;
			}
			if ( options.left != null ) {
				props.left = ( options.left - curOffset.left ) + curLeft;
			}

			if ( "using" in options ) {
				options.using.call( elem, props );

			} else {
				curElem.css( props );
			}
		}
	};

	jQuery.fn.extend( {
		offset: function( options ) {
			if ( arguments.length ) {
				return options === undefined ?
					this :
					this.each( function( i ) {
						jQuery.offset.setOffset( this, options, i );
					} );
			}

			var docElem, win,
				elem = this[ 0 ],
				box = { top: 0, left: 0 },
				doc = elem && elem.ownerDocument;

			if ( !doc ) {
				return;
			}

			docElem = doc.documentElement;

			// Make sure it's not a disconnected DOM node
			if ( !jQuery.contains( docElem, elem ) ) {
				return box;
			}

			box = elem.getBoundingClientRect();
			win = getWindow( doc );
			return {
				top: box.top + win.pageYOffset - docElem.clientTop,
				left: box.left + win.pageXOffset - docElem.clientLeft
			};
		},

		position: function() {
			if ( !this[ 0 ] ) {
				return;
			}

			var offsetParent, offset,
				elem = this[ 0 ],
				parentOffset = { top: 0, left: 0 };

			// Fixed elements are offset from window (parentOffset = {top:0, left: 0},
			// because it is its only offset parent
			if ( jQuery.css( elem, "position" ) === "fixed" ) {

				// Assume getBoundingClientRect is there when computed position is fixed
				offset = elem.getBoundingClientRect();

			} else {

				// Get *real* offsetParent
				offsetParent = this.offsetParent();

				// Get correct offsets
				offset = this.offset();
				if ( !jQuery.nodeName( offsetParent[ 0 ], "html" ) ) {
					parentOffset = offsetParent.offset();
				}

				// Add offsetParent borders
				parentOffset.top += jQuery.css( offsetParent[ 0 ], "borderTopWidth", true );
				parentOffset.left += jQuery.css( offsetParent[ 0 ], "borderLeftWidth", true );
			}

			// Subtract parent offsets and element margins
			return {
				top: offset.top - parentOffset.top - jQuery.css( elem, "marginTop", true ),
				left: offset.left - parentOffset.left - jQuery.css( elem, "marginLeft", true )
			};
		},

		// This method will return documentElement in the following cases:
		// 1) For the element inside the iframe without offsetParent, this method will return
		//    documentElement of the parent window
		// 2) For the hidden or detached element
		// 3) For body or html element, i.e. in case of the html node - it will return itself
		//
		// but those exceptions were never presented as a real life use-cases
		// and might be considered as more preferable results.
		//
		// This logic, however, is not guaranteed and can change at any point in the future
		offsetParent: function() {
			return this.map( function() {
				var offsetParent = this.offsetParent;

				while ( offsetParent && jQuery.css( offsetParent, "position" ) === "static" ) {
					offsetParent = offsetParent.offsetParent;
				}

				return offsetParent || documentElement;
			} );
		}
	} );

	// Create scrollLeft and scrollTop methods
	jQuery.each( { scrollLeft: "pageXOffset", scrollTop: "pageYOffset" }, function( method, prop ) {
		var top = "pageYOffset" === prop;

		jQuery.fn[ method ] = function( val ) {
			return access( this, function( elem, method, val ) {
				var win = getWindow( elem );

				if ( val === undefined ) {
					return win ? win[ prop ] : elem[ method ];
				}

				if ( win ) {
					win.scrollTo(
						!top ? val : win.pageXOffset,
						top ? val : win.pageYOffset
					);

				} else {
					elem[ method ] = val;
				}
			}, method, val, arguments.length );
		};
	} );

	// Support: Safari<7-8+, Chrome<37-44+
	// Add the top/left cssHooks using jQuery.fn.position
	// Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084
	// Blink bug: https://code.google.com/p/chromium/issues/detail?id=229280
	// getComputedStyle returns percent when specified for top/left/bottom/right;
	// rather than make the css module depend on the offset module, just check for it here
	jQuery.each( [ "top", "left" ], function( i, prop ) {
		jQuery.cssHooks[ prop ] = addGetHookIf( support.pixelPosition,
			function( elem, computed ) {
				if ( computed ) {
					computed = curCSS( elem, prop );

					// If curCSS returns percentage, fallback to offset
					return rnumnonpx.test( computed ) ?
						jQuery( elem ).position()[ prop ] + "px" :
						computed;
				}
			}
		);
	} );


	// Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods
	jQuery.each( { Height: "height", Width: "width" }, function( name, type ) {
		jQuery.each( { padding: "inner" + name, content: type, "": "outer" + name },
			function( defaultExtra, funcName ) {

			// Margin is only for outerHeight, outerWidth
			jQuery.fn[ funcName ] = function( margin, value ) {
				var chainable = arguments.length && ( defaultExtra || typeof margin !== "boolean" ),
					extra = defaultExtra || ( margin === true || value === true ? "margin" : "border" );

				return access( this, function( elem, type, value ) {
					var doc;

					if ( jQuery.isWindow( elem ) ) {

						// As of 5/8/2012 this will yield incorrect results for Mobile Safari, but there
						// isn't a whole lot we can do. See pull request at this URL for discussion:
						// https://github.com/jquery/jquery/pull/764
						return elem.document.documentElement[ "client" + name ];
					}

					// Get document width or height
					if ( elem.nodeType === 9 ) {
						doc = elem.documentElement;

						// Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height],
						// whichever is greatest
						return Math.max(
							elem.body[ "scroll" + name ], doc[ "scroll" + name ],
							elem.body[ "offset" + name ], doc[ "offset" + name ],
							doc[ "client" + name ]
						);
					}

					return value === undefined ?

						// Get width or height on the element, requesting but not forcing parseFloat
						jQuery.css( elem, type, extra ) :

						// Set width or height on the element
						jQuery.style( elem, type, value, extra );
				}, type, chainable ? margin : undefined, chainable, null );
			};
		} );
	} );


	jQuery.fn.extend( {

		bind: function( types, data, fn ) {
			return this.on( types, null, data, fn );
		},
		unbind: function( types, fn ) {
			return this.off( types, null, fn );
		},

		delegate: function( selector, types, data, fn ) {
			return this.on( types, selector, data, fn );
		},
		undelegate: function( selector, types, fn ) {

			// ( namespace ) or ( selector, types [, fn] )
			return arguments.length === 1 ?
				this.off( selector, "**" ) :
				this.off( types, selector || "**", fn );
		},
		size: function() {
			return this.length;
		}
	} );

	jQuery.fn.andSelf = jQuery.fn.addBack;




	// Register as a named AMD module, since jQuery can be concatenated with other
	// files that may use define, but not via a proper concatenation script that
	// understands anonymous AMD modules. A named AMD is safest and most robust
	// way to register. Lowercase jquery is used because AMD module names are
	// derived from file names, and jQuery is normally delivered in a lowercase
	// file name. Do this after creating the global so that if an AMD module wants
	// to call noConflict to hide this version of jQuery, it will work.

	// Note that for maximum portability, libraries that are not jQuery should
	// declare themselves as anonymous modules, and avoid setting a global if an
	// AMD loader is present. jQuery is a special case. For more information, see
	// https://github.com/jrburke/requirejs/wiki/Updating-existing-libraries#wiki-anon

	if ( true ) {
		!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function() {
			return jQuery;
		}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	}



	var

		// Map over jQuery in case of overwrite
		_jQuery = window.jQuery,

		// Map over the $ in case of overwrite
		_$ = window.$;

	jQuery.noConflict = function( deep ) {
		if ( window.$ === jQuery ) {
			window.$ = _$;
		}

		if ( deep && window.jQuery === jQuery ) {
			window.jQuery = _jQuery;
		}

		return jQuery;
	};

	// Expose jQuery and $ identifiers, even in AMD
	// (#7102#comment:10, https://github.com/jquery/jquery/pull/557)
	// and CommonJS for browser emulators (#13566)
	if ( !noGlobal ) {
		window.jQuery = window.$ = jQuery;
	}

	return jQuery;
	}));


/***/ }),
/* 253 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(254);

/***/ }),
/* 254 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	var utils = __webpack_require__(255);
	var bind = __webpack_require__(256);
	var Axios = __webpack_require__(258);
	var defaults = __webpack_require__(259);

	/**
	 * Create an instance of Axios
	 *
	 * @param {Object} defaultConfig The default config for the instance
	 * @return {Axios} A new instance of Axios
	 */
	function createInstance(defaultConfig) {
	  var context = new Axios(defaultConfig);
	  var instance = bind(Axios.prototype.request, context);

	  // Copy axios.prototype to instance
	  utils.extend(instance, Axios.prototype, context);

	  // Copy context to instance
	  utils.extend(instance, context);

	  return instance;
	}

	// Create the default instance to be exported
	var axios = createInstance(defaults);

	// Expose Axios class to allow class inheritance
	axios.Axios = Axios;

	// Factory for creating new instances
	axios.create = function create(instanceConfig) {
	  return createInstance(utils.merge(defaults, instanceConfig));
	};

	// Expose Cancel & CancelToken
	axios.Cancel = __webpack_require__(276);
	axios.CancelToken = __webpack_require__(277);
	axios.isCancel = __webpack_require__(273);

	// Expose all/spread
	axios.all = function all(promises) {
	  return Promise.all(promises);
	};
	axios.spread = __webpack_require__(278);

	module.exports = axios;

	// Allow use of default import syntax in TypeScript
	module.exports.default = axios;


/***/ }),
/* 255 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	var bind = __webpack_require__(256);
	var isBuffer = __webpack_require__(257);

	/*global toString:true*/

	// utils is a library of generic helper functions non-specific to axios

	var toString = Object.prototype.toString;

	/**
	 * Determine if a value is an Array
	 *
	 * @param {Object} val The value to test
	 * @returns {boolean} True if value is an Array, otherwise false
	 */
	function isArray(val) {
	  return toString.call(val) === '[object Array]';
	}

	/**
	 * Determine if a value is an ArrayBuffer
	 *
	 * @param {Object} val The value to test
	 * @returns {boolean} True if value is an ArrayBuffer, otherwise false
	 */
	function isArrayBuffer(val) {
	  return toString.call(val) === '[object ArrayBuffer]';
	}

	/**
	 * Determine if a value is a FormData
	 *
	 * @param {Object} val The value to test
	 * @returns {boolean} True if value is an FormData, otherwise false
	 */
	function isFormData(val) {
	  return (typeof FormData !== 'undefined') && (val instanceof FormData);
	}

	/**
	 * Determine if a value is a view on an ArrayBuffer
	 *
	 * @param {Object} val The value to test
	 * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false
	 */
	function isArrayBufferView(val) {
	  var result;
	  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {
	    result = ArrayBuffer.isView(val);
	  } else {
	    result = (val) && (val.buffer) && (val.buffer instanceof ArrayBuffer);
	  }
	  return result;
	}

	/**
	 * Determine if a value is a String
	 *
	 * @param {Object} val The value to test
	 * @returns {boolean} True if value is a String, otherwise false
	 */
	function isString(val) {
	  return typeof val === 'string';
	}

	/**
	 * Determine if a value is a Number
	 *
	 * @param {Object} val The value to test
	 * @returns {boolean} True if value is a Number, otherwise false
	 */
	function isNumber(val) {
	  return typeof val === 'number';
	}

	/**
	 * Determine if a value is undefined
	 *
	 * @param {Object} val The value to test
	 * @returns {boolean} True if the value is undefined, otherwise false
	 */
	function isUndefined(val) {
	  return typeof val === 'undefined';
	}

	/**
	 * Determine if a value is an Object
	 *
	 * @param {Object} val The value to test
	 * @returns {boolean} True if value is an Object, otherwise false
	 */
	function isObject(val) {
	  return val !== null && typeof val === 'object';
	}

	/**
	 * Determine if a value is a Date
	 *
	 * @param {Object} val The value to test
	 * @returns {boolean} True if value is a Date, otherwise false
	 */
	function isDate(val) {
	  return toString.call(val) === '[object Date]';
	}

	/**
	 * Determine if a value is a File
	 *
	 * @param {Object} val The value to test
	 * @returns {boolean} True if value is a File, otherwise false
	 */
	function isFile(val) {
	  return toString.call(val) === '[object File]';
	}

	/**
	 * Determine if a value is a Blob
	 *
	 * @param {Object} val The value to test
	 * @returns {boolean} True if value is a Blob, otherwise false
	 */
	function isBlob(val) {
	  return toString.call(val) === '[object Blob]';
	}

	/**
	 * Determine if a value is a Function
	 *
	 * @param {Object} val The value to test
	 * @returns {boolean} True if value is a Function, otherwise false
	 */
	function isFunction(val) {
	  return toString.call(val) === '[object Function]';
	}

	/**
	 * Determine if a value is a Stream
	 *
	 * @param {Object} val The value to test
	 * @returns {boolean} True if value is a Stream, otherwise false
	 */
	function isStream(val) {
	  return isObject(val) && isFunction(val.pipe);
	}

	/**
	 * Determine if a value is a URLSearchParams object
	 *
	 * @param {Object} val The value to test
	 * @returns {boolean} True if value is a URLSearchParams object, otherwise false
	 */
	function isURLSearchParams(val) {
	  return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams;
	}

	/**
	 * Trim excess whitespace off the beginning and end of a string
	 *
	 * @param {String} str The String to trim
	 * @returns {String} The String freed of excess whitespace
	 */
	function trim(str) {
	  return str.replace(/^\s*/, '').replace(/\s*$/, '');
	}

	/**
	 * Determine if we're running in a standard browser environment
	 *
	 * This allows axios to run in a web worker, and react-native.
	 * Both environments support XMLHttpRequest, but not fully standard globals.
	 *
	 * web workers:
	 *  typeof window -> undefined
	 *  typeof document -> undefined
	 *
	 * react-native:
	 *  navigator.product -> 'ReactNative'
	 */
	function isStandardBrowserEnv() {
	  if (typeof navigator !== 'undefined' && navigator.product === 'ReactNative') {
	    return false;
	  }
	  return (
	    typeof window !== 'undefined' &&
	    typeof document !== 'undefined'
	  );
	}

	/**
	 * Iterate over an Array or an Object invoking a function for each item.
	 *
	 * If `obj` is an Array callback will be called passing
	 * the value, index, and complete array for each item.
	 *
	 * If 'obj' is an Object callback will be called passing
	 * the value, key, and complete object for each property.
	 *
	 * @param {Object|Array} obj The object to iterate
	 * @param {Function} fn The callback to invoke for each item
	 */
	function forEach(obj, fn) {
	  // Don't bother if no value provided
	  if (obj === null || typeof obj === 'undefined') {
	    return;
	  }

	  // Force an array if not already something iterable
	  if (typeof obj !== 'object' && !isArray(obj)) {
	    /*eslint no-param-reassign:0*/
	    obj = [obj];
	  }

	  if (isArray(obj)) {
	    // Iterate over array values
	    for (var i = 0, l = obj.length; i < l; i++) {
	      fn.call(null, obj[i], i, obj);
	    }
	  } else {
	    // Iterate over object keys
	    for (var key in obj) {
	      if (Object.prototype.hasOwnProperty.call(obj, key)) {
	        fn.call(null, obj[key], key, obj);
	      }
	    }
	  }
	}

	/**
	 * Accepts varargs expecting each argument to be an object, then
	 * immutably merges the properties of each object and returns result.
	 *
	 * When multiple objects contain the same key the later object in
	 * the arguments list will take precedence.
	 *
	 * Example:
	 *
	 * ```js
	 * var result = merge({foo: 123}, {foo: 456});
	 * console.log(result.foo); // outputs 456
	 * ```
	 *
	 * @param {Object} obj1 Object to merge
	 * @returns {Object} Result of all merge properties
	 */
	function merge(/* obj1, obj2, obj3, ... */) {
	  var result = {};
	  function assignValue(val, key) {
	    if (typeof result[key] === 'object' && typeof val === 'object') {
	      result[key] = merge(result[key], val);
	    } else {
	      result[key] = val;
	    }
	  }

	  for (var i = 0, l = arguments.length; i < l; i++) {
	    forEach(arguments[i], assignValue);
	  }
	  return result;
	}

	/**
	 * Extends object a by mutably adding to it the properties of object b.
	 *
	 * @param {Object} a The object to be extended
	 * @param {Object} b The object to copy properties from
	 * @param {Object} thisArg The object to bind function to
	 * @return {Object} The resulting value of object a
	 */
	function extend(a, b, thisArg) {
	  forEach(b, function assignValue(val, key) {
	    if (thisArg && typeof val === 'function') {
	      a[key] = bind(val, thisArg);
	    } else {
	      a[key] = val;
	    }
	  });
	  return a;
	}

	module.exports = {
	  isArray: isArray,
	  isArrayBuffer: isArrayBuffer,
	  isBuffer: isBuffer,
	  isFormData: isFormData,
	  isArrayBufferView: isArrayBufferView,
	  isString: isString,
	  isNumber: isNumber,
	  isObject: isObject,
	  isUndefined: isUndefined,
	  isDate: isDate,
	  isFile: isFile,
	  isBlob: isBlob,
	  isFunction: isFunction,
	  isStream: isStream,
	  isURLSearchParams: isURLSearchParams,
	  isStandardBrowserEnv: isStandardBrowserEnv,
	  forEach: forEach,
	  merge: merge,
	  extend: extend,
	  trim: trim
	};


/***/ }),
/* 256 */
/***/ (function(module, exports) {

	'use strict';

	module.exports = function bind(fn, thisArg) {
	  return function wrap() {
	    var args = new Array(arguments.length);
	    for (var i = 0; i < args.length; i++) {
	      args[i] = arguments[i];
	    }
	    return fn.apply(thisArg, args);
	  };
	};


/***/ }),
/* 257 */
/***/ (function(module, exports) {

	/*!
	 * Determine if an object is a Buffer
	 *
	 * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
	 * @license  MIT
	 */

	// The _isBuffer check is for Safari 5-7 support, because it's missing
	// Object.prototype.constructor. Remove this eventually
	module.exports = function (obj) {
	  return obj != null && (isBuffer(obj) || isSlowBuffer(obj) || !!obj._isBuffer)
	}

	function isBuffer (obj) {
	  return !!obj.constructor && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)
	}

	// For Node v0.10 support. Remove this eventually.
	function isSlowBuffer (obj) {
	  return typeof obj.readFloatLE === 'function' && typeof obj.slice === 'function' && isBuffer(obj.slice(0, 0))
	}


/***/ }),
/* 258 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	var defaults = __webpack_require__(259);
	var utils = __webpack_require__(255);
	var InterceptorManager = __webpack_require__(270);
	var dispatchRequest = __webpack_require__(271);
	var isAbsoluteURL = __webpack_require__(274);
	var combineURLs = __webpack_require__(275);

	/**
	 * Create a new instance of Axios
	 *
	 * @param {Object} instanceConfig The default config for the instance
	 */
	function Axios(instanceConfig) {
	  this.defaults = instanceConfig;
	  this.interceptors = {
	    request: new InterceptorManager(),
	    response: new InterceptorManager()
	  };
	}

	/**
	 * Dispatch a request
	 *
	 * @param {Object} config The config specific for this request (merged with this.defaults)
	 */
	Axios.prototype.request = function request(config) {
	  /*eslint no-param-reassign:0*/
	  // Allow for axios('example/url'[, config]) a la fetch API
	  if (typeof config === 'string') {
	    config = utils.merge({
	      url: arguments[0]
	    }, arguments[1]);
	  }

	  config = utils.merge(defaults, this.defaults, { method: 'get' }, config);
	  config.method = config.method.toLowerCase();

	  // Support baseURL config
	  if (config.baseURL && !isAbsoluteURL(config.url)) {
	    config.url = combineURLs(config.baseURL, config.url);
	  }

	  // Hook up interceptors middleware
	  var chain = [dispatchRequest, undefined];
	  var promise = Promise.resolve(config);

	  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {
	    chain.unshift(interceptor.fulfilled, interceptor.rejected);
	  });

	  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {
	    chain.push(interceptor.fulfilled, interceptor.rejected);
	  });

	  while (chain.length) {
	    promise = promise.then(chain.shift(), chain.shift());
	  }

	  return promise;
	};

	// Provide aliases for supported request methods
	utils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {
	  /*eslint func-names:0*/
	  Axios.prototype[method] = function(url, config) {
	    return this.request(utils.merge(config || {}, {
	      method: method,
	      url: url
	    }));
	  };
	});

	utils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {
	  /*eslint func-names:0*/
	  Axios.prototype[method] = function(url, data, config) {
	    return this.request(utils.merge(config || {}, {
	      method: method,
	      url: url,
	      data: data
	    }));
	  };
	});

	module.exports = Axios;


/***/ }),
/* 259 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	var utils = __webpack_require__(255);
	var normalizeHeaderName = __webpack_require__(260);

	var DEFAULT_CONTENT_TYPE = {
	  'Content-Type': 'application/x-www-form-urlencoded'
	};

	function setContentTypeIfUnset(headers, value) {
	  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {
	    headers['Content-Type'] = value;
	  }
	}

	function getDefaultAdapter() {
	  var adapter;
	  if (typeof XMLHttpRequest !== 'undefined') {
	    // For browsers use XHR adapter
	    adapter = __webpack_require__(261);
	  } else if (typeof process !== 'undefined') {
	    // For node use HTTP adapter
	    adapter = __webpack_require__(261);
	  }
	  return adapter;
	}

	var defaults = {
	  adapter: getDefaultAdapter(),

	  transformRequest: [function transformRequest(data, headers) {
	    normalizeHeaderName(headers, 'Content-Type');
	    if (utils.isFormData(data) ||
	      utils.isArrayBuffer(data) ||
	      utils.isBuffer(data) ||
	      utils.isStream(data) ||
	      utils.isFile(data) ||
	      utils.isBlob(data)
	    ) {
	      return data;
	    }
	    if (utils.isArrayBufferView(data)) {
	      return data.buffer;
	    }
	    if (utils.isURLSearchParams(data)) {
	      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');
	      return data.toString();
	    }
	    if (utils.isObject(data)) {
	      setContentTypeIfUnset(headers, 'application/json;charset=utf-8');
	      return JSON.stringify(data);
	    }
	    return data;
	  }],

	  transformResponse: [function transformResponse(data) {
	    /*eslint no-param-reassign:0*/
	    if (typeof data === 'string') {
	      try {
	        data = JSON.parse(data);
	      } catch (e) { /* Ignore */ }
	    }
	    return data;
	  }],

	  timeout: 0,

	  xsrfCookieName: 'XSRF-TOKEN',
	  xsrfHeaderName: 'X-XSRF-TOKEN',

	  maxContentLength: -1,

	  validateStatus: function validateStatus(status) {
	    return status >= 200 && status < 300;
	  }
	};

	defaults.headers = {
	  common: {
	    'Accept': 'application/json, text/plain, */*'
	  }
	};

	utils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {
	  defaults.headers[method] = {};
	});

	utils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {
	  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);
	});

	module.exports = defaults;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)))

/***/ }),
/* 260 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	var utils = __webpack_require__(255);

	module.exports = function normalizeHeaderName(headers, normalizedName) {
	  utils.forEach(headers, function processHeader(value, name) {
	    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {
	      headers[normalizedName] = value;
	      delete headers[name];
	    }
	  });
	};


/***/ }),
/* 261 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	var utils = __webpack_require__(255);
	var settle = __webpack_require__(262);
	var buildURL = __webpack_require__(265);
	var parseHeaders = __webpack_require__(266);
	var isURLSameOrigin = __webpack_require__(267);
	var createError = __webpack_require__(263);
	var btoa = (typeof window !== 'undefined' && window.btoa && window.btoa.bind(window)) || __webpack_require__(268);

	module.exports = function xhrAdapter(config) {
	  return new Promise(function dispatchXhrRequest(resolve, reject) {
	    var requestData = config.data;
	    var requestHeaders = config.headers;

	    if (utils.isFormData(requestData)) {
	      delete requestHeaders['Content-Type']; // Let the browser set it
	    }

	    var request = new XMLHttpRequest();
	    var loadEvent = 'onreadystatechange';
	    var xDomain = false;

	    // For IE 8/9 CORS support
	    // Only supports POST and GET calls and doesn't returns the response headers.
	    // DON'T do this for testing b/c XMLHttpRequest is mocked, not XDomainRequest.
	    if (process.env.NODE_ENV !== 'test' &&
	        typeof window !== 'undefined' &&
	        window.XDomainRequest && !('withCredentials' in request) &&
	        !isURLSameOrigin(config.url)) {
	      request = new window.XDomainRequest();
	      loadEvent = 'onload';
	      xDomain = true;
	      request.onprogress = function handleProgress() {};
	      request.ontimeout = function handleTimeout() {};
	    }

	    // HTTP basic authentication
	    if (config.auth) {
	      var username = config.auth.username || '';
	      var password = config.auth.password || '';
	      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);
	    }

	    request.open(config.method.toUpperCase(), buildURL(config.url, config.params, config.paramsSerializer), true);

	    // Set the request timeout in MS
	    request.timeout = config.timeout;

	    // Listen for ready state
	    request[loadEvent] = function handleLoad() {
	      if (!request || (request.readyState !== 4 && !xDomain)) {
	        return;
	      }

	      // The request errored out and we didn't get a response, this will be
	      // handled by onerror instead
	      // With one exception: request that using file: protocol, most browsers
	      // will return status as 0 even though it's a successful request
	      if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {
	        return;
	      }

	      // Prepare the response
	      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;
	      var responseData = !config.responseType || config.responseType === 'text' ? request.responseText : request.response;
	      var response = {
	        data: responseData,
	        // IE sends 1223 instead of 204 (https://github.com/mzabriskie/axios/issues/201)
	        status: request.status === 1223 ? 204 : request.status,
	        statusText: request.status === 1223 ? 'No Content' : request.statusText,
	        headers: responseHeaders,
	        config: config,
	        request: request
	      };

	      settle(resolve, reject, response);

	      // Clean up request
	      request = null;
	    };

	    // Handle low level network errors
	    request.onerror = function handleError() {
	      // Real errors are hidden from us by the browser
	      // onerror should only fire if it's a network error
	      reject(createError('Network Error', config, null, request));

	      // Clean up request
	      request = null;
	    };

	    // Handle timeout
	    request.ontimeout = function handleTimeout() {
	      reject(createError('timeout of ' + config.timeout + 'ms exceeded', config, 'ECONNABORTED',
	        request));

	      // Clean up request
	      request = null;
	    };

	    // Add xsrf header
	    // This is only done if running in a standard browser environment.
	    // Specifically not if we're in a web worker, or react-native.
	    if (utils.isStandardBrowserEnv()) {
	      var cookies = __webpack_require__(269);

	      // Add xsrf header
	      var xsrfValue = (config.withCredentials || isURLSameOrigin(config.url)) && config.xsrfCookieName ?
	          cookies.read(config.xsrfCookieName) :
	          undefined;

	      if (xsrfValue) {
	        requestHeaders[config.xsrfHeaderName] = xsrfValue;
	      }
	    }

	    // Add headers to the request
	    if ('setRequestHeader' in request) {
	      utils.forEach(requestHeaders, function setRequestHeader(val, key) {
	        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {
	          // Remove Content-Type if data is undefined
	          delete requestHeaders[key];
	        } else {
	          // Otherwise add header to the request
	          request.setRequestHeader(key, val);
	        }
	      });
	    }

	    // Add withCredentials to request if needed
	    if (config.withCredentials) {
	      request.withCredentials = true;
	    }

	    // Add responseType to request if needed
	    if (config.responseType) {
	      try {
	        request.responseType = config.responseType;
	      } catch (e) {
	        // Expected DOMException thrown by browsers not compatible XMLHttpRequest Level 2.
	        // But, this can be suppressed for 'json' type as it can be parsed by default 'transformResponse' function.
	        if (config.responseType !== 'json') {
	          throw e;
	        }
	      }
	    }

	    // Handle progress if needed
	    if (typeof config.onDownloadProgress === 'function') {
	      request.addEventListener('progress', config.onDownloadProgress);
	    }

	    // Not all browsers support upload events
	    if (typeof config.onUploadProgress === 'function' && request.upload) {
	      request.upload.addEventListener('progress', config.onUploadProgress);
	    }

	    if (config.cancelToken) {
	      // Handle cancellation
	      config.cancelToken.promise.then(function onCanceled(cancel) {
	        if (!request) {
	          return;
	        }

	        request.abort();
	        reject(cancel);
	        // Clean up request
	        request = null;
	      });
	    }

	    if (requestData === undefined) {
	      requestData = null;
	    }

	    // Send the request
	    request.send(requestData);
	  });
	};

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)))

/***/ }),
/* 262 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	var createError = __webpack_require__(263);

	/**
	 * Resolve or reject a Promise based on response status.
	 *
	 * @param {Function} resolve A function that resolves the promise.
	 * @param {Function} reject A function that rejects the promise.
	 * @param {object} response The response.
	 */
	module.exports = function settle(resolve, reject, response) {
	  var validateStatus = response.config.validateStatus;
	  // Note: status is not exposed by XDomainRequest
	  if (!response.status || !validateStatus || validateStatus(response.status)) {
	    resolve(response);
	  } else {
	    reject(createError(
	      'Request failed with status code ' + response.status,
	      response.config,
	      null,
	      response.request,
	      response
	    ));
	  }
	};


/***/ }),
/* 263 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	var enhanceError = __webpack_require__(264);

	/**
	 * Create an Error with the specified message, config, error code, request and response.
	 *
	 * @param {string} message The error message.
	 * @param {Object} config The config.
	 * @param {string} [code] The error code (for example, 'ECONNABORTED').
	 * @param {Object} [request] The request.
	 * @param {Object} [response] The response.
	 * @returns {Error} The created error.
	 */
	module.exports = function createError(message, config, code, request, response) {
	  var error = new Error(message);
	  return enhanceError(error, config, code, request, response);
	};


/***/ }),
/* 264 */
/***/ (function(module, exports) {

	'use strict';

	/**
	 * Update an Error with the specified config, error code, and response.
	 *
	 * @param {Error} error The error to update.
	 * @param {Object} config The config.
	 * @param {string} [code] The error code (for example, 'ECONNABORTED').
	 * @param {Object} [request] The request.
	 * @param {Object} [response] The response.
	 * @returns {Error} The error.
	 */
	module.exports = function enhanceError(error, config, code, request, response) {
	  error.config = config;
	  if (code) {
	    error.code = code;
	  }
	  error.request = request;
	  error.response = response;
	  return error;
	};


/***/ }),
/* 265 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	var utils = __webpack_require__(255);

	function encode(val) {
	  return encodeURIComponent(val).
	    replace(/%40/gi, '@').
	    replace(/%3A/gi, ':').
	    replace(/%24/g, '$').
	    replace(/%2C/gi, ',').
	    replace(/%20/g, '+').
	    replace(/%5B/gi, '[').
	    replace(/%5D/gi, ']');
	}

	/**
	 * Build a URL by appending params to the end
	 *
	 * @param {string} url The base of the url (e.g., http://www.google.com)
	 * @param {object} [params] The params to be appended
	 * @returns {string} The formatted url
	 */
	module.exports = function buildURL(url, params, paramsSerializer) {
	  /*eslint no-param-reassign:0*/
	  if (!params) {
	    return url;
	  }

	  var serializedParams;
	  if (paramsSerializer) {
	    serializedParams = paramsSerializer(params);
	  } else if (utils.isURLSearchParams(params)) {
	    serializedParams = params.toString();
	  } else {
	    var parts = [];

	    utils.forEach(params, function serialize(val, key) {
	      if (val === null || typeof val === 'undefined') {
	        return;
	      }

	      if (utils.isArray(val)) {
	        key = key + '[]';
	      }

	      if (!utils.isArray(val)) {
	        val = [val];
	      }

	      utils.forEach(val, function parseValue(v) {
	        if (utils.isDate(v)) {
	          v = v.toISOString();
	        } else if (utils.isObject(v)) {
	          v = JSON.stringify(v);
	        }
	        parts.push(encode(key) + '=' + encode(v));
	      });
	    });

	    serializedParams = parts.join('&');
	  }

	  if (serializedParams) {
	    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;
	  }

	  return url;
	};


/***/ }),
/* 266 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	var utils = __webpack_require__(255);

	/**
	 * Parse headers into an object
	 *
	 * ```
	 * Date: Wed, 27 Aug 2014 08:58:49 GMT
	 * Content-Type: application/json
	 * Connection: keep-alive
	 * Transfer-Encoding: chunked
	 * ```
	 *
	 * @param {String} headers Headers needing to be parsed
	 * @returns {Object} Headers parsed into an object
	 */
	module.exports = function parseHeaders(headers) {
	  var parsed = {};
	  var key;
	  var val;
	  var i;

	  if (!headers) { return parsed; }

	  utils.forEach(headers.split('\n'), function parser(line) {
	    i = line.indexOf(':');
	    key = utils.trim(line.substr(0, i)).toLowerCase();
	    val = utils.trim(line.substr(i + 1));

	    if (key) {
	      parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;
	    }
	  });

	  return parsed;
	};


/***/ }),
/* 267 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	var utils = __webpack_require__(255);

	module.exports = (
	  utils.isStandardBrowserEnv() ?

	  // Standard browser envs have full support of the APIs needed to test
	  // whether the request URL is of the same origin as current location.
	  (function standardBrowserEnv() {
	    var msie = /(msie|trident)/i.test(navigator.userAgent);
	    var urlParsingNode = document.createElement('a');
	    var originURL;

	    /**
	    * Parse a URL to discover it's components
	    *
	    * @param {String} url The URL to be parsed
	    * @returns {Object}
	    */
	    function resolveURL(url) {
	      var href = url;

	      if (msie) {
	        // IE needs attribute set twice to normalize properties
	        urlParsingNode.setAttribute('href', href);
	        href = urlParsingNode.href;
	      }

	      urlParsingNode.setAttribute('href', href);

	      // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils
	      return {
	        href: urlParsingNode.href,
	        protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',
	        host: urlParsingNode.host,
	        search: urlParsingNode.search ? urlParsingNode.search.replace(/^\?/, '') : '',
	        hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',
	        hostname: urlParsingNode.hostname,
	        port: urlParsingNode.port,
	        pathname: (urlParsingNode.pathname.charAt(0) === '/') ?
	                  urlParsingNode.pathname :
	                  '/' + urlParsingNode.pathname
	      };
	    }

	    originURL = resolveURL(window.location.href);

	    /**
	    * Determine if a URL shares the same origin as the current location
	    *
	    * @param {String} requestURL The URL to test
	    * @returns {boolean} True if URL shares the same origin, otherwise false
	    */
	    return function isURLSameOrigin(requestURL) {
	      var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;
	      return (parsed.protocol === originURL.protocol &&
	            parsed.host === originURL.host);
	    };
	  })() :

	  // Non standard browser envs (web workers, react-native) lack needed support.
	  (function nonStandardBrowserEnv() {
	    return function isURLSameOrigin() {
	      return true;
	    };
	  })()
	);


/***/ }),
/* 268 */
/***/ (function(module, exports) {

	'use strict';

	// btoa polyfill for IE<10 courtesy https://github.com/davidchambers/Base64.js

	var chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';

	function E() {
	  this.message = 'String contains an invalid character';
	}
	E.prototype = new Error;
	E.prototype.code = 5;
	E.prototype.name = 'InvalidCharacterError';

	function btoa(input) {
	  var str = String(input);
	  var output = '';
	  for (
	    // initialize result and counter
	    var block, charCode, idx = 0, map = chars;
	    // if the next str index does not exist:
	    //   change the mapping table to "="
	    //   check if d has no fractional digits
	    str.charAt(idx | 0) || (map = '=', idx % 1);
	    // "8 - idx % 1 * 8" generates the sequence 2, 4, 6, 8
	    output += map.charAt(63 & block >> 8 - idx % 1 * 8)
	  ) {
	    charCode = str.charCodeAt(idx += 3 / 4);
	    if (charCode > 0xFF) {
	      throw new E();
	    }
	    block = block << 8 | charCode;
	  }
	  return output;
	}

	module.exports = btoa;


/***/ }),
/* 269 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	var utils = __webpack_require__(255);

	module.exports = (
	  utils.isStandardBrowserEnv() ?

	  // Standard browser envs support document.cookie
	  (function standardBrowserEnv() {
	    return {
	      write: function write(name, value, expires, path, domain, secure) {
	        var cookie = [];
	        cookie.push(name + '=' + encodeURIComponent(value));

	        if (utils.isNumber(expires)) {
	          cookie.push('expires=' + new Date(expires).toGMTString());
	        }

	        if (utils.isString(path)) {
	          cookie.push('path=' + path);
	        }

	        if (utils.isString(domain)) {
	          cookie.push('domain=' + domain);
	        }

	        if (secure === true) {
	          cookie.push('secure');
	        }

	        document.cookie = cookie.join('; ');
	      },

	      read: function read(name) {
	        var match = document.cookie.match(new RegExp('(^|;\\s*)(' + name + ')=([^;]*)'));
	        return (match ? decodeURIComponent(match[3]) : null);
	      },

	      remove: function remove(name) {
	        this.write(name, '', Date.now() - 86400000);
	      }
	    };
	  })() :

	  // Non standard browser env (web workers, react-native) lack needed support.
	  (function nonStandardBrowserEnv() {
	    return {
	      write: function write() {},
	      read: function read() { return null; },
	      remove: function remove() {}
	    };
	  })()
	);


/***/ }),
/* 270 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	var utils = __webpack_require__(255);

	function InterceptorManager() {
	  this.handlers = [];
	}

	/**
	 * Add a new interceptor to the stack
	 *
	 * @param {Function} fulfilled The function to handle `then` for a `Promise`
	 * @param {Function} rejected The function to handle `reject` for a `Promise`
	 *
	 * @return {Number} An ID used to remove interceptor later
	 */
	InterceptorManager.prototype.use = function use(fulfilled, rejected) {
	  this.handlers.push({
	    fulfilled: fulfilled,
	    rejected: rejected
	  });
	  return this.handlers.length - 1;
	};

	/**
	 * Remove an interceptor from the stack
	 *
	 * @param {Number} id The ID that was returned by `use`
	 */
	InterceptorManager.prototype.eject = function eject(id) {
	  if (this.handlers[id]) {
	    this.handlers[id] = null;
	  }
	};

	/**
	 * Iterate over all the registered interceptors
	 *
	 * This method is particularly useful for skipping over any
	 * interceptors that may have become `null` calling `eject`.
	 *
	 * @param {Function} fn The function to call for each interceptor
	 */
	InterceptorManager.prototype.forEach = function forEach(fn) {
	  utils.forEach(this.handlers, function forEachHandler(h) {
	    if (h !== null) {
	      fn(h);
	    }
	  });
	};

	module.exports = InterceptorManager;


/***/ }),
/* 271 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	var utils = __webpack_require__(255);
	var transformData = __webpack_require__(272);
	var isCancel = __webpack_require__(273);
	var defaults = __webpack_require__(259);

	/**
	 * Throws a `Cancel` if cancellation has been requested.
	 */
	function throwIfCancellationRequested(config) {
	  if (config.cancelToken) {
	    config.cancelToken.throwIfRequested();
	  }
	}

	/**
	 * Dispatch a request to the server using the configured adapter.
	 *
	 * @param {object} config The config that is to be used for the request
	 * @returns {Promise} The Promise to be fulfilled
	 */
	module.exports = function dispatchRequest(config) {
	  throwIfCancellationRequested(config);

	  // Ensure headers exist
	  config.headers = config.headers || {};

	  // Transform request data
	  config.data = transformData(
	    config.data,
	    config.headers,
	    config.transformRequest
	  );

	  // Flatten headers
	  config.headers = utils.merge(
	    config.headers.common || {},
	    config.headers[config.method] || {},
	    config.headers || {}
	  );

	  utils.forEach(
	    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],
	    function cleanHeaderConfig(method) {
	      delete config.headers[method];
	    }
	  );

	  var adapter = config.adapter || defaults.adapter;

	  return adapter(config).then(function onAdapterResolution(response) {
	    throwIfCancellationRequested(config);

	    // Transform response data
	    response.data = transformData(
	      response.data,
	      response.headers,
	      config.transformResponse
	    );

	    return response;
	  }, function onAdapterRejection(reason) {
	    if (!isCancel(reason)) {
	      throwIfCancellationRequested(config);

	      // Transform response data
	      if (reason && reason.response) {
	        reason.response.data = transformData(
	          reason.response.data,
	          reason.response.headers,
	          config.transformResponse
	        );
	      }
	    }

	    return Promise.reject(reason);
	  });
	};


/***/ }),
/* 272 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	var utils = __webpack_require__(255);

	/**
	 * Transform the data for a request or a response
	 *
	 * @param {Object|String} data The data to be transformed
	 * @param {Array} headers The headers for the request or response
	 * @param {Array|Function} fns A single function or Array of functions
	 * @returns {*} The resulting transformed data
	 */
	module.exports = function transformData(data, headers, fns) {
	  /*eslint no-param-reassign:0*/
	  utils.forEach(fns, function transform(fn) {
	    data = fn(data, headers);
	  });

	  return data;
	};


/***/ }),
/* 273 */
/***/ (function(module, exports) {

	'use strict';

	module.exports = function isCancel(value) {
	  return !!(value && value.__CANCEL__);
	};


/***/ }),
/* 274 */
/***/ (function(module, exports) {

	'use strict';

	/**
	 * Determines whether the specified URL is absolute
	 *
	 * @param {string} url The URL to test
	 * @returns {boolean} True if the specified URL is absolute, otherwise false
	 */
	module.exports = function isAbsoluteURL(url) {
	  // A URL is considered absolute if it begins with "<scheme>://" or "//" (protocol-relative URL).
	  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed
	  // by any combination of letters, digits, plus, period, or hyphen.
	  return /^([a-z][a-z\d\+\-\.]*:)?\/\//i.test(url);
	};


/***/ }),
/* 275 */
/***/ (function(module, exports) {

	'use strict';

	/**
	 * Creates a new URL by combining the specified URLs
	 *
	 * @param {string} baseURL The base URL
	 * @param {string} relativeURL The relative URL
	 * @returns {string} The combined URL
	 */
	module.exports = function combineURLs(baseURL, relativeURL) {
	  return relativeURL
	    ? baseURL.replace(/\/+$/, '') + '/' + relativeURL.replace(/^\/+/, '')
	    : baseURL;
	};


/***/ }),
/* 276 */
/***/ (function(module, exports) {

	'use strict';

	/**
	 * A `Cancel` is an object that is thrown when an operation is canceled.
	 *
	 * @class
	 * @param {string=} message The message.
	 */
	function Cancel(message) {
	  this.message = message;
	}

	Cancel.prototype.toString = function toString() {
	  return 'Cancel' + (this.message ? ': ' + this.message : '');
	};

	Cancel.prototype.__CANCEL__ = true;

	module.exports = Cancel;


/***/ }),
/* 277 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	var Cancel = __webpack_require__(276);

	/**
	 * A `CancelToken` is an object that can be used to request cancellation of an operation.
	 *
	 * @class
	 * @param {Function} executor The executor function.
	 */
	function CancelToken(executor) {
	  if (typeof executor !== 'function') {
	    throw new TypeError('executor must be a function.');
	  }

	  var resolvePromise;
	  this.promise = new Promise(function promiseExecutor(resolve) {
	    resolvePromise = resolve;
	  });

	  var token = this;
	  executor(function cancel(message) {
	    if (token.reason) {
	      // Cancellation has already been requested
	      return;
	    }

	    token.reason = new Cancel(message);
	    resolvePromise(token.reason);
	  });
	}

	/**
	 * Throws a `Cancel` if cancellation has been requested.
	 */
	CancelToken.prototype.throwIfRequested = function throwIfRequested() {
	  if (this.reason) {
	    throw this.reason;
	  }
	};

	/**
	 * Returns an object that contains a new `CancelToken` and a function that, when called,
	 * cancels the `CancelToken`.
	 */
	CancelToken.source = function source() {
	  var cancel;
	  var token = new CancelToken(function executor(c) {
	    cancel = c;
	  });
	  return {
	    token: token,
	    cancel: cancel
	  };
	};

	module.exports = CancelToken;


/***/ }),
/* 278 */
/***/ (function(module, exports) {

	'use strict';

	/**
	 * Syntactic sugar for invoking a function and expanding an array for arguments.
	 *
	 * Common use case would be to use `Function.prototype.apply`.
	 *
	 *  ```js
	 *  function f(x, y, z) {}
	 *  var args = [1, 2, 3];
	 *  f.apply(null, args);
	 *  ```
	 *
	 * With `spread` this example can be re-written.
	 *
	 *  ```js
	 *  spread(function(x, y, z) {})([1, 2, 3]);
	 *  ```
	 *
	 * @param {Function} callback
	 * @returns {Function}
	 */
	module.exports = function spread(callback) {
	  return function wrap(arr) {
	    return callback.apply(null, arr);
	  };
	};


/***/ }),
/* 279 */
/***/ (function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	/*
	    Ficheiro que contém alguns parâmetros e outros aspectos
	    configuráveis no contexto da aplicação web.
	*/

	//const BASE_URL = 'https://flag-n-patch.appspot.com/rest';
	//const BASE_URL = 'https://avaliacaomichael.appspot.com/rest';
	//const BASE_URL = 'http://localhost:8888/rest';
	var BASE_URL = '/rest';

	//const BASE_URL = 'https://flagnpatchmichael.appspot.com/rest';

	var BUCKET = exports.BUCKET = 'flag-n-patch.appspot.com';
	//export const BUCKET = 'flagnpatchmichael.appspot.com';

	var INTERVAL_TIME = exports.INTERVAL_TIME = 5 * 60 * 1000;

	exports.default = BASE_URL;

/***/ }),
/* 280 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _reactRouterDom = __webpack_require__(203);

	var _reactSwitchButton = __webpack_require__(281);

	var _reactSwitchButton2 = _interopRequireDefault(_reactSwitchButton);

	var _axios = __webpack_require__(253);

	var _axios2 = _interopRequireDefault(_axios);

	var _config = __webpack_require__(279);

	var _config2 = _interopRequireDefault(_config);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	// 3rd Party


	/*
	*/

	var NavCore = function (_Component) {
	    _inherits(NavCore, _Component);

	    function NavCore(props) {
	        _classCallCheck(this, NavCore);

	        var _this = _possibleConstructorReturn(this, (NavCore.__proto__ || Object.getPrototypeOf(NavCore)).call(this, props));

	        _this.state = {
	            isAreaAvailable: false
	        };
	        return _this;
	    }

	    _createClass(NavCore, [{
	        key: 'loadAreaState',
	        value: function loadAreaState() {
	            var token = JSON.parse(localStorage.getItem('token'));
	            _axios2.default.post(_config2.default + '/admin/areaManagement/getAreaStatus', token).then(function (response) {
	                console.log("response", response.data);
	                if (response.data === true) {
	                    $("[name='switch-1']").attr('checked', true);
	                    $("#activeAreaIndicator").html("Activada");
	                    $("#activeAreaIndicator").css('color', 'green');
	                } else {
	                    $("[name='switch-1']").attr('checked', false);
	                    $("#activeAreaIndicator").html("Desactivada");
	                    $("#activeAreaIndicator").css('color', 'red');
	                }
	            }).catch(function (err) {
	                console.log("An error has occured while trying to load area state from the server.");
	            });
	        }
	    }, {
	        key: 'activationButtonSetup',
	        value: function activationButtonSetup() {
	            $('#coreNavbar').on('click', function (event) {
	                event.stopPropagation();
	            });
	            $("[name='switch-1']").on('change', function () {
	                var token = JSON.parse(localStorage.getItem('token'));
	                _axios2.default.post(_config2.default + '/admin/areaManagement/changeStatus', token).then(function (response) {
	                    if (response.data === true) {
	                        $("#activeAreaIndicator").html("Activada");
	                        $("#activeAreaIndicator").css('color', 'green');
	                        $("#changeNotifyMessage").html("A área do seu concelho foi activada com sucesso.");
	                        $("#changeNotifyMessage").css('color', 'green');
	                        setTimeout(function () {
	                            $("#changeNotifyMessage").html("");
	                        }, 3000);
	                    } else {
	                        $("#activeAreaIndicator").html("Desactivada");
	                        $("#activeAreaIndicator").css('color', 'red');
	                        $("#changeNotifyMessage").html("A área do seu concelho foi desactivada.");
	                        $("#changeNotifyMessage").css('color', 'red');
	                        setTimeout(function () {
	                            $("#changeNotifyMessage").html("");
	                        }, 3000);
	                    }
	                }).catch(function (err) {
	                    console.log("An error has occured while trying to update the area activation status.", err);
	                });
	            });
	        }
	    }, {
	        key: 'componentWillMount',
	        value: function componentWillMount() {
	            this.loadAreaState();
	            this.activationButtonSetup();
	        }
	    }, {
	        key: 'componentDidMount',
	        value: function componentDidMount() {
	            this.loadAreaState();
	            this.activationButtonSetup();
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            var endAccountBttn = void 0;
	            var activationAreaBttn = void 0;

	            if (this.props.core) {
	                console.log("é um utilizador core");
	                endAccountBttn = _react2.default.createElement(
	                    _reactRouterDom.Link,
	                    { to: '/app/core/management/accounts', className: 'dropdown-item btn btn-primary admin-navbar-item' },
	                    'Contas'
	                );

	                activationAreaBttn = _react2.default.createElement(
	                    'div',
	                    null,
	                    _react2.default.createElement(
	                        'h6',
	                        { className: 'dropdown-header' },
	                        '\xC0rea'
	                    ),
	                    _react2.default.createElement('div', { className: 'dropdown-divider' }),
	                    _react2.default.createElement(
	                        'div',
	                        { className: 'dropdown-item' },
	                        _react2.default.createElement(_reactSwitchButton2.default, { name: 'switch-1' }),
	                        _react2.default.createElement(
	                            'span',
	                            { id: 'activeAreaIndicator' },
	                            ' Desactivada '
	                        )
	                    )
	                );
	            } else {
	                activationAreaBttn = _react2.default.createElement(
	                    'div',
	                    null,
	                    _react2.default.createElement(
	                        'h6',
	                        { className: 'dropdown-header' },
	                        '\xC0rea'
	                    ),
	                    _react2.default.createElement('div', { className: 'dropdown-divider' }),
	                    _react2.default.createElement(
	                        'div',
	                        { className: 'dropdown-item' },
	                        _react2.default.createElement(
	                            'span',
	                            { id: 'activeAreaIndicator' },
	                            ' Desactivada '
	                        )
	                    )
	                );
	            }

	            return _react2.default.createElement(
	                'ul',
	                { className: 'navbar-nav d-flex justify-content-end w-100' },
	                _react2.default.createElement(
	                    'li',
	                    { className: 'nav-item' },
	                    _react2.default.createElement(
	                        'div',
	                        { className: 'btn-group' },
	                        _react2.default.createElement(
	                            'button',
	                            { type: 'button', className: 'btn btn-primary dropdown-toggle', 'data-toggle': 'dropdown', 'aria-haspopup': 'true', 'aria-expanded': 'false' },
	                            _react2.default.createElement('i', { className: 'ion-wrench navbar-brand' })
	                        ),
	                        _react2.default.createElement(
	                            'div',
	                            { id: 'coreNavbar', className: 'dropdown-menu dropdown-menu-right' },
	                            _react2.default.createElement(
	                                'h6',
	                                { className: 'dropdown-header' },
	                                'Gest\xE3o'
	                            ),
	                            _react2.default.createElement('div', { className: 'dropdown-divider' }),
	                            _react2.default.createElement(
	                                _reactRouterDom.Link,
	                                { to: '/app/core/management/types', className: 'dropdown-item btn btn-primary admin-navbar-item' },
	                                'Ocorr\xEAncia Tipos'
	                            ),
	                            _react2.default.createElement(
	                                _reactRouterDom.Link,
	                                { to: '/app/core/management/workers', className: 'dropdown-item btn btn-primary admin-navbar-item' },
	                                'Trabalhadores'
	                            ),
	                            _react2.default.createElement(
	                                _reactRouterDom.Link,
	                                { to: '/app/core/management/statistics', className: 'dropdown-item btn btn-primary admin-navbar-item' },
	                                'Estat\xEDsticas'
	                            ),
	                            endAccountBttn,
	                            activationAreaBttn
	                        )
	                    )
	                ),
	                _react2.default.createElement(
	                    'li',
	                    { className: 'nav-item' },
	                    _react2.default.createElement(
	                        'div',
	                        { className: 'btn-group' },
	                        _react2.default.createElement(
	                            'button',
	                            { type: 'button', className: 'btn btn-primary dropdown-toggle', 'data-toggle': 'dropdown', 'aria-haspopup': 'true', 'aria-expanded': 'false' },
	                            _react2.default.createElement('i', { className: 'ion-android-person navbar-brand' })
	                        ),
	                        _react2.default.createElement(
	                            'div',
	                            { className: 'dropdown-menu dropdown-menu-right' },
	                            _react2.default.createElement('div', { className: 'dropdown-divider' }),
	                            _react2.default.createElement(
	                                'button',
	                                { className: 'dropdown-item btn btn-primary', onClick: this.props.onLogout },
	                                'Logout'
	                            )
	                        )
	                    )
	                )
	            );
	        }
	    }]);

	    return NavCore;
	}(_react.Component);

	exports.default = NavCore;

/***/ }),
/* 281 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	  value: true
	});

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _react = __webpack_require__(282);

	var _react2 = _interopRequireDefault(_react);

	var SwitchButton = _react2['default'].createClass({

	  // Display name
	  displayName: 'Switch Button',

	  // Version
	  version: '2.2.2',

	  /**
	   * The props types.
	   */
	  propTypes: {
	    id: _react2['default'].PropTypes.string,
	    name: _react2['default'].PropTypes.string,
	    title: _react2['default'].PropTypes.string,
	    label: _react2['default'].PropTypes.string,
	    labelRight: _react2['default'].PropTypes.string,
	    defaultChecked: _react2['default'].PropTypes.bool,
	    disabled: _react2['default'].PropTypes.bool,
	    theme: _react2['default'].PropTypes.string,
	    checked: _react2['default'].PropTypes.string,
	    mode: _react2['default'].PropTypes.string,
	    onChange: _react2['default'].PropTypes.func
	  },

	  /**
	   * Default props.
	   *
	   * @returns {{id: string, name: string, title: string, label: string, labelRight: string, defaultChecked: string, theme: string, checked: null, onChange: *}}
	   */
	  getDefaultProps: function getDefaultProps() {
	    return {
	      id: '',
	      name: 'switch-button',
	      title: '',
	      label: '',
	      labelRight: '',
	      disabled: false,
	      defaultChecked: false,
	      theme: 'rsbc-switch-button-flat-round',
	      checked: null,
	      mode: "switch",
	      onChange: this.handleChange
	    };
	  },

	  // Handle change
	  handleChange: function handleChange() {
	    // Override
	  },

	  /**
	   * Render Switch Button control
	   *
	   * @returns {XML}
	   */
	  render: function render() {
	    var id = undefined,
	        label = undefined,
	        labelRight = undefined,
	        mode = this.props.mode || "switch";

	    if (this.props.id === '' && this.props.name !== '') {
	      id = this.props.name;
	    }

	    if (this.props.label !== '') {
	      label = _react2['default'].createElement(
	        'label',
	        { htmlFor: id },
	        this.props.label
	      );
	    }

	    if (this.props.labelRight !== '') {
	      labelRight = _react2['default'].createElement(
	        'label',
	        { htmlFor: id },
	        this.props.labelRight
	      );
	    }

	    if (['switch', 'select'].indexOf(mode) < -1) {
	      mode = "switch";
	    }

	    return _react2['default'].createElement(
	      'div',
	      { className: 'rsbc-switch-button rsbc-mode-' + mode + ' ' + this.props.theme + (this.props.disabled ? " disabled" : "") },
	      label,
	      _react2['default'].createElement('input', { onChange: this.props.onChange,
	        defaultChecked: this.props.defaultChecked,
	        disabled: this.props.disabled,
	        id: id, name: this.props.name,
	        type: 'checkbox',
	        value: '1' }),
	      _react2['default'].createElement('label', { htmlFor: id }),
	      labelRight
	    );
	  }

	});

	exports['default'] = SwitchButton;
	module.exports = exports['default'];

/***/ }),
/* 282 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	module.exports = __webpack_require__(283);


/***/ }),
/* 283 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var _assign = __webpack_require__(284);

	var ReactBaseClasses = __webpack_require__(285);
	var ReactChildren = __webpack_require__(294);
	var ReactDOMFactories = __webpack_require__(302);
	var ReactElement = __webpack_require__(296);
	var ReactPropTypes = __webpack_require__(308);
	var ReactVersion = __webpack_require__(310);

	var createReactClass = __webpack_require__(311);
	var onlyChild = __webpack_require__(318);

	var createElement = ReactElement.createElement;
	var createFactory = ReactElement.createFactory;
	var cloneElement = ReactElement.cloneElement;

	if (process.env.NODE_ENV !== 'production') {
	  var lowPriorityWarning = __webpack_require__(293);
	  var canDefineProperty = __webpack_require__(290);
	  var ReactElementValidator = __webpack_require__(303);
	  var didWarnPropTypesDeprecated = false;
	  createElement = ReactElementValidator.createElement;
	  createFactory = ReactElementValidator.createFactory;
	  cloneElement = ReactElementValidator.cloneElement;
	}

	var __spread = _assign;
	var createMixin = function (mixin) {
	  return mixin;
	};

	if (process.env.NODE_ENV !== 'production') {
	  var warnedForSpread = false;
	  var warnedForCreateMixin = false;
	  __spread = function () {
	    lowPriorityWarning(warnedForSpread, 'React.__spread is deprecated and should not be used. Use ' + 'Object.assign directly or another helper function with similar ' + 'semantics. You may be seeing this warning due to your compiler. ' + 'See https://fb.me/react-spread-deprecation for more details.');
	    warnedForSpread = true;
	    return _assign.apply(null, arguments);
	  };

	  createMixin = function (mixin) {
	    lowPriorityWarning(warnedForCreateMixin, 'React.createMixin is deprecated and should not be used. ' + 'In React v16.0, it will be removed. ' + 'You can use this mixin directly instead. ' + 'See https://fb.me/createmixin-was-never-implemented for more info.');
	    warnedForCreateMixin = true;
	    return mixin;
	  };
	}

	var React = {
	  // Modern

	  Children: {
	    map: ReactChildren.map,
	    forEach: ReactChildren.forEach,
	    count: ReactChildren.count,
	    toArray: ReactChildren.toArray,
	    only: onlyChild
	  },

	  Component: ReactBaseClasses.Component,
	  PureComponent: ReactBaseClasses.PureComponent,

	  createElement: createElement,
	  cloneElement: cloneElement,
	  isValidElement: ReactElement.isValidElement,

	  // Classic

	  PropTypes: ReactPropTypes,
	  createClass: createReactClass,
	  createFactory: createFactory,
	  createMixin: createMixin,

	  // This looks DOM specific but these are actually isomorphic helpers
	  // since they are just generating DOM strings.
	  DOM: ReactDOMFactories,

	  version: ReactVersion,

	  // Deprecated hook for JSX spread, don't use this for anything.
	  __spread: __spread
	};

	if (process.env.NODE_ENV !== 'production') {
	  var warnedForCreateClass = false;
	  if (canDefineProperty) {
	    Object.defineProperty(React, 'PropTypes', {
	      get: function () {
	        lowPriorityWarning(didWarnPropTypesDeprecated, 'Accessing PropTypes via the main React package is deprecated,' + ' and will be removed in  React v16.0.' + ' Use the latest available v15.* prop-types package from npm instead.' + ' For info on usage, compatibility, migration and more, see ' + 'https://fb.me/prop-types-docs');
	        didWarnPropTypesDeprecated = true;
	        return ReactPropTypes;
	      }
	    });

	    Object.defineProperty(React, 'createClass', {
	      get: function () {
	        lowPriorityWarning(warnedForCreateClass, 'Accessing createClass via the main React package is deprecated,' + ' and will be removed in React v16.0.' + " Use a plain JavaScript class instead. If you're not yet " + 'ready to migrate, create-react-class v15.* is available ' + 'on npm as a temporary, drop-in replacement. ' + 'For more info see https://fb.me/react-create-class');
	        warnedForCreateClass = true;
	        return createReactClass;
	      }
	    });
	  }

	  // React.DOM factories are deprecated. Wrap these methods so that
	  // invocations of the React.DOM namespace and alert users to switch
	  // to the `react-dom-factories` package.
	  React.DOM = {};
	  var warnedForFactories = false;
	  Object.keys(ReactDOMFactories).forEach(function (factory) {
	    React.DOM[factory] = function () {
	      if (!warnedForFactories) {
	        lowPriorityWarning(false, 'Accessing factories like React.DOM.%s has been deprecated ' + 'and will be removed in v16.0+. Use the ' + 'react-dom-factories package instead. ' + ' Version 1.0 provides a drop-in replacement.' + ' For more info, see https://fb.me/react-dom-factories', factory);
	        warnedForFactories = true;
	      }
	      return ReactDOMFactories[factory].apply(ReactDOMFactories, arguments);
	    };
	  });
	}

	module.exports = React;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)))

/***/ }),
/* 284 */
/***/ (function(module, exports) {

	/*
	object-assign
	(c) Sindre Sorhus
	@license MIT
	*/

	'use strict';
	/* eslint-disable no-unused-vars */
	var getOwnPropertySymbols = Object.getOwnPropertySymbols;
	var hasOwnProperty = Object.prototype.hasOwnProperty;
	var propIsEnumerable = Object.prototype.propertyIsEnumerable;

	function toObject(val) {
		if (val === null || val === undefined) {
			throw new TypeError('Object.assign cannot be called with null or undefined');
		}

		return Object(val);
	}

	function shouldUseNative() {
		try {
			if (!Object.assign) {
				return false;
			}

			// Detect buggy property enumeration order in older V8 versions.

			// https://bugs.chromium.org/p/v8/issues/detail?id=4118
			var test1 = new String('abc');  // eslint-disable-line no-new-wrappers
			test1[5] = 'de';
			if (Object.getOwnPropertyNames(test1)[0] === '5') {
				return false;
			}

			// https://bugs.chromium.org/p/v8/issues/detail?id=3056
			var test2 = {};
			for (var i = 0; i < 10; i++) {
				test2['_' + String.fromCharCode(i)] = i;
			}
			var order2 = Object.getOwnPropertyNames(test2).map(function (n) {
				return test2[n];
			});
			if (order2.join('') !== '0123456789') {
				return false;
			}

			// https://bugs.chromium.org/p/v8/issues/detail?id=3056
			var test3 = {};
			'abcdefghijklmnopqrst'.split('').forEach(function (letter) {
				test3[letter] = letter;
			});
			if (Object.keys(Object.assign({}, test3)).join('') !==
					'abcdefghijklmnopqrst') {
				return false;
			}

			return true;
		} catch (err) {
			// We don't expect any of the above to throw, but better to be safe.
			return false;
		}
	}

	module.exports = shouldUseNative() ? Object.assign : function (target, source) {
		var from;
		var to = toObject(target);
		var symbols;

		for (var s = 1; s < arguments.length; s++) {
			from = Object(arguments[s]);

			for (var key in from) {
				if (hasOwnProperty.call(from, key)) {
					to[key] = from[key];
				}
			}

			if (getOwnPropertySymbols) {
				symbols = getOwnPropertySymbols(from);
				for (var i = 0; i < symbols.length; i++) {
					if (propIsEnumerable.call(from, symbols[i])) {
						to[symbols[i]] = from[symbols[i]];
					}
				}
			}
		}

		return to;
	};


/***/ }),
/* 285 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(286),
	    _assign = __webpack_require__(284);

	var ReactNoopUpdateQueue = __webpack_require__(287);

	var canDefineProperty = __webpack_require__(290);
	var emptyObject = __webpack_require__(291);
	var invariant = __webpack_require__(292);
	var lowPriorityWarning = __webpack_require__(293);

	/**
	 * Base class helpers for the updating state of a component.
	 */
	function ReactComponent(props, context, updater) {
	  this.props = props;
	  this.context = context;
	  this.refs = emptyObject;
	  // We initialize the default updater but the real one gets injected by the
	  // renderer.
	  this.updater = updater || ReactNoopUpdateQueue;
	}

	ReactComponent.prototype.isReactComponent = {};

	/**
	 * Sets a subset of the state. Always use this to mutate
	 * state. You should treat `this.state` as immutable.
	 *
	 * There is no guarantee that `this.state` will be immediately updated, so
	 * accessing `this.state` after calling this method may return the old value.
	 *
	 * There is no guarantee that calls to `setState` will run synchronously,
	 * as they may eventually be batched together.  You can provide an optional
	 * callback that will be executed when the call to setState is actually
	 * completed.
	 *
	 * When a function is provided to setState, it will be called at some point in
	 * the future (not synchronously). It will be called with the up to date
	 * component arguments (state, props, context). These values can be different
	 * from this.* because your function may be called after receiveProps but before
	 * shouldComponentUpdate, and this new state, props, and context will not yet be
	 * assigned to this.
	 *
	 * @param {object|function} partialState Next partial state or function to
	 *        produce next partial state to be merged with current state.
	 * @param {?function} callback Called after state is updated.
	 * @final
	 * @protected
	 */
	ReactComponent.prototype.setState = function (partialState, callback) {
	  !(typeof partialState === 'object' || typeof partialState === 'function' || partialState == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'setState(...): takes an object of state variables to update or a function which returns an object of state variables.') : _prodInvariant('85') : void 0;
	  this.updater.enqueueSetState(this, partialState);
	  if (callback) {
	    this.updater.enqueueCallback(this, callback, 'setState');
	  }
	};

	/**
	 * Forces an update. This should only be invoked when it is known with
	 * certainty that we are **not** in a DOM transaction.
	 *
	 * You may want to call this when you know that some deeper aspect of the
	 * component's state has changed but `setState` was not called.
	 *
	 * This will not invoke `shouldComponentUpdate`, but it will invoke
	 * `componentWillUpdate` and `componentDidUpdate`.
	 *
	 * @param {?function} callback Called after update is complete.
	 * @final
	 * @protected
	 */
	ReactComponent.prototype.forceUpdate = function (callback) {
	  this.updater.enqueueForceUpdate(this);
	  if (callback) {
	    this.updater.enqueueCallback(this, callback, 'forceUpdate');
	  }
	};

	/**
	 * Deprecated APIs. These APIs used to exist on classic React classes but since
	 * we would like to deprecate them, we're not going to move them over to this
	 * modern base class. Instead, we define a getter that warns if it's accessed.
	 */
	if (process.env.NODE_ENV !== 'production') {
	  var deprecatedAPIs = {
	    isMounted: ['isMounted', 'Instead, make sure to clean up subscriptions and pending requests in ' + 'componentWillUnmount to prevent memory leaks.'],
	    replaceState: ['replaceState', 'Refactor your code to use setState instead (see ' + 'https://github.com/facebook/react/issues/3236).']
	  };
	  var defineDeprecationWarning = function (methodName, info) {
	    if (canDefineProperty) {
	      Object.defineProperty(ReactComponent.prototype, methodName, {
	        get: function () {
	          lowPriorityWarning(false, '%s(...) is deprecated in plain JavaScript React classes. %s', info[0], info[1]);
	          return undefined;
	        }
	      });
	    }
	  };
	  for (var fnName in deprecatedAPIs) {
	    if (deprecatedAPIs.hasOwnProperty(fnName)) {
	      defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);
	    }
	  }
	}

	/**
	 * Base class helpers for the updating state of a component.
	 */
	function ReactPureComponent(props, context, updater) {
	  // Duplicated from ReactComponent.
	  this.props = props;
	  this.context = context;
	  this.refs = emptyObject;
	  // We initialize the default updater but the real one gets injected by the
	  // renderer.
	  this.updater = updater || ReactNoopUpdateQueue;
	}

	function ComponentDummy() {}
	ComponentDummy.prototype = ReactComponent.prototype;
	ReactPureComponent.prototype = new ComponentDummy();
	ReactPureComponent.prototype.constructor = ReactPureComponent;
	// Avoid an extra prototype jump for these methods.
	_assign(ReactPureComponent.prototype, ReactComponent.prototype);
	ReactPureComponent.prototype.isPureReactComponent = true;

	module.exports = {
	  Component: ReactComponent,
	  PureComponent: ReactPureComponent
	};
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)))

/***/ }),
/* 286 */
/***/ (function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	'use strict';

	/**
	 * WARNING: DO NOT manually require this module.
	 * This is a replacement for `invariant(...)` used by the error code system
	 * and will _only_ be required by the corresponding babel pass.
	 * It always throws.
	 */

	function reactProdInvariant(code) {
	  var argCount = arguments.length - 1;

	  var message = 'Minified React error #' + code + '; visit ' + 'http://facebook.github.io/react/docs/error-decoder.html?invariant=' + code;

	  for (var argIdx = 0; argIdx < argCount; argIdx++) {
	    message += '&args[]=' + encodeURIComponent(arguments[argIdx + 1]);
	  }

	  message += ' for the full message or use the non-minified dev environment' + ' for full errors and additional helpful warnings.';

	  var error = new Error(message);
	  error.name = 'Invariant Violation';
	  error.framesToPop = 1; // we don't care about reactProdInvariant's own frame

	  throw error;
	}

	module.exports = reactProdInvariant;

/***/ }),
/* 287 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var warning = __webpack_require__(288);

	function warnNoop(publicInstance, callerName) {
	  if (process.env.NODE_ENV !== 'production') {
	    var constructor = publicInstance.constructor;
	    process.env.NODE_ENV !== 'production' ? warning(false, '%s(...): Can only update a mounted or mounting component. ' + 'This usually means you called %s() on an unmounted component. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, constructor && (constructor.displayName || constructor.name) || 'ReactClass') : void 0;
	  }
	}

	/**
	 * This is the abstract API for an update queue.
	 */
	var ReactNoopUpdateQueue = {
	  /**
	   * Checks whether or not this composite component is mounted.
	   * @param {ReactClass} publicInstance The instance we want to test.
	   * @return {boolean} True if mounted, false otherwise.
	   * @protected
	   * @final
	   */
	  isMounted: function (publicInstance) {
	    return false;
	  },

	  /**
	   * Enqueue a callback that will be executed after all the pending updates
	   * have processed.
	   *
	   * @param {ReactClass} publicInstance The instance to use as `this` context.
	   * @param {?function} callback Called after state is updated.
	   * @internal
	   */
	  enqueueCallback: function (publicInstance, callback) {},

	  /**
	   * Forces an update. This should only be invoked when it is known with
	   * certainty that we are **not** in a DOM transaction.
	   *
	   * You may want to call this when you know that some deeper aspect of the
	   * component's state has changed but `setState` was not called.
	   *
	   * This will not invoke `shouldComponentUpdate`, but it will invoke
	   * `componentWillUpdate` and `componentDidUpdate`.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @internal
	   */
	  enqueueForceUpdate: function (publicInstance) {
	    warnNoop(publicInstance, 'forceUpdate');
	  },

	  /**
	   * Replaces all of the state. Always use this or `setState` to mutate state.
	   * You should treat `this.state` as immutable.
	   *
	   * There is no guarantee that `this.state` will be immediately updated, so
	   * accessing `this.state` after calling this method may return the old value.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} completeState Next state.
	   * @internal
	   */
	  enqueueReplaceState: function (publicInstance, completeState) {
	    warnNoop(publicInstance, 'replaceState');
	  },

	  /**
	   * Sets a subset of the state. This only exists because _pendingState is
	   * internal. This provides a merging strategy that is not available to deep
	   * properties which is confusing. TODO: Expose pendingState or don't use it
	   * during the merge.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} partialState Next partial state to be merged with state.
	   * @internal
	   */
	  enqueueSetState: function (publicInstance, partialState) {
	    warnNoop(publicInstance, 'setState');
	  }
	};

	module.exports = ReactNoopUpdateQueue;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)))

/***/ }),
/* 288 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var emptyFunction = __webpack_require__(289);

	/**
	 * Similar to invariant but only logs a warning if the condition is not met.
	 * This can be used to log issues in development environments in critical
	 * paths. Removing the logging code for production environments will keep the
	 * same logic and follow the same code paths.
	 */

	var warning = emptyFunction;

	if (process.env.NODE_ENV !== 'production') {
	  (function () {
	    var printWarning = function printWarning(format) {
	      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	        args[_key - 1] = arguments[_key];
	      }

	      var argIndex = 0;
	      var message = 'Warning: ' + format.replace(/%s/g, function () {
	        return args[argIndex++];
	      });
	      if (typeof console !== 'undefined') {
	        console.error(message);
	      }
	      try {
	        // --- Welcome to debugging React ---
	        // This error was thrown as a convenience so that you can use this stack
	        // to find the callsite that caused this warning to fire.
	        throw new Error(message);
	      } catch (x) {}
	    };

	    warning = function warning(condition, format) {
	      if (format === undefined) {
	        throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');
	      }

	      if (format.indexOf('Failed Composite propType: ') === 0) {
	        return; // Ignore CompositeComponent proptype check.
	      }

	      if (!condition) {
	        for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
	          args[_key2 - 2] = arguments[_key2];
	        }

	        printWarning.apply(undefined, [format].concat(args));
	      }
	    };
	  })();
	}

	module.exports = warning;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)))

/***/ }),
/* 289 */
/***/ (function(module, exports) {

	"use strict";

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */

	function makeEmptyFunction(arg) {
	  return function () {
	    return arg;
	  };
	}

	/**
	 * This function accepts and discards inputs; it has no side effects. This is
	 * primarily useful idiomatically for overridable function endpoints which
	 * always need to be callable, since JS lacks a null-call idiom ala Cocoa.
	 */
	var emptyFunction = function emptyFunction() {};

	emptyFunction.thatReturns = makeEmptyFunction;
	emptyFunction.thatReturnsFalse = makeEmptyFunction(false);
	emptyFunction.thatReturnsTrue = makeEmptyFunction(true);
	emptyFunction.thatReturnsNull = makeEmptyFunction(null);
	emptyFunction.thatReturnsThis = function () {
	  return this;
	};
	emptyFunction.thatReturnsArgument = function (arg) {
	  return arg;
	};

	module.exports = emptyFunction;

/***/ }),
/* 290 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */

	'use strict';

	var canDefineProperty = false;
	if (process.env.NODE_ENV !== 'production') {
	  try {
	    // $FlowFixMe https://github.com/facebook/flow/issues/285
	    Object.defineProperty({}, 'x', { get: function () {} });
	    canDefineProperty = true;
	  } catch (x) {
	    // IE will fail on defineProperty
	  }
	}

	module.exports = canDefineProperty;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)))

/***/ }),
/* 291 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var emptyObject = {};

	if (process.env.NODE_ENV !== 'production') {
	  Object.freeze(emptyObject);
	}

	module.exports = emptyObject;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)))

/***/ }),
/* 292 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	/**
	 * Use invariant() to assert state which your program assumes to be true.
	 *
	 * Provide sprintf-style format (only %s is supported) and arguments
	 * to provide information about what broke and what you were
	 * expecting.
	 *
	 * The invariant message will be stripped in production, but the invariant
	 * will remain to ensure logic does not differ in production.
	 */

	var validateFormat = function validateFormat(format) {};

	if (process.env.NODE_ENV !== 'production') {
	  validateFormat = function validateFormat(format) {
	    if (format === undefined) {
	      throw new Error('invariant requires an error message argument');
	    }
	  };
	}

	function invariant(condition, format, a, b, c, d, e, f) {
	  validateFormat(format);

	  if (!condition) {
	    var error;
	    if (format === undefined) {
	      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');
	    } else {
	      var args = [a, b, c, d, e, f];
	      var argIndex = 0;
	      error = new Error(format.replace(/%s/g, function () {
	        return args[argIndex++];
	      }));
	      error.name = 'Invariant Violation';
	    }

	    error.framesToPop = 1; // we don't care about invariant's own frame
	    throw error;
	  }
	}

	module.exports = invariant;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)))

/***/ }),
/* 293 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	/**
	 * Forked from fbjs/warning:
	 * https://github.com/facebook/fbjs/blob/e66ba20ad5be433eb54423f2b097d829324d9de6/packages/fbjs/src/__forks__/warning.js
	 *
	 * Only change is we use console.warn instead of console.error,
	 * and do nothing when 'console' is not supported.
	 * This really simplifies the code.
	 * ---
	 * Similar to invariant but only logs a warning if the condition is not met.
	 * This can be used to log issues in development environments in critical
	 * paths. Removing the logging code for production environments will keep the
	 * same logic and follow the same code paths.
	 */

	var lowPriorityWarning = function () {};

	if (process.env.NODE_ENV !== 'production') {
	  var printWarning = function (format) {
	    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	      args[_key - 1] = arguments[_key];
	    }

	    var argIndex = 0;
	    var message = 'Warning: ' + format.replace(/%s/g, function () {
	      return args[argIndex++];
	    });
	    if (typeof console !== 'undefined') {
	      console.warn(message);
	    }
	    try {
	      // --- Welcome to debugging React ---
	      // This error was thrown as a convenience so that you can use this stack
	      // to find the callsite that caused this warning to fire.
	      throw new Error(message);
	    } catch (x) {}
	  };

	  lowPriorityWarning = function (condition, format) {
	    if (format === undefined) {
	      throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');
	    }
	    if (!condition) {
	      for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
	        args[_key2 - 2] = arguments[_key2];
	      }

	      printWarning.apply(undefined, [format].concat(args));
	    }
	  };
	}

	module.exports = lowPriorityWarning;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)))

/***/ }),
/* 294 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var PooledClass = __webpack_require__(295);
	var ReactElement = __webpack_require__(296);

	var emptyFunction = __webpack_require__(289);
	var traverseAllChildren = __webpack_require__(299);

	var twoArgumentPooler = PooledClass.twoArgumentPooler;
	var fourArgumentPooler = PooledClass.fourArgumentPooler;

	var userProvidedKeyEscapeRegex = /\/+/g;
	function escapeUserProvidedKey(text) {
	  return ('' + text).replace(userProvidedKeyEscapeRegex, '$&/');
	}

	/**
	 * PooledClass representing the bookkeeping associated with performing a child
	 * traversal. Allows avoiding binding callbacks.
	 *
	 * @constructor ForEachBookKeeping
	 * @param {!function} forEachFunction Function to perform traversal with.
	 * @param {?*} forEachContext Context to perform context with.
	 */
	function ForEachBookKeeping(forEachFunction, forEachContext) {
	  this.func = forEachFunction;
	  this.context = forEachContext;
	  this.count = 0;
	}
	ForEachBookKeeping.prototype.destructor = function () {
	  this.func = null;
	  this.context = null;
	  this.count = 0;
	};
	PooledClass.addPoolingTo(ForEachBookKeeping, twoArgumentPooler);

	function forEachSingleChild(bookKeeping, child, name) {
	  var func = bookKeeping.func,
	      context = bookKeeping.context;

	  func.call(context, child, bookKeeping.count++);
	}

	/**
	 * Iterates through children that are typically specified as `props.children`.
	 *
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.foreach
	 *
	 * The provided forEachFunc(child, index) will be called for each
	 * leaf child.
	 *
	 * @param {?*} children Children tree container.
	 * @param {function(*, int)} forEachFunc
	 * @param {*} forEachContext Context for forEachContext.
	 */
	function forEachChildren(children, forEachFunc, forEachContext) {
	  if (children == null) {
	    return children;
	  }
	  var traverseContext = ForEachBookKeeping.getPooled(forEachFunc, forEachContext);
	  traverseAllChildren(children, forEachSingleChild, traverseContext);
	  ForEachBookKeeping.release(traverseContext);
	}

	/**
	 * PooledClass representing the bookkeeping associated with performing a child
	 * mapping. Allows avoiding binding callbacks.
	 *
	 * @constructor MapBookKeeping
	 * @param {!*} mapResult Object containing the ordered map of results.
	 * @param {!function} mapFunction Function to perform mapping with.
	 * @param {?*} mapContext Context to perform mapping with.
	 */
	function MapBookKeeping(mapResult, keyPrefix, mapFunction, mapContext) {
	  this.result = mapResult;
	  this.keyPrefix = keyPrefix;
	  this.func = mapFunction;
	  this.context = mapContext;
	  this.count = 0;
	}
	MapBookKeeping.prototype.destructor = function () {
	  this.result = null;
	  this.keyPrefix = null;
	  this.func = null;
	  this.context = null;
	  this.count = 0;
	};
	PooledClass.addPoolingTo(MapBookKeeping, fourArgumentPooler);

	function mapSingleChildIntoContext(bookKeeping, child, childKey) {
	  var result = bookKeeping.result,
	      keyPrefix = bookKeeping.keyPrefix,
	      func = bookKeeping.func,
	      context = bookKeeping.context;


	  var mappedChild = func.call(context, child, bookKeeping.count++);
	  if (Array.isArray(mappedChild)) {
	    mapIntoWithKeyPrefixInternal(mappedChild, result, childKey, emptyFunction.thatReturnsArgument);
	  } else if (mappedChild != null) {
	    if (ReactElement.isValidElement(mappedChild)) {
	      mappedChild = ReactElement.cloneAndReplaceKey(mappedChild,
	      // Keep both the (mapped) and old keys if they differ, just as
	      // traverseAllChildren used to do for objects as children
	      keyPrefix + (mappedChild.key && (!child || child.key !== mappedChild.key) ? escapeUserProvidedKey(mappedChild.key) + '/' : '') + childKey);
	    }
	    result.push(mappedChild);
	  }
	}

	function mapIntoWithKeyPrefixInternal(children, array, prefix, func, context) {
	  var escapedPrefix = '';
	  if (prefix != null) {
	    escapedPrefix = escapeUserProvidedKey(prefix) + '/';
	  }
	  var traverseContext = MapBookKeeping.getPooled(array, escapedPrefix, func, context);
	  traverseAllChildren(children, mapSingleChildIntoContext, traverseContext);
	  MapBookKeeping.release(traverseContext);
	}

	/**
	 * Maps children that are typically specified as `props.children`.
	 *
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.map
	 *
	 * The provided mapFunction(child, key, index) will be called for each
	 * leaf child.
	 *
	 * @param {?*} children Children tree container.
	 * @param {function(*, int)} func The map function.
	 * @param {*} context Context for mapFunction.
	 * @return {object} Object containing the ordered map of results.
	 */
	function mapChildren(children, func, context) {
	  if (children == null) {
	    return children;
	  }
	  var result = [];
	  mapIntoWithKeyPrefixInternal(children, result, null, func, context);
	  return result;
	}

	function forEachSingleChildDummy(traverseContext, child, name) {
	  return null;
	}

	/**
	 * Count the number of children that are typically specified as
	 * `props.children`.
	 *
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.count
	 *
	 * @param {?*} children Children tree container.
	 * @return {number} The number of children.
	 */
	function countChildren(children, context) {
	  return traverseAllChildren(children, forEachSingleChildDummy, null);
	}

	/**
	 * Flatten a children object (typically specified as `props.children`) and
	 * return an array with appropriately re-keyed children.
	 *
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.toarray
	 */
	function toArray(children) {
	  var result = [];
	  mapIntoWithKeyPrefixInternal(children, result, null, emptyFunction.thatReturnsArgument);
	  return result;
	}

	var ReactChildren = {
	  forEach: forEachChildren,
	  map: mapChildren,
	  mapIntoWithKeyPrefixInternal: mapIntoWithKeyPrefixInternal,
	  count: countChildren,
	  toArray: toArray
	};

	module.exports = ReactChildren;

/***/ }),
/* 295 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(286);

	var invariant = __webpack_require__(292);

	/**
	 * Static poolers. Several custom versions for each potential number of
	 * arguments. A completely generic pooler is easy to implement, but would
	 * require accessing the `arguments` object. In each of these, `this` refers to
	 * the Class itself, not an instance. If any others are needed, simply add them
	 * here, or in their own files.
	 */
	var oneArgumentPooler = function (copyFieldsFrom) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, copyFieldsFrom);
	    return instance;
	  } else {
	    return new Klass(copyFieldsFrom);
	  }
	};

	var twoArgumentPooler = function (a1, a2) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2);
	    return instance;
	  } else {
	    return new Klass(a1, a2);
	  }
	};

	var threeArgumentPooler = function (a1, a2, a3) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2, a3);
	    return instance;
	  } else {
	    return new Klass(a1, a2, a3);
	  }
	};

	var fourArgumentPooler = function (a1, a2, a3, a4) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2, a3, a4);
	    return instance;
	  } else {
	    return new Klass(a1, a2, a3, a4);
	  }
	};

	var standardReleaser = function (instance) {
	  var Klass = this;
	  !(instance instanceof Klass) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Trying to release an instance into a pool of a different type.') : _prodInvariant('25') : void 0;
	  instance.destructor();
	  if (Klass.instancePool.length < Klass.poolSize) {
	    Klass.instancePool.push(instance);
	  }
	};

	var DEFAULT_POOL_SIZE = 10;
	var DEFAULT_POOLER = oneArgumentPooler;

	/**
	 * Augments `CopyConstructor` to be a poolable class, augmenting only the class
	 * itself (statically) not adding any prototypical fields. Any CopyConstructor
	 * you give this may have a `poolSize` property, and will look for a
	 * prototypical `destructor` on instances.
	 *
	 * @param {Function} CopyConstructor Constructor that can be used to reset.
	 * @param {Function} pooler Customizable pooler.
	 */
	var addPoolingTo = function (CopyConstructor, pooler) {
	  // Casting as any so that flow ignores the actual implementation and trusts
	  // it to match the type we declared
	  var NewKlass = CopyConstructor;
	  NewKlass.instancePool = [];
	  NewKlass.getPooled = pooler || DEFAULT_POOLER;
	  if (!NewKlass.poolSize) {
	    NewKlass.poolSize = DEFAULT_POOL_SIZE;
	  }
	  NewKlass.release = standardReleaser;
	  return NewKlass;
	};

	var PooledClass = {
	  addPoolingTo: addPoolingTo,
	  oneArgumentPooler: oneArgumentPooler,
	  twoArgumentPooler: twoArgumentPooler,
	  threeArgumentPooler: threeArgumentPooler,
	  fourArgumentPooler: fourArgumentPooler
	};

	module.exports = PooledClass;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)))

/***/ }),
/* 296 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var _assign = __webpack_require__(284);

	var ReactCurrentOwner = __webpack_require__(297);

	var warning = __webpack_require__(288);
	var canDefineProperty = __webpack_require__(290);
	var hasOwnProperty = Object.prototype.hasOwnProperty;

	var REACT_ELEMENT_TYPE = __webpack_require__(298);

	var RESERVED_PROPS = {
	  key: true,
	  ref: true,
	  __self: true,
	  __source: true
	};

	var specialPropKeyWarningShown, specialPropRefWarningShown;

	function hasValidRef(config) {
	  if (process.env.NODE_ENV !== 'production') {
	    if (hasOwnProperty.call(config, 'ref')) {
	      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;
	      if (getter && getter.isReactWarning) {
	        return false;
	      }
	    }
	  }
	  return config.ref !== undefined;
	}

	function hasValidKey(config) {
	  if (process.env.NODE_ENV !== 'production') {
	    if (hasOwnProperty.call(config, 'key')) {
	      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;
	      if (getter && getter.isReactWarning) {
	        return false;
	      }
	    }
	  }
	  return config.key !== undefined;
	}

	function defineKeyPropWarningGetter(props, displayName) {
	  var warnAboutAccessingKey = function () {
	    if (!specialPropKeyWarningShown) {
	      specialPropKeyWarningShown = true;
	      process.env.NODE_ENV !== 'production' ? warning(false, '%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName) : void 0;
	    }
	  };
	  warnAboutAccessingKey.isReactWarning = true;
	  Object.defineProperty(props, 'key', {
	    get: warnAboutAccessingKey,
	    configurable: true
	  });
	}

	function defineRefPropWarningGetter(props, displayName) {
	  var warnAboutAccessingRef = function () {
	    if (!specialPropRefWarningShown) {
	      specialPropRefWarningShown = true;
	      process.env.NODE_ENV !== 'production' ? warning(false, '%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName) : void 0;
	    }
	  };
	  warnAboutAccessingRef.isReactWarning = true;
	  Object.defineProperty(props, 'ref', {
	    get: warnAboutAccessingRef,
	    configurable: true
	  });
	}

	/**
	 * Factory method to create a new React element. This no longer adheres to
	 * the class pattern, so do not use new to call it. Also, no instanceof check
	 * will work. Instead test $$typeof field against Symbol.for('react.element') to check
	 * if something is a React Element.
	 *
	 * @param {*} type
	 * @param {*} key
	 * @param {string|object} ref
	 * @param {*} self A *temporary* helper to detect places where `this` is
	 * different from the `owner` when React.createElement is called, so that we
	 * can warn. We want to get rid of owner and replace string `ref`s with arrow
	 * functions, and as long as `this` and owner are the same, there will be no
	 * change in behavior.
	 * @param {*} source An annotation object (added by a transpiler or otherwise)
	 * indicating filename, line number, and/or other information.
	 * @param {*} owner
	 * @param {*} props
	 * @internal
	 */
	var ReactElement = function (type, key, ref, self, source, owner, props) {
	  var element = {
	    // This tag allow us to uniquely identify this as a React Element
	    $$typeof: REACT_ELEMENT_TYPE,

	    // Built-in properties that belong on the element
	    type: type,
	    key: key,
	    ref: ref,
	    props: props,

	    // Record the component responsible for creating this element.
	    _owner: owner
	  };

	  if (process.env.NODE_ENV !== 'production') {
	    // The validation flag is currently mutative. We put it on
	    // an external backing store so that we can freeze the whole object.
	    // This can be replaced with a WeakMap once they are implemented in
	    // commonly used development environments.
	    element._store = {};

	    // To make comparing ReactElements easier for testing purposes, we make
	    // the validation flag non-enumerable (where possible, which should
	    // include every environment we run tests in), so the test framework
	    // ignores it.
	    if (canDefineProperty) {
	      Object.defineProperty(element._store, 'validated', {
	        configurable: false,
	        enumerable: false,
	        writable: true,
	        value: false
	      });
	      // self and source are DEV only properties.
	      Object.defineProperty(element, '_self', {
	        configurable: false,
	        enumerable: false,
	        writable: false,
	        value: self
	      });
	      // Two elements created in two different places should be considered
	      // equal for testing purposes and therefore we hide it from enumeration.
	      Object.defineProperty(element, '_source', {
	        configurable: false,
	        enumerable: false,
	        writable: false,
	        value: source
	      });
	    } else {
	      element._store.validated = false;
	      element._self = self;
	      element._source = source;
	    }
	    if (Object.freeze) {
	      Object.freeze(element.props);
	      Object.freeze(element);
	    }
	  }

	  return element;
	};

	/**
	 * Create and return a new ReactElement of the given type.
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.createelement
	 */
	ReactElement.createElement = function (type, config, children) {
	  var propName;

	  // Reserved names are extracted
	  var props = {};

	  var key = null;
	  var ref = null;
	  var self = null;
	  var source = null;

	  if (config != null) {
	    if (hasValidRef(config)) {
	      ref = config.ref;
	    }
	    if (hasValidKey(config)) {
	      key = '' + config.key;
	    }

	    self = config.__self === undefined ? null : config.__self;
	    source = config.__source === undefined ? null : config.__source;
	    // Remaining properties are added to a new props object
	    for (propName in config) {
	      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
	        props[propName] = config[propName];
	      }
	    }
	  }

	  // Children can be more than one argument, and those are transferred onto
	  // the newly allocated props object.
	  var childrenLength = arguments.length - 2;
	  if (childrenLength === 1) {
	    props.children = children;
	  } else if (childrenLength > 1) {
	    var childArray = Array(childrenLength);
	    for (var i = 0; i < childrenLength; i++) {
	      childArray[i] = arguments[i + 2];
	    }
	    if (process.env.NODE_ENV !== 'production') {
	      if (Object.freeze) {
	        Object.freeze(childArray);
	      }
	    }
	    props.children = childArray;
	  }

	  // Resolve default props
	  if (type && type.defaultProps) {
	    var defaultProps = type.defaultProps;
	    for (propName in defaultProps) {
	      if (props[propName] === undefined) {
	        props[propName] = defaultProps[propName];
	      }
	    }
	  }
	  if (process.env.NODE_ENV !== 'production') {
	    if (key || ref) {
	      if (typeof props.$$typeof === 'undefined' || props.$$typeof !== REACT_ELEMENT_TYPE) {
	        var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;
	        if (key) {
	          defineKeyPropWarningGetter(props, displayName);
	        }
	        if (ref) {
	          defineRefPropWarningGetter(props, displayName);
	        }
	      }
	    }
	  }
	  return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);
	};

	/**
	 * Return a function that produces ReactElements of a given type.
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.createfactory
	 */
	ReactElement.createFactory = function (type) {
	  var factory = ReactElement.createElement.bind(null, type);
	  // Expose the type on the factory and the prototype so that it can be
	  // easily accessed on elements. E.g. `<Foo />.type === Foo`.
	  // This should not be named `constructor` since this may not be the function
	  // that created the element, and it may not even be a constructor.
	  // Legacy hook TODO: Warn if this is accessed
	  factory.type = type;
	  return factory;
	};

	ReactElement.cloneAndReplaceKey = function (oldElement, newKey) {
	  var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);

	  return newElement;
	};

	/**
	 * Clone and return a new ReactElement using element as the starting point.
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.cloneelement
	 */
	ReactElement.cloneElement = function (element, config, children) {
	  var propName;

	  // Original props are copied
	  var props = _assign({}, element.props);

	  // Reserved names are extracted
	  var key = element.key;
	  var ref = element.ref;
	  // Self is preserved since the owner is preserved.
	  var self = element._self;
	  // Source is preserved since cloneElement is unlikely to be targeted by a
	  // transpiler, and the original source is probably a better indicator of the
	  // true owner.
	  var source = element._source;

	  // Owner will be preserved, unless ref is overridden
	  var owner = element._owner;

	  if (config != null) {
	    if (hasValidRef(config)) {
	      // Silently steal the ref from the parent.
	      ref = config.ref;
	      owner = ReactCurrentOwner.current;
	    }
	    if (hasValidKey(config)) {
	      key = '' + config.key;
	    }

	    // Remaining properties override existing props
	    var defaultProps;
	    if (element.type && element.type.defaultProps) {
	      defaultProps = element.type.defaultProps;
	    }
	    for (propName in config) {
	      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
	        if (config[propName] === undefined && defaultProps !== undefined) {
	          // Resolve default props
	          props[propName] = defaultProps[propName];
	        } else {
	          props[propName] = config[propName];
	        }
	      }
	    }
	  }

	  // Children can be more than one argument, and those are transferred onto
	  // the newly allocated props object.
	  var childrenLength = arguments.length - 2;
	  if (childrenLength === 1) {
	    props.children = children;
	  } else if (childrenLength > 1) {
	    var childArray = Array(childrenLength);
	    for (var i = 0; i < childrenLength; i++) {
	      childArray[i] = arguments[i + 2];
	    }
	    props.children = childArray;
	  }

	  return ReactElement(element.type, key, ref, self, source, owner, props);
	};

	/**
	 * Verifies the object is a ReactElement.
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.isvalidelement
	 * @param {?object} object
	 * @return {boolean} True if `object` is a valid component.
	 * @final
	 */
	ReactElement.isValidElement = function (object) {
	  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
	};

	module.exports = ReactElement;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)))

/***/ }),
/* 297 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */

	'use strict';

	/**
	 * Keeps track of the current owner.
	 *
	 * The current owner is the component who should own any components that are
	 * currently being constructed.
	 */
	var ReactCurrentOwner = {
	  /**
	   * @internal
	   * @type {ReactComponent}
	   */
	  current: null
	};

	module.exports = ReactCurrentOwner;

/***/ }),
/* 298 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */

	'use strict';

	// The Symbol used to tag the ReactElement type. If there is no native Symbol
	// nor polyfill, then a plain number is used for performance.

	var REACT_ELEMENT_TYPE = typeof Symbol === 'function' && Symbol['for'] && Symbol['for']('react.element') || 0xeac7;

	module.exports = REACT_ELEMENT_TYPE;

/***/ }),
/* 299 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(286);

	var ReactCurrentOwner = __webpack_require__(297);
	var REACT_ELEMENT_TYPE = __webpack_require__(298);

	var getIteratorFn = __webpack_require__(300);
	var invariant = __webpack_require__(292);
	var KeyEscapeUtils = __webpack_require__(301);
	var warning = __webpack_require__(288);

	var SEPARATOR = '.';
	var SUBSEPARATOR = ':';

	/**
	 * This is inlined from ReactElement since this file is shared between
	 * isomorphic and renderers. We could extract this to a
	 *
	 */

	/**
	 * TODO: Test that a single child and an array with one item have the same key
	 * pattern.
	 */

	var didWarnAboutMaps = false;

	/**
	 * Generate a key string that identifies a component within a set.
	 *
	 * @param {*} component A component that could contain a manual key.
	 * @param {number} index Index that is used if a manual key is not provided.
	 * @return {string}
	 */
	function getComponentKey(component, index) {
	  // Do some typechecking here since we call this blindly. We want to ensure
	  // that we don't block potential future ES APIs.
	  if (component && typeof component === 'object' && component.key != null) {
	    // Explicit key
	    return KeyEscapeUtils.escape(component.key);
	  }
	  // Implicit key determined by the index in the set
	  return index.toString(36);
	}

	/**
	 * @param {?*} children Children tree container.
	 * @param {!string} nameSoFar Name of the key path so far.
	 * @param {!function} callback Callback to invoke with each child found.
	 * @param {?*} traverseContext Used to pass information throughout the traversal
	 * process.
	 * @return {!number} The number of children in this subtree.
	 */
	function traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {
	  var type = typeof children;

	  if (type === 'undefined' || type === 'boolean') {
	    // All of the above are perceived as null.
	    children = null;
	  }

	  if (children === null || type === 'string' || type === 'number' ||
	  // The following is inlined from ReactElement. This means we can optimize
	  // some checks. React Fiber also inlines this logic for similar purposes.
	  type === 'object' && children.$$typeof === REACT_ELEMENT_TYPE) {
	    callback(traverseContext, children,
	    // If it's the only child, treat the name as if it was wrapped in an array
	    // so that it's consistent if the number of children grows.
	    nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);
	    return 1;
	  }

	  var child;
	  var nextName;
	  var subtreeCount = 0; // Count of children found in the current subtree.
	  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;

	  if (Array.isArray(children)) {
	    for (var i = 0; i < children.length; i++) {
	      child = children[i];
	      nextName = nextNamePrefix + getComponentKey(child, i);
	      subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
	    }
	  } else {
	    var iteratorFn = getIteratorFn(children);
	    if (iteratorFn) {
	      var iterator = iteratorFn.call(children);
	      var step;
	      if (iteratorFn !== children.entries) {
	        var ii = 0;
	        while (!(step = iterator.next()).done) {
	          child = step.value;
	          nextName = nextNamePrefix + getComponentKey(child, ii++);
	          subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
	        }
	      } else {
	        if (process.env.NODE_ENV !== 'production') {
	          var mapsAsChildrenAddendum = '';
	          if (ReactCurrentOwner.current) {
	            var mapsAsChildrenOwnerName = ReactCurrentOwner.current.getName();
	            if (mapsAsChildrenOwnerName) {
	              mapsAsChildrenAddendum = ' Check the render method of `' + mapsAsChildrenOwnerName + '`.';
	            }
	          }
	          process.env.NODE_ENV !== 'production' ? warning(didWarnAboutMaps, 'Using Maps as children is not yet fully supported. It is an ' + 'experimental feature that might be removed. Convert it to a ' + 'sequence / iterable of keyed ReactElements instead.%s', mapsAsChildrenAddendum) : void 0;
	          didWarnAboutMaps = true;
	        }
	        // Iterator will provide entry [k,v] tuples rather than values.
	        while (!(step = iterator.next()).done) {
	          var entry = step.value;
	          if (entry) {
	            child = entry[1];
	            nextName = nextNamePrefix + KeyEscapeUtils.escape(entry[0]) + SUBSEPARATOR + getComponentKey(child, 0);
	            subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
	          }
	        }
	      }
	    } else if (type === 'object') {
	      var addendum = '';
	      if (process.env.NODE_ENV !== 'production') {
	        addendum = ' If you meant to render a collection of children, use an array ' + 'instead or wrap the object using createFragment(object) from the ' + 'React add-ons.';
	        if (children._isReactElement) {
	          addendum = " It looks like you're using an element created by a different " + 'version of React. Make sure to use only one copy of React.';
	        }
	        if (ReactCurrentOwner.current) {
	          var name = ReactCurrentOwner.current.getName();
	          if (name) {
	            addendum += ' Check the render method of `' + name + '`.';
	          }
	        }
	      }
	      var childrenString = String(children);
	       true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Objects are not valid as a React child (found: %s).%s', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : _prodInvariant('31', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : void 0;
	    }
	  }

	  return subtreeCount;
	}

	/**
	 * Traverses children that are typically specified as `props.children`, but
	 * might also be specified through attributes:
	 *
	 * - `traverseAllChildren(this.props.children, ...)`
	 * - `traverseAllChildren(this.props.leftPanelChildren, ...)`
	 *
	 * The `traverseContext` is an optional argument that is passed through the
	 * entire traversal. It can be used to store accumulations or anything else that
	 * the callback might find relevant.
	 *
	 * @param {?*} children Children tree object.
	 * @param {!function} callback To invoke upon traversing each child.
	 * @param {?*} traverseContext Context for traversal.
	 * @return {!number} The number of children in this subtree.
	 */
	function traverseAllChildren(children, callback, traverseContext) {
	  if (children == null) {
	    return 0;
	  }

	  return traverseAllChildrenImpl(children, '', callback, traverseContext);
	}

	module.exports = traverseAllChildren;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)))

/***/ }),
/* 300 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */

	'use strict';

	/* global Symbol */

	var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
	var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.

	/**
	 * Returns the iterator method function contained on the iterable object.
	 *
	 * Be sure to invoke the function with the iterable as context:
	 *
	 *     var iteratorFn = getIteratorFn(myIterable);
	 *     if (iteratorFn) {
	 *       var iterator = iteratorFn.call(myIterable);
	 *       ...
	 *     }
	 *
	 * @param {?object} maybeIterable
	 * @return {?function}
	 */
	function getIteratorFn(maybeIterable) {
	  var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
	  if (typeof iteratorFn === 'function') {
	    return iteratorFn;
	  }
	}

	module.exports = getIteratorFn;

/***/ }),
/* 301 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */

	'use strict';

	/**
	 * Escape and wrap key so it is safe to use as a reactid
	 *
	 * @param {string} key to be escaped.
	 * @return {string} the escaped key.
	 */

	function escape(key) {
	  var escapeRegex = /[=:]/g;
	  var escaperLookup = {
	    '=': '=0',
	    ':': '=2'
	  };
	  var escapedString = ('' + key).replace(escapeRegex, function (match) {
	    return escaperLookup[match];
	  });

	  return '$' + escapedString;
	}

	/**
	 * Unescape and unwrap key for human-readable display
	 *
	 * @param {string} key to unescape.
	 * @return {string} the unescaped key.
	 */
	function unescape(key) {
	  var unescapeRegex = /(=0|=2)/g;
	  var unescaperLookup = {
	    '=0': '=',
	    '=2': ':'
	  };
	  var keySubstring = key[0] === '.' && key[1] === '$' ? key.substring(2) : key.substring(1);

	  return ('' + keySubstring).replace(unescapeRegex, function (match) {
	    return unescaperLookup[match];
	  });
	}

	var KeyEscapeUtils = {
	  escape: escape,
	  unescape: unescape
	};

	module.exports = KeyEscapeUtils;

/***/ }),
/* 302 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var ReactElement = __webpack_require__(296);

	/**
	 * Create a factory that creates HTML tag elements.
	 *
	 * @private
	 */
	var createDOMFactory = ReactElement.createFactory;
	if (process.env.NODE_ENV !== 'production') {
	  var ReactElementValidator = __webpack_require__(303);
	  createDOMFactory = ReactElementValidator.createFactory;
	}

	/**
	 * Creates a mapping from supported HTML tags to `ReactDOMComponent` classes.
	 *
	 * @public
	 */
	var ReactDOMFactories = {
	  a: createDOMFactory('a'),
	  abbr: createDOMFactory('abbr'),
	  address: createDOMFactory('address'),
	  area: createDOMFactory('area'),
	  article: createDOMFactory('article'),
	  aside: createDOMFactory('aside'),
	  audio: createDOMFactory('audio'),
	  b: createDOMFactory('b'),
	  base: createDOMFactory('base'),
	  bdi: createDOMFactory('bdi'),
	  bdo: createDOMFactory('bdo'),
	  big: createDOMFactory('big'),
	  blockquote: createDOMFactory('blockquote'),
	  body: createDOMFactory('body'),
	  br: createDOMFactory('br'),
	  button: createDOMFactory('button'),
	  canvas: createDOMFactory('canvas'),
	  caption: createDOMFactory('caption'),
	  cite: createDOMFactory('cite'),
	  code: createDOMFactory('code'),
	  col: createDOMFactory('col'),
	  colgroup: createDOMFactory('colgroup'),
	  data: createDOMFactory('data'),
	  datalist: createDOMFactory('datalist'),
	  dd: createDOMFactory('dd'),
	  del: createDOMFactory('del'),
	  details: createDOMFactory('details'),
	  dfn: createDOMFactory('dfn'),
	  dialog: createDOMFactory('dialog'),
	  div: createDOMFactory('div'),
	  dl: createDOMFactory('dl'),
	  dt: createDOMFactory('dt'),
	  em: createDOMFactory('em'),
	  embed: createDOMFactory('embed'),
	  fieldset: createDOMFactory('fieldset'),
	  figcaption: createDOMFactory('figcaption'),
	  figure: createDOMFactory('figure'),
	  footer: createDOMFactory('footer'),
	  form: createDOMFactory('form'),
	  h1: createDOMFactory('h1'),
	  h2: createDOMFactory('h2'),
	  h3: createDOMFactory('h3'),
	  h4: createDOMFactory('h4'),
	  h5: createDOMFactory('h5'),
	  h6: createDOMFactory('h6'),
	  head: createDOMFactory('head'),
	  header: createDOMFactory('header'),
	  hgroup: createDOMFactory('hgroup'),
	  hr: createDOMFactory('hr'),
	  html: createDOMFactory('html'),
	  i: createDOMFactory('i'),
	  iframe: createDOMFactory('iframe'),
	  img: createDOMFactory('img'),
	  input: createDOMFactory('input'),
	  ins: createDOMFactory('ins'),
	  kbd: createDOMFactory('kbd'),
	  keygen: createDOMFactory('keygen'),
	  label: createDOMFactory('label'),
	  legend: createDOMFactory('legend'),
	  li: createDOMFactory('li'),
	  link: createDOMFactory('link'),
	  main: createDOMFactory('main'),
	  map: createDOMFactory('map'),
	  mark: createDOMFactory('mark'),
	  menu: createDOMFactory('menu'),
	  menuitem: createDOMFactory('menuitem'),
	  meta: createDOMFactory('meta'),
	  meter: createDOMFactory('meter'),
	  nav: createDOMFactory('nav'),
	  noscript: createDOMFactory('noscript'),
	  object: createDOMFactory('object'),
	  ol: createDOMFactory('ol'),
	  optgroup: createDOMFactory('optgroup'),
	  option: createDOMFactory('option'),
	  output: createDOMFactory('output'),
	  p: createDOMFactory('p'),
	  param: createDOMFactory('param'),
	  picture: createDOMFactory('picture'),
	  pre: createDOMFactory('pre'),
	  progress: createDOMFactory('progress'),
	  q: createDOMFactory('q'),
	  rp: createDOMFactory('rp'),
	  rt: createDOMFactory('rt'),
	  ruby: createDOMFactory('ruby'),
	  s: createDOMFactory('s'),
	  samp: createDOMFactory('samp'),
	  script: createDOMFactory('script'),
	  section: createDOMFactory('section'),
	  select: createDOMFactory('select'),
	  small: createDOMFactory('small'),
	  source: createDOMFactory('source'),
	  span: createDOMFactory('span'),
	  strong: createDOMFactory('strong'),
	  style: createDOMFactory('style'),
	  sub: createDOMFactory('sub'),
	  summary: createDOMFactory('summary'),
	  sup: createDOMFactory('sup'),
	  table: createDOMFactory('table'),
	  tbody: createDOMFactory('tbody'),
	  td: createDOMFactory('td'),
	  textarea: createDOMFactory('textarea'),
	  tfoot: createDOMFactory('tfoot'),
	  th: createDOMFactory('th'),
	  thead: createDOMFactory('thead'),
	  time: createDOMFactory('time'),
	  title: createDOMFactory('title'),
	  tr: createDOMFactory('tr'),
	  track: createDOMFactory('track'),
	  u: createDOMFactory('u'),
	  ul: createDOMFactory('ul'),
	  'var': createDOMFactory('var'),
	  video: createDOMFactory('video'),
	  wbr: createDOMFactory('wbr'),

	  // SVG
	  circle: createDOMFactory('circle'),
	  clipPath: createDOMFactory('clipPath'),
	  defs: createDOMFactory('defs'),
	  ellipse: createDOMFactory('ellipse'),
	  g: createDOMFactory('g'),
	  image: createDOMFactory('image'),
	  line: createDOMFactory('line'),
	  linearGradient: createDOMFactory('linearGradient'),
	  mask: createDOMFactory('mask'),
	  path: createDOMFactory('path'),
	  pattern: createDOMFactory('pattern'),
	  polygon: createDOMFactory('polygon'),
	  polyline: createDOMFactory('polyline'),
	  radialGradient: createDOMFactory('radialGradient'),
	  rect: createDOMFactory('rect'),
	  stop: createDOMFactory('stop'),
	  svg: createDOMFactory('svg'),
	  text: createDOMFactory('text'),
	  tspan: createDOMFactory('tspan')
	};

	module.exports = ReactDOMFactories;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)))

/***/ }),
/* 303 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	/**
	 * ReactElementValidator provides a wrapper around a element factory
	 * which validates the props passed to the element. This is intended to be
	 * used only in DEV and could be replaced by a static type checker for languages
	 * that support it.
	 */

	'use strict';

	var ReactCurrentOwner = __webpack_require__(297);
	var ReactComponentTreeHook = __webpack_require__(304);
	var ReactElement = __webpack_require__(296);

	var checkReactTypeSpec = __webpack_require__(305);

	var canDefineProperty = __webpack_require__(290);
	var getIteratorFn = __webpack_require__(300);
	var warning = __webpack_require__(288);
	var lowPriorityWarning = __webpack_require__(293);

	function getDeclarationErrorAddendum() {
	  if (ReactCurrentOwner.current) {
	    var name = ReactCurrentOwner.current.getName();
	    if (name) {
	      return ' Check the render method of `' + name + '`.';
	    }
	  }
	  return '';
	}

	function getSourceInfoErrorAddendum(elementProps) {
	  if (elementProps !== null && elementProps !== undefined && elementProps.__source !== undefined) {
	    var source = elementProps.__source;
	    var fileName = source.fileName.replace(/^.*[\\\/]/, '');
	    var lineNumber = source.lineNumber;
	    return ' Check your code at ' + fileName + ':' + lineNumber + '.';
	  }
	  return '';
	}

	/**
	 * Warn if there's no key explicitly set on dynamic arrays of children or
	 * object keys are not valid. This allows us to keep track of children between
	 * updates.
	 */
	var ownerHasKeyUseWarning = {};

	function getCurrentComponentErrorInfo(parentType) {
	  var info = getDeclarationErrorAddendum();

	  if (!info) {
	    var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;
	    if (parentName) {
	      info = ' Check the top-level render call using <' + parentName + '>.';
	    }
	  }
	  return info;
	}

	/**
	 * Warn if the element doesn't have an explicit key assigned to it.
	 * This element is in an array. The array could grow and shrink or be
	 * reordered. All children that haven't already been validated are required to
	 * have a "key" property assigned to it. Error statuses are cached so a warning
	 * will only be shown once.
	 *
	 * @internal
	 * @param {ReactElement} element Element that requires a key.
	 * @param {*} parentType element's parent's type.
	 */
	function validateExplicitKey(element, parentType) {
	  if (!element._store || element._store.validated || element.key != null) {
	    return;
	  }
	  element._store.validated = true;

	  var memoizer = ownerHasKeyUseWarning.uniqueKey || (ownerHasKeyUseWarning.uniqueKey = {});

	  var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);
	  if (memoizer[currentComponentErrorInfo]) {
	    return;
	  }
	  memoizer[currentComponentErrorInfo] = true;

	  // Usually the current owner is the offender, but if it accepts children as a
	  // property, it may be the creator of the child that's responsible for
	  // assigning it a key.
	  var childOwner = '';
	  if (element && element._owner && element._owner !== ReactCurrentOwner.current) {
	    // Give the component that originally created this child.
	    childOwner = ' It was passed a child from ' + element._owner.getName() + '.';
	  }

	  process.env.NODE_ENV !== 'production' ? warning(false, 'Each child in an array or iterator should have a unique "key" prop.' + '%s%s See https://fb.me/react-warning-keys for more information.%s', currentComponentErrorInfo, childOwner, ReactComponentTreeHook.getCurrentStackAddendum(element)) : void 0;
	}

	/**
	 * Ensure that every element either is passed in a static location, in an
	 * array with an explicit keys property defined, or in an object literal
	 * with valid key property.
	 *
	 * @internal
	 * @param {ReactNode} node Statically passed child of any type.
	 * @param {*} parentType node's parent's type.
	 */
	function validateChildKeys(node, parentType) {
	  if (typeof node !== 'object') {
	    return;
	  }
	  if (Array.isArray(node)) {
	    for (var i = 0; i < node.length; i++) {
	      var child = node[i];
	      if (ReactElement.isValidElement(child)) {
	        validateExplicitKey(child, parentType);
	      }
	    }
	  } else if (ReactElement.isValidElement(node)) {
	    // This element was passed in a valid location.
	    if (node._store) {
	      node._store.validated = true;
	    }
	  } else if (node) {
	    var iteratorFn = getIteratorFn(node);
	    // Entry iterators provide implicit keys.
	    if (iteratorFn) {
	      if (iteratorFn !== node.entries) {
	        var iterator = iteratorFn.call(node);
	        var step;
	        while (!(step = iterator.next()).done) {
	          if (ReactElement.isValidElement(step.value)) {
	            validateExplicitKey(step.value, parentType);
	          }
	        }
	      }
	    }
	  }
	}

	/**
	 * Given an element, validate that its props follow the propTypes definition,
	 * provided by the type.
	 *
	 * @param {ReactElement} element
	 */
	function validatePropTypes(element) {
	  var componentClass = element.type;
	  if (typeof componentClass !== 'function') {
	    return;
	  }
	  var name = componentClass.displayName || componentClass.name;
	  if (componentClass.propTypes) {
	    checkReactTypeSpec(componentClass.propTypes, element.props, 'prop', name, element, null);
	  }
	  if (typeof componentClass.getDefaultProps === 'function') {
	    process.env.NODE_ENV !== 'production' ? warning(componentClass.getDefaultProps.isReactClassApproved, 'getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.') : void 0;
	  }
	}

	var ReactElementValidator = {
	  createElement: function (type, props, children) {
	    var validType = typeof type === 'string' || typeof type === 'function';
	    // We warn in this case but don't throw. We expect the element creation to
	    // succeed and there will likely be errors in render.
	    if (!validType) {
	      if (typeof type !== 'function' && typeof type !== 'string') {
	        var info = '';
	        if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {
	          info += ' You likely forgot to export your component from the file ' + "it's defined in.";
	        }

	        var sourceInfo = getSourceInfoErrorAddendum(props);
	        if (sourceInfo) {
	          info += sourceInfo;
	        } else {
	          info += getDeclarationErrorAddendum();
	        }

	        info += ReactComponentTreeHook.getCurrentStackAddendum();

	        var currentSource = props !== null && props !== undefined && props.__source !== undefined ? props.__source : null;
	        ReactComponentTreeHook.pushNonStandardWarningStack(true, currentSource);
	        process.env.NODE_ENV !== 'production' ? warning(false, 'React.createElement: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', type == null ? type : typeof type, info) : void 0;
	        ReactComponentTreeHook.popNonStandardWarningStack();
	      }
	    }

	    var element = ReactElement.createElement.apply(this, arguments);

	    // The result can be nullish if a mock or a custom function is used.
	    // TODO: Drop this when these are no longer allowed as the type argument.
	    if (element == null) {
	      return element;
	    }

	    // Skip key warning if the type isn't valid since our key validation logic
	    // doesn't expect a non-string/function type and can throw confusing errors.
	    // We don't want exception behavior to differ between dev and prod.
	    // (Rendering will throw with a helpful message and as soon as the type is
	    // fixed, the key warnings will appear.)
	    if (validType) {
	      for (var i = 2; i < arguments.length; i++) {
	        validateChildKeys(arguments[i], type);
	      }
	    }

	    validatePropTypes(element);

	    return element;
	  },

	  createFactory: function (type) {
	    var validatedFactory = ReactElementValidator.createElement.bind(null, type);
	    // Legacy hook TODO: Warn if this is accessed
	    validatedFactory.type = type;

	    if (process.env.NODE_ENV !== 'production') {
	      if (canDefineProperty) {
	        Object.defineProperty(validatedFactory, 'type', {
	          enumerable: false,
	          get: function () {
	            lowPriorityWarning(false, 'Factory.type is deprecated. Access the class directly ' + 'before passing it to createFactory.');
	            Object.defineProperty(this, 'type', {
	              value: type
	            });
	            return type;
	          }
	        });
	      }
	    }

	    return validatedFactory;
	  },

	  cloneElement: function (element, props, children) {
	    var newElement = ReactElement.cloneElement.apply(this, arguments);
	    for (var i = 2; i < arguments.length; i++) {
	      validateChildKeys(arguments[i], newElement.type);
	    }
	    validatePropTypes(newElement);
	    return newElement;
	  }
	};

	module.exports = ReactElementValidator;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)))

/***/ }),
/* 304 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2016-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(286);

	var ReactCurrentOwner = __webpack_require__(297);

	var invariant = __webpack_require__(292);
	var warning = __webpack_require__(288);

	function isNative(fn) {
	  // Based on isNative() from Lodash
	  var funcToString = Function.prototype.toString;
	  var hasOwnProperty = Object.prototype.hasOwnProperty;
	  var reIsNative = RegExp('^' + funcToString
	  // Take an example native function source for comparison
	  .call(hasOwnProperty
	  // Strip regex characters so we can use it for regex
	  ).replace(/[\\^$.*+?()[\]{}|]/g, '\\$&'
	  // Remove hasOwnProperty from the template to make it generic
	  ).replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$');
	  try {
	    var source = funcToString.call(fn);
	    return reIsNative.test(source);
	  } catch (err) {
	    return false;
	  }
	}

	var canUseCollections =
	// Array.from
	typeof Array.from === 'function' &&
	// Map
	typeof Map === 'function' && isNative(Map) &&
	// Map.prototype.keys
	Map.prototype != null && typeof Map.prototype.keys === 'function' && isNative(Map.prototype.keys) &&
	// Set
	typeof Set === 'function' && isNative(Set) &&
	// Set.prototype.keys
	Set.prototype != null && typeof Set.prototype.keys === 'function' && isNative(Set.prototype.keys);

	var setItem;
	var getItem;
	var removeItem;
	var getItemIDs;
	var addRoot;
	var removeRoot;
	var getRootIDs;

	if (canUseCollections) {
	  var itemMap = new Map();
	  var rootIDSet = new Set();

	  setItem = function (id, item) {
	    itemMap.set(id, item);
	  };
	  getItem = function (id) {
	    return itemMap.get(id);
	  };
	  removeItem = function (id) {
	    itemMap['delete'](id);
	  };
	  getItemIDs = function () {
	    return Array.from(itemMap.keys());
	  };

	  addRoot = function (id) {
	    rootIDSet.add(id);
	  };
	  removeRoot = function (id) {
	    rootIDSet['delete'](id);
	  };
	  getRootIDs = function () {
	    return Array.from(rootIDSet.keys());
	  };
	} else {
	  var itemByKey = {};
	  var rootByKey = {};

	  // Use non-numeric keys to prevent V8 performance issues:
	  // https://github.com/facebook/react/pull/7232
	  var getKeyFromID = function (id) {
	    return '.' + id;
	  };
	  var getIDFromKey = function (key) {
	    return parseInt(key.substr(1), 10);
	  };

	  setItem = function (id, item) {
	    var key = getKeyFromID(id);
	    itemByKey[key] = item;
	  };
	  getItem = function (id) {
	    var key = getKeyFromID(id);
	    return itemByKey[key];
	  };
	  removeItem = function (id) {
	    var key = getKeyFromID(id);
	    delete itemByKey[key];
	  };
	  getItemIDs = function () {
	    return Object.keys(itemByKey).map(getIDFromKey);
	  };

	  addRoot = function (id) {
	    var key = getKeyFromID(id);
	    rootByKey[key] = true;
	  };
	  removeRoot = function (id) {
	    var key = getKeyFromID(id);
	    delete rootByKey[key];
	  };
	  getRootIDs = function () {
	    return Object.keys(rootByKey).map(getIDFromKey);
	  };
	}

	var unmountedIDs = [];

	function purgeDeep(id) {
	  var item = getItem(id);
	  if (item) {
	    var childIDs = item.childIDs;

	    removeItem(id);
	    childIDs.forEach(purgeDeep);
	  }
	}

	function describeComponentFrame(name, source, ownerName) {
	  return '\n    in ' + (name || 'Unknown') + (source ? ' (at ' + source.fileName.replace(/^.*[\\\/]/, '') + ':' + source.lineNumber + ')' : ownerName ? ' (created by ' + ownerName + ')' : '');
	}

	function getDisplayName(element) {
	  if (element == null) {
	    return '#empty';
	  } else if (typeof element === 'string' || typeof element === 'number') {
	    return '#text';
	  } else if (typeof element.type === 'string') {
	    return element.type;
	  } else {
	    return element.type.displayName || element.type.name || 'Unknown';
	  }
	}

	function describeID(id) {
	  var name = ReactComponentTreeHook.getDisplayName(id);
	  var element = ReactComponentTreeHook.getElement(id);
	  var ownerID = ReactComponentTreeHook.getOwnerID(id);
	  var ownerName;
	  if (ownerID) {
	    ownerName = ReactComponentTreeHook.getDisplayName(ownerID);
	  }
	  process.env.NODE_ENV !== 'production' ? warning(element, 'ReactComponentTreeHook: Missing React element for debugID %s when ' + 'building stack', id) : void 0;
	  return describeComponentFrame(name, element && element._source, ownerName);
	}

	var ReactComponentTreeHook = {
	  onSetChildren: function (id, nextChildIDs) {
	    var item = getItem(id);
	    !item ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Item must have been set') : _prodInvariant('144') : void 0;
	    item.childIDs = nextChildIDs;

	    for (var i = 0; i < nextChildIDs.length; i++) {
	      var nextChildID = nextChildIDs[i];
	      var nextChild = getItem(nextChildID);
	      !nextChild ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected hook events to fire for the child before its parent includes it in onSetChildren().') : _prodInvariant('140') : void 0;
	      !(nextChild.childIDs != null || typeof nextChild.element !== 'object' || nextChild.element == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected onSetChildren() to fire for a container child before its parent includes it in onSetChildren().') : _prodInvariant('141') : void 0;
	      !nextChild.isMounted ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected onMountComponent() to fire for the child before its parent includes it in onSetChildren().') : _prodInvariant('71') : void 0;
	      if (nextChild.parentID == null) {
	        nextChild.parentID = id;
	        // TODO: This shouldn't be necessary but mounting a new root during in
	        // componentWillMount currently causes not-yet-mounted components to
	        // be purged from our tree data so their parent id is missing.
	      }
	      !(nextChild.parentID === id) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected onBeforeMountComponent() parent and onSetChildren() to be consistent (%s has parents %s and %s).', nextChildID, nextChild.parentID, id) : _prodInvariant('142', nextChildID, nextChild.parentID, id) : void 0;
	    }
	  },
	  onBeforeMountComponent: function (id, element, parentID) {
	    var item = {
	      element: element,
	      parentID: parentID,
	      text: null,
	      childIDs: [],
	      isMounted: false,
	      updateCount: 0
	    };
	    setItem(id, item);
	  },
	  onBeforeUpdateComponent: function (id, element) {
	    var item = getItem(id);
	    if (!item || !item.isMounted) {
	      // We may end up here as a result of setState() in componentWillUnmount().
	      // In this case, ignore the element.
	      return;
	    }
	    item.element = element;
	  },
	  onMountComponent: function (id) {
	    var item = getItem(id);
	    !item ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Item must have been set') : _prodInvariant('144') : void 0;
	    item.isMounted = true;
	    var isRoot = item.parentID === 0;
	    if (isRoot) {
	      addRoot(id);
	    }
	  },
	  onUpdateComponent: function (id) {
	    var item = getItem(id);
	    if (!item || !item.isMounted) {
	      // We may end up here as a result of setState() in componentWillUnmount().
	      // In this case, ignore the element.
	      return;
	    }
	    item.updateCount++;
	  },
	  onUnmountComponent: function (id) {
	    var item = getItem(id);
	    if (item) {
	      // We need to check if it exists.
	      // `item` might not exist if it is inside an error boundary, and a sibling
	      // error boundary child threw while mounting. Then this instance never
	      // got a chance to mount, but it still gets an unmounting event during
	      // the error boundary cleanup.
	      item.isMounted = false;
	      var isRoot = item.parentID === 0;
	      if (isRoot) {
	        removeRoot(id);
	      }
	    }
	    unmountedIDs.push(id);
	  },
	  purgeUnmountedComponents: function () {
	    if (ReactComponentTreeHook._preventPurging) {
	      // Should only be used for testing.
	      return;
	    }

	    for (var i = 0; i < unmountedIDs.length; i++) {
	      var id = unmountedIDs[i];
	      purgeDeep(id);
	    }
	    unmountedIDs.length = 0;
	  },
	  isMounted: function (id) {
	    var item = getItem(id);
	    return item ? item.isMounted : false;
	  },
	  getCurrentStackAddendum: function (topElement) {
	    var info = '';
	    if (topElement) {
	      var name = getDisplayName(topElement);
	      var owner = topElement._owner;
	      info += describeComponentFrame(name, topElement._source, owner && owner.getName());
	    }

	    var currentOwner = ReactCurrentOwner.current;
	    var id = currentOwner && currentOwner._debugID;

	    info += ReactComponentTreeHook.getStackAddendumByID(id);
	    return info;
	  },
	  getStackAddendumByID: function (id) {
	    var info = '';
	    while (id) {
	      info += describeID(id);
	      id = ReactComponentTreeHook.getParentID(id);
	    }
	    return info;
	  },
	  getChildIDs: function (id) {
	    var item = getItem(id);
	    return item ? item.childIDs : [];
	  },
	  getDisplayName: function (id) {
	    var element = ReactComponentTreeHook.getElement(id);
	    if (!element) {
	      return null;
	    }
	    return getDisplayName(element);
	  },
	  getElement: function (id) {
	    var item = getItem(id);
	    return item ? item.element : null;
	  },
	  getOwnerID: function (id) {
	    var element = ReactComponentTreeHook.getElement(id);
	    if (!element || !element._owner) {
	      return null;
	    }
	    return element._owner._debugID;
	  },
	  getParentID: function (id) {
	    var item = getItem(id);
	    return item ? item.parentID : null;
	  },
	  getSource: function (id) {
	    var item = getItem(id);
	    var element = item ? item.element : null;
	    var source = element != null ? element._source : null;
	    return source;
	  },
	  getText: function (id) {
	    var element = ReactComponentTreeHook.getElement(id);
	    if (typeof element === 'string') {
	      return element;
	    } else if (typeof element === 'number') {
	      return '' + element;
	    } else {
	      return null;
	    }
	  },
	  getUpdateCount: function (id) {
	    var item = getItem(id);
	    return item ? item.updateCount : 0;
	  },


	  getRootIDs: getRootIDs,
	  getRegisteredIDs: getItemIDs,

	  pushNonStandardWarningStack: function (isCreatingElement, currentSource) {
	    if (typeof console.reactStack !== 'function') {
	      return;
	    }

	    var stack = [];
	    var currentOwner = ReactCurrentOwner.current;
	    var id = currentOwner && currentOwner._debugID;

	    try {
	      if (isCreatingElement) {
	        stack.push({
	          name: id ? ReactComponentTreeHook.getDisplayName(id) : null,
	          fileName: currentSource ? currentSource.fileName : null,
	          lineNumber: currentSource ? currentSource.lineNumber : null
	        });
	      }

	      while (id) {
	        var element = ReactComponentTreeHook.getElement(id);
	        var parentID = ReactComponentTreeHook.getParentID(id);
	        var ownerID = ReactComponentTreeHook.getOwnerID(id);
	        var ownerName = ownerID ? ReactComponentTreeHook.getDisplayName(ownerID) : null;
	        var source = element && element._source;
	        stack.push({
	          name: ownerName,
	          fileName: source ? source.fileName : null,
	          lineNumber: source ? source.lineNumber : null
	        });
	        id = parentID;
	      }
	    } catch (err) {
	      // Internal state is messed up.
	      // Stop building the stack (it's just a nice to have).
	    }

	    console.reactStack(stack);
	  },
	  popNonStandardWarningStack: function () {
	    if (typeof console.reactStackEnd !== 'function') {
	      return;
	    }
	    console.reactStackEnd();
	  }
	};

	module.exports = ReactComponentTreeHook;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)))

/***/ }),
/* 305 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(286);

	var ReactPropTypeLocationNames = __webpack_require__(306);
	var ReactPropTypesSecret = __webpack_require__(307);

	var invariant = __webpack_require__(292);
	var warning = __webpack_require__(288);

	var ReactComponentTreeHook;

	if (typeof process !== 'undefined' && process.env && process.env.NODE_ENV === 'test') {
	  // Temporary hack.
	  // Inline requires don't work well with Jest:
	  // https://github.com/facebook/react/issues/7240
	  // Remove the inline requires when we don't need them anymore:
	  // https://github.com/facebook/react/pull/7178
	  ReactComponentTreeHook = __webpack_require__(304);
	}

	var loggedTypeFailures = {};

	/**
	 * Assert that the values match with the type specs.
	 * Error messages are memorized and will only be shown once.
	 *
	 * @param {object} typeSpecs Map of name to a ReactPropType
	 * @param {object} values Runtime values that need to be type-checked
	 * @param {string} location e.g. "prop", "context", "child context"
	 * @param {string} componentName Name of the component for error messages.
	 * @param {?object} element The React element that is being type-checked
	 * @param {?number} debugID The React component instance that is being type-checked
	 * @private
	 */
	function checkReactTypeSpec(typeSpecs, values, location, componentName, element, debugID) {
	  for (var typeSpecName in typeSpecs) {
	    if (typeSpecs.hasOwnProperty(typeSpecName)) {
	      var error;
	      // Prop type validation may throw. In case they do, we don't want to
	      // fail the render phase where it didn't fail before. So we log it.
	      // After these have been cleaned up, we'll let them throw.
	      try {
	        // This is intentionally an invariant that gets caught. It's the same
	        // behavior as without this statement except with a better message.
	        !(typeof typeSpecs[typeSpecName] === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s: %s type `%s` is invalid; it must be a function, usually from React.PropTypes.', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName) : _prodInvariant('84', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName) : void 0;
	        error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
	      } catch (ex) {
	        error = ex;
	      }
	      process.env.NODE_ENV !== 'production' ? warning(!error || error instanceof Error, '%s: type specification of %s `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName, typeof error) : void 0;
	      if (error instanceof Error && !(error.message in loggedTypeFailures)) {
	        // Only monitor this failure once because there tends to be a lot of the
	        // same error.
	        loggedTypeFailures[error.message] = true;

	        var componentStackInfo = '';

	        if (process.env.NODE_ENV !== 'production') {
	          if (!ReactComponentTreeHook) {
	            ReactComponentTreeHook = __webpack_require__(304);
	          }
	          if (debugID !== null) {
	            componentStackInfo = ReactComponentTreeHook.getStackAddendumByID(debugID);
	          } else if (element !== null) {
	            componentStackInfo = ReactComponentTreeHook.getCurrentStackAddendum(element);
	          }
	        }

	        process.env.NODE_ENV !== 'production' ? warning(false, 'Failed %s type: %s%s', location, error.message, componentStackInfo) : void 0;
	      }
	    }
	  }
	}

	module.exports = checkReactTypeSpec;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)))

/***/ }),
/* 306 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */

	'use strict';

	var ReactPropTypeLocationNames = {};

	if (process.env.NODE_ENV !== 'production') {
	  ReactPropTypeLocationNames = {
	    prop: 'prop',
	    context: 'context',
	    childContext: 'child context'
	  };
	}

	module.exports = ReactPropTypeLocationNames;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)))

/***/ }),
/* 307 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */

	'use strict';

	var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';

	module.exports = ReactPropTypesSecret;

/***/ }),
/* 308 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var _require = __webpack_require__(296),
	    isValidElement = _require.isValidElement;

	var factory = __webpack_require__(309);

	module.exports = factory(isValidElement);

/***/ }),
/* 309 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 */

	'use strict';

	// React 15.5 references this module, and assumes PropTypes are still callable in production.
	// Therefore we re-export development-only version with all the PropTypes checks here.
	// However if one is migrating to the `prop-types` npm library, they will go through the
	// `index.js` entry point, and it will branch depending on the environment.
	var factory = __webpack_require__(206);
	module.exports = function(isValidElement) {
	  // It is still allowed in 15.5.
	  var throwOnDirectAccess = false;
	  return factory(isValidElement, throwOnDirectAccess);
	};


/***/ }),
/* 310 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	module.exports = '15.6.1';

/***/ }),
/* 311 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var _require = __webpack_require__(285),
	    Component = _require.Component;

	var _require2 = __webpack_require__(296),
	    isValidElement = _require2.isValidElement;

	var ReactNoopUpdateQueue = __webpack_require__(287);
	var factory = __webpack_require__(312);

	module.exports = factory(Component, isValidElement, ReactNoopUpdateQueue);

/***/ }),
/* 312 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var _assign = __webpack_require__(313);

	var emptyObject = __webpack_require__(314);
	var _invariant = __webpack_require__(315);

	if (process.env.NODE_ENV !== 'production') {
	  var warning = __webpack_require__(316);
	}

	var MIXINS_KEY = 'mixins';

	// Helper function to allow the creation of anonymous functions which do not
	// have .name set to the name of the variable being assigned to.
	function identity(fn) {
	  return fn;
	}

	var ReactPropTypeLocationNames;
	if (process.env.NODE_ENV !== 'production') {
	  ReactPropTypeLocationNames = {
	    prop: 'prop',
	    context: 'context',
	    childContext: 'child context'
	  };
	} else {
	  ReactPropTypeLocationNames = {};
	}

	function factory(ReactComponent, isValidElement, ReactNoopUpdateQueue) {
	  /**
	   * Policies that describe methods in `ReactClassInterface`.
	   */

	  var injectedMixins = [];

	  /**
	   * Composite components are higher-level components that compose other composite
	   * or host components.
	   *
	   * To create a new type of `ReactClass`, pass a specification of
	   * your new class to `React.createClass`. The only requirement of your class
	   * specification is that you implement a `render` method.
	   *
	   *   var MyComponent = React.createClass({
	   *     render: function() {
	   *       return <div>Hello World</div>;
	   *     }
	   *   });
	   *
	   * The class specification supports a specific protocol of methods that have
	   * special meaning (e.g. `render`). See `ReactClassInterface` for
	   * more the comprehensive protocol. Any other properties and methods in the
	   * class specification will be available on the prototype.
	   *
	   * @interface ReactClassInterface
	   * @internal
	   */
	  var ReactClassInterface = {
	    /**
	     * An array of Mixin objects to include when defining your component.
	     *
	     * @type {array}
	     * @optional
	     */
	    mixins: 'DEFINE_MANY',

	    /**
	     * An object containing properties and methods that should be defined on
	     * the component's constructor instead of its prototype (static methods).
	     *
	     * @type {object}
	     * @optional
	     */
	    statics: 'DEFINE_MANY',

	    /**
	     * Definition of prop types for this component.
	     *
	     * @type {object}
	     * @optional
	     */
	    propTypes: 'DEFINE_MANY',

	    /**
	     * Definition of context types for this component.
	     *
	     * @type {object}
	     * @optional
	     */
	    contextTypes: 'DEFINE_MANY',

	    /**
	     * Definition of context types this component sets for its children.
	     *
	     * @type {object}
	     * @optional
	     */
	    childContextTypes: 'DEFINE_MANY',

	    // ==== Definition methods ====

	    /**
	     * Invoked when the component is mounted. Values in the mapping will be set on
	     * `this.props` if that prop is not specified (i.e. using an `in` check).
	     *
	     * This method is invoked before `getInitialState` and therefore cannot rely
	     * on `this.state` or use `this.setState`.
	     *
	     * @return {object}
	     * @optional
	     */
	    getDefaultProps: 'DEFINE_MANY_MERGED',

	    /**
	     * Invoked once before the component is mounted. The return value will be used
	     * as the initial value of `this.state`.
	     *
	     *   getInitialState: function() {
	     *     return {
	     *       isOn: false,
	     *       fooBaz: new BazFoo()
	     *     }
	     *   }
	     *
	     * @return {object}
	     * @optional
	     */
	    getInitialState: 'DEFINE_MANY_MERGED',

	    /**
	     * @return {object}
	     * @optional
	     */
	    getChildContext: 'DEFINE_MANY_MERGED',

	    /**
	     * Uses props from `this.props` and state from `this.state` to render the
	     * structure of the component.
	     *
	     * No guarantees are made about when or how often this method is invoked, so
	     * it must not have side effects.
	     *
	     *   render: function() {
	     *     var name = this.props.name;
	     *     return <div>Hello, {name}!</div>;
	     *   }
	     *
	     * @return {ReactComponent}
	     * @required
	     */
	    render: 'DEFINE_ONCE',

	    // ==== Delegate methods ====

	    /**
	     * Invoked when the component is initially created and about to be mounted.
	     * This may have side effects, but any external subscriptions or data created
	     * by this method must be cleaned up in `componentWillUnmount`.
	     *
	     * @optional
	     */
	    componentWillMount: 'DEFINE_MANY',

	    /**
	     * Invoked when the component has been mounted and has a DOM representation.
	     * However, there is no guarantee that the DOM node is in the document.
	     *
	     * Use this as an opportunity to operate on the DOM when the component has
	     * been mounted (initialized and rendered) for the first time.
	     *
	     * @param {DOMElement} rootNode DOM element representing the component.
	     * @optional
	     */
	    componentDidMount: 'DEFINE_MANY',

	    /**
	     * Invoked before the component receives new props.
	     *
	     * Use this as an opportunity to react to a prop transition by updating the
	     * state using `this.setState`. Current props are accessed via `this.props`.
	     *
	     *   componentWillReceiveProps: function(nextProps, nextContext) {
	     *     this.setState({
	     *       likesIncreasing: nextProps.likeCount > this.props.likeCount
	     *     });
	     *   }
	     *
	     * NOTE: There is no equivalent `componentWillReceiveState`. An incoming prop
	     * transition may cause a state change, but the opposite is not true. If you
	     * need it, you are probably looking for `componentWillUpdate`.
	     *
	     * @param {object} nextProps
	     * @optional
	     */
	    componentWillReceiveProps: 'DEFINE_MANY',

	    /**
	     * Invoked while deciding if the component should be updated as a result of
	     * receiving new props, state and/or context.
	     *
	     * Use this as an opportunity to `return false` when you're certain that the
	     * transition to the new props/state/context will not require a component
	     * update.
	     *
	     *   shouldComponentUpdate: function(nextProps, nextState, nextContext) {
	     *     return !equal(nextProps, this.props) ||
	     *       !equal(nextState, this.state) ||
	     *       !equal(nextContext, this.context);
	     *   }
	     *
	     * @param {object} nextProps
	     * @param {?object} nextState
	     * @param {?object} nextContext
	     * @return {boolean} True if the component should update.
	     * @optional
	     */
	    shouldComponentUpdate: 'DEFINE_ONCE',

	    /**
	     * Invoked when the component is about to update due to a transition from
	     * `this.props`, `this.state` and `this.context` to `nextProps`, `nextState`
	     * and `nextContext`.
	     *
	     * Use this as an opportunity to perform preparation before an update occurs.
	     *
	     * NOTE: You **cannot** use `this.setState()` in this method.
	     *
	     * @param {object} nextProps
	     * @param {?object} nextState
	     * @param {?object} nextContext
	     * @param {ReactReconcileTransaction} transaction
	     * @optional
	     */
	    componentWillUpdate: 'DEFINE_MANY',

	    /**
	     * Invoked when the component's DOM representation has been updated.
	     *
	     * Use this as an opportunity to operate on the DOM when the component has
	     * been updated.
	     *
	     * @param {object} prevProps
	     * @param {?object} prevState
	     * @param {?object} prevContext
	     * @param {DOMElement} rootNode DOM element representing the component.
	     * @optional
	     */
	    componentDidUpdate: 'DEFINE_MANY',

	    /**
	     * Invoked when the component is about to be removed from its parent and have
	     * its DOM representation destroyed.
	     *
	     * Use this as an opportunity to deallocate any external resources.
	     *
	     * NOTE: There is no `componentDidUnmount` since your component will have been
	     * destroyed by that point.
	     *
	     * @optional
	     */
	    componentWillUnmount: 'DEFINE_MANY',

	    // ==== Advanced methods ====

	    /**
	     * Updates the component's currently mounted DOM representation.
	     *
	     * By default, this implements React's rendering and reconciliation algorithm.
	     * Sophisticated clients may wish to override this.
	     *
	     * @param {ReactReconcileTransaction} transaction
	     * @internal
	     * @overridable
	     */
	    updateComponent: 'OVERRIDE_BASE'
	  };

	  /**
	   * Mapping from class specification keys to special processing functions.
	   *
	   * Although these are declared like instance properties in the specification
	   * when defining classes using `React.createClass`, they are actually static
	   * and are accessible on the constructor instead of the prototype. Despite
	   * being static, they must be defined outside of the "statics" key under
	   * which all other static methods are defined.
	   */
	  var RESERVED_SPEC_KEYS = {
	    displayName: function(Constructor, displayName) {
	      Constructor.displayName = displayName;
	    },
	    mixins: function(Constructor, mixins) {
	      if (mixins) {
	        for (var i = 0; i < mixins.length; i++) {
	          mixSpecIntoComponent(Constructor, mixins[i]);
	        }
	      }
	    },
	    childContextTypes: function(Constructor, childContextTypes) {
	      if (process.env.NODE_ENV !== 'production') {
	        validateTypeDef(Constructor, childContextTypes, 'childContext');
	      }
	      Constructor.childContextTypes = _assign(
	        {},
	        Constructor.childContextTypes,
	        childContextTypes
	      );
	    },
	    contextTypes: function(Constructor, contextTypes) {
	      if (process.env.NODE_ENV !== 'production') {
	        validateTypeDef(Constructor, contextTypes, 'context');
	      }
	      Constructor.contextTypes = _assign(
	        {},
	        Constructor.contextTypes,
	        contextTypes
	      );
	    },
	    /**
	     * Special case getDefaultProps which should move into statics but requires
	     * automatic merging.
	     */
	    getDefaultProps: function(Constructor, getDefaultProps) {
	      if (Constructor.getDefaultProps) {
	        Constructor.getDefaultProps = createMergedResultFunction(
	          Constructor.getDefaultProps,
	          getDefaultProps
	        );
	      } else {
	        Constructor.getDefaultProps = getDefaultProps;
	      }
	    },
	    propTypes: function(Constructor, propTypes) {
	      if (process.env.NODE_ENV !== 'production') {
	        validateTypeDef(Constructor, propTypes, 'prop');
	      }
	      Constructor.propTypes = _assign({}, Constructor.propTypes, propTypes);
	    },
	    statics: function(Constructor, statics) {
	      mixStaticSpecIntoComponent(Constructor, statics);
	    },
	    autobind: function() {}
	  };

	  function validateTypeDef(Constructor, typeDef, location) {
	    for (var propName in typeDef) {
	      if (typeDef.hasOwnProperty(propName)) {
	        // use a warning instead of an _invariant so components
	        // don't show up in prod but only in __DEV__
	        if (process.env.NODE_ENV !== 'production') {
	          warning(
	            typeof typeDef[propName] === 'function',
	            '%s: %s type `%s` is invalid; it must be a function, usually from ' +
	              'React.PropTypes.',
	            Constructor.displayName || 'ReactClass',
	            ReactPropTypeLocationNames[location],
	            propName
	          );
	        }
	      }
	    }
	  }

	  function validateMethodOverride(isAlreadyDefined, name) {
	    var specPolicy = ReactClassInterface.hasOwnProperty(name)
	      ? ReactClassInterface[name]
	      : null;

	    // Disallow overriding of base class methods unless explicitly allowed.
	    if (ReactClassMixin.hasOwnProperty(name)) {
	      _invariant(
	        specPolicy === 'OVERRIDE_BASE',
	        'ReactClassInterface: You are attempting to override ' +
	          '`%s` from your class specification. Ensure that your method names ' +
	          'do not overlap with React methods.',
	        name
	      );
	    }

	    // Disallow defining methods more than once unless explicitly allowed.
	    if (isAlreadyDefined) {
	      _invariant(
	        specPolicy === 'DEFINE_MANY' || specPolicy === 'DEFINE_MANY_MERGED',
	        'ReactClassInterface: You are attempting to define ' +
	          '`%s` on your component more than once. This conflict may be due ' +
	          'to a mixin.',
	        name
	      );
	    }
	  }

	  /**
	   * Mixin helper which handles policy validation and reserved
	   * specification keys when building React classes.
	   */
	  function mixSpecIntoComponent(Constructor, spec) {
	    if (!spec) {
	      if (process.env.NODE_ENV !== 'production') {
	        var typeofSpec = typeof spec;
	        var isMixinValid = typeofSpec === 'object' && spec !== null;

	        if (process.env.NODE_ENV !== 'production') {
	          warning(
	            isMixinValid,
	            "%s: You're attempting to include a mixin that is either null " +
	              'or not an object. Check the mixins included by the component, ' +
	              'as well as any mixins they include themselves. ' +
	              'Expected object but got %s.',
	            Constructor.displayName || 'ReactClass',
	            spec === null ? null : typeofSpec
	          );
	        }
	      }

	      return;
	    }

	    _invariant(
	      typeof spec !== 'function',
	      "ReactClass: You're attempting to " +
	        'use a component class or function as a mixin. Instead, just use a ' +
	        'regular object.'
	    );
	    _invariant(
	      !isValidElement(spec),
	      "ReactClass: You're attempting to " +
	        'use a component as a mixin. Instead, just use a regular object.'
	    );

	    var proto = Constructor.prototype;
	    var autoBindPairs = proto.__reactAutoBindPairs;

	    // By handling mixins before any other properties, we ensure the same
	    // chaining order is applied to methods with DEFINE_MANY policy, whether
	    // mixins are listed before or after these methods in the spec.
	    if (spec.hasOwnProperty(MIXINS_KEY)) {
	      RESERVED_SPEC_KEYS.mixins(Constructor, spec.mixins);
	    }

	    for (var name in spec) {
	      if (!spec.hasOwnProperty(name)) {
	        continue;
	      }

	      if (name === MIXINS_KEY) {
	        // We have already handled mixins in a special case above.
	        continue;
	      }

	      var property = spec[name];
	      var isAlreadyDefined = proto.hasOwnProperty(name);
	      validateMethodOverride(isAlreadyDefined, name);

	      if (RESERVED_SPEC_KEYS.hasOwnProperty(name)) {
	        RESERVED_SPEC_KEYS[name](Constructor, property);
	      } else {
	        // Setup methods on prototype:
	        // The following member methods should not be automatically bound:
	        // 1. Expected ReactClass methods (in the "interface").
	        // 2. Overridden methods (that were mixed in).
	        var isReactClassMethod = ReactClassInterface.hasOwnProperty(name);
	        var isFunction = typeof property === 'function';
	        var shouldAutoBind =
	          isFunction &&
	          !isReactClassMethod &&
	          !isAlreadyDefined &&
	          spec.autobind !== false;

	        if (shouldAutoBind) {
	          autoBindPairs.push(name, property);
	          proto[name] = property;
	        } else {
	          if (isAlreadyDefined) {
	            var specPolicy = ReactClassInterface[name];

	            // These cases should already be caught by validateMethodOverride.
	            _invariant(
	              isReactClassMethod &&
	                (specPolicy === 'DEFINE_MANY_MERGED' ||
	                  specPolicy === 'DEFINE_MANY'),
	              'ReactClass: Unexpected spec policy %s for key %s ' +
	                'when mixing in component specs.',
	              specPolicy,
	              name
	            );

	            // For methods which are defined more than once, call the existing
	            // methods before calling the new property, merging if appropriate.
	            if (specPolicy === 'DEFINE_MANY_MERGED') {
	              proto[name] = createMergedResultFunction(proto[name], property);
	            } else if (specPolicy === 'DEFINE_MANY') {
	              proto[name] = createChainedFunction(proto[name], property);
	            }
	          } else {
	            proto[name] = property;
	            if (process.env.NODE_ENV !== 'production') {
	              // Add verbose displayName to the function, which helps when looking
	              // at profiling tools.
	              if (typeof property === 'function' && spec.displayName) {
	                proto[name].displayName = spec.displayName + '_' + name;
	              }
	            }
	          }
	        }
	      }
	    }
	  }

	  function mixStaticSpecIntoComponent(Constructor, statics) {
	    if (!statics) {
	      return;
	    }
	    for (var name in statics) {
	      var property = statics[name];
	      if (!statics.hasOwnProperty(name)) {
	        continue;
	      }

	      var isReserved = name in RESERVED_SPEC_KEYS;
	      _invariant(
	        !isReserved,
	        'ReactClass: You are attempting to define a reserved ' +
	          'property, `%s`, that shouldn\'t be on the "statics" key. Define it ' +
	          'as an instance property instead; it will still be accessible on the ' +
	          'constructor.',
	        name
	      );

	      var isInherited = name in Constructor;
	      _invariant(
	        !isInherited,
	        'ReactClass: You are attempting to define ' +
	          '`%s` on your component more than once. This conflict may be ' +
	          'due to a mixin.',
	        name
	      );
	      Constructor[name] = property;
	    }
	  }

	  /**
	   * Merge two objects, but throw if both contain the same key.
	   *
	   * @param {object} one The first object, which is mutated.
	   * @param {object} two The second object
	   * @return {object} one after it has been mutated to contain everything in two.
	   */
	  function mergeIntoWithNoDuplicateKeys(one, two) {
	    _invariant(
	      one && two && typeof one === 'object' && typeof two === 'object',
	      'mergeIntoWithNoDuplicateKeys(): Cannot merge non-objects.'
	    );

	    for (var key in two) {
	      if (two.hasOwnProperty(key)) {
	        _invariant(
	          one[key] === undefined,
	          'mergeIntoWithNoDuplicateKeys(): ' +
	            'Tried to merge two objects with the same key: `%s`. This conflict ' +
	            'may be due to a mixin; in particular, this may be caused by two ' +
	            'getInitialState() or getDefaultProps() methods returning objects ' +
	            'with clashing keys.',
	          key
	        );
	        one[key] = two[key];
	      }
	    }
	    return one;
	  }

	  /**
	   * Creates a function that invokes two functions and merges their return values.
	   *
	   * @param {function} one Function to invoke first.
	   * @param {function} two Function to invoke second.
	   * @return {function} Function that invokes the two argument functions.
	   * @private
	   */
	  function createMergedResultFunction(one, two) {
	    return function mergedResult() {
	      var a = one.apply(this, arguments);
	      var b = two.apply(this, arguments);
	      if (a == null) {
	        return b;
	      } else if (b == null) {
	        return a;
	      }
	      var c = {};
	      mergeIntoWithNoDuplicateKeys(c, a);
	      mergeIntoWithNoDuplicateKeys(c, b);
	      return c;
	    };
	  }

	  /**
	   * Creates a function that invokes two functions and ignores their return vales.
	   *
	   * @param {function} one Function to invoke first.
	   * @param {function} two Function to invoke second.
	   * @return {function} Function that invokes the two argument functions.
	   * @private
	   */
	  function createChainedFunction(one, two) {
	    return function chainedFunction() {
	      one.apply(this, arguments);
	      two.apply(this, arguments);
	    };
	  }

	  /**
	   * Binds a method to the component.
	   *
	   * @param {object} component Component whose method is going to be bound.
	   * @param {function} method Method to be bound.
	   * @return {function} The bound method.
	   */
	  function bindAutoBindMethod(component, method) {
	    var boundMethod = method.bind(component);
	    if (process.env.NODE_ENV !== 'production') {
	      boundMethod.__reactBoundContext = component;
	      boundMethod.__reactBoundMethod = method;
	      boundMethod.__reactBoundArguments = null;
	      var componentName = component.constructor.displayName;
	      var _bind = boundMethod.bind;
	      boundMethod.bind = function(newThis) {
	        for (
	          var _len = arguments.length,
	            args = Array(_len > 1 ? _len - 1 : 0),
	            _key = 1;
	          _key < _len;
	          _key++
	        ) {
	          args[_key - 1] = arguments[_key];
	        }

	        // User is trying to bind() an autobound method; we effectively will
	        // ignore the value of "this" that the user is trying to use, so
	        // let's warn.
	        if (newThis !== component && newThis !== null) {
	          if (process.env.NODE_ENV !== 'production') {
	            warning(
	              false,
	              'bind(): React component methods may only be bound to the ' +
	                'component instance. See %s',
	              componentName
	            );
	          }
	        } else if (!args.length) {
	          if (process.env.NODE_ENV !== 'production') {
	            warning(
	              false,
	              'bind(): You are binding a component method to the component. ' +
	                'React does this for you automatically in a high-performance ' +
	                'way, so you can safely remove this call. See %s',
	              componentName
	            );
	          }
	          return boundMethod;
	        }
	        var reboundMethod = _bind.apply(boundMethod, arguments);
	        reboundMethod.__reactBoundContext = component;
	        reboundMethod.__reactBoundMethod = method;
	        reboundMethod.__reactBoundArguments = args;
	        return reboundMethod;
	      };
	    }
	    return boundMethod;
	  }

	  /**
	   * Binds all auto-bound methods in a component.
	   *
	   * @param {object} component Component whose method is going to be bound.
	   */
	  function bindAutoBindMethods(component) {
	    var pairs = component.__reactAutoBindPairs;
	    for (var i = 0; i < pairs.length; i += 2) {
	      var autoBindKey = pairs[i];
	      var method = pairs[i + 1];
	      component[autoBindKey] = bindAutoBindMethod(component, method);
	    }
	  }

	  var IsMountedPreMixin = {
	    componentDidMount: function() {
	      this.__isMounted = true;
	    }
	  };

	  var IsMountedPostMixin = {
	    componentWillUnmount: function() {
	      this.__isMounted = false;
	    }
	  };

	  /**
	   * Add more to the ReactClass base class. These are all legacy features and
	   * therefore not already part of the modern ReactComponent.
	   */
	  var ReactClassMixin = {
	    /**
	     * TODO: This will be deprecated because state should always keep a consistent
	     * type signature and the only use case for this, is to avoid that.
	     */
	    replaceState: function(newState, callback) {
	      this.updater.enqueueReplaceState(this, newState, callback);
	    },

	    /**
	     * Checks whether or not this composite component is mounted.
	     * @return {boolean} True if mounted, false otherwise.
	     * @protected
	     * @final
	     */
	    isMounted: function() {
	      if (process.env.NODE_ENV !== 'production') {
	        warning(
	          this.__didWarnIsMounted,
	          '%s: isMounted is deprecated. Instead, make sure to clean up ' +
	            'subscriptions and pending requests in componentWillUnmount to ' +
	            'prevent memory leaks.',
	          (this.constructor && this.constructor.displayName) ||
	            this.name ||
	            'Component'
	        );
	        this.__didWarnIsMounted = true;
	      }
	      return !!this.__isMounted;
	    }
	  };

	  var ReactClassComponent = function() {};
	  _assign(
	    ReactClassComponent.prototype,
	    ReactComponent.prototype,
	    ReactClassMixin
	  );

	  /**
	   * Creates a composite component class given a class specification.
	   * See https://facebook.github.io/react/docs/top-level-api.html#react.createclass
	   *
	   * @param {object} spec Class specification (which must define `render`).
	   * @return {function} Component constructor function.
	   * @public
	   */
	  function createClass(spec) {
	    // To keep our warnings more understandable, we'll use a little hack here to
	    // ensure that Constructor.name !== 'Constructor'. This makes sure we don't
	    // unnecessarily identify a class without displayName as 'Constructor'.
	    var Constructor = identity(function(props, context, updater) {
	      // This constructor gets overridden by mocks. The argument is used
	      // by mocks to assert on what gets mounted.

	      if (process.env.NODE_ENV !== 'production') {
	        warning(
	          this instanceof Constructor,
	          'Something is calling a React component directly. Use a factory or ' +
	            'JSX instead. See: https://fb.me/react-legacyfactory'
	        );
	      }

	      // Wire up auto-binding
	      if (this.__reactAutoBindPairs.length) {
	        bindAutoBindMethods(this);
	      }

	      this.props = props;
	      this.context = context;
	      this.refs = emptyObject;
	      this.updater = updater || ReactNoopUpdateQueue;

	      this.state = null;

	      // ReactClasses doesn't have constructors. Instead, they use the
	      // getInitialState and componentWillMount methods for initialization.

	      var initialState = this.getInitialState ? this.getInitialState() : null;
	      if (process.env.NODE_ENV !== 'production') {
	        // We allow auto-mocks to proceed as if they're returning null.
	        if (
	          initialState === undefined &&
	          this.getInitialState._isMockFunction
	        ) {
	          // This is probably bad practice. Consider warning here and
	          // deprecating this convenience.
	          initialState = null;
	        }
	      }
	      _invariant(
	        typeof initialState === 'object' && !Array.isArray(initialState),
	        '%s.getInitialState(): must return an object or null',
	        Constructor.displayName || 'ReactCompositeComponent'
	      );

	      this.state = initialState;
	    });
	    Constructor.prototype = new ReactClassComponent();
	    Constructor.prototype.constructor = Constructor;
	    Constructor.prototype.__reactAutoBindPairs = [];

	    injectedMixins.forEach(mixSpecIntoComponent.bind(null, Constructor));

	    mixSpecIntoComponent(Constructor, IsMountedPreMixin);
	    mixSpecIntoComponent(Constructor, spec);
	    mixSpecIntoComponent(Constructor, IsMountedPostMixin);

	    // Initialize the defaultProps property after all mixins have been merged.
	    if (Constructor.getDefaultProps) {
	      Constructor.defaultProps = Constructor.getDefaultProps();
	    }

	    if (process.env.NODE_ENV !== 'production') {
	      // This is a tag to indicate that the use of these method names is ok,
	      // since it's used with createClass. If it's not, then it's likely a
	      // mistake so we'll warn you to use the static property, property
	      // initializer or constructor respectively.
	      if (Constructor.getDefaultProps) {
	        Constructor.getDefaultProps.isReactClassApproved = {};
	      }
	      if (Constructor.prototype.getInitialState) {
	        Constructor.prototype.getInitialState.isReactClassApproved = {};
	      }
	    }

	    _invariant(
	      Constructor.prototype.render,
	      'createClass(...): Class specification must implement a `render` method.'
	    );

	    if (process.env.NODE_ENV !== 'production') {
	      warning(
	        !Constructor.prototype.componentShouldUpdate,
	        '%s has a method called ' +
	          'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' +
	          'The name is phrased as a question because the function is ' +
	          'expected to return a value.',
	        spec.displayName || 'A component'
	      );
	      warning(
	        !Constructor.prototype.componentWillRecieveProps,
	        '%s has a method called ' +
	          'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?',
	        spec.displayName || 'A component'
	      );
	    }

	    // Reduce time spent doing lookups by setting these on the prototype.
	    for (var methodName in ReactClassInterface) {
	      if (!Constructor.prototype[methodName]) {
	        Constructor.prototype[methodName] = null;
	      }
	    }

	    return Constructor;
	  }

	  return createClass;
	}

	module.exports = factory;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)))

/***/ }),
/* 313 */
/***/ (function(module, exports) {

	/*
	object-assign
	(c) Sindre Sorhus
	@license MIT
	*/

	'use strict';
	/* eslint-disable no-unused-vars */
	var getOwnPropertySymbols = Object.getOwnPropertySymbols;
	var hasOwnProperty = Object.prototype.hasOwnProperty;
	var propIsEnumerable = Object.prototype.propertyIsEnumerable;

	function toObject(val) {
		if (val === null || val === undefined) {
			throw new TypeError('Object.assign cannot be called with null or undefined');
		}

		return Object(val);
	}

	function shouldUseNative() {
		try {
			if (!Object.assign) {
				return false;
			}

			// Detect buggy property enumeration order in older V8 versions.

			// https://bugs.chromium.org/p/v8/issues/detail?id=4118
			var test1 = new String('abc');  // eslint-disable-line no-new-wrappers
			test1[5] = 'de';
			if (Object.getOwnPropertyNames(test1)[0] === '5') {
				return false;
			}

			// https://bugs.chromium.org/p/v8/issues/detail?id=3056
			var test2 = {};
			for (var i = 0; i < 10; i++) {
				test2['_' + String.fromCharCode(i)] = i;
			}
			var order2 = Object.getOwnPropertyNames(test2).map(function (n) {
				return test2[n];
			});
			if (order2.join('') !== '0123456789') {
				return false;
			}

			// https://bugs.chromium.org/p/v8/issues/detail?id=3056
			var test3 = {};
			'abcdefghijklmnopqrst'.split('').forEach(function (letter) {
				test3[letter] = letter;
			});
			if (Object.keys(Object.assign({}, test3)).join('') !==
					'abcdefghijklmnopqrst') {
				return false;
			}

			return true;
		} catch (err) {
			// We don't expect any of the above to throw, but better to be safe.
			return false;
		}
	}

	module.exports = shouldUseNative() ? Object.assign : function (target, source) {
		var from;
		var to = toObject(target);
		var symbols;

		for (var s = 1; s < arguments.length; s++) {
			from = Object(arguments[s]);

			for (var key in from) {
				if (hasOwnProperty.call(from, key)) {
					to[key] = from[key];
				}
			}

			if (getOwnPropertySymbols) {
				symbols = getOwnPropertySymbols(from);
				for (var i = 0; i < symbols.length; i++) {
					if (propIsEnumerable.call(from, symbols[i])) {
						to[symbols[i]] = from[symbols[i]];
					}
				}
			}
		}

		return to;
	};


/***/ }),
/* 314 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var emptyObject = {};

	if (process.env.NODE_ENV !== 'production') {
	  Object.freeze(emptyObject);
	}

	module.exports = emptyObject;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)))

/***/ }),
/* 315 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	/**
	 * Use invariant() to assert state which your program assumes to be true.
	 *
	 * Provide sprintf-style format (only %s is supported) and arguments
	 * to provide information about what broke and what you were
	 * expecting.
	 *
	 * The invariant message will be stripped in production, but the invariant
	 * will remain to ensure logic does not differ in production.
	 */

	var validateFormat = function validateFormat(format) {};

	if (process.env.NODE_ENV !== 'production') {
	  validateFormat = function validateFormat(format) {
	    if (format === undefined) {
	      throw new Error('invariant requires an error message argument');
	    }
	  };
	}

	function invariant(condition, format, a, b, c, d, e, f) {
	  validateFormat(format);

	  if (!condition) {
	    var error;
	    if (format === undefined) {
	      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');
	    } else {
	      var args = [a, b, c, d, e, f];
	      var argIndex = 0;
	      error = new Error(format.replace(/%s/g, function () {
	        return args[argIndex++];
	      }));
	      error.name = 'Invariant Violation';
	    }

	    error.framesToPop = 1; // we don't care about invariant's own frame
	    throw error;
	  }
	}

	module.exports = invariant;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)))

/***/ }),
/* 316 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var emptyFunction = __webpack_require__(317);

	/**
	 * Similar to invariant but only logs a warning if the condition is not met.
	 * This can be used to log issues in development environments in critical
	 * paths. Removing the logging code for production environments will keep the
	 * same logic and follow the same code paths.
	 */

	var warning = emptyFunction;

	if (process.env.NODE_ENV !== 'production') {
	  (function () {
	    var printWarning = function printWarning(format) {
	      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	        args[_key - 1] = arguments[_key];
	      }

	      var argIndex = 0;
	      var message = 'Warning: ' + format.replace(/%s/g, function () {
	        return args[argIndex++];
	      });
	      if (typeof console !== 'undefined') {
	        console.error(message);
	      }
	      try {
	        // --- Welcome to debugging React ---
	        // This error was thrown as a convenience so that you can use this stack
	        // to find the callsite that caused this warning to fire.
	        throw new Error(message);
	      } catch (x) {}
	    };

	    warning = function warning(condition, format) {
	      if (format === undefined) {
	        throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');
	      }

	      if (format.indexOf('Failed Composite propType: ') === 0) {
	        return; // Ignore CompositeComponent proptype check.
	      }

	      if (!condition) {
	        for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
	          args[_key2 - 2] = arguments[_key2];
	        }

	        printWarning.apply(undefined, [format].concat(args));
	      }
	    };
	  })();
	}

	module.exports = warning;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)))

/***/ }),
/* 317 */
/***/ (function(module, exports) {

	"use strict";

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */

	function makeEmptyFunction(arg) {
	  return function () {
	    return arg;
	  };
	}

	/**
	 * This function accepts and discards inputs; it has no side effects. This is
	 * primarily useful idiomatically for overridable function endpoints which
	 * always need to be callable, since JS lacks a null-call idiom ala Cocoa.
	 */
	var emptyFunction = function emptyFunction() {};

	emptyFunction.thatReturns = makeEmptyFunction;
	emptyFunction.thatReturnsFalse = makeEmptyFunction(false);
	emptyFunction.thatReturnsTrue = makeEmptyFunction(true);
	emptyFunction.thatReturnsNull = makeEmptyFunction(null);
	emptyFunction.thatReturnsThis = function () {
	  return this;
	};
	emptyFunction.thatReturnsArgument = function (arg) {
	  return arg;
	};

	module.exports = emptyFunction;

/***/ }),
/* 318 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	'use strict';

	var _prodInvariant = __webpack_require__(286);

	var ReactElement = __webpack_require__(296);

	var invariant = __webpack_require__(292);

	/**
	 * Returns the first child in a collection of children and verifies that there
	 * is only one child in the collection.
	 *
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.only
	 *
	 * The current implementation of this function assumes that a single child gets
	 * passed without a wrapper, but the purpose of this helper function is to
	 * abstract away the particular structure of children.
	 *
	 * @param {?object} children Child collection structure.
	 * @return {ReactElement} The first and only `ReactElement` contained in the
	 * structure.
	 */
	function onlyChild(children) {
	  !ReactElement.isValidElement(children) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'React.Children.only expected to receive a single React element child.') : _prodInvariant('143') : void 0;
	  return children;
	}

	module.exports = onlyChild;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)))

/***/ }),
/* 319 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _reactRouterDom = __webpack_require__(203);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	// 3rd Party
	var NavWorker = function NavWorker(props) {

	    return _react2.default.createElement(
	        'ul',
	        { className: 'navbar-nav d-flex justify-content-end w-100' },
	        _react2.default.createElement('li', { className: 'nav-item mx-auto w-75 mt-1' }),
	        _react2.default.createElement(
	            'li',
	            { className: 'nav-item mr-3' },
	            _react2.default.createElement(
	                'div',
	                { className: 'btn-group' },
	                _react2.default.createElement(
	                    'button',
	                    { type: 'button', className: 'btn btn-primary dropdown-toggle', 'data-toggle': 'dropdown', 'aria-haspopup': 'true', 'aria-expanded': 'false' },
	                    _react2.default.createElement('i', { className: 'ion-wrench navbar-brand' })
	                ),
	                _react2.default.createElement(
	                    'div',
	                    { id: 'workerNavbar', className: 'dropdown-menu dropdown-menu-right' },
	                    _react2.default.createElement(
	                        'h6',
	                        { className: 'dropdown-header' },
	                        'Menu'
	                    ),
	                    _react2.default.createElement('div', { className: 'dropdown-divider' }),
	                    _react2.default.createElement(
	                        _reactRouterDom.Link,
	                        { to: '/app/worker/reports', className: 'dropdown-item btn btn-primary admin-navbar-item' },
	                        'Ocorr\xEAncias'
	                    ),
	                    _react2.default.createElement(
	                        _reactRouterDom.Link,
	                        { to: '/app/worker/map', className: 'dropdown-item btn btn-primary admin-navbar-item' },
	                        'Mapa'
	                    )
	                )
	            )
	        ),
	        _react2.default.createElement(
	            'li',
	            { className: 'nav-item' },
	            _react2.default.createElement(
	                'div',
	                { className: 'btn-group' },
	                _react2.default.createElement(
	                    'button',
	                    { type: 'button', className: 'btn btn-primary dropdown-toggle', 'data-toggle': 'dropdown', 'aria-haspopup': 'true', 'aria-expanded': 'false' },
	                    _react2.default.createElement('i', { className: 'ion-android-person navbar-brand' })
	                ),
	                _react2.default.createElement(
	                    'div',
	                    { className: 'dropdown-menu dropdown-menu-right' },
	                    _react2.default.createElement(
	                        'h6',
	                        { className: 'dropdown-header' },
	                        'Conta'
	                    ),
	                    _react2.default.createElement('div', { className: 'dropdown-divider' }),
	                    _react2.default.createElement(
	                        _reactRouterDom.Link,
	                        { to: '/app/worker/profile', className: 'dropdown-item btn btn-primary admin-navbar-item' },
	                        'Perfil'
	                    ),
	                    _react2.default.createElement(
	                        'button',
	                        { className: 'dropdown-item btn btn-primary admin-navbar-item', onClick: props.onLogout },
	                        'Logout'
	                    )
	                )
	            )
	        )
	    );
	};

	exports.default = NavWorker;

/***/ }),
/* 320 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _reactDom = __webpack_require__(159);

	var _reactDom2 = _interopRequireDefault(_reactDom);

	var _reactRedux = __webpack_require__(160);

	var _index = __webpack_require__(1);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // 3rd Party


	// Internal Modules


	/*

	*/
	var Modal = function (_Component) {
	    _inherits(Modal, _Component);

	    function Modal() {
	        _classCallCheck(this, Modal);

	        return _possibleConstructorReturn(this, (Modal.__proto__ || Object.getPrototypeOf(Modal)).apply(this, arguments));
	    }

	    _createClass(Modal, [{
	        key: 'componentDidMount',
	        value: function componentDidMount() {
	            this.modalTarget = document.createElement('div');
	            this.modalTarget.className = 'modal-custom-container';
	            document.body.appendChild(this.modalTarget);
	            this._render();
	            //$('#modal').modal('show');
	        }
	    }, {
	        key: 'componentWillUpdate',
	        value: function componentWillUpdate() {
	            this._render();
	        }
	    }, {
	        key: 'componentWillUnmount',
	        value: function componentWillUnmount() {
	            //const backdrop = document.querySelector('.modal-backdrop');
	            _reactDom2.default.unmountComponentAtNode(this.modalTarget);
	            document.body.removeChild(this.modalTarget);
	            //backdrop.innerHTML = '';
	            //document.body.removeChild(backdrop);
	            //$('#modal').modal('hide');
	        }
	    }, {
	        key: '_render',
	        value: function _render() {
	            _reactDom2.default.render(_react2.default.createElement(
	                _reactRedux.Provider,
	                { store: _index.store },
	                _react2.default.createElement(
	                    'div',
	                    { className: 'modal-custom' },
	                    this.props.children
	                )
	            ), this.modalTarget);
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            return _react2.default.createElement('noscript', null);
	        }
	    }]);

	    return Modal;
	}(_react.Component);

	exports.default = Modal;

/***/ }),
/* 321 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/*

	*/
	var Spinner = function Spinner(props) {
	    /*return(
	        <div className="container-fluid h-100 spinner-container">
	            <div className="row align-items-center justify-content-center h-100">
	                <div className="row">
	                    <div className="spinner"></div>
	                </div>
	                <div className="row">
	                    <h2>Loading...</h2>
	                </div>
	            </div>
	        </div>
	    );*/
	    return _react2.default.createElement("div", { className: "spinner" });
	}; // 3rd Party
	exports.default = Spinner;

/***/ }),
/* 322 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/*

	*/
	var LoadingText = function LoadingText(props) {
	    return _react2.default.createElement(
	        "div",
	        { className: "loading-text" },
	        props.message,
	        _react2.default.createElement(
	            "span",
	            { className: "blink" },
	            "."
	        ),
	        _react2.default.createElement(
	            "span",
	            { className: "blink" },
	            "."
	        ),
	        _react2.default.createElement(
	            "span",
	            { className: "blink" },
	            "."
	        )
	    );
	}; // 3rd Party
	exports.default = LoadingText;

/***/ }),
/* 323 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.LOGOUT = exports.LOGIN = exports.FETCHED_TOKEN_FROM_LOCALSTORAGE = undefined;
	exports.fetchTokenFromLocalstorage = fetchTokenFromLocalstorage;
	exports.doLogin = doLogin;
	exports.doLogout = doLogout;

	var _axios = __webpack_require__(253);

	var _axios2 = _interopRequireDefault(_axios);

	var _config = __webpack_require__(279);

	var _config2 = _interopRequireDefault(_config);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	// 3rd Party
	var FETCHED_TOKEN_FROM_LOCALSTORAGE = exports.FETCHED_TOKEN_FROM_LOCALSTORAGE = 'FETCHED_TOKEN_FROM_LOCALSTORAGE';

	// Internal Modules
	var LOGIN = exports.LOGIN = 'LOGIN';
	var LOGOUT = exports.LOGOUT = 'LOGOUT';

	/*
	    Acção a ser dispatched quando se tenciona procurar o token
	    na localstorage.

	    Payload pode ser o token ou null caso não se encontre nenhum
	    valor na localstorage.
	*/
	function fetchTokenFromLocalstorage() {
	    return {
	        type: FETCHED_TOKEN_FROM_LOCALSTORAGE,
	        payload: JSON.parse(localStorage.getItem('token'))
	    };
	}

	/*
	    Acção a ser dispatched no acto de login.

	    Payload é uma promise que será tratada pelo
	    redux-promise-middleware. Este fará dispatch de
	    várias acções para informar dos vários estados
	    da promise.
	*/
	function doLogin(data) {
	    return {
	        type: LOGIN,
	        payload: (0, _axios2.default)({
	            method: 'post',
	            responseType: 'json',
	            url: _config2.default + '/login',
	            data: data
	        })
	    };
	}

	/*
	    Acção a ser dispatched no acto de logout.

	    Payload é uma promise que será tratada pelo
	    redux-promise-middleware. Este fará dispatch de
	    várias acções para informar dos vários estados
	    da promise.
	*/
	function doLogout(token) {
	    return {
	        type: LOGOUT,
	        payload: _axios2.default.post(_config2.default + '/logout', token)
	    };
	}

/***/ }),
/* 324 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.LOAD_NOTIFICATIONS = undefined;
	exports.loadNotifications = loadNotifications;

	var _axios = __webpack_require__(253);

	var _axios2 = _interopRequireDefault(_axios);

	var _config = __webpack_require__(279);

	var _config2 = _interopRequireDefault(_config);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var LOAD_NOTIFICATIONS = exports.LOAD_NOTIFICATIONS = "LOAD_NOTIFICATIONS";

	function loadNotifications(token) {
	    return function (dispatch) {
	        _axios2.default.post(_config2.default + '/operation/loadNotifications', token).then(function (response) {
	            dispatch({
	                type: LOAD_NOTIFICATIONS,
	                payload: response
	            });
	        }).catch(function (err) {
	            console.log("An error has occured while trying to load notifications", err);
	        });
	    };
	}

/***/ }),
/* 325 */
/***/ (function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.searchLocation = searchLocation;
	var SEARCH_LOCATION = exports.SEARCH_LOCATION = 'SEARCH_LOCATION';

	function searchLocation(coords) {
	    return {
	        type: SEARCH_LOCATION,
	        payload: coords
	    };
	}

/***/ }),
/* 326 */
/***/ (function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.setIntervalReports = setIntervalReports;
	exports.unsetIntervalReports = unsetIntervalReports;
	var SET_INTERVAL_REPORTS = exports.SET_INTERVAL_REPORTS = 'SET_INTERVAL_REPORTS';
	var UNSET_INTERVAL_REPORTS = exports.UNSET_INTERVAL_REPORTS = 'UNSET_INTERVAL_REPORTS';

	function setIntervalReports(intervalId) {
	    return {
	        type: SET_INTERVAL_REPORTS,
	        payload: intervalId
	    };
	}

	function unsetIntervalReports() {
	    return { type: UNSET_INTERVAL_REPORTS };
	}

/***/ }),
/* 327 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.TOGGLE_FOLLOW = exports.REMOVE_STATE_FILTER = exports.ADD_STATE_FILTER = exports.COMPARE_SUGGESTIONS = exports.CLEAR_SELECTED_REPORTS = exports.UNSELECT_REPORT_ITEM = exports.SELECT_REPORT_ITEM = exports.GET_NEW_REPORT_TYPES = exports.UNSET_NEW_REPORT_LOCATION = exports.SET_NEW_REPORT_LOCATION = exports.UNSET_HIDDEN = exports.SET_HIDDEN = exports.GET_REPORTS_REPLACE = exports.GET_REPORTS_ADD = exports.GET_REPORTS = exports.LOAD_REPORTS_BY_TYPE = undefined;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	exports.getReportsByType = getReportsByType;
	exports.getReports = getReports;
	exports.setHidden = setHidden;
	exports.unsetHidden = unsetHidden;
	exports.setNewReportLocation = setNewReportLocation;
	exports.unsetNewReportLocation = unsetNewReportLocation;
	exports.getNewReportTypes = getNewReportTypes;
	exports.addReport = addReport;
	exports.selectReport = selectReport;
	exports.unselectReport = unselectReport;
	exports.clearSelectedReports = clearSelectedReports;
	exports.compareSuggestions = compareSuggestions;
	exports.addStateFilter = addStateFilter;
	exports.removeStateFilter = removeStateFilter;
	exports.toggleFollow = toggleFollow;

	var _axios = __webpack_require__(253);

	var _axios2 = _interopRequireDefault(_axios);

	var _config = __webpack_require__(279);

	var _config2 = _interopRequireDefault(_config);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var LOAD_REPORTS_BY_TYPE = exports.LOAD_REPORTS_BY_TYPE = "LOAD_REPORTS_BY_TYPE";
	var GET_REPORTS = exports.GET_REPORTS = 'GET_REPORTS';
	var GET_REPORTS_ADD = exports.GET_REPORTS_ADD = 'GET_REPORTS_ADD';
	var GET_REPORTS_REPLACE = exports.GET_REPORTS_REPLACE = 'GET_REPORTS_REPLACE';
	var SET_HIDDEN = exports.SET_HIDDEN = 'SET_HIDDEN';
	var UNSET_HIDDEN = exports.UNSET_HIDDEN = 'UNSET_HIDDEN';
	var SET_NEW_REPORT_LOCATION = exports.SET_NEW_REPORT_LOCATION = 'SET_NEW_REPORT_LOCATION';
	var UNSET_NEW_REPORT_LOCATION = exports.UNSET_NEW_REPORT_LOCATION = 'UNSET_NEW_REPORT_LOCATION';
	var GET_NEW_REPORT_TYPES = exports.GET_NEW_REPORT_TYPES = 'GET_NEW_REPORT_TYPES';
	var SELECT_REPORT_ITEM = exports.SELECT_REPORT_ITEM = 'SELECT_REPORT_ITEM';
	var UNSELECT_REPORT_ITEM = exports.UNSELECT_REPORT_ITEM = 'UNSELECT_REPORT_ITEM';
	var CLEAR_SELECTED_REPORTS = exports.CLEAR_SELECTED_REPORTS = "CLEAR_SELECTED_REPORTS";
	var COMPARE_SUGGESTIONS = exports.COMPARE_SUGGESTIONS = 'COMPARE_SUGGESTIONS';
	var ADD_STATE_FILTER = exports.ADD_STATE_FILTER = 'ADD_STATE_FILTER';
	var REMOVE_STATE_FILTER = exports.REMOVE_STATE_FILTER = 'REMOVE_STATE_FILTER';
	var TOGGLE_FOLLOW = exports.TOGGLE_FOLLOW = 'TOGGLE_FOLLOW';

	function getReportsByType(token, type, email) {
	    return function (dispatch) {
	        _axios2.default.post(_config2.default + '/admin/reportTypeManagement/loadFilteredReports', { token: token, type: type, email: email }).then(function (response) {
	            dispatch({
	                type: LOAD_REPORTS_BY_TYPE,
	                payload: response
	            });
	        }).catch(function (err) {
	            console.log(err);
	            console.log('An error has occured.');
	        });
	    };
	}

	function getReports(token, cursor) {
	    var data = cursor ? { token: token, cursor: cursor } : { token: token };
	    return function (dispatch) {
	        (0, _axios2.default)({
	            method: 'post',
	            responseType: 'json',
	            url: _config2.default + '/reports/getA',
	            data: data
	        }).then(function (response) {
	            if (response.status === 200) {
	                dispatch(getReports(token, response.data.cursor));
	                if (cursor) {
	                    dispatch({
	                        type: GET_REPORTS_ADD,
	                        payload: response.data.reports
	                    });
	                } else {
	                    dispatch({
	                        type: GET_REPORTS_REPLACE,
	                        payload: response.data.reports
	                    });
	                }
	            } else {
	                dispatch({
	                    type: GET_REPORTS_ADD,
	                    payload: []
	                });
	            }
	        }).catch(function (error) {
	            console.log('Erro a obter reports...', _extends({}, error));
	        });
	    };
	}

	function setHidden() {
	    return { type: SET_HIDDEN };
	}

	function unsetHidden() {
	    return { type: UNSET_HIDDEN };
	}

	function setNewReportLocation(coords) {
	    return function (dispatch) {
	        var geocoder = new google.maps.Geocoder();
	        geocoder.geocode({ location: coords }, function (results, status) {
	            if (status === 'OK') {
	                //
	                var district = getAreaName('administrative_area_level_1', results);
	                var county = getAreaName('administrative_area_level_2', results);
	                var address = { district: district, county: county };

	                //
	                var addressComponents = results[0].address_components.map(function (component) {
	                    return component.long_name;
	                });
	                var addressAsStreet = addressComponents[0] + ', ' + addressComponents[1] + ', ' + addressComponents[addressComponents.length - 1];

	                dispatch({
	                    type: SET_NEW_REPORT_LOCATION,
	                    payload: { coords: coords, address: address, addressAsStreet: addressAsStreet }
	                });
	            } else {
	                console.log('An error occurred while geocoding...');
	            }
	        });
	    };
	}

	function unsetNewReportLocation() {
	    return { type: UNSET_NEW_REPORT_LOCATION };
	}

	function getNewReportTypes(token, county) {
	    return {
	        type: GET_NEW_REPORT_TYPES,
	        payload: _axios2.default.post(_config2.default + '/admin/reportTypeManagement/listReportTypes', { token: token, county: county })
	    };
	}

	function addReport(report) {
	    return {
	        type: GET_REPORTS_ADD,
	        payload: [report]
	    };
	}

	function getAreaName(adminAreaLevel, results) {
	    console.log('GEOCODING RESULTS', results);
	    var _iteratorNormalCompletion = true;
	    var _didIteratorError = false;
	    var _iteratorError = undefined;

	    try {
	        for (var _iterator = results[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
	            var result = _step.value;
	            var _iteratorNormalCompletion3 = true;
	            var _didIteratorError3 = false;
	            var _iteratorError3 = undefined;

	            try {
	                for (var _iterator3 = result.types[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {
	                    var type = _step3.value;

	                    if (type === adminAreaLevel) return result.address_components[0].long_name;
	                }
	            } catch (err) {
	                _didIteratorError3 = true;
	                _iteratorError3 = err;
	            } finally {
	                try {
	                    if (!_iteratorNormalCompletion3 && _iterator3.return) {
	                        _iterator3.return();
	                    }
	                } finally {
	                    if (_didIteratorError3) {
	                        throw _iteratorError3;
	                    }
	                }
	            }
	        }
	    } catch (err) {
	        _didIteratorError = true;
	        _iteratorError = err;
	    } finally {
	        try {
	            if (!_iteratorNormalCompletion && _iterator.return) {
	                _iterator.return();
	            }
	        } finally {
	            if (_didIteratorError) {
	                throw _iteratorError;
	            }
	        }
	    }

	    var _iteratorNormalCompletion2 = true;
	    var _didIteratorError2 = false;
	    var _iteratorError2 = undefined;

	    try {
	        for (var _iterator2 = results[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
	            var _result = _step2.value;
	            var address_components = _result.address_components;
	            var _iteratorNormalCompletion4 = true;
	            var _didIteratorError4 = false;
	            var _iteratorError4 = undefined;

	            try {
	                for (var _iterator4 = address_components[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {
	                    var component = _step4.value;
	                    var _iteratorNormalCompletion5 = true;
	                    var _didIteratorError5 = false;
	                    var _iteratorError5 = undefined;

	                    try {
	                        for (var _iterator5 = component.types[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {
	                            var _type = _step5.value;

	                            if (_type === adminAreaLevel) return component.long_name;
	                        }
	                    } catch (err) {
	                        _didIteratorError5 = true;
	                        _iteratorError5 = err;
	                    } finally {
	                        try {
	                            if (!_iteratorNormalCompletion5 && _iterator5.return) {
	                                _iterator5.return();
	                            }
	                        } finally {
	                            if (_didIteratorError5) {
	                                throw _iteratorError5;
	                            }
	                        }
	                    }
	                }
	            } catch (err) {
	                _didIteratorError4 = true;
	                _iteratorError4 = err;
	            } finally {
	                try {
	                    if (!_iteratorNormalCompletion4 && _iterator4.return) {
	                        _iterator4.return();
	                    }
	                } finally {
	                    if (_didIteratorError4) {
	                        throw _iteratorError4;
	                    }
	                }
	            }
	        }
	    } catch (err) {
	        _didIteratorError2 = true;
	        _iteratorError2 = err;
	    } finally {
	        try {
	            if (!_iteratorNormalCompletion2 && _iterator2.return) {
	                _iterator2.return();
	            }
	        } finally {
	            if (_didIteratorError2) {
	                throw _iteratorError2;
	            }
	        }
	    }
	}

	function selectReport(report) {
	    return {
	        type: SELECT_REPORT_ITEM,
	        payload: report
	    };
	}

	function unselectReport(index) {
	    return {
	        type: UNSELECT_REPORT_ITEM,
	        payload: index
	    };
	}

	function clearSelectedReports() {
	    return {
	        type: CLEAR_SELECTED_REPORTS,
	        payload: []
	    };
	}

	function compareSuggestions(suggestions) {
	    return {
	        type: COMPARE_SUGGESTIONS,
	        payload: suggestions
	    };
	}

	function addStateFilter(state) {
	    return {
	        type: ADD_STATE_FILTER,
	        payload: state
	    };
	}

	function removeStateFilter(state) {
	    return {
	        type: REMOVE_STATE_FILTER,
	        payload: state
	    };
	}

	function toggleFollow(id) {
	    console.log('ACTION id', id);
	    return {
	        type: TOGGLE_FOLLOW,
	        payload: id
	    };
	}

/***/ }),
/* 328 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _reactRouterDom = __webpack_require__(203);

	var _router_user_report = __webpack_require__(329);

	var _router_user_report2 = _interopRequireDefault(_router_user_report);

	var _page_user_map = __webpack_require__(571);

	var _page_user_map2 = _interopRequireDefault(_page_user_map);

	var _page_user_settings = __webpack_require__(578);

	var _page_user_settings2 = _interopRequireDefault(_page_user_settings);

	var _page_notification_details = __webpack_require__(579);

	var _page_notification_details2 = _interopRequireDefault(_page_notification_details);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/*
	    Componente de routing das páginas de utilizador Basic.
	    Liga um outro componente de routing que trata do routing das
	    páginas referentes aos reports (criar e visualizar).
	*/


	// Internal Modules
	// 3rd Party
	var UserRouter = function UserRouter(props) {
	    return _react2.default.createElement(
	        _reactRouterDom.Switch,
	        null,
	        _react2.default.createElement(_reactRouterDom.Route, { path: '/app/user/map', component: _page_user_map2.default }),
	        _react2.default.createElement(_reactRouterDom.Route, { path: '/app/user/settings', component: _page_user_settings2.default }),
	        _react2.default.createElement(_reactRouterDom.Route, { path: '/app/user/report', component: _router_user_report2.default }),
	        _react2.default.createElement(_reactRouterDom.Route, { path: '/app/user/notifications/:id', component: _page_notification_details2.default })
	    );
	};

	// Pages
	exports.default = UserRouter;

/***/ }),
/* 329 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _reactRouterDom = __webpack_require__(203);

	var _page_user_report = __webpack_require__(330);

	var _page_user_report2 = _interopRequireDefault(_page_user_report);

	var _page_user_report_details = __webpack_require__(569);

	var _page_user_report_details2 = _interopRequireDefault(_page_user_report_details);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/*
	    Trata do routing das páginas referentes aos reports (criar e visualizar).
	*/


	// Pages
	// 3rd Party
	var ReportRouter = function ReportRouter(props) {
	    return _react2.default.createElement(
	        _reactRouterDom.Switch,
	        null,
	        _react2.default.createElement(_reactRouterDom.Route, { path: '/app/user/report/:id', component: _page_user_report_details2.default }),
	        _react2.default.createElement(_reactRouterDom.Route, { path: '/app/user/report', component: _page_user_report2.default })
	    );
	};

	exports.default = ReportRouter;

/***/ }),
/* 330 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _reactRedux = __webpack_require__(160);

	var _axios = __webpack_require__(253);

	var _axios2 = _interopRequireDefault(_axios);

	var _form_add_report = __webpack_require__(331);

	var _form_add_report2 = _interopRequireDefault(_form_add_report);

	var _modal = __webpack_require__(320);

	var _modal2 = _interopRequireDefault(_modal);

	var _spinner = __webpack_require__(321);

	var _spinner2 = _interopRequireDefault(_spinner);

	var _loading_text = __webpack_require__(322);

	var _loading_text2 = _interopRequireDefault(_loading_text);

	var _alert = __webpack_require__(568);

	var _alert2 = _interopRequireDefault(_alert);

	var _config = __webpack_require__(279);

	var _config2 = _interopRequireDefault(_config);

	var _actions_reports = __webpack_require__(327);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // 3rd Party


	// Internal Modules


	// Actions


	// Default IMG src
	var DEFAULT_SRC = '/img/missing.png';

	/*
	    
	*/

	var ReportPage = function (_Component) {
	    _inherits(ReportPage, _Component);

	    function ReportPage(props) {
	        _classCallCheck(this, ReportPage);

	        var _this = _possibleConstructorReturn(this, (ReportPage.__proto__ || Object.getPrototypeOf(ReportPage)).call(this, props));

	        _this.state = {
	            image: null,
	            submitting: false,
	            successMsg: '',
	            errorMsg: '',
	            suggestions: []
	        };
	        return _this;
	    }

	    _createClass(ReportPage, [{
	        key: 'componentWillMount',
	        value: function componentWillMount() {
	            if (this.props.token.token && this.props.newReportLocation) {
	                var token = this.props.token.token;
	                var county = this.props.newReportLocation.address.county;

	                this.props.dispatch((0, _actions_reports.getNewReportTypes)(token, county));
	            }
	        }

	        /*
	            Se não existirem coordenadas para adicionar um novo
	            report, faz redirect para a página do mapa.
	        */

	    }, {
	        key: 'componentWillReceiveProps',
	        value: function componentWillReceiveProps(nextProps) {
	            if (!nextProps.newReportLocation) this.props.history.push('/app/user/map');
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            // Não mostra nada no caso de não ter todas as propriedades necessárias do estado
	            if (!this.props.token || !this.props.newReportLocation || !this.props.newReportTypes) {
	                return _react2.default.createElement('noscript', null);
	            }

	            return _react2.default.createElement(
	                'div',
	                { className: 'container h-100' },
	                _react2.default.createElement(
	                    'div',
	                    { className: 'row justify-content-center custom-container' },
	                    _react2.default.createElement(
	                        'div',
	                        { className: 'col-md-7' },
	                        _react2.default.createElement('img', { className: 'w-100 details-image mb-3 rounded', src: this.state.image ? this.state.image : DEFAULT_SRC }),
	                        _react2.default.createElement(_form_add_report2.default, {
	                            address: this.props.newReportLocation.addressAsStreet,
	                            types: this.props.newReportTypes,
	                            suggestions: this.state.suggestions,
	                            getSuggestions: this.getSuggestions.bind(this),
	                            onImageSelect: this.onImageSelect.bind(this),
	                            onSubmit: this.onSubmit.bind(this)
	                        }),
	                        _react2.default.createElement(
	                            'button',
	                            {
	                                className: 'btn btn-danger form-control mt-2',
	                                onClick: this.onCancelClick.bind(this)
	                            },
	                            'Cancelar'
	                        ),
	                        this.state.submitting && _react2.default.createElement(
	                            _modal2.default,
	                            null,
	                            _react2.default.createElement(
	                                'div',
	                                { className: 'd-flex justify-content-center align-items-center' },
	                                _react2.default.createElement(
	                                    'div',
	                                    { className: 'mr-3' },
	                                    _react2.default.createElement(_spinner2.default, null)
	                                ),
	                                _react2.default.createElement(_loading_text2.default, { message: 'A registar' })
	                            )
	                        ),
	                        this.state.successMsg && _react2.default.createElement(
	                            _alert2.default,
	                            { type: 'success', timeout: 2, timeoutCallback: this.resetStateOrRedirect.bind(this) },
	                            _react2.default.createElement(
	                                'strong',
	                                null,
	                                this.state.successMsg
	                            ),
	                            ' ',
	                            'A redireccionar...'
	                        ) || this.state.errorMsg && _react2.default.createElement(
	                            _alert2.default,
	                            { type: 'danger', timeout: 4, timeoutCallback: this.resetStateOrRedirect.bind(this) },
	                            _react2.default.createElement(
	                                'strong',
	                                null,
	                                this.state.errorMsg
	                            )
	                        )
	                    )
	                )
	            );
	        }
	    }, {
	        key: 'onSubmit',
	        value: function onSubmit(values) {
	            var _this2 = this;

	            this.setState({ submitting: true });

	            if (values.image) {
	                //const bucket = 'flag-n-patch.appspot.com';
	                var filename = values.image.name;
	                var imageUrl = 'https://' + _config.BUCKET + '/gcs/' + _config.BUCKET + '/' + filename;
	                (0, _axios2.default)({
	                    method: 'post',
	                    url: imageUrl,
	                    headers: { 'Content-Type': values.image.type },
	                    data: values.image
	                }).then(function (response) {
	                    var data = _this2.buildDataToSubmit(values, imageUrl);
	                    _this2.submitReportData(data);
	                }).catch(function (error) {
	                    console.log('Error while submitting image to GCS...', error);
	                });
	            } else {
	                var data = this.buildDataToSubmit(values);
	                this.submitReportData(data);
	            }
	        }
	    }, {
	        key: 'onImageSelect',
	        value: function onImageSelect(image) {
	            this.setState({ image: image });
	        }
	    }, {
	        key: 'onCancelClick',
	        value: function onCancelClick() {
	            localStorage.setItem('previousLocation', '/app/user/report');
	            this.props.dispatch((0, _actions_reports.unsetNewReportLocation)());
	        }
	    }, {
	        key: 'buildDataToSubmit',
	        value: function buildDataToSubmit(values) {
	            var imageUrl = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : DEFAULT_SRC;

	            if (values.image) delete values.image;
	            return {
	                token: this.props.token.token,
	                report: _extends({}, values, {
	                    imageUrl: imageUrl,
	                    address: this.props.newReportLocation.address,
	                    addressAsStreet: this.props.newReportLocation.addressAsStreet,
	                    lat: this.props.newReportLocation.coords.lat,
	                    lng: this.props.newReportLocation.coords.lng
	                })
	            };
	        }
	    }, {
	        key: 'submitReportData',
	        value: function submitReportData(data) {
	            var _this3 = this;

	            (0, _axios2.default)({
	                method: 'post',
	                responseType: 'json',
	                url: _config2.default + '/report/register',
	                data: data
	            }).then(function (response) {
	                _this3.setState({ submitting: false, successMsg: 'Sucesso!' });
	                _this3.props.dispatch((0, _actions_reports.addReport)(response.data));
	            }).catch(function (error) {
	                console.log('Failed to submit report...', _extends({}, error));
	                _this3.setState({ submitting: false, errorMsg: error.response.data.output });
	            });
	        }

	        /*
	            
	            Faz dismiss do alert de erro em caso de insucesso.
	        */

	    }, {
	        key: 'resetStateOrRedirect',
	        value: function resetStateOrRedirect() {
	            if (this.state.successMsg) {
	                this.onCancelClick();
	            } else this.setState({ successMsg: '', errorMsg: '' });
	        }
	    }, {
	        key: 'getSuggestions',
	        value: function getSuggestions(reportType) {
	            var _this4 = this;

	            var _props$newReportLocat = this.props.newReportLocation.coords,
	                lat = _props$newReportLocat.lat,
	                lng = _props$newReportLocat.lng;

	            var data = {
	                token: this.props.token.token,
	                type: reportType,
	                lat: lat,
	                lng: lng
	            };

	            _axios2.default.post(_config2.default + '/report/suggestions', data).then(function (response) {
	                var suggestions = response.data || [];
	                console.log('SUGGESTIONS:', suggestions);
	                _this4.setState({ suggestions: suggestions });
	                _this4.props.dispatch((0, _actions_reports.compareSuggestions)(suggestions));
	            }).catch(function (error) {
	                console.log('Failed to get suggestions...', error);
	            });
	        }
	    }]);

	    return ReportPage;
	}(_react.Component);

	function mapStateToProps(store) {
	    return {
	        token: store.token,
	        newReportLocation: store.newReportLocation,
	        newReportTypes: store.newReportTypes
	    };
	}

	exports.default = (0, _reactRedux.connect)(mapStateToProps)(ReportPage);

/***/ }),
/* 331 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _reduxForm = __webpack_require__(332);

	var _suggestionList = __webpack_require__(566);

	var _suggestionList2 = _interopRequireDefault(_suggestionList);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // 3rd Party


	// Internal Modules


	/*

	*/
	var AddReportForm = function (_Component) {
	    _inherits(AddReportForm, _Component);

	    function AddReportForm() {
	        _classCallCheck(this, AddReportForm);

	        return _possibleConstructorReturn(this, (AddReportForm.__proto__ || Object.getPrototypeOf(AddReportForm)).apply(this, arguments));
	    }

	    _createClass(AddReportForm, [{
	        key: 'adaptFileEventToValue',
	        value: function adaptFileEventToValue(delegate) {
	            var _this2 = this;

	            return function (event) {
	                delegate(event.target.files[0]);
	                var reader = new FileReader();
	                //reader.onload = (e) => this.props.imgPreview.src = e.target.result;
	                reader.onload = function (e) {
	                    return _this2.props.onImageSelect(e.target.result);
	                };
	                reader.readAsDataURL(event.target.files[0]);
	            };
	        }
	    }, {
	        key: 'renderFileInput',
	        value: function renderFileInput(_ref) {
	            var _ref$input = _ref.input,
	                omitValue = _ref$input.value,
	                onChange = _ref$input.onChange,
	                onBlur = _ref$input.onBlur,
	                inputProps = _objectWithoutProperties(_ref$input, ['value', 'onChange', 'onBlur']),
	                omitMeta = _ref.meta,
	                props = _objectWithoutProperties(_ref, ['input', 'meta']);

	            return _react2.default.createElement(
	                'div',
	                { className: 'form-group' },
	                _react2.default.createElement(
	                    'div',
	                    { className: 'input-group input-group-lg' },
	                    _react2.default.createElement(
	                        'label',
	                        { htmlFor: 'image', className: 'form-control', id: 'image-input-label' },
	                        _react2.default.createElement(
	                            'span',
	                            { className: 'text-muted' },
	                            omitValue ? omitValue.name : 'Escolha uma foto...'
	                        ),
	                        _react2.default.createElement('i', { className: 'ion-camera' }),
	                        _react2.default.createElement('input', _extends({
	                            type: 'file',
	                            accept: 'image/*',
	                            id: 'image',
	                            className: 'd-none',
	                            onChange: this.adaptFileEventToValue(onChange),
	                            onBlur: this.adaptFileEventToValue(onBlur)
	                        }, inputProps, props))
	                    )
	                )
	            );
	        }
	    }, {
	        key: 'renderAddressField',
	        value: function renderAddressField(_ref2) {
	            var input = _ref2.input;

	            return _react2.default.createElement(
	                'div',
	                { className: 'form-group' },
	                _react2.default.createElement(
	                    'div',
	                    { className: 'input-group input-group-lg' },
	                    _react2.default.createElement('input', _extends({
	                        disabled: true,
	                        className: 'form-control',
	                        type: 'text',
	                        placeholder: this.props.address
	                    }, input))
	                )
	            );
	        }
	    }, {
	        key: 'renderReportTypeSelect',
	        value: function renderReportTypeSelect(_ref3) {
	            var input = _ref3.input,
	                _ref3$meta = _ref3.meta,
	                touched = _ref3$meta.touched,
	                error = _ref3$meta.error;

	            return _react2.default.createElement(
	                'div',
	                { className: 'form-group' + (touched ? error ? ' has-danger' : ' has-success' : '') },
	                _react2.default.createElement(
	                    'div',
	                    { className: 'input-group input-group-lg' },
	                    _react2.default.createElement(
	                        'select',
	                        _extends({
	                            className: 'form-control' + (touched ? error ? ' form-control-danger' : ' form-control-success' : '')
	                        }, input, {
	                            onBlur: function onBlur() {
	                                input.onBlur(input.value);
	                            }
	                        }),
	                        _react2.default.createElement(
	                            'option',
	                            { value: 'Tipo de Ocorr\xEAncia', defaultValue: true },
	                            'Tipo de Ocorr\xEAncia'
	                        ),
	                        this.props.types.map(function (type) {
	                            return _react2.default.createElement(
	                                'option',
	                                { key: type.id, value: type.name },
	                                type.name
	                            );
	                        })
	                    )
	                ),
	                _react2.default.createElement(
	                    'small',
	                    { className: 'form-control-feedback' },
	                    touched ? error : ''
	                )
	            );
	        }
	    }, {
	        key: 'renderPrioritySelect',
	        value: function renderPrioritySelect(_ref4) {
	            var input = _ref4.input,
	                _ref4$meta = _ref4.meta,
	                touched = _ref4$meta.touched,
	                error = _ref4$meta.error;

	            return _react2.default.createElement(
	                'div',
	                { className: 'form-group' + (touched ? error ? ' has-danger' : ' has-success' : '') },
	                _react2.default.createElement(
	                    'div',
	                    { className: 'input-group input-group-lg' },
	                    _react2.default.createElement(
	                        'select',
	                        _extends({
	                            className: 'form-control' + (touched ? error ? ' form-control-danger' : ' form-control-success' : '')
	                        }, input),
	                        _react2.default.createElement(
	                            'option',
	                            { value: 'Prioridade', defaultValue: true },
	                            'Prioridade'
	                        ),
	                        _react2.default.createElement(
	                            'option',
	                            { value: '1' },
	                            '1'
	                        ),
	                        _react2.default.createElement(
	                            'option',
	                            { value: '2' },
	                            '2'
	                        ),
	                        _react2.default.createElement(
	                            'option',
	                            { value: '3' },
	                            '3'
	                        ),
	                        _react2.default.createElement(
	                            'option',
	                            { value: '4' },
	                            '4'
	                        ),
	                        _react2.default.createElement(
	                            'option',
	                            { value: '5' },
	                            '5'
	                        )
	                    )
	                ),
	                _react2.default.createElement(
	                    'small',
	                    { className: 'form-control-feedback' },
	                    touched ? error : ''
	                )
	            );
	        }
	    }, {
	        key: 'renderDescriptionField',
	        value: function renderDescriptionField(_ref5) {
	            var input = _ref5.input,
	                _ref5$meta = _ref5.meta,
	                touched = _ref5$meta.touched,
	                error = _ref5$meta.error;

	            return _react2.default.createElement(
	                'div',
	                { className: 'form-group' + (touched ? error ? ' has-danger' : ' has-success' : '') },
	                _react2.default.createElement(
	                    'div',
	                    { className: 'input-group input-group-lg' },
	                    _react2.default.createElement('textarea', _extends({
	                        className: 'form-control' + (touched ? error ? ' form-control-danger' : ' form-control-success' : ''),
	                        rows: '3',
	                        placeholder: 'Insira uma descri\xE7\xE3o para a ocorr\xEAncia...'
	                    }, input))
	                ),
	                _react2.default.createElement(
	                    'small',
	                    { className: 'form-control-feedback' },
	                    touched ? error : ''
	                )
	            );
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            var _this3 = this;

	            // reduxForm injected props
	            var _props = this.props,
	                handleSubmit = _props.handleSubmit,
	                pristine = _props.pristine,
	                invalid = _props.invalid,
	                submitting = _props.submitting;


	            return _react2.default.createElement(
	                'form',
	                { onSubmit: handleSubmit(this.props.onSubmit) },
	                _react2.default.createElement(_reduxForm.Field, {
	                    name: 'image',
	                    component: this.renderFileInput.bind(this)
	                }),
	                _react2.default.createElement(_reduxForm.Field, {
	                    name: 'addressAsStreet',
	                    component: this.renderAddressField.bind(this)
	                }),
	                _react2.default.createElement(_reduxForm.Field, {
	                    name: 'type',
	                    onChange: function onChange(event) {
	                        return _this3.props.getSuggestions(event.target.value);
	                    },
	                    component: this.renderReportTypeSelect.bind(this)
	                }),
	                this.props.suggestions.length > 0 && _react2.default.createElement(_suggestionList2.default, { suggestions: this.props.suggestions }),
	                _react2.default.createElement(_reduxForm.Field, {
	                    name: 'priority',
	                    component: this.renderPrioritySelect.bind(this)
	                }),
	                _react2.default.createElement(_reduxForm.Field, {
	                    name: 'description',
	                    component: this.renderDescriptionField.bind(this)
	                }),
	                _react2.default.createElement(
	                    'button',
	                    {
	                        type: 'submit',
	                        className: 'btn btn-success form-control mt-2',
	                        disabled: pristine || submitting
	                    },
	                    'Registar'
	                )
	            );
	        }
	    }]);

	    return AddReportForm;
	}(_react.Component);

	// Função onde acontece toda a validação dos campos do form.


	function validate(values) {
	    var errors = {};

	    if (!values.type || values.type === 'Tipo de Ocorrência') {
	        errors.type = 'Obrigatório';
	    }

	    if (!values.priority || values.priority === 'Prioridade') {
	        errors.priority = 'Obrigatório';
	    }

	    return errors;
	}

	// Liga o formulário ao redux-form e, portanto, à store do Redux.
	exports.default = (0, _reduxForm.reduxForm)({
	    form: 'AddReport',
	    validate: validate
	})(AddReportForm);

/***/ }),
/* 332 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.untouch = exports.unregisterField = exports.touch = exports.submit = exports.stopSubmit = exports.stopAsyncValidation = exports.startSubmit = exports.startAsyncValidation = exports.setSubmitSucceeded = exports.setSubmitFailed = exports.reset = exports.registerField = exports.initialize = exports.focus = exports.destroy = exports.clearSubmitErrors = exports.change = exports.blur = exports.autofill = exports.arrayUnshift = exports.arraySwap = exports.arraySplice = exports.arrayShift = exports.arrayRemoveAll = exports.arrayRemove = exports.arrayPush = exports.arrayPop = exports.arrayMove = exports.arrayInsert = exports.actions = exports.actionTypes = exports.values = exports.reducer = exports.reduxForm = exports.hasSubmitFailed = exports.hasSubmitSucceeded = exports.isSubmitting = exports.isValid = exports.isPristine = exports.isInvalid = exports.isDirty = exports.getFormSubmitErrors = exports.getFormSyncWarnings = exports.getFormAsyncErrors = exports.getFormMeta = exports.getFormSyncErrors = exports.getFormInitialValues = exports.getFormValues = exports.getFormNames = exports.formValues = exports.formValueSelector = exports.FieldArray = exports.Fields = exports.Field = exports.formPropTypes = exports.fieldPropTypes = exports.fieldMetaPropTypes = exports.fieldInputPropTypes = exports.propTypes = exports.SubmissionError = exports.FormSection = exports.Form = exports.defaultShouldValidate = exports.defaultShouldAsyncValidate = undefined;

	var _defaultShouldAsyncValidate = __webpack_require__(333);

	Object.defineProperty(exports, 'defaultShouldAsyncValidate', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_defaultShouldAsyncValidate).default;
	  }
	});

	var _defaultShouldValidate = __webpack_require__(334);

	Object.defineProperty(exports, 'defaultShouldValidate', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_defaultShouldValidate).default;
	  }
	});

	var _Form = __webpack_require__(335);

	Object.defineProperty(exports, 'Form', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_Form).default;
	  }
	});

	var _FormSection = __webpack_require__(336);

	Object.defineProperty(exports, 'FormSection', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_FormSection).default;
	  }
	});

	var _SubmissionError = __webpack_require__(338);

	Object.defineProperty(exports, 'SubmissionError', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_SubmissionError).default;
	  }
	});

	var _propTypes = __webpack_require__(340);

	Object.defineProperty(exports, 'propTypes', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_propTypes).default;
	  }
	});
	Object.defineProperty(exports, 'fieldInputPropTypes', {
	  enumerable: true,
	  get: function get() {
	    return _propTypes.fieldInputPropTypes;
	  }
	});
	Object.defineProperty(exports, 'fieldMetaPropTypes', {
	  enumerable: true,
	  get: function get() {
	    return _propTypes.fieldMetaPropTypes;
	  }
	});
	Object.defineProperty(exports, 'fieldPropTypes', {
	  enumerable: true,
	  get: function get() {
	    return _propTypes.fieldPropTypes;
	  }
	});
	Object.defineProperty(exports, 'formPropTypes', {
	  enumerable: true,
	  get: function get() {
	    return _propTypes.formPropTypes;
	  }
	});

	var _Field = __webpack_require__(341);

	Object.defineProperty(exports, 'Field', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_Field).default;
	  }
	});

	var _Fields = __webpack_require__(457);

	Object.defineProperty(exports, 'Fields', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_Fields).default;
	  }
	});

	var _FieldArray = __webpack_require__(460);

	Object.defineProperty(exports, 'FieldArray', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_FieldArray).default;
	  }
	});

	var _formValueSelector = __webpack_require__(488);

	Object.defineProperty(exports, 'formValueSelector', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_formValueSelector).default;
	  }
	});

	var _formValues = __webpack_require__(490);

	Object.defineProperty(exports, 'formValues', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_formValues).default;
	  }
	});

	var _getFormNames = __webpack_require__(492);

	Object.defineProperty(exports, 'getFormNames', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_getFormNames).default;
	  }
	});

	var _getFormValues = __webpack_require__(494);

	Object.defineProperty(exports, 'getFormValues', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_getFormValues).default;
	  }
	});

	var _getFormInitialValues = __webpack_require__(496);

	Object.defineProperty(exports, 'getFormInitialValues', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_getFormInitialValues).default;
	  }
	});

	var _getFormSyncErrors = __webpack_require__(498);

	Object.defineProperty(exports, 'getFormSyncErrors', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_getFormSyncErrors).default;
	  }
	});

	var _getFormMeta = __webpack_require__(500);

	Object.defineProperty(exports, 'getFormMeta', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_getFormMeta).default;
	  }
	});

	var _getFormAsyncErrors = __webpack_require__(502);

	Object.defineProperty(exports, 'getFormAsyncErrors', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_getFormAsyncErrors).default;
	  }
	});

	var _getFormSyncWarnings = __webpack_require__(504);

	Object.defineProperty(exports, 'getFormSyncWarnings', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_getFormSyncWarnings).default;
	  }
	});

	var _getFormSubmitErrors = __webpack_require__(506);

	Object.defineProperty(exports, 'getFormSubmitErrors', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_getFormSubmitErrors).default;
	  }
	});

	var _isDirty = __webpack_require__(508);

	Object.defineProperty(exports, 'isDirty', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_isDirty).default;
	  }
	});

	var _isInvalid = __webpack_require__(511);

	Object.defineProperty(exports, 'isInvalid', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_isInvalid).default;
	  }
	});

	var _isPristine = __webpack_require__(515);

	Object.defineProperty(exports, 'isPristine', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_isPristine).default;
	  }
	});

	var _isValid = __webpack_require__(516);

	Object.defineProperty(exports, 'isValid', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_isValid).default;
	  }
	});

	var _isSubmitting = __webpack_require__(517);

	Object.defineProperty(exports, 'isSubmitting', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_isSubmitting).default;
	  }
	});

	var _hasSubmitSucceeded = __webpack_require__(519);

	Object.defineProperty(exports, 'hasSubmitSucceeded', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_hasSubmitSucceeded).default;
	  }
	});

	var _hasSubmitFailed = __webpack_require__(521);

	Object.defineProperty(exports, 'hasSubmitFailed', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_hasSubmitFailed).default;
	  }
	});

	var _reduxForm = __webpack_require__(523);

	Object.defineProperty(exports, 'reduxForm', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_reduxForm).default;
	  }
	});

	var _reducer = __webpack_require__(561);

	Object.defineProperty(exports, 'reducer', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_reducer).default;
	  }
	});

	var _values = __webpack_require__(564);

	Object.defineProperty(exports, 'values', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_values).default;
	  }
	});

	var _actions2 = __webpack_require__(553);

	var _actions = _interopRequireWildcard(_actions2);

	var _actionTypes2 = __webpack_require__(554);

	var _actionTypes = _interopRequireWildcard(_actionTypes2);

	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var actionTypes = exports.actionTypes = _actionTypes;
	var actions = exports.actions = _actions;
	var arrayInsert = _actions.arrayInsert,
	    arrayMove = _actions.arrayMove,
	    arrayPop = _actions.arrayPop,
	    arrayPush = _actions.arrayPush,
	    arrayRemove = _actions.arrayRemove,
	    arrayRemoveAll = _actions.arrayRemoveAll,
	    arrayShift = _actions.arrayShift,
	    arraySplice = _actions.arraySplice,
	    arraySwap = _actions.arraySwap,
	    arrayUnshift = _actions.arrayUnshift,
	    autofill = _actions.autofill,
	    blur = _actions.blur,
	    change = _actions.change,
	    clearSubmitErrors = _actions.clearSubmitErrors,
	    destroy = _actions.destroy,
	    focus = _actions.focus,
	    initialize = _actions.initialize,
	    registerField = _actions.registerField,
	    reset = _actions.reset,
	    setSubmitFailed = _actions.setSubmitFailed,
	    setSubmitSucceeded = _actions.setSubmitSucceeded,
	    startAsyncValidation = _actions.startAsyncValidation,
	    startSubmit = _actions.startSubmit,
	    stopAsyncValidation = _actions.stopAsyncValidation,
	    stopSubmit = _actions.stopSubmit,
	    submit = _actions.submit,
	    touch = _actions.touch,
	    unregisterField = _actions.unregisterField,
	    untouch = _actions.untouch;
	exports.arrayInsert = arrayInsert;
	exports.arrayMove = arrayMove;
	exports.arrayPop = arrayPop;
	exports.arrayPush = arrayPush;
	exports.arrayRemove = arrayRemove;
	exports.arrayRemoveAll = arrayRemoveAll;
	exports.arrayShift = arrayShift;
	exports.arraySplice = arraySplice;
	exports.arraySwap = arraySwap;
	exports.arrayUnshift = arrayUnshift;
	exports.autofill = autofill;
	exports.blur = blur;
	exports.change = change;
	exports.clearSubmitErrors = clearSubmitErrors;
	exports.destroy = destroy;
	exports.focus = focus;
	exports.initialize = initialize;
	exports.registerField = registerField;
	exports.reset = reset;
	exports.setSubmitFailed = setSubmitFailed;
	exports.setSubmitSucceeded = setSubmitSucceeded;
	exports.startAsyncValidation = startAsyncValidation;
	exports.startSubmit = startSubmit;
	exports.stopAsyncValidation = stopAsyncValidation;
	exports.stopSubmit = stopSubmit;
	exports.submit = submit;
	exports.touch = touch;
	exports.unregisterField = unregisterField;
	exports.untouch = untouch;

/***/ }),
/* 333 */
/***/ (function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	var defaultShouldAsyncValidate = function defaultShouldAsyncValidate(_ref) {
	  var initialized = _ref.initialized,
	      trigger = _ref.trigger,
	      pristine = _ref.pristine,
	      syncValidationPasses = _ref.syncValidationPasses;

	  if (!syncValidationPasses) {
	    return false;
	  }
	  switch (trigger) {
	    case 'blur':
	      // blurring
	      return true;
	    case 'submit':
	      // submitting, so only async validate if form is dirty or was never initialized
	      // conversely, DON'T async validate if the form is pristine just as it was initialized
	      return !pristine || !initialized;
	    default:
	      return false;
	  }
	};

	exports.default = defaultShouldAsyncValidate;

/***/ }),
/* 334 */
/***/ (function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	var defaultShouldValidate = function defaultShouldValidate(_ref) {
	  var values = _ref.values,
	      nextProps = _ref.nextProps,
	      initialRender = _ref.initialRender,
	      lastFieldValidatorKeys = _ref.lastFieldValidatorKeys,
	      fieldValidatorKeys = _ref.fieldValidatorKeys,
	      structure = _ref.structure;

	  if (initialRender) {
	    return true;
	  }
	  return !structure.deepEqual(values, nextProps.values) || !structure.deepEqual(lastFieldValidatorKeys, fieldValidatorKeys);
	};

	exports.default = defaultShouldValidate;

/***/ }),
/* 335 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(205);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var Form = function (_Component) {
	  _inherits(Form, _Component);

	  function Form(props, context) {
	    _classCallCheck(this, Form);

	    var _this = _possibleConstructorReturn(this, (Form.__proto__ || Object.getPrototypeOf(Form)).call(this, props, context));

	    if (!context._reduxForm) {
	      throw new Error('Form must be inside a component decorated with reduxForm()');
	    }
	    return _this;
	  }

	  _createClass(Form, [{
	    key: 'componentWillMount',
	    value: function componentWillMount() {
	      this.context._reduxForm.registerInnerOnSubmit(this.props.onSubmit);
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      return _react2.default.createElement('form', this.props);
	    }
	  }]);

	  return Form;
	}(_react.Component);

	Form.propTypes = {
	  onSubmit: _propTypes2.default.func.isRequired
	};
	Form.contextTypes = {
	  _reduxForm: _propTypes2.default.object
	};

	exports.default = Form;

/***/ }),
/* 336 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(205);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _prefixName = __webpack_require__(337);

	var _prefixName2 = _interopRequireDefault(_prefixName);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var FormSection = function (_Component) {
	  _inherits(FormSection, _Component);

	  function FormSection(props, context) {
	    _classCallCheck(this, FormSection);

	    var _this = _possibleConstructorReturn(this, (FormSection.__proto__ || Object.getPrototypeOf(FormSection)).call(this, props, context));

	    if (!context._reduxForm) {
	      throw new Error('FormSection must be inside a component decorated with reduxForm()');
	    }
	    return _this;
	  }

	  _createClass(FormSection, [{
	    key: 'getChildContext',
	    value: function getChildContext() {
	      var context = this.context,
	          name = this.props.name;

	      return {
	        _reduxForm: _extends({}, context._reduxForm, {
	          sectionPrefix: (0, _prefixName2.default)(context, name)
	        })
	      };
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _props = this.props,
	          children = _props.children,
	          name = _props.name,
	          component = _props.component,
	          rest = _objectWithoutProperties(_props, ['children', 'name', 'component']);

	      if (_react2.default.isValidElement(children)) {
	        return children;
	      }

	      return (0, _react.createElement)(component, _extends({}, rest, {
	        children: children
	      }));
	    }
	  }]);

	  return FormSection;
	}(_react.Component);

	FormSection.propTypes = {
	  name: _propTypes2.default.string.isRequired,
	  component: _propTypes2.default.oneOfType([_propTypes2.default.func, _propTypes2.default.string])
	};

	FormSection.defaultProps = {
	  component: 'div'
	};

	FormSection.childContextTypes = {
	  _reduxForm: _propTypes2.default.object.isRequired
	};

	FormSection.contextTypes = {
	  _reduxForm: _propTypes2.default.object
	};

	exports.default = FormSection;

/***/ }),
/* 337 */
/***/ (function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = formatName;
	function formatName(context, name) {
	  var sectionPrefix = context._reduxForm.sectionPrefix;

	  return !sectionPrefix ? name : sectionPrefix + "." + name;
	}

/***/ }),
/* 338 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _es6Error = __webpack_require__(339);

	var _es6Error2 = _interopRequireDefault(_es6Error);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var SubmissionError = function (_ExtendableError) {
	  _inherits(SubmissionError, _ExtendableError);

	  function SubmissionError(errors) {
	    _classCallCheck(this, SubmissionError);

	    var _this = _possibleConstructorReturn(this, (SubmissionError.__proto__ || Object.getPrototypeOf(SubmissionError)).call(this, 'Submit Validation Failed'));

	    _this.errors = errors;
	    return _this;
	  }

	  return SubmissionError;
	}(_es6Error2.default);

	exports.default = SubmissionError;

/***/ }),
/* 339 */
/***/ (function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	function _extendableBuiltin(cls) {
	  function ExtendableBuiltin() {
	    cls.apply(this, arguments);
	  }

	  ExtendableBuiltin.prototype = Object.create(cls.prototype, {
	    constructor: {
	      value: cls,
	      enumerable: false,
	      writable: true,
	      configurable: true
	    }
	  });

	  if (Object.setPrototypeOf) {
	    Object.setPrototypeOf(ExtendableBuiltin, cls);
	  } else {
	    ExtendableBuiltin.__proto__ = cls;
	  }

	  return ExtendableBuiltin;
	}

	var ExtendableError = function (_extendableBuiltin2) {
	  _inherits(ExtendableError, _extendableBuiltin2);

	  function ExtendableError() {
	    var message = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';

	    _classCallCheck(this, ExtendableError);

	    // extending Error is weird and does not propagate `message`
	    var _this = _possibleConstructorReturn(this, (ExtendableError.__proto__ || Object.getPrototypeOf(ExtendableError)).call(this, message));

	    Object.defineProperty(_this, 'message', {
	      configurable: true,
	      enumerable: false,
	      value: message,
	      writable: true
	    });

	    Object.defineProperty(_this, 'name', {
	      configurable: true,
	      enumerable: false,
	      value: _this.constructor.name,
	      writable: true
	    });

	    if (Error.hasOwnProperty('captureStackTrace')) {
	      Error.captureStackTrace(_this, _this.constructor);
	      return _possibleConstructorReturn(_this);
	    }

	    Object.defineProperty(_this, 'stack', {
	      configurable: true,
	      enumerable: false,
	      value: new Error(message).stack,
	      writable: true
	    });
	    return _this;
	  }

	  return ExtendableError;
	}(_extendableBuiltin(Error));

	exports.default = ExtendableError;
	module.exports = exports['default'];


/***/ }),
/* 340 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.fieldPropTypes = exports.fieldMetaPropTypes = exports.fieldInputPropTypes = exports.formPropTypes = undefined;

	var _propTypes = __webpack_require__(205);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var any = _propTypes2.default.any,
	    bool = _propTypes2.default.bool,
	    func = _propTypes2.default.func,
	    shape = _propTypes2.default.shape,
	    string = _propTypes2.default.string,
	    oneOfType = _propTypes2.default.oneOfType,
	    object = _propTypes2.default.object;
	var formPropTypes = exports.formPropTypes = {
	  // State:
	  anyTouched: bool.isRequired, // true if any of the fields have been marked as touched
	  asyncValidating: oneOfType([bool, string]).isRequired, // true if async validation is running, a string if a field triggered async validation
	  dirty: bool.isRequired, // true if any values are different from initialValues
	  error: any, // form-wide error from '_error' key in validation result
	  form: string.isRequired, // the name of the form
	  invalid: bool.isRequired, // true if there are any validation errors
	  initialized: bool.isRequired, // true if the form has been initialized
	  initialValues: object, // the initialValues object passed to reduxForm
	  pristine: bool.isRequired, // true if the values are the same as initialValues
	  pure: bool.isRequired, // if true, implements shouldComponentUpdate
	  submitting: bool.isRequired, // true if the form is in the process of being submitted
	  submitFailed: bool.isRequired, // true if the form was submitted and failed for any reason
	  submitSucceeded: bool.isRequired, // true if the form was successfully submitted
	  valid: bool.isRequired, // true if there are no validation errors
	  warning: any, // form-wide warning from '_warning' key in validation result
	  // Actions:
	  array: shape({
	    insert: func.isRequired, // function to insert a value into an array field
	    move: func.isRequired, // function to move a value within an array field
	    pop: func.isRequired, // function to pop a value off of an array field
	    push: func.isRequired, // function to push a value onto an array field
	    remove: func.isRequired, // function to remove a value from an array field
	    removeAll: func.isRequired, // function to remove all the values from an array field
	    shift: func.isRequired, // function to shift a value out of an array field
	    splice: func.isRequired, // function to splice a value into an array field
	    swap: func.isRequired, // function to swap values in an array field
	    unshift: func.isRequired // function to unshift a value into an array field
	  }),
	  asyncValidate: func.isRequired, // function to trigger async validation
	  autofill: func.isRequired, // action to set a value of a field and mark it as autofilled
	  blur: func.isRequired, // action to mark a field as blurred
	  change: func.isRequired, // action to change the value of a field
	  clearAsyncError: func.isRequired, // action to clear the async error of a field
	  destroy: func.isRequired, // action to destroy the form's data in Redux
	  dispatch: func.isRequired, // the Redux dispatch action
	  handleSubmit: func.isRequired, // function to submit the form
	  initialize: func.isRequired, // action to initialize form data
	  reset: func.isRequired, // action to reset the form data to previously initialized values
	  touch: func.isRequired, // action to mark fields as touched
	  submit: func.isRequired, // action to trigger a submission of the specified form
	  untouch: func.isRequired, // action to mark fields as untouched

	  // triggerSubmit
	  triggerSubmit: bool, // if true, submits the form on componentWillReceiveProps
	  clearSubmit: func.isRequired // called before a triggered submit, by default clears triggerSubmit
	};

	var fieldInputPropTypes = exports.fieldInputPropTypes = {
	  checked: bool,
	  name: string.isRequired,
	  onBlur: func.isRequired,
	  onChange: func.isRequired,
	  onDragStart: func.isRequired,
	  onDrop: func.isRequired,
	  onFocus: func.isRequired,
	  value: any
	};

	var fieldMetaPropTypes = exports.fieldMetaPropTypes = {
	  active: bool.isRequired,
	  asyncValidating: bool.isRequired,
	  autofilled: bool.isRequired,
	  dirty: bool.isRequired,
	  dispatch: func.isRequired,
	  error: string,
	  form: string.isRequired,
	  invalid: bool.isRequired,
	  pristine: bool.isRequired,
	  submitting: bool.isRequired,
	  submitFailed: bool.isRequired,
	  touched: bool.isRequired,
	  valid: bool.isRequired,
	  visited: bool.isRequired,
	  warning: string
	};

	var fieldPropTypes = exports.fieldPropTypes = {
	  input: shape(fieldInputPropTypes).isRequired,
	  meta: shape(fieldMetaPropTypes).isRequired,
	  custom: object.isRequired
	};

	exports.default = formPropTypes;

/***/ }),
/* 341 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createField = __webpack_require__(342);

	var _createField2 = _interopRequireDefault(_createField);

	var _plain = __webpack_require__(350);

	var _plain2 = _interopRequireDefault(_plain);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = (0, _createField2.default)(_plain2.default);

/***/ }),
/* 342 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(2);

	var _propTypes = __webpack_require__(205);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _invariant = __webpack_require__(198);

	var _invariant2 = _interopRequireDefault(_invariant);

	var _ConnectedField = __webpack_require__(343);

	var _ConnectedField2 = _interopRequireDefault(_ConnectedField);

	var _shallowCompare = __webpack_require__(456);

	var _shallowCompare2 = _interopRequireDefault(_shallowCompare);

	var _prefixName = __webpack_require__(337);

	var _prefixName2 = _interopRequireDefault(_prefixName);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var createField = function createField(_ref) {
	  var deepEqual = _ref.deepEqual,
	      getIn = _ref.getIn,
	      setIn = _ref.setIn,
	      toJS = _ref.toJS;

	  var ConnectedField = (0, _ConnectedField2.default)({
	    deepEqual: deepEqual,
	    getIn: getIn,
	    toJS: toJS
	  });

	  var Field = function (_Component) {
	    _inherits(Field, _Component);

	    function Field(props, context) {
	      _classCallCheck(this, Field);

	      var _this = _possibleConstructorReturn(this, (Field.__proto__ || Object.getPrototypeOf(Field)).call(this, props, context));

	      if (!context._reduxForm) {
	        throw new Error('Field must be inside a component decorated with reduxForm()');
	      }

	      _this.normalize = _this.normalize.bind(_this);
	      return _this;
	    }

	    _createClass(Field, [{
	      key: 'shouldComponentUpdate',
	      value: function shouldComponentUpdate(nextProps, nextState) {
	        return (0, _shallowCompare2.default)(this, nextProps, nextState);
	      }
	    }, {
	      key: 'componentWillMount',
	      value: function componentWillMount() {
	        var _this2 = this;

	        this.context._reduxForm.register(this.name, 'Field', function () {
	          return _this2.props.validate;
	        }, function () {
	          return _this2.props.warn;
	        });
	      }
	    }, {
	      key: 'componentWillReceiveProps',
	      value: function componentWillReceiveProps(nextProps) {
	        if (this.props.name !== nextProps.name) {
	          // unregister old name
	          this.context._reduxForm.unregister(this.name
	          // register new name
	          );this.context._reduxForm.register((0, _prefixName2.default)(this.context, nextProps.name), 'Field');
	        }
	      }
	    }, {
	      key: 'componentWillUnmount',
	      value: function componentWillUnmount() {
	        this.context._reduxForm.unregister(this.name);
	      }
	    }, {
	      key: 'getRenderedComponent',
	      value: function getRenderedComponent() {
	        (0, _invariant2.default)(this.props.withRef, 'If you want to access getRenderedComponent(), ' + 'you must specify a withRef prop to Field');
	        return this.refs.connected.getWrappedInstance().getRenderedComponent();
	      }
	    }, {
	      key: 'normalize',
	      value: function normalize(name, value) {
	        var normalize = this.props.normalize;

	        if (!normalize) {
	          return value;
	        }
	        var previousValues = this.context._reduxForm.getValues();
	        var previousValue = this.value;
	        var nextValues = setIn(previousValues, name, value);
	        return normalize(value, previousValue, nextValues, previousValues);
	      }
	    }, {
	      key: 'render',
	      value: function render() {
	        return (0, _react.createElement)(ConnectedField, _extends({}, this.props, {
	          name: this.name,
	          normalize: this.normalize,
	          _reduxForm: this.context._reduxForm,
	          ref: 'connected'
	        }));
	      }
	    }, {
	      key: 'name',
	      get: function get() {
	        return (0, _prefixName2.default)(this.context, this.props.name);
	      }
	    }, {
	      key: 'dirty',
	      get: function get() {
	        return !this.pristine;
	      }
	    }, {
	      key: 'pristine',
	      get: function get() {
	        return this.refs.connected.getWrappedInstance().isPristine();
	      }
	    }, {
	      key: 'value',
	      get: function get() {
	        return this.refs.connected && this.refs.connected.getWrappedInstance().getValue();
	      }
	    }]);

	    return Field;
	  }(_react.Component);

	  Field.propTypes = {
	    name: _propTypes2.default.string.isRequired,
	    component: _propTypes2.default.oneOfType([_propTypes2.default.func, _propTypes2.default.string]).isRequired,
	    format: _propTypes2.default.func,
	    normalize: _propTypes2.default.func,
	    onBlur: _propTypes2.default.func,
	    onChange: _propTypes2.default.func,
	    onFocus: _propTypes2.default.func,
	    onDragStart: _propTypes2.default.func,
	    onDrop: _propTypes2.default.func,
	    parse: _propTypes2.default.func,
	    props: _propTypes2.default.object,
	    validate: _propTypes2.default.oneOfType([_propTypes2.default.func, _propTypes2.default.arrayOf(_propTypes2.default.func)]),
	    warn: _propTypes2.default.oneOfType([_propTypes2.default.func, _propTypes2.default.arrayOf(_propTypes2.default.func)]),
	    withRef: _propTypes2.default.bool
	  };
	  Field.contextTypes = {
	    _reduxForm: _propTypes2.default.object
	  };

	  return Field;
	};

	exports.default = createField;

/***/ }),
/* 343 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	var _react = __webpack_require__(2);

	var _propTypes = __webpack_require__(205);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _reactRedux = __webpack_require__(160);

	var _createFieldProps2 = __webpack_require__(344);

	var _createFieldProps3 = _interopRequireDefault(_createFieldProps2);

	var _onChangeValue = __webpack_require__(345);

	var _onChangeValue2 = _interopRequireDefault(_onChangeValue);

	var _eventConsts = __webpack_require__(349);

	var _plain = __webpack_require__(350);

	var _plain2 = _interopRequireDefault(_plain);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var propsToNotUpdateFor = ['_reduxForm'];

	var isObject = function isObject(entity) {
	  return entity && (typeof entity === 'undefined' ? 'undefined' : _typeof(entity)) === 'object';
	};

	var isFunction = function isFunction(entity) {
	  return entity && typeof entity === 'function';
	};

	var eventPreventDefault = function eventPreventDefault(event) {
	  if (isObject(event) && isFunction(event.preventDefault)) {
	    event.preventDefault();
	  }
	};

	var eventDataTransferGetData = function eventDataTransferGetData(event, key) {
	  if (isObject(event) && isObject(event.dataTransfer) && isFunction(event.dataTransfer.getData)) {
	    return event.dataTransfer.getData(key);
	  }
	};

	var eventDataTransferSetData = function eventDataTransferSetData(event, key, value) {
	  if (isObject(event) && isObject(event.dataTransfer) && isFunction(event.dataTransfer.setData)) {
	    event.dataTransfer.setData(key, value);
	  }
	};

	var createConnectedField = function createConnectedField(_ref) {
	  var deepEqual = _ref.deepEqual,
	      getIn = _ref.getIn,
	      toJS = _ref.toJS;

	  var getSyncError = function getSyncError(syncErrors, name) {
	    var error = _plain2.default.getIn(syncErrors, name
	    // Because the error for this field might not be at a level in the error structure where
	    // it can be set directly, it might need to be unwrapped from the _error property
	    );return error && error._error ? error._error : error;
	  };

	  var getSyncWarning = function getSyncWarning(syncWarnings, name) {
	    var warning = getIn(syncWarnings, name
	    // Because the warning for this field might not be at a level in the warning structure where
	    // it can be set directly, it might need to be unwrapped from the _warning property
	    );return warning && warning._warning ? warning._warning : warning;
	  };

	  var ConnectedField = function (_Component) {
	    _inherits(ConnectedField, _Component);

	    function ConnectedField(props) {
	      _classCallCheck(this, ConnectedField);

	      var _this = _possibleConstructorReturn(this, (ConnectedField.__proto__ || Object.getPrototypeOf(ConnectedField)).call(this, props));

	      _this.handleChange = _this.handleChange.bind(_this);
	      _this.handleFocus = _this.handleFocus.bind(_this);
	      _this.handleBlur = _this.handleBlur.bind(_this);
	      _this.handleDragStart = _this.handleDragStart.bind(_this);
	      _this.handleDrop = _this.handleDrop.bind(_this);
	      return _this;
	    }

	    _createClass(ConnectedField, [{
	      key: 'shouldComponentUpdate',
	      value: function shouldComponentUpdate(nextProps) {
	        var _this2 = this;

	        var nextPropsKeys = Object.keys(nextProps);
	        var thisPropsKeys = Object.keys(this.props);
	        return nextPropsKeys.length !== thisPropsKeys.length || nextPropsKeys.some(function (prop) {
	          return !~propsToNotUpdateFor.indexOf(prop) && !deepEqual(_this2.props[prop], nextProps[prop]);
	        });
	      }
	    }, {
	      key: 'isPristine',
	      value: function isPristine() {
	        return this.props.pristine;
	      }
	    }, {
	      key: 'getValue',
	      value: function getValue() {
	        return this.props.value;
	      }
	    }, {
	      key: 'getRenderedComponent',
	      value: function getRenderedComponent() {
	        return this.refs.renderedComponent;
	      }
	    }, {
	      key: 'handleChange',
	      value: function handleChange(event) {
	        var _props = this.props,
	            name = _props.name,
	            dispatch = _props.dispatch,
	            parse = _props.parse,
	            normalize = _props.normalize,
	            onChange = _props.onChange,
	            _reduxForm = _props._reduxForm,
	            previousValue = _props.value;

	        var newValue = (0, _onChangeValue2.default)(event, { name: name, parse: parse, normalize: normalize });

	        var defaultPrevented = false;
	        if (onChange) {
	          onChange(_extends({}, event, {
	            preventDefault: function preventDefault() {
	              defaultPrevented = true;
	              return eventPreventDefault(event);
	            }
	          }), newValue, previousValue);
	        }
	        if (!defaultPrevented) {
	          // dispatch change action
	          dispatch(_reduxForm.change(name, newValue));
	        }
	      }
	    }, {
	      key: 'handleFocus',
	      value: function handleFocus(event) {
	        var _props2 = this.props,
	            name = _props2.name,
	            dispatch = _props2.dispatch,
	            onFocus = _props2.onFocus,
	            _reduxForm = _props2._reduxForm;


	        var defaultPrevented = false;
	        if (onFocus) {
	          onFocus(_extends({}, event, {
	            preventDefault: function preventDefault() {
	              defaultPrevented = true;
	              return eventPreventDefault(event);
	            }
	          }));
	        }

	        if (!defaultPrevented) {
	          dispatch(_reduxForm.focus(name));
	        }
	      }
	    }, {
	      key: 'handleBlur',
	      value: function handleBlur(event) {
	        var _props3 = this.props,
	            name = _props3.name,
	            dispatch = _props3.dispatch,
	            parse = _props3.parse,
	            normalize = _props3.normalize,
	            onBlur = _props3.onBlur,
	            _reduxForm = _props3._reduxForm,
	            _value = _props3._value,
	            previousValue = _props3.value;

	        var newValue = (0, _onChangeValue2.default)(event, { name: name, parse: parse, normalize: normalize }

	        // for checkbox and radio, if the value property of checkbox or radio equals
	        // the value passed by blur event, then fire blur action with previousValue.
	        );if (newValue === _value && _value !== undefined) {
	          newValue = previousValue;
	        }

	        var defaultPrevented = false;
	        if (onBlur) {
	          onBlur(_extends({}, event, {
	            preventDefault: function preventDefault() {
	              defaultPrevented = true;
	              return eventPreventDefault(event);
	            }
	          }), newValue, previousValue);
	        }

	        if (!defaultPrevented) {
	          // dispatch blur action
	          dispatch(_reduxForm.blur(name, newValue)

	          // call post-blur callback
	          );if (_reduxForm.asyncValidate) {
	            _reduxForm.asyncValidate(name, newValue);
	          }
	        }
	      }
	    }, {
	      key: 'handleDragStart',
	      value: function handleDragStart(event) {
	        var _props4 = this.props,
	            onDragStart = _props4.onDragStart,
	            value = _props4.value;

	        eventDataTransferSetData(event, _eventConsts.dataKey, value == null ? '' : value);

	        if (onDragStart) {
	          onDragStart(event);
	        }
	      }
	    }, {
	      key: 'handleDrop',
	      value: function handleDrop(event) {
	        var _props5 = this.props,
	            name = _props5.name,
	            dispatch = _props5.dispatch,
	            onDrop = _props5.onDrop,
	            _reduxForm = _props5._reduxForm,
	            previousValue = _props5.value;

	        var newValue = eventDataTransferGetData(event, _eventConsts.dataKey);

	        var defaultPrevented = false;
	        if (onDrop) {
	          onDrop(_extends({}, event, {
	            preventDefault: function preventDefault() {
	              defaultPrevented = true;
	              return eventPreventDefault(event);
	            }
	          }), newValue, previousValue);
	        }

	        if (!defaultPrevented) {
	          // dispatch change action
	          dispatch(_reduxForm.change(name, newValue));
	          eventPreventDefault(event);
	        }
	      }
	    }, {
	      key: 'render',
	      value: function render() {
	        var _props6 = this.props,
	            component = _props6.component,
	            withRef = _props6.withRef,
	            name = _props6.name,
	            _reduxForm = _props6._reduxForm,
	            normalize = _props6.normalize,
	            onBlur = _props6.onBlur,
	            onChange = _props6.onChange,
	            onFocus = _props6.onFocus,
	            onDragStart = _props6.onDragStart,
	            onDrop = _props6.onDrop,
	            rest = _objectWithoutProperties(_props6, ['component', 'withRef', 'name', '_reduxForm', 'normalize', 'onBlur', 'onChange', 'onFocus', 'onDragStart', 'onDrop']);

	        var _createFieldProps = (0, _createFieldProps3.default)({ getIn: getIn, toJS: toJS }, name, _extends({}, rest, {
	          form: _reduxForm.form,
	          onBlur: this.handleBlur,
	          onChange: this.handleChange,
	          onDrop: this.handleDrop,
	          onDragStart: this.handleDragStart,
	          onFocus: this.handleFocus
	        })),
	            custom = _createFieldProps.custom,
	            props = _objectWithoutProperties(_createFieldProps, ['custom']);

	        if (withRef) {
	          custom.ref = 'renderedComponent';
	        }
	        if (typeof component === 'string') {
	          var input = props.input,
	              meta = props.meta; // eslint-disable-line no-unused-vars
	          // flatten input into other props

	          return (0, _react.createElement)(component, _extends({}, input, custom));
	        } else {
	          return (0, _react.createElement)(component, _extends({}, props, custom));
	        }
	      }
	    }]);

	    return ConnectedField;
	  }(_react.Component);

	  ConnectedField.propTypes = {
	    component: _propTypes2.default.oneOfType([_propTypes2.default.func, _propTypes2.default.string]).isRequired,
	    props: _propTypes2.default.object
	  };

	  var connector = (0, _reactRedux.connect)(function (state, ownProps) {
	    var name = ownProps.name,
	        _ownProps$_reduxForm = ownProps._reduxForm,
	        initialValues = _ownProps$_reduxForm.initialValues,
	        getFormState = _ownProps$_reduxForm.getFormState;

	    var formState = getFormState(state);
	    var initialState = getIn(formState, 'initial.' + name);
	    var initial = initialState !== undefined ? initialState : initialValues && getIn(initialValues, name);
	    var value = getIn(formState, 'values.' + name);
	    var submitting = getIn(formState, 'submitting');
	    var syncError = getSyncError(getIn(formState, 'syncErrors'), name);
	    var syncWarning = getSyncWarning(getIn(formState, 'syncWarnings'), name);
	    var pristine = deepEqual(value, initial);
	    return {
	      asyncError: getIn(formState, 'asyncErrors.' + name),
	      asyncValidating: getIn(formState, 'asyncValidating') === name,
	      dirty: !pristine,
	      pristine: pristine,
	      state: getIn(formState, 'fields.' + name),
	      submitError: getIn(formState, 'submitErrors.' + name),
	      submitFailed: getIn(formState, 'submitFailed'),
	      submitting: submitting,
	      syncError: syncError,
	      syncWarning: syncWarning,
	      initial: initial,
	      value: value,
	      _value: ownProps.value // save value passed in (for checkboxes)
	    };
	  }, undefined, undefined, { withRef: true });
	  return connector(ConnectedField);
	};

	exports.default = createConnectedField;

/***/ }),
/* 344 */
/***/ (function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

	var processProps = function processProps(type, props, _value) {
	  var value = props.value;

	  if (type === 'checkbox') {
	    return _extends({}, props, {
	      checked: !!value
	    });
	  }
	  if (type === 'radio') {
	    return _extends({}, props, {
	      checked: value === _value,
	      value: _value
	    });
	  }
	  if (type === 'select-multiple') {
	    return _extends({}, props, {
	      value: value || []
	    });
	  }
	  if (type === 'file') {
	    return _extends({}, props, {
	      value: value || undefined
	    });
	  }
	  return props;
	};

	var createFieldProps = function createFieldProps(_ref2, name, _ref) {
	  var getIn = _ref2.getIn,
	      toJS = _ref2.toJS;

	  var asyncError = _ref.asyncError,
	      asyncValidating = _ref.asyncValidating,
	      onBlur = _ref.onBlur,
	      onChange = _ref.onChange,
	      onDrop = _ref.onDrop,
	      onDragStart = _ref.onDragStart,
	      dirty = _ref.dirty,
	      dispatch = _ref.dispatch,
	      onFocus = _ref.onFocus,
	      form = _ref.form,
	      format = _ref.format,
	      initial = _ref.initial,
	      parse = _ref.parse,
	      pristine = _ref.pristine,
	      props = _ref.props,
	      state = _ref.state,
	      submitError = _ref.submitError,
	      submitFailed = _ref.submitFailed,
	      submitting = _ref.submitting,
	      syncError = _ref.syncError,
	      syncWarning = _ref.syncWarning,
	      validate = _ref.validate,
	      value = _ref.value,
	      _value = _ref._value,
	      warn = _ref.warn,
	      custom = _objectWithoutProperties(_ref, ['asyncError', 'asyncValidating', 'onBlur', 'onChange', 'onDrop', 'onDragStart', 'dirty', 'dispatch', 'onFocus', 'form', 'format', 'initial', 'parse', 'pristine', 'props', 'state', 'submitError', 'submitFailed', 'submitting', 'syncError', 'syncWarning', 'validate', 'value', '_value', 'warn']);

	  var error = syncError || asyncError || submitError;
	  var warning = syncWarning;

	  var formatFieldValue = function formatFieldValue(value, format) {
	    if (format === null) {
	      return value;
	    }
	    var defaultFormattedValue = value == null ? '' : value;
	    return format ? format(value, name) : defaultFormattedValue;
	  };

	  var formattedFieldValue = formatFieldValue(value, format);

	  return {
	    input: processProps(custom.type, {
	      name: name,
	      onBlur: onBlur,
	      onChange: onChange,
	      onDragStart: onDragStart,
	      onDrop: onDrop,
	      onFocus: onFocus,
	      value: formattedFieldValue
	    }, _value),
	    meta: _extends({}, toJS(state), {
	      active: !!(state && getIn(state, 'active')),
	      asyncValidating: asyncValidating,
	      autofilled: !!(state && getIn(state, 'autofilled')),
	      dirty: dirty,
	      dispatch: dispatch,
	      error: error,
	      form: form,
	      initial: initial,
	      warning: warning,
	      invalid: !!error,
	      pristine: pristine,
	      submitting: !!submitting,
	      submitFailed: !!submitFailed,
	      touched: !!(state && getIn(state, 'touched')),
	      valid: !error,
	      visited: !!(state && getIn(state, 'visited'))
	    }),
	    custom: _extends({}, custom, props)
	  };
	};

	exports.default = createFieldProps;

/***/ }),
/* 345 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _getValue = __webpack_require__(346);

	var _getValue2 = _interopRequireDefault(_getValue);

	var _isReactNative = __webpack_require__(348);

	var _isReactNative2 = _interopRequireDefault(_isReactNative);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var onChangeValue = function onChangeValue(event, _ref) {
	  var name = _ref.name,
	      parse = _ref.parse,
	      normalize = _ref.normalize;

	  // read value from input
	  var value = (0, _getValue2.default)(event, _isReactNative2.default

	  // parse value if we have a parser
	  );if (parse) {
	    value = parse(value, name);
	  }

	  // normalize value
	  if (normalize) {
	    value = normalize(name, value);
	  }

	  return value;
	};

	exports.default = onChangeValue;

/***/ }),
/* 346 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _isEvent = __webpack_require__(347);

	var _isEvent2 = _interopRequireDefault(_isEvent);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var getSelectedValues = function getSelectedValues(options) {
	  var result = [];
	  if (options) {
	    for (var index = 0; index < options.length; index++) {
	      var option = options[index];
	      if (option.selected) {
	        result.push(option.value);
	      }
	    }
	  }
	  return result;
	};

	var getValue = function getValue(event, isReactNative) {
	  if ((0, _isEvent2.default)(event)) {
	    if (!isReactNative && event.nativeEvent && event.nativeEvent.text !== undefined) {
	      return event.nativeEvent.text;
	    }
	    if (isReactNative && event.nativeEvent !== undefined) {
	      return event.nativeEvent.text;
	    }
	    var _event$target = event.target,
	        type = _event$target.type,
	        value = _event$target.value,
	        checked = _event$target.checked,
	        files = _event$target.files,
	        dataTransfer = event.dataTransfer;

	    if (type === 'checkbox') {
	      return checked || '';
	    }
	    if (type === 'file') {
	      return files || dataTransfer && dataTransfer.files;
	    }
	    if (type === 'select-multiple') {
	      return getSelectedValues(event.target.options);
	    }
	    return value;
	  }
	  return event;
	};

	exports.default = getValue;

/***/ }),
/* 347 */
/***/ (function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	var isEvent = function isEvent(candidate) {
	  return !!(candidate && candidate.stopPropagation && candidate.preventDefault);
	};

	exports.default = isEvent;

/***/ }),
/* 348 */
/***/ (function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	var isReactNative = typeof window !== 'undefined' && window.navigator && window.navigator.product && window.navigator.product === 'ReactNative';

	exports.default = isReactNative;

/***/ }),
/* 349 */
/***/ (function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	var dataKey = exports.dataKey = 'text';

/***/ }),
/* 350 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _splice = __webpack_require__(351);

	var _splice2 = _interopRequireDefault(_splice);

	var _getIn = __webpack_require__(352);

	var _getIn2 = _interopRequireDefault(_getIn);

	var _setIn = __webpack_require__(403);

	var _setIn2 = _interopRequireDefault(_setIn);

	var _deepEqual = __webpack_require__(404);

	var _deepEqual2 = _interopRequireDefault(_deepEqual);

	var _deleteIn = __webpack_require__(454);

	var _deleteIn2 = _interopRequireDefault(_deleteIn);

	var _keys = __webpack_require__(455);

	var _keys2 = _interopRequireDefault(_keys);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var structure = {
	  allowsArrayErrors: true,
	  empty: {},
	  emptyList: [],
	  getIn: _getIn2.default,
	  setIn: _setIn2.default,
	  deepEqual: _deepEqual2.default,
	  deleteIn: _deleteIn2.default,
	  fromJS: function fromJS(value) {
	    return value;
	  },
	  keys: _keys2.default,
	  size: function size(array) {
	    return array ? array.length : 0;
	  },
	  splice: _splice2.default,
	  toJS: function toJS(value) {
	    return value;
	  }
	};

	exports.default = structure;

/***/ }),
/* 351 */
/***/ (function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

	var splice = function splice(array, index, removeNum, value) {
	  array = array || [];

	  if (index < array.length) {
	    if (value === undefined && !removeNum) {
	      // inserting undefined
	      var _copy2 = [].concat(_toConsumableArray(array));
	      _copy2.splice(index, 0, null);
	      _copy2[index] = undefined;
	      return _copy2;
	    }
	    if (value != null) {
	      var _copy3 = [].concat(_toConsumableArray(array));
	      _copy3.splice(index, removeNum, value // removing and adding
	      );return _copy3;
	    }
	    var _copy = [].concat(_toConsumableArray(array));
	    _copy.splice(index, removeNum // removing
	    );return _copy;
	  }
	  if (removeNum) {
	    // trying to remove non-existant item: return original array
	    return array;
	  }
	  // trying to add outside of range: just set value
	  var copy = [].concat(_toConsumableArray(array));
	  copy[index] = value;
	  return copy;
	};

	exports.default = splice;

/***/ }),
/* 352 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _toPath2 = __webpack_require__(353);

	var _toPath3 = _interopRequireDefault(_toPath2);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var getIn = function getIn(state, field) {
	  if (!state) {
	    return state;
	  }

	  var path = (0, _toPath3.default)(field);
	  var length = path.length;
	  if (!length) {
	    return undefined;
	  }

	  var result = state;
	  for (var i = 0; i < length && !!result; ++i) {
	    result = result[path[i]];
	  }

	  return result;
	};

	exports.default = getIn;

/***/ }),
/* 353 */
/***/ (function(module, exports, __webpack_require__) {

	var arrayMap = __webpack_require__(354),
	    copyArray = __webpack_require__(355),
	    isArray = __webpack_require__(356),
	    isSymbol = __webpack_require__(357),
	    stringToPath = __webpack_require__(365),
	    toKey = __webpack_require__(400),
	    toString = __webpack_require__(401);

	/**
	 * Converts `value` to a property path array.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Util
	 * @param {*} value The value to convert.
	 * @returns {Array} Returns the new property path array.
	 * @example
	 *
	 * _.toPath('a.b.c');
	 * // => ['a', 'b', 'c']
	 *
	 * _.toPath('a[0].b.c');
	 * // => ['a', '0', 'b', 'c']
	 */
	function toPath(value) {
	  if (isArray(value)) {
	    return arrayMap(value, toKey);
	  }
	  return isSymbol(value) ? [value] : copyArray(stringToPath(toString(value)));
	}

	module.exports = toPath;


/***/ }),
/* 354 */
/***/ (function(module, exports) {

	/**
	 * A specialized version of `_.map` for arrays without support for iteratee
	 * shorthands.
	 *
	 * @private
	 * @param {Array} [array] The array to iterate over.
	 * @param {Function} iteratee The function invoked per iteration.
	 * @returns {Array} Returns the new mapped array.
	 */
	function arrayMap(array, iteratee) {
	  var index = -1,
	      length = array == null ? 0 : array.length,
	      result = Array(length);

	  while (++index < length) {
	    result[index] = iteratee(array[index], index, array);
	  }
	  return result;
	}

	module.exports = arrayMap;


/***/ }),
/* 355 */
/***/ (function(module, exports) {

	/**
	 * Copies the values of `source` to `array`.
	 *
	 * @private
	 * @param {Array} source The array to copy values from.
	 * @param {Array} [array=[]] The array to copy values to.
	 * @returns {Array} Returns `array`.
	 */
	function copyArray(source, array) {
	  var index = -1,
	      length = source.length;

	  array || (array = Array(length));
	  while (++index < length) {
	    array[index] = source[index];
	  }
	  return array;
	}

	module.exports = copyArray;


/***/ }),
/* 356 */
/***/ (function(module, exports) {

	/**
	 * Checks if `value` is classified as an `Array` object.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is an array, else `false`.
	 * @example
	 *
	 * _.isArray([1, 2, 3]);
	 * // => true
	 *
	 * _.isArray(document.body.children);
	 * // => false
	 *
	 * _.isArray('abc');
	 * // => false
	 *
	 * _.isArray(_.noop);
	 * // => false
	 */
	var isArray = Array.isArray;

	module.exports = isArray;


/***/ }),
/* 357 */
/***/ (function(module, exports, __webpack_require__) {

	var baseGetTag = __webpack_require__(358),
	    isObjectLike = __webpack_require__(364);

	/** `Object#toString` result references. */
	var symbolTag = '[object Symbol]';

	/**
	 * Checks if `value` is classified as a `Symbol` primitive or object.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
	 * @example
	 *
	 * _.isSymbol(Symbol.iterator);
	 * // => true
	 *
	 * _.isSymbol('abc');
	 * // => false
	 */
	function isSymbol(value) {
	  return typeof value == 'symbol' ||
	    (isObjectLike(value) && baseGetTag(value) == symbolTag);
	}

	module.exports = isSymbol;


/***/ }),
/* 358 */
/***/ (function(module, exports, __webpack_require__) {

	var Symbol = __webpack_require__(359),
	    getRawTag = __webpack_require__(362),
	    objectToString = __webpack_require__(363);

	/** `Object#toString` result references. */
	var nullTag = '[object Null]',
	    undefinedTag = '[object Undefined]';

	/** Built-in value references. */
	var symToStringTag = Symbol ? Symbol.toStringTag : undefined;

	/**
	 * The base implementation of `getTag` without fallbacks for buggy environments.
	 *
	 * @private
	 * @param {*} value The value to query.
	 * @returns {string} Returns the `toStringTag`.
	 */
	function baseGetTag(value) {
	  if (value == null) {
	    return value === undefined ? undefinedTag : nullTag;
	  }
	  return (symToStringTag && symToStringTag in Object(value))
	    ? getRawTag(value)
	    : objectToString(value);
	}

	module.exports = baseGetTag;


/***/ }),
/* 359 */
/***/ (function(module, exports, __webpack_require__) {

	var root = __webpack_require__(360);

	/** Built-in value references. */
	var Symbol = root.Symbol;

	module.exports = Symbol;


/***/ }),
/* 360 */
/***/ (function(module, exports, __webpack_require__) {

	var freeGlobal = __webpack_require__(361);

	/** Detect free variable `self`. */
	var freeSelf = typeof self == 'object' && self && self.Object === Object && self;

	/** Used as a reference to the global object. */
	var root = freeGlobal || freeSelf || Function('return this')();

	module.exports = root;


/***/ }),
/* 361 */
/***/ (function(module, exports) {

	/* WEBPACK VAR INJECTION */(function(global) {/** Detect free variable `global` from Node.js. */
	var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;

	module.exports = freeGlobal;

	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ }),
/* 362 */
/***/ (function(module, exports, __webpack_require__) {

	var Symbol = __webpack_require__(359);

	/** Used for built-in method references. */
	var objectProto = Object.prototype;

	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;

	/**
	 * Used to resolve the
	 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
	 * of values.
	 */
	var nativeObjectToString = objectProto.toString;

	/** Built-in value references. */
	var symToStringTag = Symbol ? Symbol.toStringTag : undefined;

	/**
	 * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.
	 *
	 * @private
	 * @param {*} value The value to query.
	 * @returns {string} Returns the raw `toStringTag`.
	 */
	function getRawTag(value) {
	  var isOwn = hasOwnProperty.call(value, symToStringTag),
	      tag = value[symToStringTag];

	  try {
	    value[symToStringTag] = undefined;
	    var unmasked = true;
	  } catch (e) {}

	  var result = nativeObjectToString.call(value);
	  if (unmasked) {
	    if (isOwn) {
	      value[symToStringTag] = tag;
	    } else {
	      delete value[symToStringTag];
	    }
	  }
	  return result;
	}

	module.exports = getRawTag;


/***/ }),
/* 363 */
/***/ (function(module, exports) {

	/** Used for built-in method references. */
	var objectProto = Object.prototype;

	/**
	 * Used to resolve the
	 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
	 * of values.
	 */
	var nativeObjectToString = objectProto.toString;

	/**
	 * Converts `value` to a string using `Object.prototype.toString`.
	 *
	 * @private
	 * @param {*} value The value to convert.
	 * @returns {string} Returns the converted string.
	 */
	function objectToString(value) {
	  return nativeObjectToString.call(value);
	}

	module.exports = objectToString;


/***/ }),
/* 364 */
/***/ (function(module, exports) {

	/**
	 * Checks if `value` is object-like. A value is object-like if it's not `null`
	 * and has a `typeof` result of "object".
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
	 * @example
	 *
	 * _.isObjectLike({});
	 * // => true
	 *
	 * _.isObjectLike([1, 2, 3]);
	 * // => true
	 *
	 * _.isObjectLike(_.noop);
	 * // => false
	 *
	 * _.isObjectLike(null);
	 * // => false
	 */
	function isObjectLike(value) {
	  return value != null && typeof value == 'object';
	}

	module.exports = isObjectLike;


/***/ }),
/* 365 */
/***/ (function(module, exports, __webpack_require__) {

	var memoizeCapped = __webpack_require__(366);

	/** Used to match property names within property paths. */
	var reLeadingDot = /^\./,
	    rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;

	/** Used to match backslashes in property paths. */
	var reEscapeChar = /\\(\\)?/g;

	/**
	 * Converts `string` to a property path array.
	 *
	 * @private
	 * @param {string} string The string to convert.
	 * @returns {Array} Returns the property path array.
	 */
	var stringToPath = memoizeCapped(function(string) {
	  var result = [];
	  if (reLeadingDot.test(string)) {
	    result.push('');
	  }
	  string.replace(rePropName, function(match, number, quote, string) {
	    result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));
	  });
	  return result;
	});

	module.exports = stringToPath;


/***/ }),
/* 366 */
/***/ (function(module, exports, __webpack_require__) {

	var memoize = __webpack_require__(367);

	/** Used as the maximum memoize cache size. */
	var MAX_MEMOIZE_SIZE = 500;

	/**
	 * A specialized version of `_.memoize` which clears the memoized function's
	 * cache when it exceeds `MAX_MEMOIZE_SIZE`.
	 *
	 * @private
	 * @param {Function} func The function to have its output memoized.
	 * @returns {Function} Returns the new memoized function.
	 */
	function memoizeCapped(func) {
	  var result = memoize(func, function(key) {
	    if (cache.size === MAX_MEMOIZE_SIZE) {
	      cache.clear();
	    }
	    return key;
	  });

	  var cache = result.cache;
	  return result;
	}

	module.exports = memoizeCapped;


/***/ }),
/* 367 */
/***/ (function(module, exports, __webpack_require__) {

	var MapCache = __webpack_require__(368);

	/** Error message constants. */
	var FUNC_ERROR_TEXT = 'Expected a function';

	/**
	 * Creates a function that memoizes the result of `func`. If `resolver` is
	 * provided, it determines the cache key for storing the result based on the
	 * arguments provided to the memoized function. By default, the first argument
	 * provided to the memoized function is used as the map cache key. The `func`
	 * is invoked with the `this` binding of the memoized function.
	 *
	 * **Note:** The cache is exposed as the `cache` property on the memoized
	 * function. Its creation may be customized by replacing the `_.memoize.Cache`
	 * constructor with one whose instances implement the
	 * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)
	 * method interface of `clear`, `delete`, `get`, `has`, and `set`.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Function
	 * @param {Function} func The function to have its output memoized.
	 * @param {Function} [resolver] The function to resolve the cache key.
	 * @returns {Function} Returns the new memoized function.
	 * @example
	 *
	 * var object = { 'a': 1, 'b': 2 };
	 * var other = { 'c': 3, 'd': 4 };
	 *
	 * var values = _.memoize(_.values);
	 * values(object);
	 * // => [1, 2]
	 *
	 * values(other);
	 * // => [3, 4]
	 *
	 * object.a = 2;
	 * values(object);
	 * // => [1, 2]
	 *
	 * // Modify the result cache.
	 * values.cache.set(object, ['a', 'b']);
	 * values(object);
	 * // => ['a', 'b']
	 *
	 * // Replace `_.memoize.Cache`.
	 * _.memoize.Cache = WeakMap;
	 */
	function memoize(func, resolver) {
	  if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {
	    throw new TypeError(FUNC_ERROR_TEXT);
	  }
	  var memoized = function() {
	    var args = arguments,
	        key = resolver ? resolver.apply(this, args) : args[0],
	        cache = memoized.cache;

	    if (cache.has(key)) {
	      return cache.get(key);
	    }
	    var result = func.apply(this, args);
	    memoized.cache = cache.set(key, result) || cache;
	    return result;
	  };
	  memoized.cache = new (memoize.Cache || MapCache);
	  return memoized;
	}

	// Expose `MapCache`.
	memoize.Cache = MapCache;

	module.exports = memoize;


/***/ }),
/* 368 */
/***/ (function(module, exports, __webpack_require__) {

	var mapCacheClear = __webpack_require__(369),
	    mapCacheDelete = __webpack_require__(394),
	    mapCacheGet = __webpack_require__(397),
	    mapCacheHas = __webpack_require__(398),
	    mapCacheSet = __webpack_require__(399);

	/**
	 * Creates a map cache object to store key-value pairs.
	 *
	 * @private
	 * @constructor
	 * @param {Array} [entries] The key-value pairs to cache.
	 */
	function MapCache(entries) {
	  var index = -1,
	      length = entries == null ? 0 : entries.length;

	  this.clear();
	  while (++index < length) {
	    var entry = entries[index];
	    this.set(entry[0], entry[1]);
	  }
	}

	// Add methods to `MapCache`.
	MapCache.prototype.clear = mapCacheClear;
	MapCache.prototype['delete'] = mapCacheDelete;
	MapCache.prototype.get = mapCacheGet;
	MapCache.prototype.has = mapCacheHas;
	MapCache.prototype.set = mapCacheSet;

	module.exports = MapCache;


/***/ }),
/* 369 */
/***/ (function(module, exports, __webpack_require__) {

	var Hash = __webpack_require__(370),
	    ListCache = __webpack_require__(385),
	    Map = __webpack_require__(393);

	/**
	 * Removes all key-value entries from the map.
	 *
	 * @private
	 * @name clear
	 * @memberOf MapCache
	 */
	function mapCacheClear() {
	  this.size = 0;
	  this.__data__ = {
	    'hash': new Hash,
	    'map': new (Map || ListCache),
	    'string': new Hash
	  };
	}

	module.exports = mapCacheClear;


/***/ }),
/* 370 */
/***/ (function(module, exports, __webpack_require__) {

	var hashClear = __webpack_require__(371),
	    hashDelete = __webpack_require__(381),
	    hashGet = __webpack_require__(382),
	    hashHas = __webpack_require__(383),
	    hashSet = __webpack_require__(384);

	/**
	 * Creates a hash object.
	 *
	 * @private
	 * @constructor
	 * @param {Array} [entries] The key-value pairs to cache.
	 */
	function Hash(entries) {
	  var index = -1,
	      length = entries == null ? 0 : entries.length;

	  this.clear();
	  while (++index < length) {
	    var entry = entries[index];
	    this.set(entry[0], entry[1]);
	  }
	}

	// Add methods to `Hash`.
	Hash.prototype.clear = hashClear;
	Hash.prototype['delete'] = hashDelete;
	Hash.prototype.get = hashGet;
	Hash.prototype.has = hashHas;
	Hash.prototype.set = hashSet;

	module.exports = Hash;


/***/ }),
/* 371 */
/***/ (function(module, exports, __webpack_require__) {

	var nativeCreate = __webpack_require__(372);

	/**
	 * Removes all key-value entries from the hash.
	 *
	 * @private
	 * @name clear
	 * @memberOf Hash
	 */
	function hashClear() {
	  this.__data__ = nativeCreate ? nativeCreate(null) : {};
	  this.size = 0;
	}

	module.exports = hashClear;


/***/ }),
/* 372 */
/***/ (function(module, exports, __webpack_require__) {

	var getNative = __webpack_require__(373);

	/* Built-in method references that are verified to be native. */
	var nativeCreate = getNative(Object, 'create');

	module.exports = nativeCreate;


/***/ }),
/* 373 */
/***/ (function(module, exports, __webpack_require__) {

	var baseIsNative = __webpack_require__(374),
	    getValue = __webpack_require__(380);

	/**
	 * Gets the native function at `key` of `object`.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @param {string} key The key of the method to get.
	 * @returns {*} Returns the function if it's native, else `undefined`.
	 */
	function getNative(object, key) {
	  var value = getValue(object, key);
	  return baseIsNative(value) ? value : undefined;
	}

	module.exports = getNative;


/***/ }),
/* 374 */
/***/ (function(module, exports, __webpack_require__) {

	var isFunction = __webpack_require__(375),
	    isMasked = __webpack_require__(377),
	    isObject = __webpack_require__(376),
	    toSource = __webpack_require__(379);

	/**
	 * Used to match `RegExp`
	 * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).
	 */
	var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;

	/** Used to detect host constructors (Safari). */
	var reIsHostCtor = /^\[object .+?Constructor\]$/;

	/** Used for built-in method references. */
	var funcProto = Function.prototype,
	    objectProto = Object.prototype;

	/** Used to resolve the decompiled source of functions. */
	var funcToString = funcProto.toString;

	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;

	/** Used to detect if a method is native. */
	var reIsNative = RegExp('^' +
	  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\$&')
	  .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$'
	);

	/**
	 * The base implementation of `_.isNative` without bad shim checks.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a native function,
	 *  else `false`.
	 */
	function baseIsNative(value) {
	  if (!isObject(value) || isMasked(value)) {
	    return false;
	  }
	  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;
	  return pattern.test(toSource(value));
	}

	module.exports = baseIsNative;


/***/ }),
/* 375 */
/***/ (function(module, exports, __webpack_require__) {

	var baseGetTag = __webpack_require__(358),
	    isObject = __webpack_require__(376);

	/** `Object#toString` result references. */
	var asyncTag = '[object AsyncFunction]',
	    funcTag = '[object Function]',
	    genTag = '[object GeneratorFunction]',
	    proxyTag = '[object Proxy]';

	/**
	 * Checks if `value` is classified as a `Function` object.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a function, else `false`.
	 * @example
	 *
	 * _.isFunction(_);
	 * // => true
	 *
	 * _.isFunction(/abc/);
	 * // => false
	 */
	function isFunction(value) {
	  if (!isObject(value)) {
	    return false;
	  }
	  // The use of `Object#toString` avoids issues with the `typeof` operator
	  // in Safari 9 which returns 'object' for typed arrays and other constructors.
	  var tag = baseGetTag(value);
	  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
	}

	module.exports = isFunction;


/***/ }),
/* 376 */
/***/ (function(module, exports) {

	/**
	 * Checks if `value` is the
	 * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
	 * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
	 * @example
	 *
	 * _.isObject({});
	 * // => true
	 *
	 * _.isObject([1, 2, 3]);
	 * // => true
	 *
	 * _.isObject(_.noop);
	 * // => true
	 *
	 * _.isObject(null);
	 * // => false
	 */
	function isObject(value) {
	  var type = typeof value;
	  return value != null && (type == 'object' || type == 'function');
	}

	module.exports = isObject;


/***/ }),
/* 377 */
/***/ (function(module, exports, __webpack_require__) {

	var coreJsData = __webpack_require__(378);

	/** Used to detect methods masquerading as native. */
	var maskSrcKey = (function() {
	  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');
	  return uid ? ('Symbol(src)_1.' + uid) : '';
	}());

	/**
	 * Checks if `func` has its source masked.
	 *
	 * @private
	 * @param {Function} func The function to check.
	 * @returns {boolean} Returns `true` if `func` is masked, else `false`.
	 */
	function isMasked(func) {
	  return !!maskSrcKey && (maskSrcKey in func);
	}

	module.exports = isMasked;


/***/ }),
/* 378 */
/***/ (function(module, exports, __webpack_require__) {

	var root = __webpack_require__(360);

	/** Used to detect overreaching core-js shims. */
	var coreJsData = root['__core-js_shared__'];

	module.exports = coreJsData;


/***/ }),
/* 379 */
/***/ (function(module, exports) {

	/** Used for built-in method references. */
	var funcProto = Function.prototype;

	/** Used to resolve the decompiled source of functions. */
	var funcToString = funcProto.toString;

	/**
	 * Converts `func` to its source code.
	 *
	 * @private
	 * @param {Function} func The function to convert.
	 * @returns {string} Returns the source code.
	 */
	function toSource(func) {
	  if (func != null) {
	    try {
	      return funcToString.call(func);
	    } catch (e) {}
	    try {
	      return (func + '');
	    } catch (e) {}
	  }
	  return '';
	}

	module.exports = toSource;


/***/ }),
/* 380 */
/***/ (function(module, exports) {

	/**
	 * Gets the value at `key` of `object`.
	 *
	 * @private
	 * @param {Object} [object] The object to query.
	 * @param {string} key The key of the property to get.
	 * @returns {*} Returns the property value.
	 */
	function getValue(object, key) {
	  return object == null ? undefined : object[key];
	}

	module.exports = getValue;


/***/ }),
/* 381 */
/***/ (function(module, exports) {

	/**
	 * Removes `key` and its value from the hash.
	 *
	 * @private
	 * @name delete
	 * @memberOf Hash
	 * @param {Object} hash The hash to modify.
	 * @param {string} key The key of the value to remove.
	 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
	 */
	function hashDelete(key) {
	  var result = this.has(key) && delete this.__data__[key];
	  this.size -= result ? 1 : 0;
	  return result;
	}

	module.exports = hashDelete;


/***/ }),
/* 382 */
/***/ (function(module, exports, __webpack_require__) {

	var nativeCreate = __webpack_require__(372);

	/** Used to stand-in for `undefined` hash values. */
	var HASH_UNDEFINED = '__lodash_hash_undefined__';

	/** Used for built-in method references. */
	var objectProto = Object.prototype;

	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;

	/**
	 * Gets the hash value for `key`.
	 *
	 * @private
	 * @name get
	 * @memberOf Hash
	 * @param {string} key The key of the value to get.
	 * @returns {*} Returns the entry value.
	 */
	function hashGet(key) {
	  var data = this.__data__;
	  if (nativeCreate) {
	    var result = data[key];
	    return result === HASH_UNDEFINED ? undefined : result;
	  }
	  return hasOwnProperty.call(data, key) ? data[key] : undefined;
	}

	module.exports = hashGet;


/***/ }),
/* 383 */
/***/ (function(module, exports, __webpack_require__) {

	var nativeCreate = __webpack_require__(372);

	/** Used for built-in method references. */
	var objectProto = Object.prototype;

	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;

	/**
	 * Checks if a hash value for `key` exists.
	 *
	 * @private
	 * @name has
	 * @memberOf Hash
	 * @param {string} key The key of the entry to check.
	 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
	 */
	function hashHas(key) {
	  var data = this.__data__;
	  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);
	}

	module.exports = hashHas;


/***/ }),
/* 384 */
/***/ (function(module, exports, __webpack_require__) {

	var nativeCreate = __webpack_require__(372);

	/** Used to stand-in for `undefined` hash values. */
	var HASH_UNDEFINED = '__lodash_hash_undefined__';

	/**
	 * Sets the hash `key` to `value`.
	 *
	 * @private
	 * @name set
	 * @memberOf Hash
	 * @param {string} key The key of the value to set.
	 * @param {*} value The value to set.
	 * @returns {Object} Returns the hash instance.
	 */
	function hashSet(key, value) {
	  var data = this.__data__;
	  this.size += this.has(key) ? 0 : 1;
	  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;
	  return this;
	}

	module.exports = hashSet;


/***/ }),
/* 385 */
/***/ (function(module, exports, __webpack_require__) {

	var listCacheClear = __webpack_require__(386),
	    listCacheDelete = __webpack_require__(387),
	    listCacheGet = __webpack_require__(390),
	    listCacheHas = __webpack_require__(391),
	    listCacheSet = __webpack_require__(392);

	/**
	 * Creates an list cache object.
	 *
	 * @private
	 * @constructor
	 * @param {Array} [entries] The key-value pairs to cache.
	 */
	function ListCache(entries) {
	  var index = -1,
	      length = entries == null ? 0 : entries.length;

	  this.clear();
	  while (++index < length) {
	    var entry = entries[index];
	    this.set(entry[0], entry[1]);
	  }
	}

	// Add methods to `ListCache`.
	ListCache.prototype.clear = listCacheClear;
	ListCache.prototype['delete'] = listCacheDelete;
	ListCache.prototype.get = listCacheGet;
	ListCache.prototype.has = listCacheHas;
	ListCache.prototype.set = listCacheSet;

	module.exports = ListCache;


/***/ }),
/* 386 */
/***/ (function(module, exports) {

	/**
	 * Removes all key-value entries from the list cache.
	 *
	 * @private
	 * @name clear
	 * @memberOf ListCache
	 */
	function listCacheClear() {
	  this.__data__ = [];
	  this.size = 0;
	}

	module.exports = listCacheClear;


/***/ }),
/* 387 */
/***/ (function(module, exports, __webpack_require__) {

	var assocIndexOf = __webpack_require__(388);

	/** Used for built-in method references. */
	var arrayProto = Array.prototype;

	/** Built-in value references. */
	var splice = arrayProto.splice;

	/**
	 * Removes `key` and its value from the list cache.
	 *
	 * @private
	 * @name delete
	 * @memberOf ListCache
	 * @param {string} key The key of the value to remove.
	 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
	 */
	function listCacheDelete(key) {
	  var data = this.__data__,
	      index = assocIndexOf(data, key);

	  if (index < 0) {
	    return false;
	  }
	  var lastIndex = data.length - 1;
	  if (index == lastIndex) {
	    data.pop();
	  } else {
	    splice.call(data, index, 1);
	  }
	  --this.size;
	  return true;
	}

	module.exports = listCacheDelete;


/***/ }),
/* 388 */
/***/ (function(module, exports, __webpack_require__) {

	var eq = __webpack_require__(389);

	/**
	 * Gets the index at which the `key` is found in `array` of key-value pairs.
	 *
	 * @private
	 * @param {Array} array The array to inspect.
	 * @param {*} key The key to search for.
	 * @returns {number} Returns the index of the matched value, else `-1`.
	 */
	function assocIndexOf(array, key) {
	  var length = array.length;
	  while (length--) {
	    if (eq(array[length][0], key)) {
	      return length;
	    }
	  }
	  return -1;
	}

	module.exports = assocIndexOf;


/***/ }),
/* 389 */
/***/ (function(module, exports) {

	/**
	 * Performs a
	 * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
	 * comparison between two values to determine if they are equivalent.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to compare.
	 * @param {*} other The other value to compare.
	 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
	 * @example
	 *
	 * var object = { 'a': 1 };
	 * var other = { 'a': 1 };
	 *
	 * _.eq(object, object);
	 * // => true
	 *
	 * _.eq(object, other);
	 * // => false
	 *
	 * _.eq('a', 'a');
	 * // => true
	 *
	 * _.eq('a', Object('a'));
	 * // => false
	 *
	 * _.eq(NaN, NaN);
	 * // => true
	 */
	function eq(value, other) {
	  return value === other || (value !== value && other !== other);
	}

	module.exports = eq;


/***/ }),
/* 390 */
/***/ (function(module, exports, __webpack_require__) {

	var assocIndexOf = __webpack_require__(388);

	/**
	 * Gets the list cache value for `key`.
	 *
	 * @private
	 * @name get
	 * @memberOf ListCache
	 * @param {string} key The key of the value to get.
	 * @returns {*} Returns the entry value.
	 */
	function listCacheGet(key) {
	  var data = this.__data__,
	      index = assocIndexOf(data, key);

	  return index < 0 ? undefined : data[index][1];
	}

	module.exports = listCacheGet;


/***/ }),
/* 391 */
/***/ (function(module, exports, __webpack_require__) {

	var assocIndexOf = __webpack_require__(388);

	/**
	 * Checks if a list cache value for `key` exists.
	 *
	 * @private
	 * @name has
	 * @memberOf ListCache
	 * @param {string} key The key of the entry to check.
	 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
	 */
	function listCacheHas(key) {
	  return assocIndexOf(this.__data__, key) > -1;
	}

	module.exports = listCacheHas;


/***/ }),
/* 392 */
/***/ (function(module, exports, __webpack_require__) {

	var assocIndexOf = __webpack_require__(388);

	/**
	 * Sets the list cache `key` to `value`.
	 *
	 * @private
	 * @name set
	 * @memberOf ListCache
	 * @param {string} key The key of the value to set.
	 * @param {*} value The value to set.
	 * @returns {Object} Returns the list cache instance.
	 */
	function listCacheSet(key, value) {
	  var data = this.__data__,
	      index = assocIndexOf(data, key);

	  if (index < 0) {
	    ++this.size;
	    data.push([key, value]);
	  } else {
	    data[index][1] = value;
	  }
	  return this;
	}

	module.exports = listCacheSet;


/***/ }),
/* 393 */
/***/ (function(module, exports, __webpack_require__) {

	var getNative = __webpack_require__(373),
	    root = __webpack_require__(360);

	/* Built-in method references that are verified to be native. */
	var Map = getNative(root, 'Map');

	module.exports = Map;


/***/ }),
/* 394 */
/***/ (function(module, exports, __webpack_require__) {

	var getMapData = __webpack_require__(395);

	/**
	 * Removes `key` and its value from the map.
	 *
	 * @private
	 * @name delete
	 * @memberOf MapCache
	 * @param {string} key The key of the value to remove.
	 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
	 */
	function mapCacheDelete(key) {
	  var result = getMapData(this, key)['delete'](key);
	  this.size -= result ? 1 : 0;
	  return result;
	}

	module.exports = mapCacheDelete;


/***/ }),
/* 395 */
/***/ (function(module, exports, __webpack_require__) {

	var isKeyable = __webpack_require__(396);

	/**
	 * Gets the data for `map`.
	 *
	 * @private
	 * @param {Object} map The map to query.
	 * @param {string} key The reference key.
	 * @returns {*} Returns the map data.
	 */
	function getMapData(map, key) {
	  var data = map.__data__;
	  return isKeyable(key)
	    ? data[typeof key == 'string' ? 'string' : 'hash']
	    : data.map;
	}

	module.exports = getMapData;


/***/ }),
/* 396 */
/***/ (function(module, exports) {

	/**
	 * Checks if `value` is suitable for use as unique object key.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is suitable, else `false`.
	 */
	function isKeyable(value) {
	  var type = typeof value;
	  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')
	    ? (value !== '__proto__')
	    : (value === null);
	}

	module.exports = isKeyable;


/***/ }),
/* 397 */
/***/ (function(module, exports, __webpack_require__) {

	var getMapData = __webpack_require__(395);

	/**
	 * Gets the map value for `key`.
	 *
	 * @private
	 * @name get
	 * @memberOf MapCache
	 * @param {string} key The key of the value to get.
	 * @returns {*} Returns the entry value.
	 */
	function mapCacheGet(key) {
	  return getMapData(this, key).get(key);
	}

	module.exports = mapCacheGet;


/***/ }),
/* 398 */
/***/ (function(module, exports, __webpack_require__) {

	var getMapData = __webpack_require__(395);

	/**
	 * Checks if a map value for `key` exists.
	 *
	 * @private
	 * @name has
	 * @memberOf MapCache
	 * @param {string} key The key of the entry to check.
	 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
	 */
	function mapCacheHas(key) {
	  return getMapData(this, key).has(key);
	}

	module.exports = mapCacheHas;


/***/ }),
/* 399 */
/***/ (function(module, exports, __webpack_require__) {

	var getMapData = __webpack_require__(395);

	/**
	 * Sets the map `key` to `value`.
	 *
	 * @private
	 * @name set
	 * @memberOf MapCache
	 * @param {string} key The key of the value to set.
	 * @param {*} value The value to set.
	 * @returns {Object} Returns the map cache instance.
	 */
	function mapCacheSet(key, value) {
	  var data = getMapData(this, key),
	      size = data.size;

	  data.set(key, value);
	  this.size += data.size == size ? 0 : 1;
	  return this;
	}

	module.exports = mapCacheSet;


/***/ }),
/* 400 */
/***/ (function(module, exports, __webpack_require__) {

	var isSymbol = __webpack_require__(357);

	/** Used as references for various `Number` constants. */
	var INFINITY = 1 / 0;

	/**
	 * Converts `value` to a string key if it's not a string or symbol.
	 *
	 * @private
	 * @param {*} value The value to inspect.
	 * @returns {string|symbol} Returns the key.
	 */
	function toKey(value) {
	  if (typeof value == 'string' || isSymbol(value)) {
	    return value;
	  }
	  var result = (value + '');
	  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
	}

	module.exports = toKey;


/***/ }),
/* 401 */
/***/ (function(module, exports, __webpack_require__) {

	var baseToString = __webpack_require__(402);

	/**
	 * Converts `value` to a string. An empty string is returned for `null`
	 * and `undefined` values. The sign of `-0` is preserved.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to convert.
	 * @returns {string} Returns the converted string.
	 * @example
	 *
	 * _.toString(null);
	 * // => ''
	 *
	 * _.toString(-0);
	 * // => '-0'
	 *
	 * _.toString([1, 2, 3]);
	 * // => '1,2,3'
	 */
	function toString(value) {
	  return value == null ? '' : baseToString(value);
	}

	module.exports = toString;


/***/ }),
/* 402 */
/***/ (function(module, exports, __webpack_require__) {

	var Symbol = __webpack_require__(359),
	    arrayMap = __webpack_require__(354),
	    isArray = __webpack_require__(356),
	    isSymbol = __webpack_require__(357);

	/** Used as references for various `Number` constants. */
	var INFINITY = 1 / 0;

	/** Used to convert symbols to primitives and strings. */
	var symbolProto = Symbol ? Symbol.prototype : undefined,
	    symbolToString = symbolProto ? symbolProto.toString : undefined;

	/**
	 * The base implementation of `_.toString` which doesn't convert nullish
	 * values to empty strings.
	 *
	 * @private
	 * @param {*} value The value to process.
	 * @returns {string} Returns the string.
	 */
	function baseToString(value) {
	  // Exit early for strings to avoid a performance hit in some environments.
	  if (typeof value == 'string') {
	    return value;
	  }
	  if (isArray(value)) {
	    // Recursively convert values (susceptible to call stack limits).
	    return arrayMap(value, baseToString) + '';
	  }
	  if (isSymbol(value)) {
	    return symbolToString ? symbolToString.call(value) : '';
	  }
	  var result = (value + '');
	  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
	}

	module.exports = baseToString;


/***/ }),
/* 403 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _toPath2 = __webpack_require__(353);

	var _toPath3 = _interopRequireDefault(_toPath2);

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

	var setInWithPath = function setInWithPath(state, value, path, pathIndex) {
	  if (pathIndex >= path.length) {
	    return value;
	  }

	  var first = path[pathIndex];
	  var next = setInWithPath(state && state[first], value, path, pathIndex + 1);

	  if (!state) {
	    var initialized = isNaN(first) ? {} : [];
	    initialized[first] = next;
	    return initialized;
	  }

	  if (Array.isArray(state)) {
	    var copy = [].concat(state);
	    copy[first] = next;
	    return copy;
	  }

	  return _extends({}, state, _defineProperty({}, first, next));
	};

	var setIn = function setIn(state, field, value) {
	  return setInWithPath(state, value, (0, _toPath3.default)(field), 0);
	};

	exports.default = setIn;

/***/ }),
/* 404 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _isEqualWith2 = __webpack_require__(405);

	var _isEqualWith3 = _interopRequireDefault(_isEqualWith2);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var customizer = function customizer(obj, other) {
	  if (obj === other) return true;
	  if ((obj == null || obj === '' || obj === false) && (other == null || other === '' || other === false)) return true;

	  if (obj && other && obj._error !== other._error) return false;
	  if (obj && other && obj._warning !== other._warning) return false;
	};

	var deepEqual = function deepEqual(a, b) {
	  return (0, _isEqualWith3.default)(a, b, customizer);
	};

	exports.default = deepEqual;

/***/ }),
/* 405 */
/***/ (function(module, exports, __webpack_require__) {

	var baseIsEqual = __webpack_require__(406);

	/**
	 * This method is like `_.isEqual` except that it accepts `customizer` which
	 * is invoked to compare values. If `customizer` returns `undefined`, comparisons
	 * are handled by the method instead. The `customizer` is invoked with up to
	 * six arguments: (objValue, othValue [, index|key, object, other, stack]).
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to compare.
	 * @param {*} other The other value to compare.
	 * @param {Function} [customizer] The function to customize comparisons.
	 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
	 * @example
	 *
	 * function isGreeting(value) {
	 *   return /^h(?:i|ello)$/.test(value);
	 * }
	 *
	 * function customizer(objValue, othValue) {
	 *   if (isGreeting(objValue) && isGreeting(othValue)) {
	 *     return true;
	 *   }
	 * }
	 *
	 * var array = ['hello', 'goodbye'];
	 * var other = ['hi', 'goodbye'];
	 *
	 * _.isEqualWith(array, other, customizer);
	 * // => true
	 */
	function isEqualWith(value, other, customizer) {
	  customizer = typeof customizer == 'function' ? customizer : undefined;
	  var result = customizer ? customizer(value, other) : undefined;
	  return result === undefined ? baseIsEqual(value, other, undefined, customizer) : !!result;
	}

	module.exports = isEqualWith;


/***/ }),
/* 406 */
/***/ (function(module, exports, __webpack_require__) {

	var baseIsEqualDeep = __webpack_require__(407),
	    isObjectLike = __webpack_require__(364);

	/**
	 * The base implementation of `_.isEqual` which supports partial comparisons
	 * and tracks traversed objects.
	 *
	 * @private
	 * @param {*} value The value to compare.
	 * @param {*} other The other value to compare.
	 * @param {boolean} bitmask The bitmask flags.
	 *  1 - Unordered comparison
	 *  2 - Partial comparison
	 * @param {Function} [customizer] The function to customize comparisons.
	 * @param {Object} [stack] Tracks traversed `value` and `other` objects.
	 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
	 */
	function baseIsEqual(value, other, bitmask, customizer, stack) {
	  if (value === other) {
	    return true;
	  }
	  if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {
	    return value !== value && other !== other;
	  }
	  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);
	}

	module.exports = baseIsEqual;


/***/ }),
/* 407 */
/***/ (function(module, exports, __webpack_require__) {

	var Stack = __webpack_require__(408),
	    equalArrays = __webpack_require__(414),
	    equalByTag = __webpack_require__(420),
	    equalObjects = __webpack_require__(424),
	    getTag = __webpack_require__(449),
	    isArray = __webpack_require__(356),
	    isBuffer = __webpack_require__(436),
	    isTypedArray = __webpack_require__(439);

	/** Used to compose bitmasks for value comparisons. */
	var COMPARE_PARTIAL_FLAG = 1;

	/** `Object#toString` result references. */
	var argsTag = '[object Arguments]',
	    arrayTag = '[object Array]',
	    objectTag = '[object Object]';

	/** Used for built-in method references. */
	var objectProto = Object.prototype;

	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;

	/**
	 * A specialized version of `baseIsEqual` for arrays and objects which performs
	 * deep comparisons and tracks traversed objects enabling objects with circular
	 * references to be compared.
	 *
	 * @private
	 * @param {Object} object The object to compare.
	 * @param {Object} other The other object to compare.
	 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
	 * @param {Function} customizer The function to customize comparisons.
	 * @param {Function} equalFunc The function to determine equivalents of values.
	 * @param {Object} [stack] Tracks traversed `object` and `other` objects.
	 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
	 */
	function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {
	  var objIsArr = isArray(object),
	      othIsArr = isArray(other),
	      objTag = objIsArr ? arrayTag : getTag(object),
	      othTag = othIsArr ? arrayTag : getTag(other);

	  objTag = objTag == argsTag ? objectTag : objTag;
	  othTag = othTag == argsTag ? objectTag : othTag;

	  var objIsObj = objTag == objectTag,
	      othIsObj = othTag == objectTag,
	      isSameTag = objTag == othTag;

	  if (isSameTag && isBuffer(object)) {
	    if (!isBuffer(other)) {
	      return false;
	    }
	    objIsArr = true;
	    objIsObj = false;
	  }
	  if (isSameTag && !objIsObj) {
	    stack || (stack = new Stack);
	    return (objIsArr || isTypedArray(object))
	      ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)
	      : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);
	  }
	  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {
	    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),
	        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');

	    if (objIsWrapped || othIsWrapped) {
	      var objUnwrapped = objIsWrapped ? object.value() : object,
	          othUnwrapped = othIsWrapped ? other.value() : other;

	      stack || (stack = new Stack);
	      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
	    }
	  }
	  if (!isSameTag) {
	    return false;
	  }
	  stack || (stack = new Stack);
	  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);
	}

	module.exports = baseIsEqualDeep;


/***/ }),
/* 408 */
/***/ (function(module, exports, __webpack_require__) {

	var ListCache = __webpack_require__(385),
	    stackClear = __webpack_require__(409),
	    stackDelete = __webpack_require__(410),
	    stackGet = __webpack_require__(411),
	    stackHas = __webpack_require__(412),
	    stackSet = __webpack_require__(413);

	/**
	 * Creates a stack cache object to store key-value pairs.
	 *
	 * @private
	 * @constructor
	 * @param {Array} [entries] The key-value pairs to cache.
	 */
	function Stack(entries) {
	  var data = this.__data__ = new ListCache(entries);
	  this.size = data.size;
	}

	// Add methods to `Stack`.
	Stack.prototype.clear = stackClear;
	Stack.prototype['delete'] = stackDelete;
	Stack.prototype.get = stackGet;
	Stack.prototype.has = stackHas;
	Stack.prototype.set = stackSet;

	module.exports = Stack;


/***/ }),
/* 409 */
/***/ (function(module, exports, __webpack_require__) {

	var ListCache = __webpack_require__(385);

	/**
	 * Removes all key-value entries from the stack.
	 *
	 * @private
	 * @name clear
	 * @memberOf Stack
	 */
	function stackClear() {
	  this.__data__ = new ListCache;
	  this.size = 0;
	}

	module.exports = stackClear;


/***/ }),
/* 410 */
/***/ (function(module, exports) {

	/**
	 * Removes `key` and its value from the stack.
	 *
	 * @private
	 * @name delete
	 * @memberOf Stack
	 * @param {string} key The key of the value to remove.
	 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
	 */
	function stackDelete(key) {
	  var data = this.__data__,
	      result = data['delete'](key);

	  this.size = data.size;
	  return result;
	}

	module.exports = stackDelete;


/***/ }),
/* 411 */
/***/ (function(module, exports) {

	/**
	 * Gets the stack value for `key`.
	 *
	 * @private
	 * @name get
	 * @memberOf Stack
	 * @param {string} key The key of the value to get.
	 * @returns {*} Returns the entry value.
	 */
	function stackGet(key) {
	  return this.__data__.get(key);
	}

	module.exports = stackGet;


/***/ }),
/* 412 */
/***/ (function(module, exports) {

	/**
	 * Checks if a stack value for `key` exists.
	 *
	 * @private
	 * @name has
	 * @memberOf Stack
	 * @param {string} key The key of the entry to check.
	 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
	 */
	function stackHas(key) {
	  return this.__data__.has(key);
	}

	module.exports = stackHas;


/***/ }),
/* 413 */
/***/ (function(module, exports, __webpack_require__) {

	var ListCache = __webpack_require__(385),
	    Map = __webpack_require__(393),
	    MapCache = __webpack_require__(368);

	/** Used as the size to enable large array optimizations. */
	var LARGE_ARRAY_SIZE = 200;

	/**
	 * Sets the stack `key` to `value`.
	 *
	 * @private
	 * @name set
	 * @memberOf Stack
	 * @param {string} key The key of the value to set.
	 * @param {*} value The value to set.
	 * @returns {Object} Returns the stack cache instance.
	 */
	function stackSet(key, value) {
	  var data = this.__data__;
	  if (data instanceof ListCache) {
	    var pairs = data.__data__;
	    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {
	      pairs.push([key, value]);
	      this.size = ++data.size;
	      return this;
	    }
	    data = this.__data__ = new MapCache(pairs);
	  }
	  data.set(key, value);
	  this.size = data.size;
	  return this;
	}

	module.exports = stackSet;


/***/ }),
/* 414 */
/***/ (function(module, exports, __webpack_require__) {

	var SetCache = __webpack_require__(415),
	    arraySome = __webpack_require__(418),
	    cacheHas = __webpack_require__(419);

	/** Used to compose bitmasks for value comparisons. */
	var COMPARE_PARTIAL_FLAG = 1,
	    COMPARE_UNORDERED_FLAG = 2;

	/**
	 * A specialized version of `baseIsEqualDeep` for arrays with support for
	 * partial deep comparisons.
	 *
	 * @private
	 * @param {Array} array The array to compare.
	 * @param {Array} other The other array to compare.
	 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
	 * @param {Function} customizer The function to customize comparisons.
	 * @param {Function} equalFunc The function to determine equivalents of values.
	 * @param {Object} stack Tracks traversed `array` and `other` objects.
	 * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.
	 */
	function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {
	  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
	      arrLength = array.length,
	      othLength = other.length;

	  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
	    return false;
	  }
	  // Assume cyclic values are equal.
	  var stacked = stack.get(array);
	  if (stacked && stack.get(other)) {
	    return stacked == other;
	  }
	  var index = -1,
	      result = true,
	      seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;

	  stack.set(array, other);
	  stack.set(other, array);

	  // Ignore non-index properties.
	  while (++index < arrLength) {
	    var arrValue = array[index],
	        othValue = other[index];

	    if (customizer) {
	      var compared = isPartial
	        ? customizer(othValue, arrValue, index, other, array, stack)
	        : customizer(arrValue, othValue, index, array, other, stack);
	    }
	    if (compared !== undefined) {
	      if (compared) {
	        continue;
	      }
	      result = false;
	      break;
	    }
	    // Recursively compare arrays (susceptible to call stack limits).
	    if (seen) {
	      if (!arraySome(other, function(othValue, othIndex) {
	            if (!cacheHas(seen, othIndex) &&
	                (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
	              return seen.push(othIndex);
	            }
	          })) {
	        result = false;
	        break;
	      }
	    } else if (!(
	          arrValue === othValue ||
	            equalFunc(arrValue, othValue, bitmask, customizer, stack)
	        )) {
	      result = false;
	      break;
	    }
	  }
	  stack['delete'](array);
	  stack['delete'](other);
	  return result;
	}

	module.exports = equalArrays;


/***/ }),
/* 415 */
/***/ (function(module, exports, __webpack_require__) {

	var MapCache = __webpack_require__(368),
	    setCacheAdd = __webpack_require__(416),
	    setCacheHas = __webpack_require__(417);

	/**
	 *
	 * Creates an array cache object to store unique values.
	 *
	 * @private
	 * @constructor
	 * @param {Array} [values] The values to cache.
	 */
	function SetCache(values) {
	  var index = -1,
	      length = values == null ? 0 : values.length;

	  this.__data__ = new MapCache;
	  while (++index < length) {
	    this.add(values[index]);
	  }
	}

	// Add methods to `SetCache`.
	SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;
	SetCache.prototype.has = setCacheHas;

	module.exports = SetCache;


/***/ }),
/* 416 */
/***/ (function(module, exports) {

	/** Used to stand-in for `undefined` hash values. */
	var HASH_UNDEFINED = '__lodash_hash_undefined__';

	/**
	 * Adds `value` to the array cache.
	 *
	 * @private
	 * @name add
	 * @memberOf SetCache
	 * @alias push
	 * @param {*} value The value to cache.
	 * @returns {Object} Returns the cache instance.
	 */
	function setCacheAdd(value) {
	  this.__data__.set(value, HASH_UNDEFINED);
	  return this;
	}

	module.exports = setCacheAdd;


/***/ }),
/* 417 */
/***/ (function(module, exports) {

	/**
	 * Checks if `value` is in the array cache.
	 *
	 * @private
	 * @name has
	 * @memberOf SetCache
	 * @param {*} value The value to search for.
	 * @returns {number} Returns `true` if `value` is found, else `false`.
	 */
	function setCacheHas(value) {
	  return this.__data__.has(value);
	}

	module.exports = setCacheHas;


/***/ }),
/* 418 */
/***/ (function(module, exports) {

	/**
	 * A specialized version of `_.some` for arrays without support for iteratee
	 * shorthands.
	 *
	 * @private
	 * @param {Array} [array] The array to iterate over.
	 * @param {Function} predicate The function invoked per iteration.
	 * @returns {boolean} Returns `true` if any element passes the predicate check,
	 *  else `false`.
	 */
	function arraySome(array, predicate) {
	  var index = -1,
	      length = array == null ? 0 : array.length;

	  while (++index < length) {
	    if (predicate(array[index], index, array)) {
	      return true;
	    }
	  }
	  return false;
	}

	module.exports = arraySome;


/***/ }),
/* 419 */
/***/ (function(module, exports) {

	/**
	 * Checks if a `cache` value for `key` exists.
	 *
	 * @private
	 * @param {Object} cache The cache to query.
	 * @param {string} key The key of the entry to check.
	 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
	 */
	function cacheHas(cache, key) {
	  return cache.has(key);
	}

	module.exports = cacheHas;


/***/ }),
/* 420 */
/***/ (function(module, exports, __webpack_require__) {

	var Symbol = __webpack_require__(359),
	    Uint8Array = __webpack_require__(421),
	    eq = __webpack_require__(389),
	    equalArrays = __webpack_require__(414),
	    mapToArray = __webpack_require__(422),
	    setToArray = __webpack_require__(423);

	/** Used to compose bitmasks for value comparisons. */
	var COMPARE_PARTIAL_FLAG = 1,
	    COMPARE_UNORDERED_FLAG = 2;

	/** `Object#toString` result references. */
	var boolTag = '[object Boolean]',
	    dateTag = '[object Date]',
	    errorTag = '[object Error]',
	    mapTag = '[object Map]',
	    numberTag = '[object Number]',
	    regexpTag = '[object RegExp]',
	    setTag = '[object Set]',
	    stringTag = '[object String]',
	    symbolTag = '[object Symbol]';

	var arrayBufferTag = '[object ArrayBuffer]',
	    dataViewTag = '[object DataView]';

	/** Used to convert symbols to primitives and strings. */
	var symbolProto = Symbol ? Symbol.prototype : undefined,
	    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;

	/**
	 * A specialized version of `baseIsEqualDeep` for comparing objects of
	 * the same `toStringTag`.
	 *
	 * **Note:** This function only supports comparing values with tags of
	 * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
	 *
	 * @private
	 * @param {Object} object The object to compare.
	 * @param {Object} other The other object to compare.
	 * @param {string} tag The `toStringTag` of the objects to compare.
	 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
	 * @param {Function} customizer The function to customize comparisons.
	 * @param {Function} equalFunc The function to determine equivalents of values.
	 * @param {Object} stack Tracks traversed `object` and `other` objects.
	 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
	 */
	function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {
	  switch (tag) {
	    case dataViewTag:
	      if ((object.byteLength != other.byteLength) ||
	          (object.byteOffset != other.byteOffset)) {
	        return false;
	      }
	      object = object.buffer;
	      other = other.buffer;

	    case arrayBufferTag:
	      if ((object.byteLength != other.byteLength) ||
	          !equalFunc(new Uint8Array(object), new Uint8Array(other))) {
	        return false;
	      }
	      return true;

	    case boolTag:
	    case dateTag:
	    case numberTag:
	      // Coerce booleans to `1` or `0` and dates to milliseconds.
	      // Invalid dates are coerced to `NaN`.
	      return eq(+object, +other);

	    case errorTag:
	      return object.name == other.name && object.message == other.message;

	    case regexpTag:
	    case stringTag:
	      // Coerce regexes to strings and treat strings, primitives and objects,
	      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring
	      // for more details.
	      return object == (other + '');

	    case mapTag:
	      var convert = mapToArray;

	    case setTag:
	      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;
	      convert || (convert = setToArray);

	      if (object.size != other.size && !isPartial) {
	        return false;
	      }
	      // Assume cyclic values are equal.
	      var stacked = stack.get(object);
	      if (stacked) {
	        return stacked == other;
	      }
	      bitmask |= COMPARE_UNORDERED_FLAG;

	      // Recursively compare objects (susceptible to call stack limits).
	      stack.set(object, other);
	      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);
	      stack['delete'](object);
	      return result;

	    case symbolTag:
	      if (symbolValueOf) {
	        return symbolValueOf.call(object) == symbolValueOf.call(other);
	      }
	  }
	  return false;
	}

	module.exports = equalByTag;


/***/ }),
/* 421 */
/***/ (function(module, exports, __webpack_require__) {

	var root = __webpack_require__(360);

	/** Built-in value references. */
	var Uint8Array = root.Uint8Array;

	module.exports = Uint8Array;


/***/ }),
/* 422 */
/***/ (function(module, exports) {

	/**
	 * Converts `map` to its key-value pairs.
	 *
	 * @private
	 * @param {Object} map The map to convert.
	 * @returns {Array} Returns the key-value pairs.
	 */
	function mapToArray(map) {
	  var index = -1,
	      result = Array(map.size);

	  map.forEach(function(value, key) {
	    result[++index] = [key, value];
	  });
	  return result;
	}

	module.exports = mapToArray;


/***/ }),
/* 423 */
/***/ (function(module, exports) {

	/**
	 * Converts `set` to an array of its values.
	 *
	 * @private
	 * @param {Object} set The set to convert.
	 * @returns {Array} Returns the values.
	 */
	function setToArray(set) {
	  var index = -1,
	      result = Array(set.size);

	  set.forEach(function(value) {
	    result[++index] = value;
	  });
	  return result;
	}

	module.exports = setToArray;


/***/ }),
/* 424 */
/***/ (function(module, exports, __webpack_require__) {

	var getAllKeys = __webpack_require__(425);

	/** Used to compose bitmasks for value comparisons. */
	var COMPARE_PARTIAL_FLAG = 1;

	/** Used for built-in method references. */
	var objectProto = Object.prototype;

	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;

	/**
	 * A specialized version of `baseIsEqualDeep` for objects with support for
	 * partial deep comparisons.
	 *
	 * @private
	 * @param {Object} object The object to compare.
	 * @param {Object} other The other object to compare.
	 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
	 * @param {Function} customizer The function to customize comparisons.
	 * @param {Function} equalFunc The function to determine equivalents of values.
	 * @param {Object} stack Tracks traversed `object` and `other` objects.
	 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
	 */
	function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {
	  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
	      objProps = getAllKeys(object),
	      objLength = objProps.length,
	      othProps = getAllKeys(other),
	      othLength = othProps.length;

	  if (objLength != othLength && !isPartial) {
	    return false;
	  }
	  var index = objLength;
	  while (index--) {
	    var key = objProps[index];
	    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {
	      return false;
	    }
	  }
	  // Assume cyclic values are equal.
	  var stacked = stack.get(object);
	  if (stacked && stack.get(other)) {
	    return stacked == other;
	  }
	  var result = true;
	  stack.set(object, other);
	  stack.set(other, object);

	  var skipCtor = isPartial;
	  while (++index < objLength) {
	    key = objProps[index];
	    var objValue = object[key],
	        othValue = other[key];

	    if (customizer) {
	      var compared = isPartial
	        ? customizer(othValue, objValue, key, other, object, stack)
	        : customizer(objValue, othValue, key, object, other, stack);
	    }
	    // Recursively compare objects (susceptible to call stack limits).
	    if (!(compared === undefined
	          ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))
	          : compared
	        )) {
	      result = false;
	      break;
	    }
	    skipCtor || (skipCtor = key == 'constructor');
	  }
	  if (result && !skipCtor) {
	    var objCtor = object.constructor,
	        othCtor = other.constructor;

	    // Non `Object` object instances with different constructors are not equal.
	    if (objCtor != othCtor &&
	        ('constructor' in object && 'constructor' in other) &&
	        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&
	          typeof othCtor == 'function' && othCtor instanceof othCtor)) {
	      result = false;
	    }
	  }
	  stack['delete'](object);
	  stack['delete'](other);
	  return result;
	}

	module.exports = equalObjects;


/***/ }),
/* 425 */
/***/ (function(module, exports, __webpack_require__) {

	var baseGetAllKeys = __webpack_require__(426),
	    getSymbols = __webpack_require__(428),
	    keys = __webpack_require__(431);

	/**
	 * Creates an array of own enumerable property names and symbols of `object`.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the array of property names and symbols.
	 */
	function getAllKeys(object) {
	  return baseGetAllKeys(object, keys, getSymbols);
	}

	module.exports = getAllKeys;


/***/ }),
/* 426 */
/***/ (function(module, exports, __webpack_require__) {

	var arrayPush = __webpack_require__(427),
	    isArray = __webpack_require__(356);

	/**
	 * The base implementation of `getAllKeys` and `getAllKeysIn` which uses
	 * `keysFunc` and `symbolsFunc` to get the enumerable property names and
	 * symbols of `object`.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @param {Function} keysFunc The function to get the keys of `object`.
	 * @param {Function} symbolsFunc The function to get the symbols of `object`.
	 * @returns {Array} Returns the array of property names and symbols.
	 */
	function baseGetAllKeys(object, keysFunc, symbolsFunc) {
	  var result = keysFunc(object);
	  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));
	}

	module.exports = baseGetAllKeys;


/***/ }),
/* 427 */
/***/ (function(module, exports) {

	/**
	 * Appends the elements of `values` to `array`.
	 *
	 * @private
	 * @param {Array} array The array to modify.
	 * @param {Array} values The values to append.
	 * @returns {Array} Returns `array`.
	 */
	function arrayPush(array, values) {
	  var index = -1,
	      length = values.length,
	      offset = array.length;

	  while (++index < length) {
	    array[offset + index] = values[index];
	  }
	  return array;
	}

	module.exports = arrayPush;


/***/ }),
/* 428 */
/***/ (function(module, exports, __webpack_require__) {

	var arrayFilter = __webpack_require__(429),
	    stubArray = __webpack_require__(430);

	/** Used for built-in method references. */
	var objectProto = Object.prototype;

	/** Built-in value references. */
	var propertyIsEnumerable = objectProto.propertyIsEnumerable;

	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeGetSymbols = Object.getOwnPropertySymbols;

	/**
	 * Creates an array of the own enumerable symbols of `object`.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the array of symbols.
	 */
	var getSymbols = !nativeGetSymbols ? stubArray : function(object) {
	  if (object == null) {
	    return [];
	  }
	  object = Object(object);
	  return arrayFilter(nativeGetSymbols(object), function(symbol) {
	    return propertyIsEnumerable.call(object, symbol);
	  });
	};

	module.exports = getSymbols;


/***/ }),
/* 429 */
/***/ (function(module, exports) {

	/**
	 * A specialized version of `_.filter` for arrays without support for
	 * iteratee shorthands.
	 *
	 * @private
	 * @param {Array} [array] The array to iterate over.
	 * @param {Function} predicate The function invoked per iteration.
	 * @returns {Array} Returns the new filtered array.
	 */
	function arrayFilter(array, predicate) {
	  var index = -1,
	      length = array == null ? 0 : array.length,
	      resIndex = 0,
	      result = [];

	  while (++index < length) {
	    var value = array[index];
	    if (predicate(value, index, array)) {
	      result[resIndex++] = value;
	    }
	  }
	  return result;
	}

	module.exports = arrayFilter;


/***/ }),
/* 430 */
/***/ (function(module, exports) {

	/**
	 * This method returns a new empty array.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.13.0
	 * @category Util
	 * @returns {Array} Returns the new empty array.
	 * @example
	 *
	 * var arrays = _.times(2, _.stubArray);
	 *
	 * console.log(arrays);
	 * // => [[], []]
	 *
	 * console.log(arrays[0] === arrays[1]);
	 * // => false
	 */
	function stubArray() {
	  return [];
	}

	module.exports = stubArray;


/***/ }),
/* 431 */
/***/ (function(module, exports, __webpack_require__) {

	var arrayLikeKeys = __webpack_require__(432),
	    baseKeys = __webpack_require__(444),
	    isArrayLike = __webpack_require__(448);

	/**
	 * Creates an array of the own enumerable property names of `object`.
	 *
	 * **Note:** Non-object values are coerced to objects. See the
	 * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
	 * for more details.
	 *
	 * @static
	 * @since 0.1.0
	 * @memberOf _
	 * @category Object
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the array of property names.
	 * @example
	 *
	 * function Foo() {
	 *   this.a = 1;
	 *   this.b = 2;
	 * }
	 *
	 * Foo.prototype.c = 3;
	 *
	 * _.keys(new Foo);
	 * // => ['a', 'b'] (iteration order is not guaranteed)
	 *
	 * _.keys('hi');
	 * // => ['0', '1']
	 */
	function keys(object) {
	  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
	}

	module.exports = keys;


/***/ }),
/* 432 */
/***/ (function(module, exports, __webpack_require__) {

	var baseTimes = __webpack_require__(433),
	    isArguments = __webpack_require__(434),
	    isArray = __webpack_require__(356),
	    isBuffer = __webpack_require__(436),
	    isIndex = __webpack_require__(438),
	    isTypedArray = __webpack_require__(439);

	/** Used for built-in method references. */
	var objectProto = Object.prototype;

	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;

	/**
	 * Creates an array of the enumerable property names of the array-like `value`.
	 *
	 * @private
	 * @param {*} value The value to query.
	 * @param {boolean} inherited Specify returning inherited property names.
	 * @returns {Array} Returns the array of property names.
	 */
	function arrayLikeKeys(value, inherited) {
	  var isArr = isArray(value),
	      isArg = !isArr && isArguments(value),
	      isBuff = !isArr && !isArg && isBuffer(value),
	      isType = !isArr && !isArg && !isBuff && isTypedArray(value),
	      skipIndexes = isArr || isArg || isBuff || isType,
	      result = skipIndexes ? baseTimes(value.length, String) : [],
	      length = result.length;

	  for (var key in value) {
	    if ((inherited || hasOwnProperty.call(value, key)) &&
	        !(skipIndexes && (
	           // Safari 9 has enumerable `arguments.length` in strict mode.
	           key == 'length' ||
	           // Node.js 0.10 has enumerable non-index properties on buffers.
	           (isBuff && (key == 'offset' || key == 'parent')) ||
	           // PhantomJS 2 has enumerable non-index properties on typed arrays.
	           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||
	           // Skip index properties.
	           isIndex(key, length)
	        ))) {
	      result.push(key);
	    }
	  }
	  return result;
	}

	module.exports = arrayLikeKeys;


/***/ }),
/* 433 */
/***/ (function(module, exports) {

	/**
	 * The base implementation of `_.times` without support for iteratee shorthands
	 * or max array length checks.
	 *
	 * @private
	 * @param {number} n The number of times to invoke `iteratee`.
	 * @param {Function} iteratee The function invoked per iteration.
	 * @returns {Array} Returns the array of results.
	 */
	function baseTimes(n, iteratee) {
	  var index = -1,
	      result = Array(n);

	  while (++index < n) {
	    result[index] = iteratee(index);
	  }
	  return result;
	}

	module.exports = baseTimes;


/***/ }),
/* 434 */
/***/ (function(module, exports, __webpack_require__) {

	var baseIsArguments = __webpack_require__(435),
	    isObjectLike = __webpack_require__(364);

	/** Used for built-in method references. */
	var objectProto = Object.prototype;

	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;

	/** Built-in value references. */
	var propertyIsEnumerable = objectProto.propertyIsEnumerable;

	/**
	 * Checks if `value` is likely an `arguments` object.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is an `arguments` object,
	 *  else `false`.
	 * @example
	 *
	 * _.isArguments(function() { return arguments; }());
	 * // => true
	 *
	 * _.isArguments([1, 2, 3]);
	 * // => false
	 */
	var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {
	  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&
	    !propertyIsEnumerable.call(value, 'callee');
	};

	module.exports = isArguments;


/***/ }),
/* 435 */
/***/ (function(module, exports, __webpack_require__) {

	var baseGetTag = __webpack_require__(358),
	    isObjectLike = __webpack_require__(364);

	/** `Object#toString` result references. */
	var argsTag = '[object Arguments]';

	/**
	 * The base implementation of `_.isArguments`.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is an `arguments` object,
	 */
	function baseIsArguments(value) {
	  return isObjectLike(value) && baseGetTag(value) == argsTag;
	}

	module.exports = baseIsArguments;


/***/ }),
/* 436 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(module) {var root = __webpack_require__(360),
	    stubFalse = __webpack_require__(437);

	/** Detect free variable `exports`. */
	var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;

	/** Detect free variable `module`. */
	var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;

	/** Detect the popular CommonJS extension `module.exports`. */
	var moduleExports = freeModule && freeModule.exports === freeExports;

	/** Built-in value references. */
	var Buffer = moduleExports ? root.Buffer : undefined;

	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;

	/**
	 * Checks if `value` is a buffer.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.3.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.
	 * @example
	 *
	 * _.isBuffer(new Buffer(2));
	 * // => true
	 *
	 * _.isBuffer(new Uint8Array(2));
	 * // => false
	 */
	var isBuffer = nativeIsBuffer || stubFalse;

	module.exports = isBuffer;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(180)(module)))

/***/ }),
/* 437 */
/***/ (function(module, exports) {

	/**
	 * This method returns `false`.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.13.0
	 * @category Util
	 * @returns {boolean} Returns `false`.
	 * @example
	 *
	 * _.times(2, _.stubFalse);
	 * // => [false, false]
	 */
	function stubFalse() {
	  return false;
	}

	module.exports = stubFalse;


/***/ }),
/* 438 */
/***/ (function(module, exports) {

	/** Used as references for various `Number` constants. */
	var MAX_SAFE_INTEGER = 9007199254740991;

	/** Used to detect unsigned integer values. */
	var reIsUint = /^(?:0|[1-9]\d*)$/;

	/**
	 * Checks if `value` is a valid array-like index.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
	 * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
	 */
	function isIndex(value, length) {
	  length = length == null ? MAX_SAFE_INTEGER : length;
	  return !!length &&
	    (typeof value == 'number' || reIsUint.test(value)) &&
	    (value > -1 && value % 1 == 0 && value < length);
	}

	module.exports = isIndex;


/***/ }),
/* 439 */
/***/ (function(module, exports, __webpack_require__) {

	var baseIsTypedArray = __webpack_require__(440),
	    baseUnary = __webpack_require__(442),
	    nodeUtil = __webpack_require__(443);

	/* Node.js helper references. */
	var nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;

	/**
	 * Checks if `value` is classified as a typed array.
	 *
	 * @static
	 * @memberOf _
	 * @since 3.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
	 * @example
	 *
	 * _.isTypedArray(new Uint8Array);
	 * // => true
	 *
	 * _.isTypedArray([]);
	 * // => false
	 */
	var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;

	module.exports = isTypedArray;


/***/ }),
/* 440 */
/***/ (function(module, exports, __webpack_require__) {

	var baseGetTag = __webpack_require__(358),
	    isLength = __webpack_require__(441),
	    isObjectLike = __webpack_require__(364);

	/** `Object#toString` result references. */
	var argsTag = '[object Arguments]',
	    arrayTag = '[object Array]',
	    boolTag = '[object Boolean]',
	    dateTag = '[object Date]',
	    errorTag = '[object Error]',
	    funcTag = '[object Function]',
	    mapTag = '[object Map]',
	    numberTag = '[object Number]',
	    objectTag = '[object Object]',
	    regexpTag = '[object RegExp]',
	    setTag = '[object Set]',
	    stringTag = '[object String]',
	    weakMapTag = '[object WeakMap]';

	var arrayBufferTag = '[object ArrayBuffer]',
	    dataViewTag = '[object DataView]',
	    float32Tag = '[object Float32Array]',
	    float64Tag = '[object Float64Array]',
	    int8Tag = '[object Int8Array]',
	    int16Tag = '[object Int16Array]',
	    int32Tag = '[object Int32Array]',
	    uint8Tag = '[object Uint8Array]',
	    uint8ClampedTag = '[object Uint8ClampedArray]',
	    uint16Tag = '[object Uint16Array]',
	    uint32Tag = '[object Uint32Array]';

	/** Used to identify `toStringTag` values of typed arrays. */
	var typedArrayTags = {};
	typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =
	typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =
	typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =
	typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =
	typedArrayTags[uint32Tag] = true;
	typedArrayTags[argsTag] = typedArrayTags[arrayTag] =
	typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =
	typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =
	typedArrayTags[errorTag] = typedArrayTags[funcTag] =
	typedArrayTags[mapTag] = typedArrayTags[numberTag] =
	typedArrayTags[objectTag] = typedArrayTags[regexpTag] =
	typedArrayTags[setTag] = typedArrayTags[stringTag] =
	typedArrayTags[weakMapTag] = false;

	/**
	 * The base implementation of `_.isTypedArray` without Node.js optimizations.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
	 */
	function baseIsTypedArray(value) {
	  return isObjectLike(value) &&
	    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];
	}

	module.exports = baseIsTypedArray;


/***/ }),
/* 441 */
/***/ (function(module, exports) {

	/** Used as references for various `Number` constants. */
	var MAX_SAFE_INTEGER = 9007199254740991;

	/**
	 * Checks if `value` is a valid array-like length.
	 *
	 * **Note:** This method is loosely based on
	 * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
	 * @example
	 *
	 * _.isLength(3);
	 * // => true
	 *
	 * _.isLength(Number.MIN_VALUE);
	 * // => false
	 *
	 * _.isLength(Infinity);
	 * // => false
	 *
	 * _.isLength('3');
	 * // => false
	 */
	function isLength(value) {
	  return typeof value == 'number' &&
	    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
	}

	module.exports = isLength;


/***/ }),
/* 442 */
/***/ (function(module, exports) {

	/**
	 * The base implementation of `_.unary` without support for storing metadata.
	 *
	 * @private
	 * @param {Function} func The function to cap arguments for.
	 * @returns {Function} Returns the new capped function.
	 */
	function baseUnary(func) {
	  return function(value) {
	    return func(value);
	  };
	}

	module.exports = baseUnary;


/***/ }),
/* 443 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(module) {var freeGlobal = __webpack_require__(361);

	/** Detect free variable `exports`. */
	var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;

	/** Detect free variable `module`. */
	var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;

	/** Detect the popular CommonJS extension `module.exports`. */
	var moduleExports = freeModule && freeModule.exports === freeExports;

	/** Detect free variable `process` from Node.js. */
	var freeProcess = moduleExports && freeGlobal.process;

	/** Used to access faster Node.js helpers. */
	var nodeUtil = (function() {
	  try {
	    return freeProcess && freeProcess.binding && freeProcess.binding('util');
	  } catch (e) {}
	}());

	module.exports = nodeUtil;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(180)(module)))

/***/ }),
/* 444 */
/***/ (function(module, exports, __webpack_require__) {

	var isPrototype = __webpack_require__(445),
	    nativeKeys = __webpack_require__(446);

	/** Used for built-in method references. */
	var objectProto = Object.prototype;

	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;

	/**
	 * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the array of property names.
	 */
	function baseKeys(object) {
	  if (!isPrototype(object)) {
	    return nativeKeys(object);
	  }
	  var result = [];
	  for (var key in Object(object)) {
	    if (hasOwnProperty.call(object, key) && key != 'constructor') {
	      result.push(key);
	    }
	  }
	  return result;
	}

	module.exports = baseKeys;


/***/ }),
/* 445 */
/***/ (function(module, exports) {

	/** Used for built-in method references. */
	var objectProto = Object.prototype;

	/**
	 * Checks if `value` is likely a prototype object.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.
	 */
	function isPrototype(value) {
	  var Ctor = value && value.constructor,
	      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;

	  return value === proto;
	}

	module.exports = isPrototype;


/***/ }),
/* 446 */
/***/ (function(module, exports, __webpack_require__) {

	var overArg = __webpack_require__(447);

	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeKeys = overArg(Object.keys, Object);

	module.exports = nativeKeys;


/***/ }),
/* 447 */
/***/ (function(module, exports) {

	/**
	 * Creates a unary function that invokes `func` with its argument transformed.
	 *
	 * @private
	 * @param {Function} func The function to wrap.
	 * @param {Function} transform The argument transform.
	 * @returns {Function} Returns the new function.
	 */
	function overArg(func, transform) {
	  return function(arg) {
	    return func(transform(arg));
	  };
	}

	module.exports = overArg;


/***/ }),
/* 448 */
/***/ (function(module, exports, __webpack_require__) {

	var isFunction = __webpack_require__(375),
	    isLength = __webpack_require__(441);

	/**
	 * Checks if `value` is array-like. A value is considered array-like if it's
	 * not a function and has a `value.length` that's an integer greater than or
	 * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
	 * @example
	 *
	 * _.isArrayLike([1, 2, 3]);
	 * // => true
	 *
	 * _.isArrayLike(document.body.children);
	 * // => true
	 *
	 * _.isArrayLike('abc');
	 * // => true
	 *
	 * _.isArrayLike(_.noop);
	 * // => false
	 */
	function isArrayLike(value) {
	  return value != null && isLength(value.length) && !isFunction(value);
	}

	module.exports = isArrayLike;


/***/ }),
/* 449 */
/***/ (function(module, exports, __webpack_require__) {

	var DataView = __webpack_require__(450),
	    Map = __webpack_require__(393),
	    Promise = __webpack_require__(451),
	    Set = __webpack_require__(452),
	    WeakMap = __webpack_require__(453),
	    baseGetTag = __webpack_require__(358),
	    toSource = __webpack_require__(379);

	/** `Object#toString` result references. */
	var mapTag = '[object Map]',
	    objectTag = '[object Object]',
	    promiseTag = '[object Promise]',
	    setTag = '[object Set]',
	    weakMapTag = '[object WeakMap]';

	var dataViewTag = '[object DataView]';

	/** Used to detect maps, sets, and weakmaps. */
	var dataViewCtorString = toSource(DataView),
	    mapCtorString = toSource(Map),
	    promiseCtorString = toSource(Promise),
	    setCtorString = toSource(Set),
	    weakMapCtorString = toSource(WeakMap);

	/**
	 * Gets the `toStringTag` of `value`.
	 *
	 * @private
	 * @param {*} value The value to query.
	 * @returns {string} Returns the `toStringTag`.
	 */
	var getTag = baseGetTag;

	// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.
	if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||
	    (Map && getTag(new Map) != mapTag) ||
	    (Promise && getTag(Promise.resolve()) != promiseTag) ||
	    (Set && getTag(new Set) != setTag) ||
	    (WeakMap && getTag(new WeakMap) != weakMapTag)) {
	  getTag = function(value) {
	    var result = baseGetTag(value),
	        Ctor = result == objectTag ? value.constructor : undefined,
	        ctorString = Ctor ? toSource(Ctor) : '';

	    if (ctorString) {
	      switch (ctorString) {
	        case dataViewCtorString: return dataViewTag;
	        case mapCtorString: return mapTag;
	        case promiseCtorString: return promiseTag;
	        case setCtorString: return setTag;
	        case weakMapCtorString: return weakMapTag;
	      }
	    }
	    return result;
	  };
	}

	module.exports = getTag;


/***/ }),
/* 450 */
/***/ (function(module, exports, __webpack_require__) {

	var getNative = __webpack_require__(373),
	    root = __webpack_require__(360);

	/* Built-in method references that are verified to be native. */
	var DataView = getNative(root, 'DataView');

	module.exports = DataView;


/***/ }),
/* 451 */
/***/ (function(module, exports, __webpack_require__) {

	var getNative = __webpack_require__(373),
	    root = __webpack_require__(360);

	/* Built-in method references that are verified to be native. */
	var Promise = getNative(root, 'Promise');

	module.exports = Promise;


/***/ }),
/* 452 */
/***/ (function(module, exports, __webpack_require__) {

	var getNative = __webpack_require__(373),
	    root = __webpack_require__(360);

	/* Built-in method references that are verified to be native. */
	var Set = getNative(root, 'Set');

	module.exports = Set;


/***/ }),
/* 453 */
/***/ (function(module, exports, __webpack_require__) {

	var getNative = __webpack_require__(373),
	    root = __webpack_require__(360);

	/* Built-in method references that are verified to be native. */
	var WeakMap = getNative(root, 'WeakMap');

	module.exports = WeakMap;


/***/ }),
/* 454 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _toPath2 = __webpack_require__(353);

	var _toPath3 = _interopRequireDefault(_toPath2);

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

	function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

	var deleteInWithPath = function deleteInWithPath(state, first) {
	  for (var _len = arguments.length, rest = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
	    rest[_key - 2] = arguments[_key];
	  }

	  if (state === undefined || first === undefined) {
	    return state;
	  }
	  if (rest.length) {
	    if (Array.isArray(state)) {
	      if (first < state.length) {
	        var result = deleteInWithPath.apply(undefined, [state && state[first]].concat(rest));
	        if (result !== state[first]) {
	          var copy = [].concat(_toConsumableArray(state));
	          copy[first] = result;
	          return copy;
	        }
	      }
	      return state;
	    }
	    if (first in state) {
	      var _result = deleteInWithPath.apply(undefined, [state && state[first]].concat(rest));
	      return state[first] === _result ? state : _extends({}, state, _defineProperty({}, first, _result));
	    }
	    return state;
	  }
	  if (Array.isArray(state)) {
	    if (isNaN(first)) {
	      throw new Error('Cannot delete non-numerical index from an array');
	    }
	    if (first < state.length) {
	      var _copy = [].concat(_toConsumableArray(state));
	      _copy.splice(first, 1);
	      return _copy;
	    }
	    return state;
	  }
	  if (first in state) {
	    var _copy2 = _extends({}, state);
	    delete _copy2[first];
	    return _copy2;
	  }
	  return state;
	};

	var deleteIn = function deleteIn(state, field) {
	  return deleteInWithPath.apply(undefined, [state].concat(_toConsumableArray((0, _toPath3.default)(field))));
	};

	exports.default = deleteIn;

/***/ }),
/* 455 */
/***/ (function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	var keys = function keys(value) {
	  if (!value) {
	    return [];
	  }

	  if (Array.isArray(value)) {
	    return value.map(function (i) {
	      return i.name;
	    });
	  }

	  return Object.keys(value);
	};

	exports.default = keys;

/***/ }),
/* 456 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _isEqualWith2 = __webpack_require__(405);

	var _isEqualWith3 = _interopRequireDefault(_isEqualWith2);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var customizer = function customizer(objectValue, otherValue, indexOrkey, object, other, stack) {
	  // https://lodash.com/docs/4.17.4#isEqualWith
	  if (stack) {
	    // Shallow compares
	    // For 1st level, stack === undefined.
	    //   -> Do nothing (and implicitly return undefined so that it goes to compare 2nd level)
	    // For 2nd level and up, stack !== undefined.
	    //   -> Compare by === operator
	    return objectValue === otherValue;
	  }
	};

	var shallowCompare = function shallowCompare(instance, nextProps, nextState) {
	  return !(0, _isEqualWith3.default)(instance.props, nextProps, customizer) || !(0, _isEqualWith3.default)(instance.state, nextState, customizer);
	};

	exports.default = shallowCompare;

/***/ }),
/* 457 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createFields = __webpack_require__(458);

	var _createFields2 = _interopRequireDefault(_createFields);

	var _plain = __webpack_require__(350);

	var _plain2 = _interopRequireDefault(_plain);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = (0, _createFields2.default)(_plain2.default);

/***/ }),
/* 458 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(2);

	var _propTypes = __webpack_require__(205);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _invariant = __webpack_require__(198);

	var _invariant2 = _interopRequireDefault(_invariant);

	var _ConnectedFields = __webpack_require__(459);

	var _ConnectedFields2 = _interopRequireDefault(_ConnectedFields);

	var _shallowCompare = __webpack_require__(456);

	var _shallowCompare2 = _interopRequireDefault(_shallowCompare);

	var _plain = __webpack_require__(350);

	var _plain2 = _interopRequireDefault(_plain);

	var _prefixName = __webpack_require__(337);

	var _prefixName2 = _interopRequireDefault(_prefixName);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var validateNameProp = function validateNameProp(prop) {
	  if (!prop) {
	    return new Error('No "names" prop was specified <Fields/>');
	  }
	  if (!Array.isArray(prop) && !prop._isFieldArray) {
	    return new Error('Invalid prop "names" supplied to <Fields/>. Must be either an array of strings or the fields array generated by FieldArray.');
	  }
	};

	var createFields = function createFields(_ref) {
	  var deepEqual = _ref.deepEqual,
	      getIn = _ref.getIn,
	      toJS = _ref.toJS,
	      size = _ref.size;

	  var ConnectedFields = (0, _ConnectedFields2.default)({
	    deepEqual: deepEqual,
	    getIn: getIn,
	    toJS: toJS,
	    size: size
	  });

	  var Fields = function (_Component) {
	    _inherits(Fields, _Component);

	    function Fields(props, context) {
	      _classCallCheck(this, Fields);

	      var _this = _possibleConstructorReturn(this, (Fields.__proto__ || Object.getPrototypeOf(Fields)).call(this, props, context));

	      if (!context._reduxForm) {
	        throw new Error('Fields must be inside a component decorated with reduxForm()');
	      }
	      return _this;
	    }

	    _createClass(Fields, [{
	      key: 'shouldComponentUpdate',
	      value: function shouldComponentUpdate(nextProps, nextState) {
	        return (0, _shallowCompare2.default)(this, nextProps, nextState);
	      }
	    }, {
	      key: 'componentWillMount',
	      value: function componentWillMount() {
	        var error = validateNameProp(this.props.names);
	        if (error) {
	          throw error;
	        }
	        var context = this.context;
	        var register = context._reduxForm.register;

	        this.names.forEach(function (name) {
	          return register(name, 'Field');
	        });
	      }
	    }, {
	      key: 'componentWillReceiveProps',
	      value: function componentWillReceiveProps(nextProps) {
	        if (!_plain2.default.deepEqual(this.props.names, nextProps.names)) {
	          var context = this.context;
	          var _context$_reduxForm = context._reduxForm,
	              register = _context$_reduxForm.register,
	              unregister = _context$_reduxForm.unregister;
	          // unregister old name

	          this.props.names.forEach(function (name) {
	            return unregister((0, _prefixName2.default)(context, name));
	          }
	          // register new name
	          );nextProps.names.forEach(function (name) {
	            return register((0, _prefixName2.default)(context, name), 'Field');
	          });
	        }
	      }
	    }, {
	      key: 'componentWillUnmount',
	      value: function componentWillUnmount() {
	        var context = this.context;
	        var unregister = context._reduxForm.unregister;

	        this.props.names.forEach(function (name) {
	          return unregister((0, _prefixName2.default)(context, name));
	        });
	      }
	    }, {
	      key: 'getRenderedComponent',
	      value: function getRenderedComponent() {
	        (0, _invariant2.default)(this.props.withRef, 'If you want to access getRenderedComponent(), ' + 'you must specify a withRef prop to Fields');
	        return this.refs.connected.getWrappedInstance().getRenderedComponent();
	      }
	    }, {
	      key: 'render',
	      value: function render() {
	        var context = this.context;

	        return (0, _react.createElement)(ConnectedFields, _extends({}, this.props, {
	          names: this.props.names.map(function (name) {
	            return (0, _prefixName2.default)(context, name);
	          }),
	          _reduxForm: this.context._reduxForm,
	          ref: 'connected'
	        }));
	      }
	    }, {
	      key: 'names',
	      get: function get() {
	        var context = this.context;

	        return this.props.names.map(function (name) {
	          return (0, _prefixName2.default)(context, name);
	        });
	      }
	    }, {
	      key: 'dirty',
	      get: function get() {
	        return this.refs.connected.getWrappedInstance().isDirty();
	      }
	    }, {
	      key: 'pristine',
	      get: function get() {
	        return !this.dirty;
	      }
	    }, {
	      key: 'values',
	      get: function get() {
	        return this.refs.connected && this.refs.connected.getWrappedInstance().getValues();
	      }
	    }]);

	    return Fields;
	  }(_react.Component);

	  Fields.propTypes = {
	    names: function names(props, propName) {
	      return validateNameProp(props[propName]);
	    },
	    component: _propTypes2.default.oneOfType([_propTypes2.default.func, _propTypes2.default.string]).isRequired,
	    format: _propTypes2.default.func,
	    parse: _propTypes2.default.func,
	    props: _propTypes2.default.object,
	    withRef: _propTypes2.default.bool
	  };
	  Fields.contextTypes = {
	    _reduxForm: _propTypes2.default.object
	  };

	  return Fields;
	};

	exports.default = createFields;

/***/ }),
/* 459 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(2);

	var _propTypes = __webpack_require__(205);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _reactRedux = __webpack_require__(160);

	var _createFieldProps2 = __webpack_require__(344);

	var _createFieldProps3 = _interopRequireDefault(_createFieldProps2);

	var _plain = __webpack_require__(350);

	var _plain2 = _interopRequireDefault(_plain);

	var _onChangeValue = __webpack_require__(345);

	var _onChangeValue2 = _interopRequireDefault(_onChangeValue);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var propsToNotUpdateFor = ['_reduxForm'];

	var createConnectedFields = function createConnectedFields(_ref) {
	  var deepEqual = _ref.deepEqual,
	      getIn = _ref.getIn,
	      toJS = _ref.toJS,
	      size = _ref.size;

	  var getSyncError = function getSyncError(syncErrors, name) {
	    // Because the error for this field might not be at a level in the error structure where
	    // it can be set directly, it might need to be unwrapped from the _error property
	    return _plain2.default.getIn(syncErrors, name + '._error') || _plain2.default.getIn(syncErrors, name);
	  };

	  var getSyncWarning = function getSyncWarning(syncWarnings, name) {
	    var warning = getIn(syncWarnings, name
	    // Because the warning for this field might not be at a level in the warning structure where
	    // it can be set directly, it might need to be unwrapped from the _warning property
	    );return warning && warning._warning ? warning._warning : warning;
	  };

	  var ConnectedFields = function (_Component) {
	    _inherits(ConnectedFields, _Component);

	    function ConnectedFields(props) {
	      _classCallCheck(this, ConnectedFields);

	      var _this = _possibleConstructorReturn(this, (ConnectedFields.__proto__ || Object.getPrototypeOf(ConnectedFields)).call(this, props));

	      _this.handleChange = _this.handleChange.bind(_this);
	      _this.handleFocus = _this.handleFocus.bind(_this);
	      _this.handleBlur = _this.handleBlur.bind(_this);

	      _this.onChangeFns = props.names.reduce(function (acc, name) {
	        acc[name] = function (event) {
	          return _this.handleChange(name, event);
	        };
	        return acc;
	      }, {});

	      _this.onFocusFns = props.names.reduce(function (acc, name) {
	        acc[name] = function () {
	          return _this.handleFocus(name);
	        };
	        return acc;
	      }, {});

	      _this.onBlurFns = props.names.reduce(function (acc, name) {
	        acc[name] = function (event) {
	          return _this.handleBlur(name, event);
	        };
	        return acc;
	      }, {});
	      return _this;
	    }

	    _createClass(ConnectedFields, [{
	      key: 'componentWillReceiveProps',
	      value: function componentWillReceiveProps(nextProps) {
	        var _this2 = this;

	        if (this.props.names !== nextProps.names && (size(this.props.names) !== size(nextProps.names) || nextProps.names.some(function (nextName) {
	          return !_this2.props._fields[nextName];
	        }))) {
	          // names is changed. The cached event handlers need to be updated
	          this.onChangeFns = nextProps.names.reduce(function (acc, name) {
	            acc[name] = function (event) {
	              return _this2.handleChange(name, event);
	            };
	            return acc;
	          }, {});

	          this.onFocusFns = nextProps.names.reduce(function (acc, name) {
	            acc[name] = function () {
	              return _this2.handleFocus(name);
	            };
	            return acc;
	          }, {});

	          this.onBlurFns = nextProps.names.reduce(function (acc, name) {
	            acc[name] = function (event) {
	              return _this2.handleBlur(name, event);
	            };
	            return acc;
	          }, {});
	        }
	      }
	    }, {
	      key: 'shouldComponentUpdate',
	      value: function shouldComponentUpdate(nextProps) {
	        var _this3 = this;

	        var nextPropsKeys = Object.keys(nextProps);
	        var thisPropsKeys = Object.keys(this.props);
	        return nextPropsKeys.length !== thisPropsKeys.length || nextPropsKeys.some(function (prop) {
	          return !~propsToNotUpdateFor.indexOf(prop) && !deepEqual(_this3.props[prop], nextProps[prop]);
	        });
	      }
	    }, {
	      key: 'isDirty',
	      value: function isDirty() {
	        var _fields = this.props._fields;

	        return Object.keys(_fields).some(function (name) {
	          return _fields[name].dirty;
	        });
	      }
	    }, {
	      key: 'getValues',
	      value: function getValues() {
	        var _fields = this.props._fields;

	        return Object.keys(_fields).reduce(function (accumulator, name) {
	          return _plain2.default.setIn(accumulator, name, _fields[name].value);
	        }, {});
	      }
	    }, {
	      key: 'getRenderedComponent',
	      value: function getRenderedComponent() {
	        return this.refs.renderedComponent;
	      }
	    }, {
	      key: 'handleChange',
	      value: function handleChange(name, event) {
	        var _props = this.props,
	            dispatch = _props.dispatch,
	            parse = _props.parse,
	            normalize = _props.normalize,
	            _reduxForm = _props._reduxForm;

	        var value = (0, _onChangeValue2.default)(event, { name: name, parse: parse, normalize: normalize });

	        dispatch(_reduxForm.change(name, value));
	      }
	    }, {
	      key: 'handleFocus',
	      value: function handleFocus(name) {
	        var _props2 = this.props,
	            dispatch = _props2.dispatch,
	            _reduxForm = _props2._reduxForm;

	        dispatch(_reduxForm.focus(name));
	      }
	    }, {
	      key: 'handleBlur',
	      value: function handleBlur(name, event) {
	        var _props3 = this.props,
	            dispatch = _props3.dispatch,
	            parse = _props3.parse,
	            normalize = _props3.normalize,
	            _reduxForm = _props3._reduxForm;

	        var value = (0, _onChangeValue2.default)(event, { name: name, parse: parse, normalize: normalize }

	        // dispatch blur action
	        );dispatch(_reduxForm.blur(name, value)

	        // call post-blur callback
	        );if (_reduxForm.asyncValidate) {
	          _reduxForm.asyncValidate(name, value);
	        }
	      }
	    }, {
	      key: 'render',
	      value: function render() {
	        var _this4 = this;

	        var _props4 = this.props,
	            component = _props4.component,
	            withRef = _props4.withRef,
	            _fields = _props4._fields,
	            _reduxForm = _props4._reduxForm,
	            rest = _objectWithoutProperties(_props4, ['component', 'withRef', '_fields', '_reduxForm']);

	        var sectionPrefix = _reduxForm.sectionPrefix,
	            form = _reduxForm.form;

	        var _Object$keys$reduce = Object.keys(_fields).reduce(function (accumulator, name) {
	          var connectedProps = _fields[name];

	          var _createFieldProps = (0, _createFieldProps3.default)({ getIn: getIn, toJS: toJS }, name, _extends({}, connectedProps, rest, {
	            form: form,
	            onBlur: _this4.onBlurFns[name],
	            onChange: _this4.onChangeFns[name],
	            onFocus: _this4.onFocusFns[name]
	          })),
	              custom = _createFieldProps.custom,
	              fieldProps = _objectWithoutProperties(_createFieldProps, ['custom']);

	          accumulator.custom = custom;
	          var fieldName = sectionPrefix ? name.replace(sectionPrefix + '.', '') : name;
	          return _plain2.default.setIn(accumulator, fieldName, fieldProps);
	        }, {}),
	            custom = _Object$keys$reduce.custom,
	            props = _objectWithoutProperties(_Object$keys$reduce, ['custom']);

	        if (withRef) {
	          props.ref = 'renderedComponent';
	        }

	        return (0, _react.createElement)(component, _extends({}, props, custom));
	      }
	    }]);

	    return ConnectedFields;
	  }(_react.Component);

	  ConnectedFields.propTypes = {
	    component: _propTypes2.default.oneOfType([_propTypes2.default.func, _propTypes2.default.string]).isRequired,
	    _fields: _propTypes2.default.object.isRequired,
	    props: _propTypes2.default.object
	  };

	  var connector = (0, _reactRedux.connect)(function (state, ownProps) {
	    var names = ownProps.names,
	        _ownProps$_reduxForm = ownProps._reduxForm,
	        initialValues = _ownProps$_reduxForm.initialValues,
	        getFormState = _ownProps$_reduxForm.getFormState;

	    var formState = getFormState(state);
	    return {
	      _fields: names.reduce(function (accumulator, name) {
	        var initialState = getIn(formState, 'initial.' + name);
	        var initial = initialState !== undefined ? initialState : initialValues && getIn(initialValues, name);
	        var value = getIn(formState, 'values.' + name);
	        var syncError = getSyncError(getIn(formState, 'syncErrors'), name);
	        var syncWarning = getSyncWarning(getIn(formState, 'syncWarnings'), name);
	        var submitting = getIn(formState, 'submitting');
	        var pristine = value === initial;
	        accumulator[name] = {
	          asyncError: getIn(formState, 'asyncErrors.' + name),
	          asyncValidating: getIn(formState, 'asyncValidating') === name,
	          dirty: !pristine,
	          pristine: pristine,
	          state: getIn(formState, 'fields.' + name),
	          submitError: getIn(formState, 'submitErrors.' + name),
	          submitFailed: getIn(formState, 'submitFailed'),
	          submitting: submitting,
	          syncError: syncError,
	          syncWarning: syncWarning,
	          value: value,
	          _value: ownProps.value // save value passed in (for checkboxes)
	        };
	        return accumulator;
	      }, {})
	    };
	  }, undefined, undefined, { withRef: true });
	  return connector(ConnectedFields);
	};

	exports.default = createConnectedFields;

/***/ }),
/* 460 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createFieldArray = __webpack_require__(461);

	var _createFieldArray2 = _interopRequireDefault(_createFieldArray);

	var _plain = __webpack_require__(350);

	var _plain2 = _interopRequireDefault(_plain);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = (0, _createFieldArray2.default)(_plain2.default);

/***/ }),
/* 461 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(2);

	var _propTypes = __webpack_require__(205);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _invariant = __webpack_require__(198);

	var _invariant2 = _interopRequireDefault(_invariant);

	var _ConnectedFieldArray = __webpack_require__(462);

	var _ConnectedFieldArray2 = _interopRequireDefault(_ConnectedFieldArray);

	var _prefixName = __webpack_require__(337);

	var _prefixName2 = _interopRequireDefault(_prefixName);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

	var toArray = function toArray(value) {
	  return Array.isArray(value) ? value : [value];
	};

	var wrapError = function wrapError(fn, key) {
	  return fn && function () {
	    var validators = toArray(fn);
	    for (var i = 0; i < validators.length; i++) {
	      var result = validators[i].apply(validators, arguments);
	      if (result) {
	        return _defineProperty({}, key, result);
	      }
	    }
	  };
	};

	var createFieldArray = function createFieldArray(_ref2) {
	  var deepEqual = _ref2.deepEqual,
	      getIn = _ref2.getIn,
	      size = _ref2.size;

	  var ConnectedFieldArray = (0, _ConnectedFieldArray2.default)({
	    deepEqual: deepEqual,
	    getIn: getIn,
	    size: size
	  });

	  var FieldArray = function (_Component) {
	    _inherits(FieldArray, _Component);

	    function FieldArray(props, context) {
	      _classCallCheck(this, FieldArray);

	      var _this = _possibleConstructorReturn(this, (FieldArray.__proto__ || Object.getPrototypeOf(FieldArray)).call(this, props, context));

	      if (!context._reduxForm) {
	        throw new Error('FieldArray must be inside a component decorated with reduxForm()');
	      }
	      return _this;
	    }

	    _createClass(FieldArray, [{
	      key: 'componentWillMount',
	      value: function componentWillMount() {
	        var _this2 = this;

	        this.context._reduxForm.register(this.name, 'FieldArray', function () {
	          return wrapError(_this2.props.validate, '_error');
	        }, function () {
	          return wrapError(_this2.props.warn, '_warning');
	        });
	      }
	    }, {
	      key: 'componentWillReceiveProps',
	      value: function componentWillReceiveProps(nextProps) {
	        if (this.props.name !== nextProps.name) {
	          // unregister old name
	          this.context._reduxForm.unregister(this.name
	          // register new name
	          );this.context._reduxForm.register((0, _prefixName2.default)(this.context, nextProps.name), 'FieldArray');
	        }
	      }
	    }, {
	      key: 'componentWillUnmount',
	      value: function componentWillUnmount() {
	        this.context._reduxForm.unregister(this.name);
	      }
	    }, {
	      key: 'getRenderedComponent',
	      value: function getRenderedComponent() {
	        (0, _invariant2.default)(this.props.withRef, 'If you want to access getRenderedComponent(), ' + 'you must specify a withRef prop to FieldArray');
	        return this.refs.connected.getWrappedInstance().getRenderedComponent();
	      }
	    }, {
	      key: 'render',
	      value: function render() {
	        return (0, _react.createElement)(ConnectedFieldArray, _extends({}, this.props, {
	          name: this.name,
	          syncError: this.syncError,
	          syncWarning: this.syncWarning,
	          _reduxForm: this.context._reduxForm,
	          ref: 'connected'
	        }));
	      }
	    }, {
	      key: 'name',
	      get: function get() {
	        return (0, _prefixName2.default)(this.context, this.props.name);
	      }
	    }, {
	      key: 'dirty',
	      get: function get() {
	        return this.refs.connected.getWrappedInstance().dirty;
	      }
	    }, {
	      key: 'pristine',
	      get: function get() {
	        return this.refs.connected.getWrappedInstance().pristine;
	      }
	    }, {
	      key: 'value',
	      get: function get() {
	        return this.refs.connected.getWrappedInstance().value;
	      }
	    }]);

	    return FieldArray;
	  }(_react.Component);

	  FieldArray.propTypes = {
	    name: _propTypes2.default.string.isRequired,
	    component: _propTypes2.default.func.isRequired,
	    props: _propTypes2.default.object,
	    validate: _propTypes2.default.oneOfType([_propTypes2.default.func, _propTypes2.default.arrayOf(_propTypes2.default.func)]),
	    warn: _propTypes2.default.oneOfType([_propTypes2.default.func, _propTypes2.default.arrayOf(_propTypes2.default.func)]),
	    withRef: _propTypes2.default.bool
	  };
	  FieldArray.contextTypes = {
	    _reduxForm: _propTypes2.default.object
	  };

	  return FieldArray;
	};

	exports.default = createFieldArray;

/***/ }),
/* 462 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _mapValues2 = __webpack_require__(463);

	var _mapValues3 = _interopRequireDefault(_mapValues2);

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(2);

	var _propTypes = __webpack_require__(205);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _reactRedux = __webpack_require__(160);

	var _redux = __webpack_require__(166);

	var _createFieldArrayProps = __webpack_require__(487);

	var _createFieldArrayProps2 = _interopRequireDefault(_createFieldArrayProps);

	var _plain = __webpack_require__(350);

	var _plain2 = _interopRequireDefault(_plain);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var propsToNotUpdateFor = ['_reduxForm', 'value'];

	var createConnectedFieldArray = function createConnectedFieldArray(_ref) {
	  var deepEqual = _ref.deepEqual,
	      getIn = _ref.getIn,
	      size = _ref.size;

	  var getSyncError = function getSyncError(syncErrors, name) {
	    // For an array, the error can _ONLY_ be under _error.
	    // This is why this getSyncError is not the same as the
	    // one in Field.
	    return _plain2.default.getIn(syncErrors, name + '._error');
	  };

	  var getSyncWarning = function getSyncWarning(syncWarnings, name) {
	    // For an array, the warning can _ONLY_ be under _warning.
	    // This is why this getSyncError is not the same as the
	    // one in Field.
	    return getIn(syncWarnings, name + '._warning');
	  };

	  var ConnectedFieldArray = function (_Component) {
	    _inherits(ConnectedFieldArray, _Component);

	    function ConnectedFieldArray() {
	      _classCallCheck(this, ConnectedFieldArray);

	      var _this = _possibleConstructorReturn(this, (ConnectedFieldArray.__proto__ || Object.getPrototypeOf(ConnectedFieldArray)).call(this));

	      _this.getValue = _this.getValue.bind(_this);
	      return _this;
	    }

	    _createClass(ConnectedFieldArray, [{
	      key: 'shouldComponentUpdate',
	      value: function shouldComponentUpdate(nextProps) {
	        var _this2 = this;

	        // Update if the elements of the value array was updated.
	        var thisValue = this.props.value;
	        var nextValue = nextProps.value;

	        if (thisValue && nextValue) {
	          if (thisValue.length !== nextValue.length || nextProps.rerenderOnEveryChange && thisValue.some(function (val) {
	            return nextValue.every(function (next) {
	              return !deepEqual(val, next);
	            });
	          })) {
	            return true;
	          }
	        }

	        var nextPropsKeys = Object.keys(nextProps);
	        var thisPropsKeys = Object.keys(this.props);
	        return nextPropsKeys.length !== thisPropsKeys.length || nextPropsKeys.some(function (prop) {
	          // useful to debug rerenders
	          // if (!plain.deepEqual(this.props[ prop ], nextProps[ prop ])) {
	          //   console.info(prop, 'changed', this.props[ prop ], '==>', nextProps[ prop ])
	          // }
	          return !~propsToNotUpdateFor.indexOf(prop) && !deepEqual(_this2.props[prop], nextProps[prop]);
	        });
	      }
	    }, {
	      key: 'getRenderedComponent',
	      value: function getRenderedComponent() {
	        return this.refs.renderedComponent;
	      }
	    }, {
	      key: 'getValue',
	      value: function getValue(index) {
	        return this.props.value && getIn(this.props.value, index);
	      }
	    }, {
	      key: 'render',
	      value: function render() {
	        var _props = this.props,
	            component = _props.component,
	            withRef = _props.withRef,
	            name = _props.name,
	            _reduxForm = _props._reduxForm,
	            validate = _props.validate,
	            warn = _props.warn,
	            rerenderOnEveryChange = _props.rerenderOnEveryChange,
	            rest = _objectWithoutProperties(_props, ['component', 'withRef', 'name', '_reduxForm', 'validate', 'warn', 'rerenderOnEveryChange']);

	        var props = (0, _createFieldArrayProps2.default)(getIn, name, _reduxForm.form, _reduxForm.sectionPrefix, this.getValue, rest);
	        if (withRef) {
	          props.ref = 'renderedComponent';
	        }
	        return (0, _react.createElement)(component, props);
	      }
	    }, {
	      key: 'dirty',
	      get: function get() {
	        return this.props.dirty;
	      }
	    }, {
	      key: 'pristine',
	      get: function get() {
	        return this.props.pristine;
	      }
	    }, {
	      key: 'value',
	      get: function get() {
	        return this.props.value;
	      }
	    }]);

	    return ConnectedFieldArray;
	  }(_react.Component);

	  ConnectedFieldArray.propTypes = {
	    component: _propTypes2.default.oneOfType([_propTypes2.default.func, _propTypes2.default.string]).isRequired,
	    props: _propTypes2.default.object,
	    rerenderOnEveryChange: _propTypes2.default.bool
	  };

	  ConnectedFieldArray.defaultProps = {
	    rerenderOnEveryChange: false
	  };

	  ConnectedFieldArray.contextTypes = {
	    _reduxForm: _propTypes2.default.object
	  };

	  var connector = (0, _reactRedux.connect)(function (state, ownProps) {
	    var name = ownProps.name,
	        _ownProps$_reduxForm = ownProps._reduxForm,
	        initialValues = _ownProps$_reduxForm.initialValues,
	        getFormState = _ownProps$_reduxForm.getFormState;

	    var formState = getFormState(state);
	    var initial = getIn(formState, 'initial.' + name) || initialValues && getIn(initialValues, name);
	    var value = getIn(formState, 'values.' + name);
	    var submitting = getIn(formState, 'submitting');
	    var syncError = getSyncError(getIn(formState, 'syncErrors'), name);
	    var syncWarning = getSyncWarning(getIn(formState, 'syncWarnings'), name);
	    var pristine = deepEqual(value, initial);
	    return {
	      asyncError: getIn(formState, 'asyncErrors.' + name + '._error'),
	      dirty: !pristine,
	      pristine: pristine,
	      state: getIn(formState, 'fields.' + name),
	      submitError: getIn(formState, 'submitErrors.' + name + '._error'),
	      submitFailed: getIn(formState, 'submitFailed'),
	      submitting: submitting,
	      syncError: syncError,
	      syncWarning: syncWarning,
	      value: value,
	      length: size(value)
	    };
	  }, function (dispatch, ownProps) {
	    var name = ownProps.name,
	        _reduxForm = ownProps._reduxForm;
	    var arrayInsert = _reduxForm.arrayInsert,
	        arrayMove = _reduxForm.arrayMove,
	        arrayPop = _reduxForm.arrayPop,
	        arrayPush = _reduxForm.arrayPush,
	        arrayRemove = _reduxForm.arrayRemove,
	        arrayRemoveAll = _reduxForm.arrayRemoveAll,
	        arrayShift = _reduxForm.arrayShift,
	        arraySplice = _reduxForm.arraySplice,
	        arraySwap = _reduxForm.arraySwap,
	        arrayUnshift = _reduxForm.arrayUnshift;

	    return (0, _mapValues3.default)({
	      arrayInsert: arrayInsert,
	      arrayMove: arrayMove,
	      arrayPop: arrayPop,
	      arrayPush: arrayPush,
	      arrayRemove: arrayRemove,
	      arrayRemoveAll: arrayRemoveAll,
	      arrayShift: arrayShift,
	      arraySplice: arraySplice,
	      arraySwap: arraySwap,
	      arrayUnshift: arrayUnshift
	    }, function (actionCreator) {
	      return (0, _redux.bindActionCreators)(actionCreator.bind(null, name), dispatch);
	    });
	  }, undefined, { withRef: true });
	  return connector(ConnectedFieldArray);
	};

	exports.default = createConnectedFieldArray;

/***/ }),
/* 463 */
/***/ (function(module, exports, __webpack_require__) {

	var baseAssignValue = __webpack_require__(464),
	    baseForOwn = __webpack_require__(466),
	    baseIteratee = __webpack_require__(469);

	/**
	 * Creates an object with the same keys as `object` and values generated
	 * by running each own enumerable string keyed property of `object` thru
	 * `iteratee`. The iteratee is invoked with three arguments:
	 * (value, key, object).
	 *
	 * @static
	 * @memberOf _
	 * @since 2.4.0
	 * @category Object
	 * @param {Object} object The object to iterate over.
	 * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	 * @returns {Object} Returns the new mapped object.
	 * @see _.mapKeys
	 * @example
	 *
	 * var users = {
	 *   'fred':    { 'user': 'fred',    'age': 40 },
	 *   'pebbles': { 'user': 'pebbles', 'age': 1 }
	 * };
	 *
	 * _.mapValues(users, function(o) { return o.age; });
	 * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)
	 *
	 * // The `_.property` iteratee shorthand.
	 * _.mapValues(users, 'age');
	 * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)
	 */
	function mapValues(object, iteratee) {
	  var result = {};
	  iteratee = baseIteratee(iteratee, 3);

	  baseForOwn(object, function(value, key, object) {
	    baseAssignValue(result, key, iteratee(value, key, object));
	  });
	  return result;
	}

	module.exports = mapValues;


/***/ }),
/* 464 */
/***/ (function(module, exports, __webpack_require__) {

	var defineProperty = __webpack_require__(465);

	/**
	 * The base implementation of `assignValue` and `assignMergeValue` without
	 * value checks.
	 *
	 * @private
	 * @param {Object} object The object to modify.
	 * @param {string} key The key of the property to assign.
	 * @param {*} value The value to assign.
	 */
	function baseAssignValue(object, key, value) {
	  if (key == '__proto__' && defineProperty) {
	    defineProperty(object, key, {
	      'configurable': true,
	      'enumerable': true,
	      'value': value,
	      'writable': true
	    });
	  } else {
	    object[key] = value;
	  }
	}

	module.exports = baseAssignValue;


/***/ }),
/* 465 */
/***/ (function(module, exports, __webpack_require__) {

	var getNative = __webpack_require__(373);

	var defineProperty = (function() {
	  try {
	    var func = getNative(Object, 'defineProperty');
	    func({}, '', {});
	    return func;
	  } catch (e) {}
	}());

	module.exports = defineProperty;


/***/ }),
/* 466 */
/***/ (function(module, exports, __webpack_require__) {

	var baseFor = __webpack_require__(467),
	    keys = __webpack_require__(431);

	/**
	 * The base implementation of `_.forOwn` without support for iteratee shorthands.
	 *
	 * @private
	 * @param {Object} object The object to iterate over.
	 * @param {Function} iteratee The function invoked per iteration.
	 * @returns {Object} Returns `object`.
	 */
	function baseForOwn(object, iteratee) {
	  return object && baseFor(object, iteratee, keys);
	}

	module.exports = baseForOwn;


/***/ }),
/* 467 */
/***/ (function(module, exports, __webpack_require__) {

	var createBaseFor = __webpack_require__(468);

	/**
	 * The base implementation of `baseForOwn` which iterates over `object`
	 * properties returned by `keysFunc` and invokes `iteratee` for each property.
	 * Iteratee functions may exit iteration early by explicitly returning `false`.
	 *
	 * @private
	 * @param {Object} object The object to iterate over.
	 * @param {Function} iteratee The function invoked per iteration.
	 * @param {Function} keysFunc The function to get the keys of `object`.
	 * @returns {Object} Returns `object`.
	 */
	var baseFor = createBaseFor();

	module.exports = baseFor;


/***/ }),
/* 468 */
/***/ (function(module, exports) {

	/**
	 * Creates a base function for methods like `_.forIn` and `_.forOwn`.
	 *
	 * @private
	 * @param {boolean} [fromRight] Specify iterating from right to left.
	 * @returns {Function} Returns the new base function.
	 */
	function createBaseFor(fromRight) {
	  return function(object, iteratee, keysFunc) {
	    var index = -1,
	        iterable = Object(object),
	        props = keysFunc(object),
	        length = props.length;

	    while (length--) {
	      var key = props[fromRight ? length : ++index];
	      if (iteratee(iterable[key], key, iterable) === false) {
	        break;
	      }
	    }
	    return object;
	  };
	}

	module.exports = createBaseFor;


/***/ }),
/* 469 */
/***/ (function(module, exports, __webpack_require__) {

	var baseMatches = __webpack_require__(470),
	    baseMatchesProperty = __webpack_require__(475),
	    identity = __webpack_require__(483),
	    isArray = __webpack_require__(356),
	    property = __webpack_require__(484);

	/**
	 * The base implementation of `_.iteratee`.
	 *
	 * @private
	 * @param {*} [value=_.identity] The value to convert to an iteratee.
	 * @returns {Function} Returns the iteratee.
	 */
	function baseIteratee(value) {
	  // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.
	  // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.
	  if (typeof value == 'function') {
	    return value;
	  }
	  if (value == null) {
	    return identity;
	  }
	  if (typeof value == 'object') {
	    return isArray(value)
	      ? baseMatchesProperty(value[0], value[1])
	      : baseMatches(value);
	  }
	  return property(value);
	}

	module.exports = baseIteratee;


/***/ }),
/* 470 */
/***/ (function(module, exports, __webpack_require__) {

	var baseIsMatch = __webpack_require__(471),
	    getMatchData = __webpack_require__(472),
	    matchesStrictComparable = __webpack_require__(474);

	/**
	 * The base implementation of `_.matches` which doesn't clone `source`.
	 *
	 * @private
	 * @param {Object} source The object of property values to match.
	 * @returns {Function} Returns the new spec function.
	 */
	function baseMatches(source) {
	  var matchData = getMatchData(source);
	  if (matchData.length == 1 && matchData[0][2]) {
	    return matchesStrictComparable(matchData[0][0], matchData[0][1]);
	  }
	  return function(object) {
	    return object === source || baseIsMatch(object, source, matchData);
	  };
	}

	module.exports = baseMatches;


/***/ }),
/* 471 */
/***/ (function(module, exports, __webpack_require__) {

	var Stack = __webpack_require__(408),
	    baseIsEqual = __webpack_require__(406);

	/** Used to compose bitmasks for value comparisons. */
	var COMPARE_PARTIAL_FLAG = 1,
	    COMPARE_UNORDERED_FLAG = 2;

	/**
	 * The base implementation of `_.isMatch` without support for iteratee shorthands.
	 *
	 * @private
	 * @param {Object} object The object to inspect.
	 * @param {Object} source The object of property values to match.
	 * @param {Array} matchData The property names, values, and compare flags to match.
	 * @param {Function} [customizer] The function to customize comparisons.
	 * @returns {boolean} Returns `true` if `object` is a match, else `false`.
	 */
	function baseIsMatch(object, source, matchData, customizer) {
	  var index = matchData.length,
	      length = index,
	      noCustomizer = !customizer;

	  if (object == null) {
	    return !length;
	  }
	  object = Object(object);
	  while (index--) {
	    var data = matchData[index];
	    if ((noCustomizer && data[2])
	          ? data[1] !== object[data[0]]
	          : !(data[0] in object)
	        ) {
	      return false;
	    }
	  }
	  while (++index < length) {
	    data = matchData[index];
	    var key = data[0],
	        objValue = object[key],
	        srcValue = data[1];

	    if (noCustomizer && data[2]) {
	      if (objValue === undefined && !(key in object)) {
	        return false;
	      }
	    } else {
	      var stack = new Stack;
	      if (customizer) {
	        var result = customizer(objValue, srcValue, key, object, source, stack);
	      }
	      if (!(result === undefined
	            ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)
	            : result
	          )) {
	        return false;
	      }
	    }
	  }
	  return true;
	}

	module.exports = baseIsMatch;


/***/ }),
/* 472 */
/***/ (function(module, exports, __webpack_require__) {

	var isStrictComparable = __webpack_require__(473),
	    keys = __webpack_require__(431);

	/**
	 * Gets the property names, values, and compare flags of `object`.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the match data of `object`.
	 */
	function getMatchData(object) {
	  var result = keys(object),
	      length = result.length;

	  while (length--) {
	    var key = result[length],
	        value = object[key];

	    result[length] = [key, value, isStrictComparable(value)];
	  }
	  return result;
	}

	module.exports = getMatchData;


/***/ }),
/* 473 */
/***/ (function(module, exports, __webpack_require__) {

	var isObject = __webpack_require__(376);

	/**
	 * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` if suitable for strict
	 *  equality comparisons, else `false`.
	 */
	function isStrictComparable(value) {
	  return value === value && !isObject(value);
	}

	module.exports = isStrictComparable;


/***/ }),
/* 474 */
/***/ (function(module, exports) {

	/**
	 * A specialized version of `matchesProperty` for source values suitable
	 * for strict equality comparisons, i.e. `===`.
	 *
	 * @private
	 * @param {string} key The key of the property to get.
	 * @param {*} srcValue The value to match.
	 * @returns {Function} Returns the new spec function.
	 */
	function matchesStrictComparable(key, srcValue) {
	  return function(object) {
	    if (object == null) {
	      return false;
	    }
	    return object[key] === srcValue &&
	      (srcValue !== undefined || (key in Object(object)));
	  };
	}

	module.exports = matchesStrictComparable;


/***/ }),
/* 475 */
/***/ (function(module, exports, __webpack_require__) {

	var baseIsEqual = __webpack_require__(406),
	    get = __webpack_require__(476),
	    hasIn = __webpack_require__(480),
	    isKey = __webpack_require__(479),
	    isStrictComparable = __webpack_require__(473),
	    matchesStrictComparable = __webpack_require__(474),
	    toKey = __webpack_require__(400);

	/** Used to compose bitmasks for value comparisons. */
	var COMPARE_PARTIAL_FLAG = 1,
	    COMPARE_UNORDERED_FLAG = 2;

	/**
	 * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.
	 *
	 * @private
	 * @param {string} path The path of the property to get.
	 * @param {*} srcValue The value to match.
	 * @returns {Function} Returns the new spec function.
	 */
	function baseMatchesProperty(path, srcValue) {
	  if (isKey(path) && isStrictComparable(srcValue)) {
	    return matchesStrictComparable(toKey(path), srcValue);
	  }
	  return function(object) {
	    var objValue = get(object, path);
	    return (objValue === undefined && objValue === srcValue)
	      ? hasIn(object, path)
	      : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);
	  };
	}

	module.exports = baseMatchesProperty;


/***/ }),
/* 476 */
/***/ (function(module, exports, __webpack_require__) {

	var baseGet = __webpack_require__(477);

	/**
	 * Gets the value at `path` of `object`. If the resolved value is
	 * `undefined`, the `defaultValue` is returned in its place.
	 *
	 * @static
	 * @memberOf _
	 * @since 3.7.0
	 * @category Object
	 * @param {Object} object The object to query.
	 * @param {Array|string} path The path of the property to get.
	 * @param {*} [defaultValue] The value returned for `undefined` resolved values.
	 * @returns {*} Returns the resolved value.
	 * @example
	 *
	 * var object = { 'a': [{ 'b': { 'c': 3 } }] };
	 *
	 * _.get(object, 'a[0].b.c');
	 * // => 3
	 *
	 * _.get(object, ['a', '0', 'b', 'c']);
	 * // => 3
	 *
	 * _.get(object, 'a.b.c', 'default');
	 * // => 'default'
	 */
	function get(object, path, defaultValue) {
	  var result = object == null ? undefined : baseGet(object, path);
	  return result === undefined ? defaultValue : result;
	}

	module.exports = get;


/***/ }),
/* 477 */
/***/ (function(module, exports, __webpack_require__) {

	var castPath = __webpack_require__(478),
	    toKey = __webpack_require__(400);

	/**
	 * The base implementation of `_.get` without support for default values.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @param {Array|string} path The path of the property to get.
	 * @returns {*} Returns the resolved value.
	 */
	function baseGet(object, path) {
	  path = castPath(path, object);

	  var index = 0,
	      length = path.length;

	  while (object != null && index < length) {
	    object = object[toKey(path[index++])];
	  }
	  return (index && index == length) ? object : undefined;
	}

	module.exports = baseGet;


/***/ }),
/* 478 */
/***/ (function(module, exports, __webpack_require__) {

	var isArray = __webpack_require__(356),
	    isKey = __webpack_require__(479),
	    stringToPath = __webpack_require__(365),
	    toString = __webpack_require__(401);

	/**
	 * Casts `value` to a path array if it's not one.
	 *
	 * @private
	 * @param {*} value The value to inspect.
	 * @param {Object} [object] The object to query keys on.
	 * @returns {Array} Returns the cast property path array.
	 */
	function castPath(value, object) {
	  if (isArray(value)) {
	    return value;
	  }
	  return isKey(value, object) ? [value] : stringToPath(toString(value));
	}

	module.exports = castPath;


/***/ }),
/* 479 */
/***/ (function(module, exports, __webpack_require__) {

	var isArray = __webpack_require__(356),
	    isSymbol = __webpack_require__(357);

	/** Used to match property names within property paths. */
	var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,
	    reIsPlainProp = /^\w*$/;

	/**
	 * Checks if `value` is a property name and not a property path.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @param {Object} [object] The object to query keys on.
	 * @returns {boolean} Returns `true` if `value` is a property name, else `false`.
	 */
	function isKey(value, object) {
	  if (isArray(value)) {
	    return false;
	  }
	  var type = typeof value;
	  if (type == 'number' || type == 'symbol' || type == 'boolean' ||
	      value == null || isSymbol(value)) {
	    return true;
	  }
	  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||
	    (object != null && value in Object(object));
	}

	module.exports = isKey;


/***/ }),
/* 480 */
/***/ (function(module, exports, __webpack_require__) {

	var baseHasIn = __webpack_require__(481),
	    hasPath = __webpack_require__(482);

	/**
	 * Checks if `path` is a direct or inherited property of `object`.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Object
	 * @param {Object} object The object to query.
	 * @param {Array|string} path The path to check.
	 * @returns {boolean} Returns `true` if `path` exists, else `false`.
	 * @example
	 *
	 * var object = _.create({ 'a': _.create({ 'b': 2 }) });
	 *
	 * _.hasIn(object, 'a');
	 * // => true
	 *
	 * _.hasIn(object, 'a.b');
	 * // => true
	 *
	 * _.hasIn(object, ['a', 'b']);
	 * // => true
	 *
	 * _.hasIn(object, 'b');
	 * // => false
	 */
	function hasIn(object, path) {
	  return object != null && hasPath(object, path, baseHasIn);
	}

	module.exports = hasIn;


/***/ }),
/* 481 */
/***/ (function(module, exports) {

	/**
	 * The base implementation of `_.hasIn` without support for deep paths.
	 *
	 * @private
	 * @param {Object} [object] The object to query.
	 * @param {Array|string} key The key to check.
	 * @returns {boolean} Returns `true` if `key` exists, else `false`.
	 */
	function baseHasIn(object, key) {
	  return object != null && key in Object(object);
	}

	module.exports = baseHasIn;


/***/ }),
/* 482 */
/***/ (function(module, exports, __webpack_require__) {

	var castPath = __webpack_require__(478),
	    isArguments = __webpack_require__(434),
	    isArray = __webpack_require__(356),
	    isIndex = __webpack_require__(438),
	    isLength = __webpack_require__(441),
	    toKey = __webpack_require__(400);

	/**
	 * Checks if `path` exists on `object`.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @param {Array|string} path The path to check.
	 * @param {Function} hasFunc The function to check properties.
	 * @returns {boolean} Returns `true` if `path` exists, else `false`.
	 */
	function hasPath(object, path, hasFunc) {
	  path = castPath(path, object);

	  var index = -1,
	      length = path.length,
	      result = false;

	  while (++index < length) {
	    var key = toKey(path[index]);
	    if (!(result = object != null && hasFunc(object, key))) {
	      break;
	    }
	    object = object[key];
	  }
	  if (result || ++index != length) {
	    return result;
	  }
	  length = object == null ? 0 : object.length;
	  return !!length && isLength(length) && isIndex(key, length) &&
	    (isArray(object) || isArguments(object));
	}

	module.exports = hasPath;


/***/ }),
/* 483 */
/***/ (function(module, exports) {

	/**
	 * This method returns the first argument it receives.
	 *
	 * @static
	 * @since 0.1.0
	 * @memberOf _
	 * @category Util
	 * @param {*} value Any value.
	 * @returns {*} Returns `value`.
	 * @example
	 *
	 * var object = { 'a': 1 };
	 *
	 * console.log(_.identity(object) === object);
	 * // => true
	 */
	function identity(value) {
	  return value;
	}

	module.exports = identity;


/***/ }),
/* 484 */
/***/ (function(module, exports, __webpack_require__) {

	var baseProperty = __webpack_require__(485),
	    basePropertyDeep = __webpack_require__(486),
	    isKey = __webpack_require__(479),
	    toKey = __webpack_require__(400);

	/**
	 * Creates a function that returns the value at `path` of a given object.
	 *
	 * @static
	 * @memberOf _
	 * @since 2.4.0
	 * @category Util
	 * @param {Array|string} path The path of the property to get.
	 * @returns {Function} Returns the new accessor function.
	 * @example
	 *
	 * var objects = [
	 *   { 'a': { 'b': 2 } },
	 *   { 'a': { 'b': 1 } }
	 * ];
	 *
	 * _.map(objects, _.property('a.b'));
	 * // => [2, 1]
	 *
	 * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');
	 * // => [1, 2]
	 */
	function property(path) {
	  return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);
	}

	module.exports = property;


/***/ }),
/* 485 */
/***/ (function(module, exports) {

	/**
	 * The base implementation of `_.property` without support for deep paths.
	 *
	 * @private
	 * @param {string} key The key of the property to get.
	 * @returns {Function} Returns the new accessor function.
	 */
	function baseProperty(key) {
	  return function(object) {
	    return object == null ? undefined : object[key];
	  };
	}

	module.exports = baseProperty;


/***/ }),
/* 486 */
/***/ (function(module, exports, __webpack_require__) {

	var baseGet = __webpack_require__(477);

	/**
	 * A specialized version of `baseProperty` which supports deep paths.
	 *
	 * @private
	 * @param {Array|string} path The path of the property to get.
	 * @returns {Function} Returns the new accessor function.
	 */
	function basePropertyDeep(path) {
	  return function(object) {
	    return baseGet(object, path);
	  };
	}

	module.exports = basePropertyDeep;


/***/ }),
/* 487 */
/***/ (function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

	var createFieldArrayProps = function createFieldArrayProps(getIn, name, form, sectionPrefix, getValue, _ref) {
	  var arrayInsert = _ref.arrayInsert,
	      arrayMove = _ref.arrayMove,
	      arrayPop = _ref.arrayPop,
	      arrayPush = _ref.arrayPush,
	      arrayRemove = _ref.arrayRemove,
	      arrayRemoveAll = _ref.arrayRemoveAll,
	      arrayShift = _ref.arrayShift,
	      arraySplice = _ref.arraySplice,
	      arraySwap = _ref.arraySwap,
	      arrayUnshift = _ref.arrayUnshift,
	      asyncError = _ref.asyncError,
	      dirty = _ref.dirty,
	      length = _ref.length,
	      pristine = _ref.pristine,
	      submitError = _ref.submitError,
	      state = _ref.state,
	      submitFailed = _ref.submitFailed,
	      submitting = _ref.submitting,
	      syncError = _ref.syncError,
	      syncWarning = _ref.syncWarning,
	      value = _ref.value,
	      props = _ref.props,
	      rest = _objectWithoutProperties(_ref, ['arrayInsert', 'arrayMove', 'arrayPop', 'arrayPush', 'arrayRemove', 'arrayRemoveAll', 'arrayShift', 'arraySplice', 'arraySwap', 'arrayUnshift', 'asyncError', 'dirty', 'length', 'pristine', 'submitError', 'state', 'submitFailed', 'submitting', 'syncError', 'syncWarning', 'value', 'props']);

	  var error = syncError || asyncError || submitError;
	  var warning = syncWarning;
	  var fieldName = sectionPrefix ? name.replace(sectionPrefix + '.', '') : name;
	  var finalProps = _extends({
	    fields: {
	      _isFieldArray: true,
	      forEach: function forEach(callback) {
	        return (value || []).forEach(function (item, index) {
	          return callback(fieldName + '[' + index + ']', index, finalProps.fields);
	        });
	      },
	      get: getValue,
	      getAll: function getAll() {
	        return value;
	      },
	      insert: arrayInsert,
	      length: length,
	      map: function map(callback) {
	        return (value || []).map(function (item, index) {
	          return callback(fieldName + '[' + index + ']', index, finalProps.fields);
	        });
	      },
	      move: arrayMove,
	      name: name,
	      pop: function pop() {
	        arrayPop();
	        return getIn(value, length - 1);
	      },
	      push: arrayPush,
	      reduce: function reduce(callback, initial) {
	        return (value || []).reduce(function (accumulator, item, index) {
	          return callback(accumulator, fieldName + '[' + index + ']', index, finalProps.fields);
	        }, initial);
	      },
	      remove: arrayRemove,
	      removeAll: arrayRemoveAll,
	      shift: function shift() {
	        arrayShift();
	        return getIn(value, 0);
	      },
	      swap: arraySwap,
	      unshift: arrayUnshift
	    },
	    meta: {
	      dirty: dirty,
	      error: error,
	      form: form,
	      warning: warning,
	      invalid: !!error,
	      pristine: pristine,
	      submitting: submitting,
	      submitFailed: submitFailed,
	      valid: !error
	    }
	  }, props, rest);
	  return finalProps;
	};

	exports.default = createFieldArrayProps;

/***/ }),
/* 488 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createFormValueSelector = __webpack_require__(489);

	var _createFormValueSelector2 = _interopRequireDefault(_createFormValueSelector);

	var _plain = __webpack_require__(350);

	var _plain2 = _interopRequireDefault(_plain);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = (0, _createFormValueSelector2.default)(_plain2.default);

/***/ }),
/* 489 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _invariant = __webpack_require__(198);

	var _invariant2 = _interopRequireDefault(_invariant);

	var _plain = __webpack_require__(350);

	var _plain2 = _interopRequireDefault(_plain);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var createFormValueSelector = function createFormValueSelector(_ref) {
	  var getIn = _ref.getIn;
	  return function (form) {
	    var getFormState = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function (state) {
	      return getIn(state, 'form');
	    };

	    (0, _invariant2.default)(form, 'Form value must be specified');
	    return function (state) {
	      for (var _len = arguments.length, fields = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	        fields[_key - 1] = arguments[_key];
	      }

	      (0, _invariant2.default)(fields.length, 'No fields specified');
	      return fields.length === 1 ? // only selecting one field, so return its value
	      getIn(getFormState(state), form + '.values.' + fields[0]) : // selecting many fields, so return an object of field values
	      fields.reduce(function (accumulator, field) {
	        var value = getIn(getFormState(state), form + '.values.' + field);
	        return value === undefined ? accumulator : _plain2.default.setIn(accumulator, field, value);
	      }, {});
	    };
	  };
	};

	exports.default = createFormValueSelector;

/***/ }),
/* 490 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createFormValues = __webpack_require__(491);

	var _createFormValues2 = _interopRequireDefault(_createFormValues);

	var _plain = __webpack_require__(350);

	var _plain2 = _interopRequireDefault(_plain);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = (0, _createFormValues2.default)(_plain2.default);

/***/ }),
/* 491 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(205);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _reactRedux = __webpack_require__(160);

	var _prefixName = __webpack_require__(337);

	var _prefixName2 = _interopRequireDefault(_prefixName);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var createValues = function createValues(_ref) {
	  var getIn = _ref.getIn;
	  return function () {
	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    var valuesMap = void 0;

	    if (typeof args[0] === 'string') {
	      valuesMap = args.map(function (k) {
	        return { prop: k, path: k };
	      });
	    } else {
	      var config = args[0];
	      valuesMap = Object.keys(config).map(function (k) {
	        return {
	          prop: k,
	          path: config[k]
	        };
	      });
	    }
	    if (!valuesMap.length) {
	      throw new Error('formValues(): You must specify values to get as formValues(name1, name2, ...) or formValues({propName1: propPath1, ...})');
	    }

	    // create a class that reads current form name and creates a selector
	    // return
	    return function (Component) {
	      var FormValues = function (_React$Component) {
	        _inherits(FormValues, _React$Component);

	        function FormValues(props, context) {
	          _classCallCheck(this, FormValues);

	          var _this = _possibleConstructorReturn(this, (FormValues.__proto__ || Object.getPrototypeOf(FormValues)).call(this, props, context));

	          if (!context._reduxForm) {
	            throw new Error('formValues() must be used inside a React tree decorated with reduxForm()');
	          }
	          var getValues = context._reduxForm.getValues;

	          var formValuesSelector = function formValuesSelector(_) {
	            // Yes, we're only using connect() for listening to updates
	            var props = {};
	            var values = getValues();
	            valuesMap.forEach(function (_ref2) {
	              var prop = _ref2.prop,
	                  path = _ref2.path;
	              return props[prop] = getIn(values, (0, _prefixName2.default)(context, path));
	            });
	            return props;
	          };
	          _this.Component = (0, _reactRedux.connect)(formValuesSelector, function () {
	            return {};
	          } // ignore dispatch
	          )(Component);
	          return _this;
	        }

	        _createClass(FormValues, [{
	          key: 'render',
	          value: function render() {
	            return _react2.default.createElement(this.Component, this.props);
	          }
	        }]);

	        return FormValues;
	      }(_react2.default.Component);

	      FormValues.contextTypes = {
	        _reduxForm: _propTypes2.default.object
	      };
	      return FormValues;
	    };
	  };
	};

	exports.default = createValues;

/***/ }),
/* 492 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _getFormNames = __webpack_require__(493);

	var _getFormNames2 = _interopRequireDefault(_getFormNames);

	var _plain = __webpack_require__(350);

	var _plain2 = _interopRequireDefault(_plain);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = (0, _getFormNames2.default)(_plain2.default);

/***/ }),
/* 493 */
/***/ (function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	var createGetFormNames = function createGetFormNames(_ref) {
	  var getIn = _ref.getIn,
	      keys = _ref.keys;
	  return function () {
	    var getFormState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : function (state) {
	      return getIn(state, 'form');
	    };
	    return function (state) {
	      return keys(getFormState(state));
	    };
	  };
	};

	exports.default = createGetFormNames;

/***/ }),
/* 494 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _getFormValues = __webpack_require__(495);

	var _getFormValues2 = _interopRequireDefault(_getFormValues);

	var _plain = __webpack_require__(350);

	var _plain2 = _interopRequireDefault(_plain);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = (0, _getFormValues2.default)(_plain2.default);

/***/ }),
/* 495 */
/***/ (function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	var createGetFormValues = function createGetFormValues(_ref) {
	  var getIn = _ref.getIn;
	  return function (form) {
	    var getFormState = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function (state) {
	      return getIn(state, 'form');
	    };
	    return function (state) {
	      return getIn(getFormState(state), form + '.values');
	    };
	  };
	};

	exports.default = createGetFormValues;

/***/ }),
/* 496 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _getFormInitialValues = __webpack_require__(497);

	var _getFormInitialValues2 = _interopRequireDefault(_getFormInitialValues);

	var _plain = __webpack_require__(350);

	var _plain2 = _interopRequireDefault(_plain);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = (0, _getFormInitialValues2.default)(_plain2.default);

/***/ }),
/* 497 */
/***/ (function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	var createGetFormInitialValues = function createGetFormInitialValues(_ref) {
	  var getIn = _ref.getIn;
	  return function (form) {
	    var getFormState = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function (state) {
	      return getIn(state, 'form');
	    };
	    return function (state) {
	      return getIn(getFormState(state), form + '.initial');
	    };
	  };
	};

	exports.default = createGetFormInitialValues;

/***/ }),
/* 498 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _getFormSyncErrors = __webpack_require__(499);

	var _getFormSyncErrors2 = _interopRequireDefault(_getFormSyncErrors);

	var _plain = __webpack_require__(350);

	var _plain2 = _interopRequireDefault(_plain);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = (0, _getFormSyncErrors2.default)(_plain2.default);

/***/ }),
/* 499 */
/***/ (function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	var createGetFormSyncErrors = function createGetFormSyncErrors(_ref) {
	  var getIn = _ref.getIn;
	  return function (form) {
	    var getFormState = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function (state) {
	      return getIn(state, 'form');
	    };
	    return function (state) {
	      return getIn(getFormState(state), form + '.syncErrors');
	    };
	  };
	};

	exports.default = createGetFormSyncErrors;

/***/ }),
/* 500 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _getFormMeta = __webpack_require__(501);

	var _getFormMeta2 = _interopRequireDefault(_getFormMeta);

	var _plain = __webpack_require__(350);

	var _plain2 = _interopRequireDefault(_plain);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = (0, _getFormMeta2.default)(_plain2.default);

/***/ }),
/* 501 */
/***/ (function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	var createGetFormMeta = function createGetFormMeta(_ref) {
	  var getIn = _ref.getIn;
	  return function (form) {
	    var getFormState = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function (state) {
	      return getIn(state, 'form');
	    };
	    return function (state) {
	      return getIn(getFormState(state), form + '.fields');
	    };
	  };
	};

	exports.default = createGetFormMeta;

/***/ }),
/* 502 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _getFormAsyncErrors = __webpack_require__(503);

	var _getFormAsyncErrors2 = _interopRequireDefault(_getFormAsyncErrors);

	var _plain = __webpack_require__(350);

	var _plain2 = _interopRequireDefault(_plain);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = (0, _getFormAsyncErrors2.default)(_plain2.default);

/***/ }),
/* 503 */
/***/ (function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	var createGetFormAsyncErrors = function createGetFormAsyncErrors(_ref) {
	  var getIn = _ref.getIn;
	  return function (form) {
	    var getFormState = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function (state) {
	      return getIn(state, 'form');
	    };
	    return function (state) {
	      return getIn(getFormState(state), form + '.asyncErrors');
	    };
	  };
	};

	exports.default = createGetFormAsyncErrors;

/***/ }),
/* 504 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _getFormSyncWarnings = __webpack_require__(505);

	var _getFormSyncWarnings2 = _interopRequireDefault(_getFormSyncWarnings);

	var _plain = __webpack_require__(350);

	var _plain2 = _interopRequireDefault(_plain);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = (0, _getFormSyncWarnings2.default)(_plain2.default);

/***/ }),
/* 505 */
/***/ (function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	var createGetFormSyncWarnings = function createGetFormSyncWarnings(_ref) {
	  var getIn = _ref.getIn;
	  return function (form) {
	    var getFormState = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function (state) {
	      return getIn(state, 'form');
	    };
	    return function (state) {
	      return getIn(getFormState(state), form + '.syncWarnings');
	    };
	  };
	};

	exports.default = createGetFormSyncWarnings;

/***/ }),
/* 506 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _getFormSubmitErrors = __webpack_require__(507);

	var _getFormSubmitErrors2 = _interopRequireDefault(_getFormSubmitErrors);

	var _plain = __webpack_require__(350);

	var _plain2 = _interopRequireDefault(_plain);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = (0, _getFormSubmitErrors2.default)(_plain2.default);

/***/ }),
/* 507 */
/***/ (function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	var createGetFormSubmitErrors = function createGetFormSubmitErrors(_ref) {
	  var getIn = _ref.getIn;
	  return function (form) {
	    var getFormState = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function (state) {
	      return getIn(state, 'form');
	    };
	    return function (state) {
	      return getIn(getFormState(state), form + '.submitErrors');
	    };
	  };
	};

	exports.default = createGetFormSubmitErrors;

/***/ }),
/* 508 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _isDirty = __webpack_require__(509);

	var _isDirty2 = _interopRequireDefault(_isDirty);

	var _plain = __webpack_require__(350);

	var _plain2 = _interopRequireDefault(_plain);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = (0, _isDirty2.default)(_plain2.default);

/***/ }),
/* 509 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _isPristine = __webpack_require__(510);

	var _isPristine2 = _interopRequireDefault(_isPristine);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var createIsDirty = function createIsDirty(structure) {
	  return function (form, getFormState) {
	    var isPristine = (0, _isPristine2.default)(structure)(form, getFormState);
	    return function (state) {
	      return !isPristine(state);
	    };
	  };
	};

	exports.default = createIsDirty;

/***/ }),
/* 510 */
/***/ (function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	var createIsPristine = function createIsPristine(_ref) {
	  var deepEqual = _ref.deepEqual,
	      empty = _ref.empty,
	      getIn = _ref.getIn;
	  return function (form) {
	    var getFormState = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function (state) {
	      return getIn(state, 'form');
	    };
	    return function (state) {
	      var formState = getFormState(state);
	      var initial = getIn(formState, form + '.initial') || empty;
	      var values = getIn(formState, form + '.values') || initial;
	      return deepEqual(initial, values);
	    };
	  };
	};

	exports.default = createIsPristine;

/***/ }),
/* 511 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _isInvalid = __webpack_require__(512);

	var _isInvalid2 = _interopRequireDefault(_isInvalid);

	var _plain = __webpack_require__(350);

	var _plain2 = _interopRequireDefault(_plain);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = (0, _isInvalid2.default)(_plain2.default);

/***/ }),
/* 512 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _isValid = __webpack_require__(513);

	var _isValid2 = _interopRequireDefault(_isValid);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var createIsInvalid = function createIsInvalid(structure) {
	  return function (form, getFormState) {
	    var isValid = (0, _isValid2.default)(structure)(form, getFormState);
	    return function (state) {
	      return !isValid(state);
	    };
	  };
	};

	exports.default = createIsInvalid;

/***/ }),
/* 513 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _hasError = __webpack_require__(514);

	var _hasError2 = _interopRequireDefault(_hasError);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var createIsValid = function createIsValid(structure) {
	  var getIn = structure.getIn,
	      keys = structure.keys;

	  var hasError = (0, _hasError2.default)(structure);
	  return function (form) {
	    var getFormState = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function (state) {
	      return getIn(state, 'form');
	    };
	    var ignoreSubmitErrors = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
	    return function (state) {
	      var formState = getFormState(state);
	      var syncError = getIn(formState, form + '.syncError');
	      if (syncError) {
	        return false;
	      }
	      if (!ignoreSubmitErrors) {
	        var error = getIn(formState, form + '.error');
	        if (error) {
	          return false;
	        }
	      }
	      var syncErrors = getIn(formState, form + '.syncErrors');
	      var asyncErrors = getIn(formState, form + '.asyncErrors');
	      var submitErrors = ignoreSubmitErrors ? undefined : getIn(formState, form + '.submitErrors');
	      if (!syncErrors && !asyncErrors && !submitErrors) {
	        return true;
	      }

	      var registeredFields = getIn(formState, form + '.registeredFields');
	      if (!registeredFields) {
	        return true;
	      }

	      return !keys(registeredFields).filter(function (name) {
	        return getIn(registeredFields, '[\'' + name + '\'].count') > 0;
	      }).some(function (name) {
	        return hasError(getIn(registeredFields, '[\'' + name + '\']'), syncErrors, asyncErrors, submitErrors);
	      });
	    };
	  };
	};

	exports.default = createIsValid;

/***/ }),
/* 514 */
/***/ (function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	var getErrorKeys = function getErrorKeys(name, type) {
	  switch (type) {
	    case 'Field':
	      return [name, name + '._error'];
	    case 'FieldArray':
	      return [name + '._error'];
	    default:
	      throw new Error('Unknown field type');
	  }
	};

	var createHasError = function createHasError(_ref) {
	  var getIn = _ref.getIn;

	  var hasError = function hasError(field, syncErrors, asyncErrors, submitErrors) {
	    if (!syncErrors && !asyncErrors && !submitErrors) {
	      return false;
	    }

	    var name = getIn(field, 'name');
	    var type = getIn(field, 'type');
	    return getErrorKeys(name, type).some(function (key) {
	      return getIn(syncErrors, key) || getIn(asyncErrors, key) || getIn(submitErrors, key);
	    });
	  };
	  return hasError;
	};

	exports.default = createHasError;

/***/ }),
/* 515 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _isPristine = __webpack_require__(510);

	var _isPristine2 = _interopRequireDefault(_isPristine);

	var _plain = __webpack_require__(350);

	var _plain2 = _interopRequireDefault(_plain);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = (0, _isPristine2.default)(_plain2.default);

/***/ }),
/* 516 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _isValid = __webpack_require__(513);

	var _isValid2 = _interopRequireDefault(_isValid);

	var _plain = __webpack_require__(350);

	var _plain2 = _interopRequireDefault(_plain);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = (0, _isValid2.default)(_plain2.default);

/***/ }),
/* 517 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _isSubmitting = __webpack_require__(518);

	var _isSubmitting2 = _interopRequireDefault(_isSubmitting);

	var _plain = __webpack_require__(350);

	var _plain2 = _interopRequireDefault(_plain);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = (0, _isSubmitting2.default)(_plain2.default);

/***/ }),
/* 518 */
/***/ (function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	var createIsSubmitting = function createIsSubmitting(_ref) {
	  var getIn = _ref.getIn;
	  return function (form) {
	    var getFormState = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function (state) {
	      return getIn(state, 'form');
	    };
	    return function (state) {
	      var formState = getFormState(state);
	      return getIn(formState, form + '.submitting') || false;
	    };
	  };
	};

	exports.default = createIsSubmitting;

/***/ }),
/* 519 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _hasSubmitSucceeded = __webpack_require__(520);

	var _hasSubmitSucceeded2 = _interopRequireDefault(_hasSubmitSucceeded);

	var _plain = __webpack_require__(350);

	var _plain2 = _interopRequireDefault(_plain);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = (0, _hasSubmitSucceeded2.default)(_plain2.default);

/***/ }),
/* 520 */
/***/ (function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	var createHasSubmitSucceeded = function createHasSubmitSucceeded(_ref) {
	  var getIn = _ref.getIn;
	  return function (form) {
	    var getFormState = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function (state) {
	      return getIn(state, 'form');
	    };
	    return function (state) {
	      var formState = getFormState(state);
	      return getIn(formState, form + '.submitSucceeded') || false;
	    };
	  };
	};

	exports.default = createHasSubmitSucceeded;

/***/ }),
/* 521 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _hasSubmitFailed = __webpack_require__(522);

	var _hasSubmitFailed2 = _interopRequireDefault(_hasSubmitFailed);

	var _plain = __webpack_require__(350);

	var _plain2 = _interopRequireDefault(_plain);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = (0, _hasSubmitFailed2.default)(_plain2.default);

/***/ }),
/* 522 */
/***/ (function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	var createHasSubmitFailed = function createHasSubmitFailed(_ref) {
	  var getIn = _ref.getIn;
	  return function (form) {
	    var getFormState = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function (state) {
	      return getIn(state, 'form');
	    };
	    return function (state) {
	      var formState = getFormState(state);
	      return getIn(formState, form + '.submitFailed') || false;
	    };
	  };
	};

	exports.default = createHasSubmitFailed;

/***/ }),
/* 523 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createReduxForm = __webpack_require__(524);

	var _createReduxForm2 = _interopRequireDefault(_createReduxForm);

	var _plain = __webpack_require__(350);

	var _plain2 = _interopRequireDefault(_plain);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = (0, _createReduxForm2.default)(_plain2.default);

/***/ }),
/* 524 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _merge4 = __webpack_require__(525);

	var _merge5 = _interopRequireDefault(_merge4);

	var _mapValues2 = __webpack_require__(463);

	var _mapValues3 = _interopRequireDefault(_mapValues2);

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	var _hoistNonReactStatics = __webpack_require__(197);

	var _hoistNonReactStatics2 = _interopRequireDefault(_hoistNonReactStatics);

	var _isPromise = __webpack_require__(552);

	var _isPromise2 = _interopRequireDefault(_isPromise);

	var _propTypes = __webpack_require__(205);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _reactRedux = __webpack_require__(160);

	var _redux = __webpack_require__(166);

	var _actions = __webpack_require__(553);

	var importedActions = _interopRequireWildcard(_actions);

	var _asyncValidation = __webpack_require__(555);

	var _asyncValidation2 = _interopRequireDefault(_asyncValidation);

	var _defaultShouldAsyncValidate = __webpack_require__(333);

	var _defaultShouldAsyncValidate2 = _interopRequireDefault(_defaultShouldAsyncValidate);

	var _defaultShouldValidate = __webpack_require__(334);

	var _defaultShouldValidate2 = _interopRequireDefault(_defaultShouldValidate);

	var _silenceEvent = __webpack_require__(556);

	var _silenceEvent2 = _interopRequireDefault(_silenceEvent);

	var _silenceEvents = __webpack_require__(557);

	var _silenceEvents2 = _interopRequireDefault(_silenceEvents);

	var _generateValidator2 = __webpack_require__(558);

	var _generateValidator3 = _interopRequireDefault(_generateValidator2);

	var _handleSubmit = __webpack_require__(559);

	var _handleSubmit2 = _interopRequireDefault(_handleSubmit);

	var _isValid = __webpack_require__(513);

	var _isValid2 = _interopRequireDefault(_isValid);

	var _plain = __webpack_require__(350);

	var _plain2 = _interopRequireDefault(_plain);

	var _getDisplayName = __webpack_require__(560);

	var _getDisplayName2 = _interopRequireDefault(_getDisplayName);

	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

	var isClassComponent = function isClassComponent(Component) {
	  return Boolean(Component && Component.prototype && _typeof(Component.prototype.isReactComponent) === 'object'

	  // extract field-specific actions
	  );
	};
	var arrayInsert = importedActions.arrayInsert,
	    arrayMove = importedActions.arrayMove,
	    arrayPop = importedActions.arrayPop,
	    arrayPush = importedActions.arrayPush,
	    arrayRemove = importedActions.arrayRemove,
	    arrayRemoveAll = importedActions.arrayRemoveAll,
	    arrayShift = importedActions.arrayShift,
	    arraySplice = importedActions.arraySplice,
	    arraySwap = importedActions.arraySwap,
	    arrayUnshift = importedActions.arrayUnshift,
	    blur = importedActions.blur,
	    change = importedActions.change,
	    focus = importedActions.focus,
	    formActions = _objectWithoutProperties(importedActions, ['arrayInsert', 'arrayMove', 'arrayPop', 'arrayPush', 'arrayRemove', 'arrayRemoveAll', 'arrayShift', 'arraySplice', 'arraySwap', 'arrayUnshift', 'blur', 'change', 'focus']);

	var arrayActions = {
	  arrayInsert: arrayInsert,
	  arrayMove: arrayMove,
	  arrayPop: arrayPop,
	  arrayPush: arrayPush,
	  arrayRemove: arrayRemove,
	  arrayRemoveAll: arrayRemoveAll,
	  arrayShift: arrayShift,
	  arraySplice: arraySplice,
	  arraySwap: arraySwap,
	  arrayUnshift: arrayUnshift
	};

	var propsToNotUpdateFor = [].concat(_toConsumableArray(Object.keys(importedActions)), ['array', 'asyncErrors', 'initialValues', 'syncErrors', 'syncWarnings', 'values', 'registeredFields']);

	var checkSubmit = function checkSubmit(submit) {
	  if (!submit || typeof submit !== 'function') {
	    throw new Error('You must either pass handleSubmit() an onSubmit function or pass onSubmit as a prop');
	  }
	  return submit;
	};

	/**
	 * The decorator that is the main API to redux-form
	 */
	var createReduxForm = function createReduxForm(structure) {
	  var deepEqual = structure.deepEqual,
	      empty = structure.empty,
	      getIn = structure.getIn,
	      setIn = structure.setIn,
	      keys = structure.keys,
	      fromJS = structure.fromJS;

	  var isValid = (0, _isValid2.default)(structure);
	  return function (initialConfig) {
	    var config = _extends({
	      touchOnBlur: true,
	      touchOnChange: false,
	      persistentSubmitErrors: false,
	      destroyOnUnmount: true,
	      shouldAsyncValidate: _defaultShouldAsyncValidate2.default,
	      shouldValidate: _defaultShouldValidate2.default,
	      enableReinitialize: false,
	      keepDirtyOnReinitialize: false,
	      getFormState: function getFormState(state) {
	        return getIn(state, 'form');
	      },
	      pure: true,
	      forceUnregisterOnUnmount: false
	    }, initialConfig);

	    return function (WrappedComponent) {
	      var Form = function (_Component) {
	        _inherits(Form, _Component);

	        function Form(props) {
	          _classCallCheck(this, Form);

	          var _this = _possibleConstructorReturn(this, (Form.__proto__ || Object.getPrototypeOf(Form)).call(this, props));

	          _this.submit = _this.submit.bind(_this);
	          _this.reset = _this.reset.bind(_this);
	          _this.asyncValidate = _this.asyncValidate.bind(_this);
	          _this.getValues = _this.getValues.bind(_this);
	          _this.register = _this.register.bind(_this);
	          _this.unregister = _this.unregister.bind(_this);
	          _this.submitCompleted = _this.submitCompleted.bind(_this);
	          _this.submitFailed = _this.submitFailed.bind(_this);
	          _this.fieldValidators = {};
	          _this.lastFieldValidatorKeys = [];
	          _this.fieldWarners = {};
	          _this.lastFieldWarnerKeys = [];
	          return _this;
	        }

	        _createClass(Form, [{
	          key: 'getChildContext',
	          value: function getChildContext() {
	            var _this2 = this;

	            return {
	              _reduxForm: _extends({}, this.props, {
	                getFormState: function getFormState(state) {
	                  return getIn(_this2.props.getFormState(state), _this2.props.form);
	                },
	                asyncValidate: this.asyncValidate,
	                getValues: this.getValues,
	                sectionPrefix: undefined,
	                register: this.register,
	                unregister: this.unregister,
	                registerInnerOnSubmit: function registerInnerOnSubmit(innerOnSubmit) {
	                  return _this2.innerOnSubmit = innerOnSubmit;
	                }
	              })
	            };
	          }
	        }, {
	          key: 'initIfNeeded',
	          value: function initIfNeeded(nextProps) {
	            var enableReinitialize = this.props.enableReinitialize;

	            if (nextProps) {
	              if ((enableReinitialize || !nextProps.initialized) && !deepEqual(this.props.initialValues, nextProps.initialValues)) {
	                var keepDirty = nextProps.initialized && this.props.keepDirtyOnReinitialize;
	                this.props.initialize(nextProps.initialValues, keepDirty, {
	                  lastInitialValues: this.props.initialValues
	                });
	              }
	            } else if (this.props.initialValues && (!this.props.initialized || enableReinitialize)) {
	              this.props.initialize(this.props.initialValues, this.props.keepDirtyOnReinitialize);
	            }
	          }
	        }, {
	          key: 'updateSyncErrorsIfNeeded',
	          value: function updateSyncErrorsIfNeeded(nextSyncErrors, nextError, lastSyncErrors) {
	            var _props = this.props,
	                error = _props.error,
	                updateSyncErrors = _props.updateSyncErrors;

	            var noErrors = (!lastSyncErrors || !Object.keys(lastSyncErrors).length) && !error;
	            var nextNoErrors = (!nextSyncErrors || !Object.keys(nextSyncErrors).length) && !nextError;
	            if (!(noErrors && nextNoErrors) && (!_plain2.default.deepEqual(lastSyncErrors, nextSyncErrors) || !_plain2.default.deepEqual(error, nextError))) {
	              updateSyncErrors(nextSyncErrors, nextError);
	            }
	          }
	        }, {
	          key: 'clearSubmitPromiseIfNeeded',
	          value: function clearSubmitPromiseIfNeeded(nextProps) {
	            var submitting = this.props.submitting;

	            if (this.submitPromise && submitting && !nextProps.submitting) {
	              delete this.submitPromise;
	            }
	          }
	        }, {
	          key: 'submitIfNeeded',
	          value: function submitIfNeeded(nextProps) {
	            var _props2 = this.props,
	                clearSubmit = _props2.clearSubmit,
	                triggerSubmit = _props2.triggerSubmit;

	            if (!triggerSubmit && nextProps.triggerSubmit) {
	              clearSubmit();
	              this.submit();
	            }
	          }
	        }, {
	          key: 'validateIfNeeded',
	          value: function validateIfNeeded(nextProps) {
	            var _props3 = this.props,
	                shouldValidate = _props3.shouldValidate,
	                validate = _props3.validate,
	                values = _props3.values;

	            var fieldLevelValidate = this.generateValidator();
	            if (validate || fieldLevelValidate) {
	              var initialRender = nextProps === undefined;
	              var fieldValidatorKeys = Object.keys(this.getValidators());
	              var shouldValidateResult = shouldValidate({
	                values: values,
	                nextProps: nextProps,
	                props: this.props,
	                initialRender: initialRender,
	                lastFieldValidatorKeys: this.lastFieldValidatorKeys,
	                fieldValidatorKeys: fieldValidatorKeys,
	                structure: structure
	              });

	              if (shouldValidateResult) {
	                var propsToValidate = initialRender ? this.props : nextProps;

	                var _merge2 = (0, _merge5.default)(validate ? validate(propsToValidate.values, propsToValidate) || {} : {}, fieldLevelValidate ? fieldLevelValidate(propsToValidate.values, propsToValidate) || {} : {}),
	                    _error = _merge2._error,
	                    nextSyncErrors = _objectWithoutProperties(_merge2, ['_error']);

	                this.lastFieldValidatorKeys = fieldValidatorKeys;
	                this.updateSyncErrorsIfNeeded(nextSyncErrors, _error, propsToValidate.syncErrors);
	              }
	            }
	          }
	        }, {
	          key: 'updateSyncWarningsIfNeeded',
	          value: function updateSyncWarningsIfNeeded(nextSyncWarnings, nextWarning, lastSyncWarnings) {
	            var _props4 = this.props,
	                warning = _props4.warning,
	                syncWarnings = _props4.syncWarnings,
	                updateSyncWarnings = _props4.updateSyncWarnings;

	            var noWarnings = (!syncWarnings || !Object.keys(syncWarnings).length) && !warning;
	            var nextNoWarnings = (!nextSyncWarnings || !Object.keys(nextSyncWarnings).length) && !nextWarning;
	            if (!(noWarnings && nextNoWarnings) && (!_plain2.default.deepEqual(lastSyncWarnings, nextSyncWarnings) || !_plain2.default.deepEqual(warning, nextWarning))) {
	              updateSyncWarnings(nextSyncWarnings, nextWarning);
	            }
	          }
	        }, {
	          key: 'warnIfNeeded',
	          value: function warnIfNeeded(nextProps) {
	            var _props5 = this.props,
	                shouldValidate = _props5.shouldValidate,
	                warn = _props5.warn,
	                values = _props5.values;

	            var fieldLevelWarn = this.generateWarner();
	            if (warn || fieldLevelWarn) {
	              var initialRender = nextProps === undefined;
	              var fieldWarnerKeys = Object.keys(this.getWarners());
	              var shouldWarnResult = shouldValidate({
	                values: values,
	                nextProps: nextProps,
	                props: this.props,
	                initialRender: initialRender,
	                lastFieldValidatorKeys: this.lastFieldWarnerKeys,
	                fieldValidatorKeys: fieldWarnerKeys,
	                structure: structure
	              });

	              if (shouldWarnResult) {
	                var propsToWarn = initialRender ? this.props : nextProps;

	                var _merge3 = (0, _merge5.default)(warn ? warn(propsToWarn.values, propsToWarn) : {}, fieldLevelWarn ? fieldLevelWarn(propsToWarn.values, propsToWarn) : {}),
	                    _warning = _merge3._warning,
	                    nextSyncWarnings = _objectWithoutProperties(_merge3, ['_warning']);

	                this.lastFieldWarnerKeys = fieldWarnerKeys;
	                this.updateSyncWarningsIfNeeded(nextSyncWarnings, _warning, propsToWarn.syncWarnings);
	              }
	            }
	          }
	        }, {
	          key: 'componentWillMount',
	          value: function componentWillMount() {
	            this.initIfNeeded();
	            this.validateIfNeeded();
	            this.warnIfNeeded();
	          }
	        }, {
	          key: 'componentWillReceiveProps',
	          value: function componentWillReceiveProps(nextProps) {
	            this.initIfNeeded(nextProps);
	            this.validateIfNeeded(nextProps);
	            this.warnIfNeeded(nextProps);
	            this.clearSubmitPromiseIfNeeded(nextProps);
	            this.submitIfNeeded(nextProps);
	            if (nextProps.onChange) {
	              if (!deepEqual(nextProps.values, this.props.values)) {
	                nextProps.onChange(nextProps.values, nextProps.dispatch, nextProps);
	              }
	            }
	          }
	        }, {
	          key: 'shouldComponentUpdate',
	          value: function shouldComponentUpdate(nextProps) {
	            var _this3 = this;

	            if (!this.props.pure) return true;
	            var _initialConfig$immuta = initialConfig.immutableProps,
	                immutableProps = _initialConfig$immuta === undefined ? [] : _initialConfig$immuta;

	            return Object.keys(nextProps).some(function (prop) {
	              // useful to debug rerenders
	              // if (!plain.deepEqual(this.props[ prop ], nextProps[ prop ])) {
	              //   console.info(prop, 'changed', this.props[ prop ], '==>', nextProps[ prop ])
	              // }
	              if (~immutableProps.indexOf(prop)) {
	                return _this3.props[prop] !== nextProps[prop];
	              }
	              return !~propsToNotUpdateFor.indexOf(prop) && !deepEqual(_this3.props[prop], nextProps[prop]);
	            });
	          }
	        }, {
	          key: 'componentWillUnmount',
	          value: function componentWillUnmount() {
	            var _props6 = this.props,
	                destroyOnUnmount = _props6.destroyOnUnmount,
	                destroy = _props6.destroy;

	            if (destroyOnUnmount) {
	              this.destroyed = true;
	              destroy();
	            }
	          }
	        }, {
	          key: 'getValues',
	          value: function getValues() {
	            return this.props.values;
	          }
	        }, {
	          key: 'isValid',
	          value: function isValid() {
	            return this.props.valid;
	          }
	        }, {
	          key: 'isPristine',
	          value: function isPristine() {
	            return this.props.pristine;
	          }
	        }, {
	          key: 'register',
	          value: function register(name, type, getValidator, getWarner) {
	            this.props.registerField(name, type);
	            if (getValidator) {
	              this.fieldValidators[name] = getValidator;
	            }
	            if (getWarner) {
	              this.fieldWarners[name] = getWarner;
	            }
	          }
	        }, {
	          key: 'unregister',
	          value: function unregister(name) {
	            if (!this.destroyed) {
	              if (this.props.destroyOnUnmount || this.props.forceUnregisterOnUnmount) {
	                this.props.unregisterField(name);
	                delete this.fieldValidators[name];
	                delete this.fieldWarners[name];
	              } else {
	                this.props.unregisterField(name, false);
	              }
	            }
	          }
	        }, {
	          key: 'getFieldList',
	          value: function getFieldList(options) {
	            var registeredFields = this.props.registeredFields;
	            var list = [];
	            if (!registeredFields) {
	              return list;
	            }
	            var keySeq = keys(registeredFields);
	            if (options && options.excludeFieldArray) {
	              keySeq = keySeq.filter(function (name) {
	                return getIn(registeredFields, '[\'' + name + '\'].type') !== 'FieldArray';
	              });
	            }
	            return fromJS(keySeq.reduce(function (acc, key) {
	              acc.push(key);
	              return acc;
	            }, list));
	          }
	        }, {
	          key: 'getValidators',
	          value: function getValidators() {
	            var _this4 = this;

	            var validators = {};
	            Object.keys(this.fieldValidators).forEach(function (name) {
	              var validator = _this4.fieldValidators[name]();
	              if (validator) {
	                validators[name] = validator;
	              }
	            });
	            return validators;
	          }
	        }, {
	          key: 'generateValidator',
	          value: function generateValidator() {
	            var validators = this.getValidators();
	            return Object.keys(validators).length ? (0, _generateValidator3.default)(validators, structure) : undefined;
	          }
	        }, {
	          key: 'getWarners',
	          value: function getWarners() {
	            var _this5 = this;

	            var warners = {};
	            Object.keys(this.fieldWarners).forEach(function (name) {
	              var warner = _this5.fieldWarners[name]();
	              if (warner) {
	                warners[name] = warner;
	              }
	            });
	            return warners;
	          }
	        }, {
	          key: 'generateWarner',
	          value: function generateWarner() {
	            var warners = this.getWarners();
	            return Object.keys(warners).length ? (0, _generateValidator3.default)(warners, structure) : undefined;
	          }
	        }, {
	          key: 'asyncValidate',
	          value: function asyncValidate(name, value) {
	            var _this6 = this;

	            var _props7 = this.props,
	                asyncBlurFields = _props7.asyncBlurFields,
	                asyncErrors = _props7.asyncErrors,
	                asyncValidate = _props7.asyncValidate,
	                dispatch = _props7.dispatch,
	                initialized = _props7.initialized,
	                pristine = _props7.pristine,
	                shouldAsyncValidate = _props7.shouldAsyncValidate,
	                startAsyncValidation = _props7.startAsyncValidation,
	                stopAsyncValidation = _props7.stopAsyncValidation,
	                syncErrors = _props7.syncErrors,
	                values = _props7.values;

	            var submitting = !name;
	            if (asyncValidate) {
	              var valuesToValidate = submitting ? values : setIn(values, name, value);
	              var syncValidationPasses = submitting || !getIn(syncErrors, name);
	              var isBlurredField = !submitting && (!asyncBlurFields || ~asyncBlurFields.indexOf(name.replace(/\[[0-9]+\]/g, '[]')));
	              if ((isBlurredField || submitting) && shouldAsyncValidate({
	                asyncErrors: asyncErrors,
	                initialized: initialized,
	                trigger: submitting ? 'submit' : 'blur',
	                blurredField: name,
	                pristine: pristine,
	                syncValidationPasses: syncValidationPasses
	              })) {
	                return (0, _asyncValidation2.default)(function () {
	                  return asyncValidate(valuesToValidate, dispatch, _this6.props, name);
	                }, startAsyncValidation, stopAsyncValidation, name);
	              }
	            }
	          }
	        }, {
	          key: 'submitCompleted',
	          value: function submitCompleted(result) {
	            delete this.submitPromise;
	            return result;
	          }
	        }, {
	          key: 'submitFailed',
	          value: function submitFailed(error) {
	            delete this.submitPromise;
	            throw error;
	          }
	        }, {
	          key: 'listenToSubmit',
	          value: function listenToSubmit(promise) {
	            if (!(0, _isPromise2.default)(promise)) {
	              return promise;
	            }
	            this.submitPromise = promise;
	            return promise.then(this.submitCompleted, this.submitFailed);
	          }
	        }, {
	          key: 'submit',
	          value: function submit(submitOrEvent) {
	            var _this7 = this;

	            var _props8 = this.props,
	                onSubmit = _props8.onSubmit,
	                blur = _props8.blur,
	                change = _props8.change,
	                dispatch = _props8.dispatch;


	            if (!submitOrEvent || (0, _silenceEvent2.default)(submitOrEvent)) {
	              // submitOrEvent is an event: fire submit if not already submitting
	              if (!this.submitPromise) {
	                // avoid recursive stack trace if use Form with onSubmit as handleSubmit
	                if (this.innerOnSubmit && this.innerOnSubmit !== this.submit) {
	                  // will call "submitOrEvent is the submit function" block below
	                  return this.innerOnSubmit();
	                } else {
	                  return this.listenToSubmit((0, _handleSubmit2.default)(checkSubmit(onSubmit), _extends({}, this.props, (0, _redux.bindActionCreators)({ blur: blur, change: change }, dispatch)), this.props.validExceptSubmit, this.asyncValidate, this.getFieldList({ excludeFieldArray: true })));
	                }
	              }
	            } else {
	              // submitOrEvent is the submit function: return deferred submit thunk
	              return (0, _silenceEvents2.default)(function () {
	                return !_this7.submitPromise && _this7.listenToSubmit((0, _handleSubmit2.default)(checkSubmit(submitOrEvent), _extends({}, _this7.props, (0, _redux.bindActionCreators)({ blur: blur, change: change }, dispatch)), _this7.props.validExceptSubmit, _this7.asyncValidate, _this7.getFieldList({ excludeFieldArray: true })));
	              });
	            }
	          }
	        }, {
	          key: 'reset',
	          value: function reset() {
	            this.props.reset();
	          }
	        }, {
	          key: 'render',
	          value: function render() {
	            // remove some redux-form config-only props
	            /* eslint-disable no-unused-vars */
	            var _props9 = this.props,
	                anyTouched = _props9.anyTouched,
	                arrayInsert = _props9.arrayInsert,
	                arrayMove = _props9.arrayMove,
	                arrayPop = _props9.arrayPop,
	                arrayPush = _props9.arrayPush,
	                arrayRemove = _props9.arrayRemove,
	                arrayRemoveAll = _props9.arrayRemoveAll,
	                arrayShift = _props9.arrayShift,
	                arraySplice = _props9.arraySplice,
	                arraySwap = _props9.arraySwap,
	                arrayUnshift = _props9.arrayUnshift,
	                asyncErrors = _props9.asyncErrors,
	                asyncValidate = _props9.asyncValidate,
	                asyncValidating = _props9.asyncValidating,
	                blur = _props9.blur,
	                change = _props9.change,
	                destroy = _props9.destroy,
	                destroyOnUnmount = _props9.destroyOnUnmount,
	                forceUnregisterOnUnmount = _props9.forceUnregisterOnUnmount,
	                dirty = _props9.dirty,
	                dispatch = _props9.dispatch,
	                enableReinitialize = _props9.enableReinitialize,
	                error = _props9.error,
	                focus = _props9.focus,
	                form = _props9.form,
	                getFormState = _props9.getFormState,
	                initialize = _props9.initialize,
	                initialized = _props9.initialized,
	                initialValues = _props9.initialValues,
	                invalid = _props9.invalid,
	                keepDirtyOnReinitialize = _props9.keepDirtyOnReinitialize,
	                pristine = _props9.pristine,
	                propNamespace = _props9.propNamespace,
	                registeredFields = _props9.registeredFields,
	                registerField = _props9.registerField,
	                reset = _props9.reset,
	                setSubmitFailed = _props9.setSubmitFailed,
	                setSubmitSucceeded = _props9.setSubmitSucceeded,
	                shouldAsyncValidate = _props9.shouldAsyncValidate,
	                shouldValidate = _props9.shouldValidate,
	                startAsyncValidation = _props9.startAsyncValidation,
	                startSubmit = _props9.startSubmit,
	                stopAsyncValidation = _props9.stopAsyncValidation,
	                stopSubmit = _props9.stopSubmit,
	                submitting = _props9.submitting,
	                submitFailed = _props9.submitFailed,
	                submitSucceeded = _props9.submitSucceeded,
	                touch = _props9.touch,
	                touchOnBlur = _props9.touchOnBlur,
	                touchOnChange = _props9.touchOnChange,
	                persistentSubmitErrors = _props9.persistentSubmitErrors,
	                syncErrors = _props9.syncErrors,
	                syncWarnings = _props9.syncWarnings,
	                unregisterField = _props9.unregisterField,
	                untouch = _props9.untouch,
	                updateSyncErrors = _props9.updateSyncErrors,
	                updateSyncWarnings = _props9.updateSyncWarnings,
	                valid = _props9.valid,
	                validExceptSubmit = _props9.validExceptSubmit,
	                values = _props9.values,
	                warning = _props9.warning,
	                rest = _objectWithoutProperties(_props9, ['anyTouched', 'arrayInsert', 'arrayMove', 'arrayPop', 'arrayPush', 'arrayRemove', 'arrayRemoveAll', 'arrayShift', 'arraySplice', 'arraySwap', 'arrayUnshift', 'asyncErrors', 'asyncValidate', 'asyncValidating', 'blur', 'change', 'destroy', 'destroyOnUnmount', 'forceUnregisterOnUnmount', 'dirty', 'dispatch', 'enableReinitialize', 'error', 'focus', 'form', 'getFormState', 'initialize', 'initialized', 'initialValues', 'invalid', 'keepDirtyOnReinitialize', 'pristine', 'propNamespace', 'registeredFields', 'registerField', 'reset', 'setSubmitFailed', 'setSubmitSucceeded', 'shouldAsyncValidate', 'shouldValidate', 'startAsyncValidation', 'startSubmit', 'stopAsyncValidation', 'stopSubmit', 'submitting', 'submitFailed', 'submitSucceeded', 'touch', 'touchOnBlur', 'touchOnChange', 'persistentSubmitErrors', 'syncErrors', 'syncWarnings', 'unregisterField', 'untouch', 'updateSyncErrors', 'updateSyncWarnings', 'valid', 'validExceptSubmit', 'values', 'warning']);
	            /* eslint-enable no-unused-vars */


	            var reduxFormProps = _extends({
	              anyTouched: anyTouched,
	              asyncValidate: this.asyncValidate,
	              asyncValidating: asyncValidating
	            }, (0, _redux.bindActionCreators)({ blur: blur, change: change }, dispatch), {
	              destroy: destroy,
	              dirty: dirty,
	              dispatch: dispatch,
	              error: error,
	              form: form,
	              handleSubmit: this.submit,
	              initialize: initialize,
	              initialized: initialized,
	              initialValues: initialValues,
	              invalid: invalid,
	              pristine: pristine,
	              reset: reset,
	              submitting: submitting,
	              submitFailed: submitFailed,
	              submitSucceeded: submitSucceeded,
	              touch: touch,
	              untouch: untouch,
	              valid: valid,
	              warning: warning
	            });
	            var propsToPass = _extends({}, propNamespace ? _defineProperty({}, propNamespace, reduxFormProps) : reduxFormProps, rest);
	            if (isClassComponent(WrappedComponent)) {
	              propsToPass.ref = 'wrapped';
	            }
	            return (0, _react.createElement)(WrappedComponent, propsToPass);
	          }
	        }]);

	        return Form;
	      }(_react.Component);

	      Form.displayName = 'Form(' + (0, _getDisplayName2.default)(WrappedComponent) + ')';
	      Form.WrappedComponent = WrappedComponent;
	      Form.childContextTypes = {
	        _reduxForm: _propTypes2.default.object.isRequired
	      };
	      Form.propTypes = {
	        destroyOnUnmount: _propTypes2.default.bool,
	        forceUnregisterOnUnmount: _propTypes2.default.bool,
	        form: _propTypes2.default.string.isRequired,
	        initialValues: _propTypes2.default.oneOfType([_propTypes2.default.array, _propTypes2.default.object]),
	        getFormState: _propTypes2.default.func,
	        onSubmitFail: _propTypes2.default.func,
	        onSubmitSuccess: _propTypes2.default.func,
	        propNameSpace: _propTypes2.default.string,
	        validate: _propTypes2.default.func,
	        warn: _propTypes2.default.func,
	        touchOnBlur: _propTypes2.default.bool,
	        touchOnChange: _propTypes2.default.bool,
	        triggerSubmit: _propTypes2.default.bool,
	        persistentSubmitErrors: _propTypes2.default.bool,
	        registeredFields: _propTypes2.default.any
	      };

	      var connector = (0, _reactRedux.connect)(function (state, props) {
	        var form = props.form,
	            getFormState = props.getFormState,
	            initialValues = props.initialValues,
	            enableReinitialize = props.enableReinitialize,
	            keepDirtyOnReinitialize = props.keepDirtyOnReinitialize;

	        var formState = getIn(getFormState(state) || empty, form) || empty;
	        var stateInitial = getIn(formState, 'initial');
	        var initialized = !!stateInitial;

	        var shouldUpdateInitialValues = enableReinitialize && initialized && !deepEqual(initialValues, stateInitial);
	        var shouldResetValues = shouldUpdateInitialValues && !keepDirtyOnReinitialize;

	        var initial = initialValues || stateInitial || empty;

	        if (shouldUpdateInitialValues) {
	          initial = stateInitial || empty;
	        }

	        var values = getIn(formState, 'values') || initial;

	        if (shouldResetValues) {
	          values = initial;
	        }

	        var pristine = shouldResetValues || deepEqual(initial, values);
	        var asyncErrors = getIn(formState, 'asyncErrors');
	        var syncErrors = getIn(formState, 'syncErrors') || {};
	        var syncWarnings = getIn(formState, 'syncWarnings') || {};
	        var registeredFields = getIn(formState, 'registeredFields');
	        var valid = isValid(form, getFormState, false)(state);
	        var validExceptSubmit = isValid(form, getFormState, true)(state);
	        var anyTouched = !!getIn(formState, 'anyTouched');
	        var submitting = !!getIn(formState, 'submitting');
	        var submitFailed = !!getIn(formState, 'submitFailed');
	        var submitSucceeded = !!getIn(formState, 'submitSucceeded');
	        var error = getIn(formState, 'error');
	        var warning = getIn(formState, 'warning');
	        var triggerSubmit = getIn(formState, 'triggerSubmit');
	        return {
	          anyTouched: anyTouched,
	          asyncErrors: asyncErrors,
	          asyncValidating: getIn(formState, 'asyncValidating') || false,
	          dirty: !pristine,
	          error: error,
	          initialized: initialized,
	          invalid: !valid,
	          pristine: pristine,
	          registeredFields: registeredFields,
	          submitting: submitting,
	          submitFailed: submitFailed,
	          submitSucceeded: submitSucceeded,
	          syncErrors: syncErrors,
	          syncWarnings: syncWarnings,
	          triggerSubmit: triggerSubmit,
	          values: values,
	          valid: valid,
	          validExceptSubmit: validExceptSubmit,
	          warning: warning
	        };
	      }, function (dispatch, initialProps) {
	        var bindForm = function bindForm(actionCreator) {
	          return actionCreator.bind(null, initialProps.form

	          // Bind the first parameter on `props.form`
	          );
	        };var boundFormACs = (0, _mapValues3.default)(formActions, bindForm);
	        var boundArrayACs = (0, _mapValues3.default)(arrayActions, bindForm);
	        var boundBlur = function boundBlur(field, value) {
	          return blur(initialProps.form, field, value, !!initialProps.touchOnBlur);
	        };
	        var boundChange = function boundChange(field, value) {
	          return change(initialProps.form, field, value, !!initialProps.touchOnChange, !!initialProps.persistentSubmitErrors);
	        };
	        var boundFocus = bindForm(focus

	        // Wrap action creators with `dispatch`
	        );var connectedFormACs = (0, _redux.bindActionCreators)(boundFormACs, dispatch);
	        var connectedArrayACs = {
	          insert: (0, _redux.bindActionCreators)(boundArrayACs.arrayInsert, dispatch),
	          move: (0, _redux.bindActionCreators)(boundArrayACs.arrayMove, dispatch),
	          pop: (0, _redux.bindActionCreators)(boundArrayACs.arrayPop, dispatch),
	          push: (0, _redux.bindActionCreators)(boundArrayACs.arrayPush, dispatch),
	          remove: (0, _redux.bindActionCreators)(boundArrayACs.arrayRemove, dispatch),
	          removeAll: (0, _redux.bindActionCreators)(boundArrayACs.arrayRemoveAll, dispatch),
	          shift: (0, _redux.bindActionCreators)(boundArrayACs.arrayShift, dispatch),
	          splice: (0, _redux.bindActionCreators)(boundArrayACs.arraySplice, dispatch),
	          swap: (0, _redux.bindActionCreators)(boundArrayACs.arraySwap, dispatch),
	          unshift: (0, _redux.bindActionCreators)(boundArrayACs.arrayUnshift, dispatch)
	        };

	        var computedActions = _extends({}, connectedFormACs, boundArrayACs, {
	          blur: boundBlur,
	          change: boundChange,
	          array: connectedArrayACs,
	          focus: boundFocus,
	          dispatch: dispatch
	        });

	        return function () {
	          return computedActions;
	        };
	      }, undefined, { withRef: true });
	      var ConnectedForm = (0, _hoistNonReactStatics2.default)(connector(Form), WrappedComponent);
	      ConnectedForm.defaultProps = config;

	      // build outer component to expose instance api
	      return function (_Component2) {
	        _inherits(ReduxForm, _Component2);

	        function ReduxForm() {
	          _classCallCheck(this, ReduxForm);

	          return _possibleConstructorReturn(this, (ReduxForm.__proto__ || Object.getPrototypeOf(ReduxForm)).apply(this, arguments));
	        }

	        _createClass(ReduxForm, [{
	          key: 'submit',
	          value: function submit() {
	            return this.refs.wrapped.getWrappedInstance().submit();
	          }
	        }, {
	          key: 'reset',
	          value: function reset() {
	            return this.refs.wrapped.getWrappedInstance().reset();
	          }
	        }, {
	          key: 'render',
	          value: function render() {
	            var _props10 = this.props,
	                initialValues = _props10.initialValues,
	                rest = _objectWithoutProperties(_props10, ['initialValues']);

	            return (0, _react.createElement)(ConnectedForm, _extends({}, rest, {
	              ref: 'wrapped',
	              // convert initialValues if need to
	              initialValues: fromJS(initialValues)
	            }));
	          }
	        }, {
	          key: 'valid',
	          get: function get() {
	            return this.refs.wrapped.getWrappedInstance().isValid();
	          }
	        }, {
	          key: 'invalid',
	          get: function get() {
	            return !this.valid;
	          }
	        }, {
	          key: 'pristine',
	          get: function get() {
	            return this.refs.wrapped.getWrappedInstance().isPristine();
	          }
	        }, {
	          key: 'dirty',
	          get: function get() {
	            return !this.pristine;
	          }
	        }, {
	          key: 'values',
	          get: function get() {
	            return this.refs.wrapped.getWrappedInstance().getValues();
	          }
	        }, {
	          key: 'fieldList',
	          get: function get() {
	            // mainly provided for testing
	            return this.refs.wrapped.getWrappedInstance().getFieldList();
	          }
	        }, {
	          key: 'wrappedInstance',
	          get: function get() {
	            // for testing
	            return this.refs.wrapped.getWrappedInstance().refs.wrapped;
	          }
	        }]);

	        return ReduxForm;
	      }(_react.Component);
	    };
	  };
	};

	exports.default = createReduxForm;

/***/ }),
/* 525 */
/***/ (function(module, exports, __webpack_require__) {

	var baseMerge = __webpack_require__(526),
	    createAssigner = __webpack_require__(543);

	/**
	 * This method is like `_.assign` except that it recursively merges own and
	 * inherited enumerable string keyed properties of source objects into the
	 * destination object. Source properties that resolve to `undefined` are
	 * skipped if a destination value exists. Array and plain object properties
	 * are merged recursively. Other objects and value types are overridden by
	 * assignment. Source objects are applied from left to right. Subsequent
	 * sources overwrite property assignments of previous sources.
	 *
	 * **Note:** This method mutates `object`.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.5.0
	 * @category Object
	 * @param {Object} object The destination object.
	 * @param {...Object} [sources] The source objects.
	 * @returns {Object} Returns `object`.
	 * @example
	 *
	 * var object = {
	 *   'a': [{ 'b': 2 }, { 'd': 4 }]
	 * };
	 *
	 * var other = {
	 *   'a': [{ 'c': 3 }, { 'e': 5 }]
	 * };
	 *
	 * _.merge(object, other);
	 * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }
	 */
	var merge = createAssigner(function(object, source, srcIndex) {
	  baseMerge(object, source, srcIndex);
	});

	module.exports = merge;


/***/ }),
/* 526 */
/***/ (function(module, exports, __webpack_require__) {

	var Stack = __webpack_require__(408),
	    assignMergeValue = __webpack_require__(527),
	    baseFor = __webpack_require__(467),
	    baseMergeDeep = __webpack_require__(528),
	    isObject = __webpack_require__(376),
	    keysIn = __webpack_require__(540);

	/**
	 * The base implementation of `_.merge` without support for multiple sources.
	 *
	 * @private
	 * @param {Object} object The destination object.
	 * @param {Object} source The source object.
	 * @param {number} srcIndex The index of `source`.
	 * @param {Function} [customizer] The function to customize merged values.
	 * @param {Object} [stack] Tracks traversed source values and their merged
	 *  counterparts.
	 */
	function baseMerge(object, source, srcIndex, customizer, stack) {
	  if (object === source) {
	    return;
	  }
	  baseFor(source, function(srcValue, key) {
	    if (isObject(srcValue)) {
	      stack || (stack = new Stack);
	      baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);
	    }
	    else {
	      var newValue = customizer
	        ? customizer(object[key], srcValue, (key + ''), object, source, stack)
	        : undefined;

	      if (newValue === undefined) {
	        newValue = srcValue;
	      }
	      assignMergeValue(object, key, newValue);
	    }
	  }, keysIn);
	}

	module.exports = baseMerge;


/***/ }),
/* 527 */
/***/ (function(module, exports, __webpack_require__) {

	var baseAssignValue = __webpack_require__(464),
	    eq = __webpack_require__(389);

	/**
	 * This function is like `assignValue` except that it doesn't assign
	 * `undefined` values.
	 *
	 * @private
	 * @param {Object} object The object to modify.
	 * @param {string} key The key of the property to assign.
	 * @param {*} value The value to assign.
	 */
	function assignMergeValue(object, key, value) {
	  if ((value !== undefined && !eq(object[key], value)) ||
	      (value === undefined && !(key in object))) {
	    baseAssignValue(object, key, value);
	  }
	}

	module.exports = assignMergeValue;


/***/ }),
/* 528 */
/***/ (function(module, exports, __webpack_require__) {

	var assignMergeValue = __webpack_require__(527),
	    cloneBuffer = __webpack_require__(529),
	    cloneTypedArray = __webpack_require__(530),
	    copyArray = __webpack_require__(355),
	    initCloneObject = __webpack_require__(532),
	    isArguments = __webpack_require__(434),
	    isArray = __webpack_require__(356),
	    isArrayLikeObject = __webpack_require__(535),
	    isBuffer = __webpack_require__(436),
	    isFunction = __webpack_require__(375),
	    isObject = __webpack_require__(376),
	    isPlainObject = __webpack_require__(536),
	    isTypedArray = __webpack_require__(439),
	    toPlainObject = __webpack_require__(537);

	/**
	 * A specialized version of `baseMerge` for arrays and objects which performs
	 * deep merges and tracks traversed objects enabling objects with circular
	 * references to be merged.
	 *
	 * @private
	 * @param {Object} object The destination object.
	 * @param {Object} source The source object.
	 * @param {string} key The key of the value to merge.
	 * @param {number} srcIndex The index of `source`.
	 * @param {Function} mergeFunc The function to merge values.
	 * @param {Function} [customizer] The function to customize assigned values.
	 * @param {Object} [stack] Tracks traversed source values and their merged
	 *  counterparts.
	 */
	function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {
	  var objValue = object[key],
	      srcValue = source[key],
	      stacked = stack.get(srcValue);

	  if (stacked) {
	    assignMergeValue(object, key, stacked);
	    return;
	  }
	  var newValue = customizer
	    ? customizer(objValue, srcValue, (key + ''), object, source, stack)
	    : undefined;

	  var isCommon = newValue === undefined;

	  if (isCommon) {
	    var isArr = isArray(srcValue),
	        isBuff = !isArr && isBuffer(srcValue),
	        isTyped = !isArr && !isBuff && isTypedArray(srcValue);

	    newValue = srcValue;
	    if (isArr || isBuff || isTyped) {
	      if (isArray(objValue)) {
	        newValue = objValue;
	      }
	      else if (isArrayLikeObject(objValue)) {
	        newValue = copyArray(objValue);
	      }
	      else if (isBuff) {
	        isCommon = false;
	        newValue = cloneBuffer(srcValue, true);
	      }
	      else if (isTyped) {
	        isCommon = false;
	        newValue = cloneTypedArray(srcValue, true);
	      }
	      else {
	        newValue = [];
	      }
	    }
	    else if (isPlainObject(srcValue) || isArguments(srcValue)) {
	      newValue = objValue;
	      if (isArguments(objValue)) {
	        newValue = toPlainObject(objValue);
	      }
	      else if (!isObject(objValue) || (srcIndex && isFunction(objValue))) {
	        newValue = initCloneObject(srcValue);
	      }
	    }
	    else {
	      isCommon = false;
	    }
	  }
	  if (isCommon) {
	    // Recursively merge objects and arrays (susceptible to call stack limits).
	    stack.set(srcValue, newValue);
	    mergeFunc(newValue, srcValue, srcIndex, customizer, stack);
	    stack['delete'](srcValue);
	  }
	  assignMergeValue(object, key, newValue);
	}

	module.exports = baseMergeDeep;


/***/ }),
/* 529 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(module) {var root = __webpack_require__(360);

	/** Detect free variable `exports`. */
	var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;

	/** Detect free variable `module`. */
	var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;

	/** Detect the popular CommonJS extension `module.exports`. */
	var moduleExports = freeModule && freeModule.exports === freeExports;

	/** Built-in value references. */
	var Buffer = moduleExports ? root.Buffer : undefined,
	    allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined;

	/**
	 * Creates a clone of  `buffer`.
	 *
	 * @private
	 * @param {Buffer} buffer The buffer to clone.
	 * @param {boolean} [isDeep] Specify a deep clone.
	 * @returns {Buffer} Returns the cloned buffer.
	 */
	function cloneBuffer(buffer, isDeep) {
	  if (isDeep) {
	    return buffer.slice();
	  }
	  var length = buffer.length,
	      result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);

	  buffer.copy(result);
	  return result;
	}

	module.exports = cloneBuffer;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(180)(module)))

/***/ }),
/* 530 */
/***/ (function(module, exports, __webpack_require__) {

	var cloneArrayBuffer = __webpack_require__(531);

	/**
	 * Creates a clone of `typedArray`.
	 *
	 * @private
	 * @param {Object} typedArray The typed array to clone.
	 * @param {boolean} [isDeep] Specify a deep clone.
	 * @returns {Object} Returns the cloned typed array.
	 */
	function cloneTypedArray(typedArray, isDeep) {
	  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;
	  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);
	}

	module.exports = cloneTypedArray;


/***/ }),
/* 531 */
/***/ (function(module, exports, __webpack_require__) {

	var Uint8Array = __webpack_require__(421);

	/**
	 * Creates a clone of `arrayBuffer`.
	 *
	 * @private
	 * @param {ArrayBuffer} arrayBuffer The array buffer to clone.
	 * @returns {ArrayBuffer} Returns the cloned array buffer.
	 */
	function cloneArrayBuffer(arrayBuffer) {
	  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);
	  new Uint8Array(result).set(new Uint8Array(arrayBuffer));
	  return result;
	}

	module.exports = cloneArrayBuffer;


/***/ }),
/* 532 */
/***/ (function(module, exports, __webpack_require__) {

	var baseCreate = __webpack_require__(533),
	    getPrototype = __webpack_require__(534),
	    isPrototype = __webpack_require__(445);

	/**
	 * Initializes an object clone.
	 *
	 * @private
	 * @param {Object} object The object to clone.
	 * @returns {Object} Returns the initialized clone.
	 */
	function initCloneObject(object) {
	  return (typeof object.constructor == 'function' && !isPrototype(object))
	    ? baseCreate(getPrototype(object))
	    : {};
	}

	module.exports = initCloneObject;


/***/ }),
/* 533 */
/***/ (function(module, exports, __webpack_require__) {

	var isObject = __webpack_require__(376);

	/** Built-in value references. */
	var objectCreate = Object.create;

	/**
	 * The base implementation of `_.create` without support for assigning
	 * properties to the created object.
	 *
	 * @private
	 * @param {Object} proto The object to inherit from.
	 * @returns {Object} Returns the new object.
	 */
	var baseCreate = (function() {
	  function object() {}
	  return function(proto) {
	    if (!isObject(proto)) {
	      return {};
	    }
	    if (objectCreate) {
	      return objectCreate(proto);
	    }
	    object.prototype = proto;
	    var result = new object;
	    object.prototype = undefined;
	    return result;
	  };
	}());

	module.exports = baseCreate;


/***/ }),
/* 534 */
/***/ (function(module, exports, __webpack_require__) {

	var overArg = __webpack_require__(447);

	/** Built-in value references. */
	var getPrototype = overArg(Object.getPrototypeOf, Object);

	module.exports = getPrototype;


/***/ }),
/* 535 */
/***/ (function(module, exports, __webpack_require__) {

	var isArrayLike = __webpack_require__(448),
	    isObjectLike = __webpack_require__(364);

	/**
	 * This method is like `_.isArrayLike` except that it also checks if `value`
	 * is an object.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is an array-like object,
	 *  else `false`.
	 * @example
	 *
	 * _.isArrayLikeObject([1, 2, 3]);
	 * // => true
	 *
	 * _.isArrayLikeObject(document.body.children);
	 * // => true
	 *
	 * _.isArrayLikeObject('abc');
	 * // => false
	 *
	 * _.isArrayLikeObject(_.noop);
	 * // => false
	 */
	function isArrayLikeObject(value) {
	  return isObjectLike(value) && isArrayLike(value);
	}

	module.exports = isArrayLikeObject;


/***/ }),
/* 536 */
/***/ (function(module, exports, __webpack_require__) {

	var baseGetTag = __webpack_require__(358),
	    getPrototype = __webpack_require__(534),
	    isObjectLike = __webpack_require__(364);

	/** `Object#toString` result references. */
	var objectTag = '[object Object]';

	/** Used for built-in method references. */
	var funcProto = Function.prototype,
	    objectProto = Object.prototype;

	/** Used to resolve the decompiled source of functions. */
	var funcToString = funcProto.toString;

	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;

	/** Used to infer the `Object` constructor. */
	var objectCtorString = funcToString.call(Object);

	/**
	 * Checks if `value` is a plain object, that is, an object created by the
	 * `Object` constructor or one with a `[[Prototype]]` of `null`.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.8.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.
	 * @example
	 *
	 * function Foo() {
	 *   this.a = 1;
	 * }
	 *
	 * _.isPlainObject(new Foo);
	 * // => false
	 *
	 * _.isPlainObject([1, 2, 3]);
	 * // => false
	 *
	 * _.isPlainObject({ 'x': 0, 'y': 0 });
	 * // => true
	 *
	 * _.isPlainObject(Object.create(null));
	 * // => true
	 */
	function isPlainObject(value) {
	  if (!isObjectLike(value) || baseGetTag(value) != objectTag) {
	    return false;
	  }
	  var proto = getPrototype(value);
	  if (proto === null) {
	    return true;
	  }
	  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;
	  return typeof Ctor == 'function' && Ctor instanceof Ctor &&
	    funcToString.call(Ctor) == objectCtorString;
	}

	module.exports = isPlainObject;


/***/ }),
/* 537 */
/***/ (function(module, exports, __webpack_require__) {

	var copyObject = __webpack_require__(538),
	    keysIn = __webpack_require__(540);

	/**
	 * Converts `value` to a plain object flattening inherited enumerable string
	 * keyed properties of `value` to own properties of the plain object.
	 *
	 * @static
	 * @memberOf _
	 * @since 3.0.0
	 * @category Lang
	 * @param {*} value The value to convert.
	 * @returns {Object} Returns the converted plain object.
	 * @example
	 *
	 * function Foo() {
	 *   this.b = 2;
	 * }
	 *
	 * Foo.prototype.c = 3;
	 *
	 * _.assign({ 'a': 1 }, new Foo);
	 * // => { 'a': 1, 'b': 2 }
	 *
	 * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));
	 * // => { 'a': 1, 'b': 2, 'c': 3 }
	 */
	function toPlainObject(value) {
	  return copyObject(value, keysIn(value));
	}

	module.exports = toPlainObject;


/***/ }),
/* 538 */
/***/ (function(module, exports, __webpack_require__) {

	var assignValue = __webpack_require__(539),
	    baseAssignValue = __webpack_require__(464);

	/**
	 * Copies properties of `source` to `object`.
	 *
	 * @private
	 * @param {Object} source The object to copy properties from.
	 * @param {Array} props The property identifiers to copy.
	 * @param {Object} [object={}] The object to copy properties to.
	 * @param {Function} [customizer] The function to customize copied values.
	 * @returns {Object} Returns `object`.
	 */
	function copyObject(source, props, object, customizer) {
	  var isNew = !object;
	  object || (object = {});

	  var index = -1,
	      length = props.length;

	  while (++index < length) {
	    var key = props[index];

	    var newValue = customizer
	      ? customizer(object[key], source[key], key, object, source)
	      : undefined;

	    if (newValue === undefined) {
	      newValue = source[key];
	    }
	    if (isNew) {
	      baseAssignValue(object, key, newValue);
	    } else {
	      assignValue(object, key, newValue);
	    }
	  }
	  return object;
	}

	module.exports = copyObject;


/***/ }),
/* 539 */
/***/ (function(module, exports, __webpack_require__) {

	var baseAssignValue = __webpack_require__(464),
	    eq = __webpack_require__(389);

	/** Used for built-in method references. */
	var objectProto = Object.prototype;

	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;

	/**
	 * Assigns `value` to `key` of `object` if the existing value is not equivalent
	 * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
	 * for equality comparisons.
	 *
	 * @private
	 * @param {Object} object The object to modify.
	 * @param {string} key The key of the property to assign.
	 * @param {*} value The value to assign.
	 */
	function assignValue(object, key, value) {
	  var objValue = object[key];
	  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||
	      (value === undefined && !(key in object))) {
	    baseAssignValue(object, key, value);
	  }
	}

	module.exports = assignValue;


/***/ }),
/* 540 */
/***/ (function(module, exports, __webpack_require__) {

	var arrayLikeKeys = __webpack_require__(432),
	    baseKeysIn = __webpack_require__(541),
	    isArrayLike = __webpack_require__(448);

	/**
	 * Creates an array of the own and inherited enumerable property names of `object`.
	 *
	 * **Note:** Non-object values are coerced to objects.
	 *
	 * @static
	 * @memberOf _
	 * @since 3.0.0
	 * @category Object
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the array of property names.
	 * @example
	 *
	 * function Foo() {
	 *   this.a = 1;
	 *   this.b = 2;
	 * }
	 *
	 * Foo.prototype.c = 3;
	 *
	 * _.keysIn(new Foo);
	 * // => ['a', 'b', 'c'] (iteration order is not guaranteed)
	 */
	function keysIn(object) {
	  return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);
	}

	module.exports = keysIn;


/***/ }),
/* 541 */
/***/ (function(module, exports, __webpack_require__) {

	var isObject = __webpack_require__(376),
	    isPrototype = __webpack_require__(445),
	    nativeKeysIn = __webpack_require__(542);

	/** Used for built-in method references. */
	var objectProto = Object.prototype;

	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;

	/**
	 * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the array of property names.
	 */
	function baseKeysIn(object) {
	  if (!isObject(object)) {
	    return nativeKeysIn(object);
	  }
	  var isProto = isPrototype(object),
	      result = [];

	  for (var key in object) {
	    if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {
	      result.push(key);
	    }
	  }
	  return result;
	}

	module.exports = baseKeysIn;


/***/ }),
/* 542 */
/***/ (function(module, exports) {

	/**
	 * This function is like
	 * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
	 * except that it includes inherited enumerable properties.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the array of property names.
	 */
	function nativeKeysIn(object) {
	  var result = [];
	  if (object != null) {
	    for (var key in Object(object)) {
	      result.push(key);
	    }
	  }
	  return result;
	}

	module.exports = nativeKeysIn;


/***/ }),
/* 543 */
/***/ (function(module, exports, __webpack_require__) {

	var baseRest = __webpack_require__(544),
	    isIterateeCall = __webpack_require__(551);

	/**
	 * Creates a function like `_.assign`.
	 *
	 * @private
	 * @param {Function} assigner The function to assign values.
	 * @returns {Function} Returns the new assigner function.
	 */
	function createAssigner(assigner) {
	  return baseRest(function(object, sources) {
	    var index = -1,
	        length = sources.length,
	        customizer = length > 1 ? sources[length - 1] : undefined,
	        guard = length > 2 ? sources[2] : undefined;

	    customizer = (assigner.length > 3 && typeof customizer == 'function')
	      ? (length--, customizer)
	      : undefined;

	    if (guard && isIterateeCall(sources[0], sources[1], guard)) {
	      customizer = length < 3 ? undefined : customizer;
	      length = 1;
	    }
	    object = Object(object);
	    while (++index < length) {
	      var source = sources[index];
	      if (source) {
	        assigner(object, source, index, customizer);
	      }
	    }
	    return object;
	  });
	}

	module.exports = createAssigner;


/***/ }),
/* 544 */
/***/ (function(module, exports, __webpack_require__) {

	var identity = __webpack_require__(483),
	    overRest = __webpack_require__(545),
	    setToString = __webpack_require__(547);

	/**
	 * The base implementation of `_.rest` which doesn't validate or coerce arguments.
	 *
	 * @private
	 * @param {Function} func The function to apply a rest parameter to.
	 * @param {number} [start=func.length-1] The start position of the rest parameter.
	 * @returns {Function} Returns the new function.
	 */
	function baseRest(func, start) {
	  return setToString(overRest(func, start, identity), func + '');
	}

	module.exports = baseRest;


/***/ }),
/* 545 */
/***/ (function(module, exports, __webpack_require__) {

	var apply = __webpack_require__(546);

	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeMax = Math.max;

	/**
	 * A specialized version of `baseRest` which transforms the rest array.
	 *
	 * @private
	 * @param {Function} func The function to apply a rest parameter to.
	 * @param {number} [start=func.length-1] The start position of the rest parameter.
	 * @param {Function} transform The rest array transform.
	 * @returns {Function} Returns the new function.
	 */
	function overRest(func, start, transform) {
	  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);
	  return function() {
	    var args = arguments,
	        index = -1,
	        length = nativeMax(args.length - start, 0),
	        array = Array(length);

	    while (++index < length) {
	      array[index] = args[start + index];
	    }
	    index = -1;
	    var otherArgs = Array(start + 1);
	    while (++index < start) {
	      otherArgs[index] = args[index];
	    }
	    otherArgs[start] = transform(array);
	    return apply(func, this, otherArgs);
	  };
	}

	module.exports = overRest;


/***/ }),
/* 546 */
/***/ (function(module, exports) {

	/**
	 * A faster alternative to `Function#apply`, this function invokes `func`
	 * with the `this` binding of `thisArg` and the arguments of `args`.
	 *
	 * @private
	 * @param {Function} func The function to invoke.
	 * @param {*} thisArg The `this` binding of `func`.
	 * @param {Array} args The arguments to invoke `func` with.
	 * @returns {*} Returns the result of `func`.
	 */
	function apply(func, thisArg, args) {
	  switch (args.length) {
	    case 0: return func.call(thisArg);
	    case 1: return func.call(thisArg, args[0]);
	    case 2: return func.call(thisArg, args[0], args[1]);
	    case 3: return func.call(thisArg, args[0], args[1], args[2]);
	  }
	  return func.apply(thisArg, args);
	}

	module.exports = apply;


/***/ }),
/* 547 */
/***/ (function(module, exports, __webpack_require__) {

	var baseSetToString = __webpack_require__(548),
	    shortOut = __webpack_require__(550);

	/**
	 * Sets the `toString` method of `func` to return `string`.
	 *
	 * @private
	 * @param {Function} func The function to modify.
	 * @param {Function} string The `toString` result.
	 * @returns {Function} Returns `func`.
	 */
	var setToString = shortOut(baseSetToString);

	module.exports = setToString;


/***/ }),
/* 548 */
/***/ (function(module, exports, __webpack_require__) {

	var constant = __webpack_require__(549),
	    defineProperty = __webpack_require__(465),
	    identity = __webpack_require__(483);

	/**
	 * The base implementation of `setToString` without support for hot loop shorting.
	 *
	 * @private
	 * @param {Function} func The function to modify.
	 * @param {Function} string The `toString` result.
	 * @returns {Function} Returns `func`.
	 */
	var baseSetToString = !defineProperty ? identity : function(func, string) {
	  return defineProperty(func, 'toString', {
	    'configurable': true,
	    'enumerable': false,
	    'value': constant(string),
	    'writable': true
	  });
	};

	module.exports = baseSetToString;


/***/ }),
/* 549 */
/***/ (function(module, exports) {

	/**
	 * Creates a function that returns `value`.
	 *
	 * @static
	 * @memberOf _
	 * @since 2.4.0
	 * @category Util
	 * @param {*} value The value to return from the new function.
	 * @returns {Function} Returns the new constant function.
	 * @example
	 *
	 * var objects = _.times(2, _.constant({ 'a': 1 }));
	 *
	 * console.log(objects);
	 * // => [{ 'a': 1 }, { 'a': 1 }]
	 *
	 * console.log(objects[0] === objects[1]);
	 * // => true
	 */
	function constant(value) {
	  return function() {
	    return value;
	  };
	}

	module.exports = constant;


/***/ }),
/* 550 */
/***/ (function(module, exports) {

	/** Used to detect hot functions by number of calls within a span of milliseconds. */
	var HOT_COUNT = 800,
	    HOT_SPAN = 16;

	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeNow = Date.now;

	/**
	 * Creates a function that'll short out and invoke `identity` instead
	 * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`
	 * milliseconds.
	 *
	 * @private
	 * @param {Function} func The function to restrict.
	 * @returns {Function} Returns the new shortable function.
	 */
	function shortOut(func) {
	  var count = 0,
	      lastCalled = 0;

	  return function() {
	    var stamp = nativeNow(),
	        remaining = HOT_SPAN - (stamp - lastCalled);

	    lastCalled = stamp;
	    if (remaining > 0) {
	      if (++count >= HOT_COUNT) {
	        return arguments[0];
	      }
	    } else {
	      count = 0;
	    }
	    return func.apply(undefined, arguments);
	  };
	}

	module.exports = shortOut;


/***/ }),
/* 551 */
/***/ (function(module, exports, __webpack_require__) {

	var eq = __webpack_require__(389),
	    isArrayLike = __webpack_require__(448),
	    isIndex = __webpack_require__(438),
	    isObject = __webpack_require__(376);

	/**
	 * Checks if the given arguments are from an iteratee call.
	 *
	 * @private
	 * @param {*} value The potential iteratee value argument.
	 * @param {*} index The potential iteratee index or key argument.
	 * @param {*} object The potential iteratee object argument.
	 * @returns {boolean} Returns `true` if the arguments are from an iteratee call,
	 *  else `false`.
	 */
	function isIterateeCall(value, index, object) {
	  if (!isObject(object)) {
	    return false;
	  }
	  var type = typeof index;
	  if (type == 'number'
	        ? (isArrayLike(object) && isIndex(index, object.length))
	        : (type == 'string' && index in object)
	      ) {
	    return eq(object[index], value);
	  }
	  return false;
	}

	module.exports = isIterateeCall;


/***/ }),
/* 552 */
/***/ (function(module, exports) {

	module.exports = isPromise;

	function isPromise(obj) {
	  return !!obj && (typeof obj === 'object' || typeof obj === 'function') && typeof obj.then === 'function';
	}


/***/ }),
/* 553 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.updateSyncWarnings = exports.updateSyncErrors = exports.untouch = exports.unregisterField = exports.touch = exports.setSubmitSucceeded = exports.setSubmitFailed = exports.submit = exports.stopSubmit = exports.stopAsyncValidation = exports.startSubmit = exports.startAsyncValidation = exports.reset = exports.registerField = exports.initialize = exports.focus = exports.destroy = exports.clearAsyncError = exports.clearSubmitErrors = exports.clearSubmit = exports.change = exports.blur = exports.autofill = exports.arrayUnshift = exports.arraySwap = exports.arraySplice = exports.arrayShift = exports.arrayRemoveAll = exports.arrayRemove = exports.arrayPush = exports.arrayPop = exports.arrayMove = exports.arrayInsert = undefined;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _actionTypes = __webpack_require__(554);

	var arrayInsert = exports.arrayInsert = function arrayInsert(form, field, index, value) {
	  return {
	    type: _actionTypes.ARRAY_INSERT,
	    meta: { form: form, field: field, index: index },
	    payload: value
	  };
	};

	var arrayMove = exports.arrayMove = function arrayMove(form, field, from, to) {
	  return {
	    type: _actionTypes.ARRAY_MOVE,
	    meta: { form: form, field: field, from: from, to: to }
	  };
	};

	var arrayPop = exports.arrayPop = function arrayPop(form, field) {
	  return {
	    type: _actionTypes.ARRAY_POP,
	    meta: { form: form, field: field }
	  };
	};

	var arrayPush = exports.arrayPush = function arrayPush(form, field, value) {
	  return {
	    type: _actionTypes.ARRAY_PUSH,
	    meta: { form: form, field: field },
	    payload: value
	  };
	};

	var arrayRemove = exports.arrayRemove = function arrayRemove(form, field, index) {
	  return {
	    type: _actionTypes.ARRAY_REMOVE,
	    meta: { form: form, field: field, index: index }
	  };
	};

	var arrayRemoveAll = exports.arrayRemoveAll = function arrayRemoveAll(form, field) {
	  return {
	    type: _actionTypes.ARRAY_REMOVE_ALL,
	    meta: { form: form, field: field }
	  };
	};

	var arrayShift = exports.arrayShift = function arrayShift(form, field) {
	  return {
	    type: _actionTypes.ARRAY_SHIFT,
	    meta: { form: form, field: field }
	  };
	};

	var arraySplice = exports.arraySplice = function arraySplice(form, field, index, removeNum, value) {
	  var action = {
	    type: _actionTypes.ARRAY_SPLICE,
	    meta: { form: form, field: field, index: index, removeNum: removeNum }
	  };
	  if (value !== undefined) {
	    action.payload = value;
	  }
	  return action;
	};

	var arraySwap = exports.arraySwap = function arraySwap(form, field, indexA, indexB) {
	  if (indexA === indexB) {
	    throw new Error('Swap indices cannot be equal');
	  }
	  if (indexA < 0 || indexB < 0) {
	    throw new Error('Swap indices cannot be negative');
	  }
	  return { type: _actionTypes.ARRAY_SWAP, meta: { form: form, field: field, indexA: indexA, indexB: indexB } };
	};

	var arrayUnshift = exports.arrayUnshift = function arrayUnshift(form, field, value) {
	  return {
	    type: _actionTypes.ARRAY_UNSHIFT,
	    meta: { form: form, field: field },
	    payload: value
	  };
	};

	var autofill = exports.autofill = function autofill(form, field, value) {
	  return {
	    type: _actionTypes.AUTOFILL,
	    meta: { form: form, field: field },
	    payload: value
	  };
	};

	var blur = exports.blur = function blur(form, field, value, touch) {
	  return {
	    type: _actionTypes.BLUR,
	    meta: { form: form, field: field, touch: touch },
	    payload: value
	  };
	};

	var change = exports.change = function change(form, field, value, touch, persistentSubmitErrors) {
	  return {
	    type: _actionTypes.CHANGE,
	    meta: { form: form, field: field, touch: touch, persistentSubmitErrors: persistentSubmitErrors },
	    payload: value
	  };
	};

	var clearSubmit = exports.clearSubmit = function clearSubmit(form) {
	  return { type: _actionTypes.CLEAR_SUBMIT, meta: { form: form } };
	};

	var clearSubmitErrors = exports.clearSubmitErrors = function clearSubmitErrors(form) {
	  return {
	    type: _actionTypes.CLEAR_SUBMIT_ERRORS,
	    meta: { form: form }
	  };
	};

	var clearAsyncError = exports.clearAsyncError = function clearAsyncError(form, field) {
	  return {
	    type: _actionTypes.CLEAR_ASYNC_ERROR,
	    meta: { form: form, field: field }
	  };
	};

	var destroy = exports.destroy = function destroy() {
	  for (var _len = arguments.length, form = Array(_len), _key = 0; _key < _len; _key++) {
	    form[_key] = arguments[_key];
	  }

	  return { type: _actionTypes.DESTROY, meta: { form: form } };
	};

	var focus = exports.focus = function focus(form, field) {
	  return { type: _actionTypes.FOCUS, meta: { form: form, field: field } };
	};

	var initialize = exports.initialize = function initialize(form, values, keepDirty) {
	  var otherMeta = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};

	  if (keepDirty instanceof Object) {
	    otherMeta = keepDirty;
	    keepDirty = false;
	  }
	  return {
	    type: _actionTypes.INITIALIZE,
	    meta: _extends({ form: form, keepDirty: keepDirty }, otherMeta),
	    payload: values
	  };
	};

	var registerField = exports.registerField = function registerField(form, name, type) {
	  return {
	    type: _actionTypes.REGISTER_FIELD,
	    meta: { form: form },
	    payload: { name: name, type: type }
	  };
	};

	var reset = exports.reset = function reset(form) {
	  return { type: _actionTypes.RESET, meta: { form: form } };
	};

	var startAsyncValidation = exports.startAsyncValidation = function startAsyncValidation(form, field) {
	  return {
	    type: _actionTypes.START_ASYNC_VALIDATION,
	    meta: { form: form, field: field }
	  };
	};

	var startSubmit = exports.startSubmit = function startSubmit(form) {
	  return { type: _actionTypes.START_SUBMIT, meta: { form: form } };
	};

	var stopAsyncValidation = exports.stopAsyncValidation = function stopAsyncValidation(form, errors) {
	  var action = {
	    type: _actionTypes.STOP_ASYNC_VALIDATION,
	    meta: { form: form },
	    payload: errors
	  };
	  if (errors && Object.keys(errors).length) {
	    action.error = true;
	  }
	  return action;
	};

	var stopSubmit = exports.stopSubmit = function stopSubmit(form, errors) {
	  var action = {
	    type: _actionTypes.STOP_SUBMIT,
	    meta: { form: form },
	    payload: errors
	  };
	  if (errors && Object.keys(errors).length) {
	    action.error = true;
	  }
	  return action;
	};

	var submit = exports.submit = function submit(form) {
	  return { type: _actionTypes.SUBMIT, meta: { form: form } };
	};

	var setSubmitFailed = exports.setSubmitFailed = function setSubmitFailed(form) {
	  for (var _len2 = arguments.length, fields = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
	    fields[_key2 - 1] = arguments[_key2];
	  }

	  return {
	    type: _actionTypes.SET_SUBMIT_FAILED,
	    meta: { form: form, fields: fields },
	    error: true
	  };
	};

	var setSubmitSucceeded = exports.setSubmitSucceeded = function setSubmitSucceeded(form) {
	  for (var _len3 = arguments.length, fields = Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {
	    fields[_key3 - 1] = arguments[_key3];
	  }

	  return {
	    type: _actionTypes.SET_SUBMIT_SUCCEEDED,
	    meta: { form: form, fields: fields },
	    error: false
	  };
	};

	var touch = exports.touch = function touch(form) {
	  for (var _len4 = arguments.length, fields = Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {
	    fields[_key4 - 1] = arguments[_key4];
	  }

	  return {
	    type: _actionTypes.TOUCH,
	    meta: { form: form, fields: fields }
	  };
	};

	var unregisterField = exports.unregisterField = function unregisterField(form, name) {
	  var destroyOnUnmount = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;
	  return {
	    type: _actionTypes.UNREGISTER_FIELD,
	    meta: { form: form },
	    payload: { name: name, destroyOnUnmount: destroyOnUnmount }
	  };
	};

	var untouch = exports.untouch = function untouch(form) {
	  for (var _len5 = arguments.length, fields = Array(_len5 > 1 ? _len5 - 1 : 0), _key5 = 1; _key5 < _len5; _key5++) {
	    fields[_key5 - 1] = arguments[_key5];
	  }

	  return {
	    type: _actionTypes.UNTOUCH,
	    meta: { form: form, fields: fields }
	  };
	};

	var updateSyncErrors = exports.updateSyncErrors = function updateSyncErrors(form) {
	  var syncErrors = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
	  var error = arguments[2];
	  return {
	    type: _actionTypes.UPDATE_SYNC_ERRORS,
	    meta: { form: form },
	    payload: { syncErrors: syncErrors, error: error }
	  };
	};

	var updateSyncWarnings = exports.updateSyncWarnings = function updateSyncWarnings(form) {
	  var syncWarnings = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
	  var warning = arguments[2];
	  return {
	    type: _actionTypes.UPDATE_SYNC_WARNINGS,
	    meta: { form: form },
	    payload: { syncWarnings: syncWarnings, warning: warning }
	  };
	};

/***/ }),
/* 554 */
/***/ (function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	var prefix = exports.prefix = '@@redux-form/';

	var ARRAY_INSERT = exports.ARRAY_INSERT = prefix + 'ARRAY_INSERT';
	var ARRAY_MOVE = exports.ARRAY_MOVE = prefix + 'ARRAY_MOVE';
	var ARRAY_POP = exports.ARRAY_POP = prefix + 'ARRAY_POP';
	var ARRAY_PUSH = exports.ARRAY_PUSH = prefix + 'ARRAY_PUSH';
	var ARRAY_REMOVE = exports.ARRAY_REMOVE = prefix + 'ARRAY_REMOVE';
	var ARRAY_REMOVE_ALL = exports.ARRAY_REMOVE_ALL = prefix + 'ARRAY_REMOVE_ALL';
	var ARRAY_SHIFT = exports.ARRAY_SHIFT = prefix + 'ARRAY_SHIFT';
	var ARRAY_SPLICE = exports.ARRAY_SPLICE = prefix + 'ARRAY_SPLICE';
	var ARRAY_UNSHIFT = exports.ARRAY_UNSHIFT = prefix + 'ARRAY_UNSHIFT';
	var ARRAY_SWAP = exports.ARRAY_SWAP = prefix + 'ARRAY_SWAP';
	var AUTOFILL = exports.AUTOFILL = prefix + 'AUTOFILL';
	var BLUR = exports.BLUR = prefix + 'BLUR';
	var CHANGE = exports.CHANGE = prefix + 'CHANGE';
	var CLEAR_SUBMIT = exports.CLEAR_SUBMIT = prefix + 'CLEAR_SUBMIT';
	var CLEAR_SUBMIT_ERRORS = exports.CLEAR_SUBMIT_ERRORS = prefix + 'CLEAR_SUBMIT_ERRORS';
	var CLEAR_ASYNC_ERROR = exports.CLEAR_ASYNC_ERROR = prefix + 'CLEAR_ASYNC_ERROR';
	var DESTROY = exports.DESTROY = prefix + 'DESTROY';
	var FOCUS = exports.FOCUS = prefix + 'FOCUS';
	var INITIALIZE = exports.INITIALIZE = prefix + 'INITIALIZE';
	var REGISTER_FIELD = exports.REGISTER_FIELD = prefix + 'REGISTER_FIELD';
	var RESET = exports.RESET = prefix + 'RESET';
	var SET_SUBMIT_FAILED = exports.SET_SUBMIT_FAILED = prefix + 'SET_SUBMIT_FAILED';
	var SET_SUBMIT_SUCCEEDED = exports.SET_SUBMIT_SUCCEEDED = prefix + 'SET_SUBMIT_SUCCEEDED';
	var START_ASYNC_VALIDATION = exports.START_ASYNC_VALIDATION = prefix + 'START_ASYNC_VALIDATION';
	var START_SUBMIT = exports.START_SUBMIT = prefix + 'START_SUBMIT';
	var STOP_ASYNC_VALIDATION = exports.STOP_ASYNC_VALIDATION = prefix + 'STOP_ASYNC_VALIDATION';
	var STOP_SUBMIT = exports.STOP_SUBMIT = prefix + 'STOP_SUBMIT';
	var SUBMIT = exports.SUBMIT = prefix + 'SUBMIT';
	var TOUCH = exports.TOUCH = prefix + 'TOUCH';
	var UNREGISTER_FIELD = exports.UNREGISTER_FIELD = prefix + 'UNREGISTER_FIELD';
	var UNTOUCH = exports.UNTOUCH = prefix + 'UNTOUCH';
	var UPDATE_SYNC_ERRORS = exports.UPDATE_SYNC_ERRORS = prefix + 'UPDATE_SYNC_ERRORS';
	var UPDATE_SYNC_WARNINGS = exports.UPDATE_SYNC_WARNINGS = prefix + 'UPDATE_SYNC_WARNINGS';

/***/ }),
/* 555 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _isPromise = __webpack_require__(552);

	var _isPromise2 = _interopRequireDefault(_isPromise);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var asyncValidation = function asyncValidation(fn, start, stop, field) {
	  start(field);
	  var promise = fn();
	  if (!(0, _isPromise2.default)(promise)) {
	    throw new Error('asyncValidate function passed to reduxForm must return a promise');
	  }
	  var handleErrors = function handleErrors(rejected) {
	    return function (errors) {
	      if (errors && Object.keys(errors).length) {
	        stop(errors);
	        return errors;
	      } else if (rejected) {
	        stop();
	        throw new Error('Asynchronous validation promise was rejected without errors.');
	      }
	      stop();
	      return Promise.resolve();
	    };
	  };
	  return promise.then(handleErrors(false), handleErrors(true));
	};

	exports.default = asyncValidation;

/***/ }),
/* 556 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _isEvent = __webpack_require__(347);

	var _isEvent2 = _interopRequireDefault(_isEvent);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var silenceEvent = function silenceEvent(event) {
	  var is = (0, _isEvent2.default)(event);
	  if (is) {
	    event.preventDefault();
	  }
	  return is;
	};

	exports.default = silenceEvent;

/***/ }),
/* 557 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _silenceEvent = __webpack_require__(556);

	var _silenceEvent2 = _interopRequireDefault(_silenceEvent);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var silenceEvents = function silenceEvents(fn) {
	  return function (event) {
	    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	      args[_key - 1] = arguments[_key];
	    }

	    return (0, _silenceEvent2.default)(event) ? fn.apply(undefined, args) : fn.apply(undefined, [event].concat(args));
	  };
	};

	exports.default = silenceEvents;

/***/ }),
/* 558 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _plain = __webpack_require__(350);

	var _plain2 = _interopRequireDefault(_plain);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var toArray = function toArray(value) {
	  return Array.isArray(value) ? value : [value];
	};

	var getError = function getError(value, values, props, validators) {
	  var array = toArray(validators);
	  for (var i = 0; i < array.length; i++) {
	    var error = array[i](value, values, props);
	    if (error) {
	      return error;
	    }
	  }
	};

	var generateValidator = function generateValidator(validators, _ref) {
	  var getIn = _ref.getIn;
	  return function (values, props) {
	    var errors = {};
	    Object.keys(validators).forEach(function (name) {
	      var value = getIn(values, name);
	      var error = getError(value, values, props, validators[name]);
	      if (error) {
	        errors = _plain2.default.setIn(errors, name, error);
	      }
	    });
	    return errors;
	  };
	};

	exports.default = generateValidator;

/***/ }),
/* 559 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _isPromise = __webpack_require__(552);

	var _isPromise2 = _interopRequireDefault(_isPromise);

	var _SubmissionError = __webpack_require__(338);

	var _SubmissionError2 = _interopRequireDefault(_SubmissionError);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

	var handleSubmit = function handleSubmit(submit, props, valid, asyncValidate, fields) {
	  var dispatch = props.dispatch,
	      onSubmitFail = props.onSubmitFail,
	      onSubmitSuccess = props.onSubmitSuccess,
	      startSubmit = props.startSubmit,
	      stopSubmit = props.stopSubmit,
	      setSubmitFailed = props.setSubmitFailed,
	      setSubmitSucceeded = props.setSubmitSucceeded,
	      syncErrors = props.syncErrors,
	      touch = props.touch,
	      values = props.values,
	      persistentSubmitErrors = props.persistentSubmitErrors;


	  touch.apply(undefined, _toConsumableArray(fields)); // mark all fields as touched

	  if (valid || persistentSubmitErrors) {
	    var doSubmit = function doSubmit() {
	      var result = void 0;
	      try {
	        result = submit(values, dispatch, props);
	      } catch (submitError) {
	        var error = submitError instanceof _SubmissionError2.default ? submitError.errors : undefined;
	        stopSubmit(error);
	        setSubmitFailed.apply(undefined, _toConsumableArray(fields));
	        if (onSubmitFail) {
	          onSubmitFail(error, dispatch, submitError, props);
	        }
	        if (error || onSubmitFail) {
	          // if you've provided an onSubmitFail callback, don't re-throw the error
	          return error;
	        } else {
	          throw submitError;
	        }
	      }
	      if ((0, _isPromise2.default)(result)) {
	        startSubmit();
	        return result.then(function (submitResult) {
	          stopSubmit();
	          setSubmitSucceeded();
	          if (onSubmitSuccess) {
	            onSubmitSuccess(submitResult, dispatch, props);
	          }
	          return submitResult;
	        }, function (submitError) {
	          var error = submitError instanceof _SubmissionError2.default ? submitError.errors : undefined;
	          stopSubmit(error);
	          setSubmitFailed.apply(undefined, _toConsumableArray(fields));
	          if (onSubmitFail) {
	            onSubmitFail(error, dispatch, submitError, props);
	          }
	          if (error || onSubmitFail) {
	            // if you've provided an onSubmitFail callback, don't re-throw the error
	            return error;
	          } else {
	            throw submitError;
	          }
	        });
	      } else {
	        setSubmitSucceeded();
	        if (onSubmitSuccess) {
	          onSubmitSuccess(result, dispatch, props);
	        }
	      }
	      return result;
	    };

	    var asyncValidateResult = asyncValidate && asyncValidate();
	    if (asyncValidateResult) {
	      return asyncValidateResult.then(function (asyncErrors) {
	        if (asyncErrors) {
	          throw asyncErrors;
	        }
	        return doSubmit();
	      }).catch(function (asyncErrors) {
	        setSubmitFailed.apply(undefined, _toConsumableArray(fields));
	        if (onSubmitFail) {
	          onSubmitFail(asyncErrors, dispatch, null, props);
	        }
	        return Promise.reject(asyncErrors);
	      });
	    } else {
	      return doSubmit();
	    }
	  } else {
	    setSubmitFailed.apply(undefined, _toConsumableArray(fields));
	    if (onSubmitFail) {
	      onSubmitFail(syncErrors, dispatch, null, props);
	    }
	    return syncErrors;
	  }
	};

	exports.default = handleSubmit;

/***/ }),
/* 560 */
/***/ (function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	var getDisplayName = function getDisplayName(Comp) {
	  return Comp.displayName || Comp.name || 'Component';
	};

	exports.default = getDisplayName;

/***/ }),
/* 561 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createReducer = __webpack_require__(562);

	var _createReducer2 = _interopRequireDefault(_createReducer);

	var _plain = __webpack_require__(350);

	var _plain2 = _interopRequireDefault(_plain);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = (0, _createReducer2.default)(_plain2.default);

/***/ }),
/* 562 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _actionTypes = __webpack_require__(554);

	var _deleteInWithCleanUp = __webpack_require__(563);

	var _deleteInWithCleanUp2 = _interopRequireDefault(_deleteInWithCleanUp);

	var _plain = __webpack_require__(350);

	var _plain2 = _interopRequireDefault(_plain);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

	var isReduxFormAction = function isReduxFormAction(action) {
	  return action && action.type && action.type.length > _actionTypes.prefix.length && action.type.substring(0, _actionTypes.prefix.length) === _actionTypes.prefix;
	};

	var createReducer = function createReducer(structure) {
	  var _behaviors;

	  var deepEqual = structure.deepEqual,
	      empty = structure.empty,
	      getIn = structure.getIn,
	      setIn = structure.setIn,
	      deleteIn = structure.deleteIn,
	      fromJS = structure.fromJS,
	      keys = structure.keys,
	      size = structure.size,
	      splice = structure.splice;

	  var deleteInWithCleanUp = (0, _deleteInWithCleanUp2.default)(structure);
	  var doSplice = function doSplice(state, key, field, index, removeNum, value, force) {
	    var existing = getIn(state, key + '.' + field);
	    return existing || force ? setIn(state, key + '.' + field, splice(existing, index, removeNum, value)) : state;
	  };
	  var doPlainSplice = function doPlainSplice(state, key, field, index, removeNum, value, force) {
	    var slice = getIn(state, key);
	    var existing = _plain2.default.getIn(slice, field);
	    return existing || force ? setIn(state, key, _plain2.default.setIn(slice, field, _plain2.default.splice(existing, index, removeNum, value))) : state;
	  };
	  var rootKeys = ['values', 'fields', 'submitErrors', 'asyncErrors'];
	  var arraySplice = function arraySplice(state, field, index, removeNum, value) {
	    var result = state;
	    var nonValuesValue = value != null ? empty : undefined;
	    result = doSplice(result, 'values', field, index, removeNum, value, true);
	    result = doSplice(result, 'fields', field, index, removeNum, nonValuesValue);
	    result = doPlainSplice(result, 'syncErrors', field, index, removeNum, undefined);
	    result = doPlainSplice(result, 'syncWarnings', field, index, removeNum, undefined);
	    result = doSplice(result, 'submitErrors', field, index, removeNum, undefined);
	    result = doSplice(result, 'asyncErrors', field, index, removeNum, undefined);
	    return result;
	  };

	  var behaviors = (_behaviors = {}, _defineProperty(_behaviors, _actionTypes.ARRAY_INSERT, function (state, _ref) {
	    var _ref$meta = _ref.meta,
	        field = _ref$meta.field,
	        index = _ref$meta.index,
	        payload = _ref.payload;

	    return arraySplice(state, field, index, 0, payload);
	  }), _defineProperty(_behaviors, _actionTypes.ARRAY_MOVE, function (state, _ref2) {
	    var _ref2$meta = _ref2.meta,
	        field = _ref2$meta.field,
	        from = _ref2$meta.from,
	        to = _ref2$meta.to;

	    var array = getIn(state, 'values.' + field);
	    var length = array ? size(array) : 0;
	    var result = state;
	    if (length) {
	      rootKeys.forEach(function (key) {
	        var path = key + '.' + field;
	        if (getIn(result, path)) {
	          var value = getIn(result, path + '[' + from + ']');
	          result = setIn(result, path, splice(getIn(result, path), from, 1) // remove
	          );result = setIn(result, path, splice(getIn(result, path), to, 0, value) // insert
	          );
	        }
	      });
	    }
	    return result;
	  }), _defineProperty(_behaviors, _actionTypes.ARRAY_POP, function (state, _ref3) {
	    var field = _ref3.meta.field;

	    var array = getIn(state, 'values.' + field);
	    var length = array ? size(array) : 0;
	    return length ? arraySplice(state, field, length - 1, 1) : state;
	  }), _defineProperty(_behaviors, _actionTypes.ARRAY_PUSH, function (state, _ref4) {
	    var field = _ref4.meta.field,
	        payload = _ref4.payload;

	    var array = getIn(state, 'values.' + field);
	    var length = array ? size(array) : 0;
	    return arraySplice(state, field, length, 0, payload);
	  }), _defineProperty(_behaviors, _actionTypes.ARRAY_REMOVE, function (state, _ref5) {
	    var _ref5$meta = _ref5.meta,
	        field = _ref5$meta.field,
	        index = _ref5$meta.index;

	    return arraySplice(state, field, index, 1);
	  }), _defineProperty(_behaviors, _actionTypes.ARRAY_REMOVE_ALL, function (state, _ref6) {
	    var field = _ref6.meta.field;

	    var array = getIn(state, 'values.' + field);
	    var length = array ? size(array) : 0;
	    return length ? arraySplice(state, field, 0, length) : state;
	  }), _defineProperty(_behaviors, _actionTypes.ARRAY_SHIFT, function (state, _ref7) {
	    var field = _ref7.meta.field;

	    return arraySplice(state, field, 0, 1);
	  }), _defineProperty(_behaviors, _actionTypes.ARRAY_SPLICE, function (state, _ref8) {
	    var _ref8$meta = _ref8.meta,
	        field = _ref8$meta.field,
	        index = _ref8$meta.index,
	        removeNum = _ref8$meta.removeNum,
	        payload = _ref8.payload;

	    return arraySplice(state, field, index, removeNum, payload);
	  }), _defineProperty(_behaviors, _actionTypes.ARRAY_SWAP, function (state, _ref9) {
	    var _ref9$meta = _ref9.meta,
	        field = _ref9$meta.field,
	        indexA = _ref9$meta.indexA,
	        indexB = _ref9$meta.indexB;

	    var result = state;
	    rootKeys.forEach(function (key) {
	      var valueA = getIn(result, key + '.' + field + '[' + indexA + ']');
	      var valueB = getIn(result, key + '.' + field + '[' + indexB + ']');
	      if (valueA !== undefined || valueB !== undefined) {
	        result = setIn(result, key + '.' + field + '[' + indexA + ']', valueB);
	        result = setIn(result, key + '.' + field + '[' + indexB + ']', valueA);
	      }
	    });
	    return result;
	  }), _defineProperty(_behaviors, _actionTypes.ARRAY_UNSHIFT, function (state, _ref10) {
	    var field = _ref10.meta.field,
	        payload = _ref10.payload;

	    return arraySplice(state, field, 0, 0, payload);
	  }), _defineProperty(_behaviors, _actionTypes.AUTOFILL, function (state, _ref11) {
	    var field = _ref11.meta.field,
	        payload = _ref11.payload;

	    var result = state;
	    result = deleteInWithCleanUp(result, 'asyncErrors.' + field);
	    result = deleteInWithCleanUp(result, 'submitErrors.' + field);
	    result = setIn(result, 'fields.' + field + '.autofilled', true);
	    result = setIn(result, 'values.' + field, payload);
	    return result;
	  }), _defineProperty(_behaviors, _actionTypes.BLUR, function (state, _ref12) {
	    var _ref12$meta = _ref12.meta,
	        field = _ref12$meta.field,
	        touch = _ref12$meta.touch,
	        payload = _ref12.payload;

	    var result = state;
	    var initial = getIn(result, 'initial.' + field);
	    if (initial === undefined && payload === '') {
	      result = deleteInWithCleanUp(result, 'values.' + field);
	    } else if (payload !== undefined) {
	      result = setIn(result, 'values.' + field, payload);
	    }
	    if (field === getIn(result, 'active')) {
	      result = deleteIn(result, 'active');
	    }
	    result = deleteIn(result, 'fields.' + field + '.active');
	    if (touch) {
	      result = setIn(result, 'fields.' + field + '.touched', true);
	      result = setIn(result, 'anyTouched', true);
	    }
	    return result;
	  }), _defineProperty(_behaviors, _actionTypes.CHANGE, function (state, _ref13) {
	    var _ref13$meta = _ref13.meta,
	        field = _ref13$meta.field,
	        touch = _ref13$meta.touch,
	        persistentSubmitErrors = _ref13$meta.persistentSubmitErrors,
	        payload = _ref13.payload;

	    var result = state;
	    var initial = getIn(result, 'initial.' + field);
	    if (initial === undefined && payload === '') {
	      result = deleteInWithCleanUp(result, 'values.' + field);
	    } else if (payload !== undefined) {
	      result = setIn(result, 'values.' + field, payload);
	    }
	    result = deleteInWithCleanUp(result, 'asyncErrors.' + field);
	    if (!persistentSubmitErrors) {
	      result = deleteInWithCleanUp(result, 'submitErrors.' + field);
	    }
	    result = deleteInWithCleanUp(result, 'fields.' + field + '.autofilled');
	    if (touch) {
	      result = setIn(result, 'fields.' + field + '.touched', true);
	      result = setIn(result, 'anyTouched', true);
	    }
	    return result;
	  }), _defineProperty(_behaviors, _actionTypes.CLEAR_SUBMIT, function (state) {
	    return deleteIn(state, 'triggerSubmit');
	  }), _defineProperty(_behaviors, _actionTypes.CLEAR_SUBMIT_ERRORS, function (state) {
	    return deleteInWithCleanUp(state, 'submitErrors');
	  }), _defineProperty(_behaviors, _actionTypes.CLEAR_ASYNC_ERROR, function (state, _ref14) {
	    var field = _ref14.meta.field;

	    return deleteIn(state, 'asyncErrors.' + field);
	  }), _defineProperty(_behaviors, _actionTypes.FOCUS, function (state, _ref15) {
	    var field = _ref15.meta.field;

	    var result = state;
	    var previouslyActive = getIn(state, 'active');
	    result = deleteIn(result, 'fields.' + previouslyActive + '.active');
	    result = setIn(result, 'fields.' + field + '.visited', true);
	    result = setIn(result, 'fields.' + field + '.active', true);
	    result = setIn(result, 'active', field);
	    return result;
	  }), _defineProperty(_behaviors, _actionTypes.INITIALIZE, function (state, _ref16) {
	    var payload = _ref16.payload,
	        _ref16$meta = _ref16.meta,
	        keepDirty = _ref16$meta.keepDirty,
	        keepSubmitSucceeded = _ref16$meta.keepSubmitSucceeded;

	    var mapData = fromJS(payload);
	    var result = empty; // clean all field state

	    // persist old warnings, they will get recalculated if the new form values are different from the old values
	    var warning = getIn(state, 'warning');
	    if (warning) {
	      result = setIn(result, 'warning', warning);
	    }
	    var syncWarnings = getIn(state, 'syncWarnings');
	    if (syncWarnings) {
	      result = setIn(result, 'syncWarnings', syncWarnings);
	    }

	    // persist old errors, they will get recalculated if the new form values are different from the old values
	    var error = getIn(state, 'error');
	    if (error) {
	      result = setIn(result, 'error', error);
	    }
	    var syncErrors = getIn(state, 'syncErrors');
	    if (syncErrors) {
	      result = setIn(result, 'syncErrors', syncErrors);
	    }

	    var registeredFields = getIn(state, 'registeredFields');
	    if (registeredFields) {
	      result = setIn(result, 'registeredFields', registeredFields);
	    }

	    var previousValues = getIn(state, 'values');
	    var previousInitialValues = getIn(state, 'initial');
	    var newInitialValues = mapData;

	    var newValues = previousValues;

	    if (keepDirty && registeredFields) {
	      if (!deepEqual(newInitialValues, previousInitialValues)) {
	        //
	        // Keep the value of dirty fields while updating the value of
	        // pristine fields. This way, apps can reinitialize forms while
	        // avoiding stomping on user edits.
	        //
	        // Note 1: The initialize action replaces all initial values
	        // regardless of keepDirty.
	        //
	        // Note 2: When a field is dirty, keepDirty is enabled, and the field
	        // value is the same as the new initial value for the field, the
	        // initialize action causes the field to become pristine. That effect
	        // is what we want.
	        //
	        keys(registeredFields).forEach(function (name) {
	          var previousInitialValue = getIn(previousInitialValues, name);
	          var previousValue = getIn(previousValues, name);

	          if (deepEqual(previousValue, previousInitialValue)) {
	            // Overwrite the old pristine value with the new pristine value
	            var newInitialValue = getIn(newInitialValues, name);
	            newValues = setIn(newValues, name, newInitialValue);
	          }
	        });

	        keys(newInitialValues).forEach(function (name) {
	          var previousInitialValue = getIn(previousInitialValues, name);
	          if (typeof previousInitialValue === 'undefined') {
	            // Add new values at the root level.
	            var newInitialValue = getIn(newInitialValues, name);
	            newValues = setIn(newValues, name, newInitialValue);
	          }
	        });
	      }
	    } else {
	      newValues = newInitialValues;
	    }

	    if (keepSubmitSucceeded && getIn(state, 'submitSucceeded')) {
	      result = setIn(result, 'submitSucceeded', true);
	    }
	    result = setIn(result, 'values', newValues);
	    result = setIn(result, 'initial', newInitialValues);
	    return result;
	  }), _defineProperty(_behaviors, _actionTypes.REGISTER_FIELD, function (state, _ref17) {
	    var _ref17$payload = _ref17.payload,
	        name = _ref17$payload.name,
	        type = _ref17$payload.type;

	    var key = 'registeredFields[\'' + name + '\']';
	    var field = getIn(state, key);
	    if (field) {
	      var count = getIn(field, 'count') + 1;
	      field = setIn(field, 'count', count);
	    } else {
	      field = fromJS({ name: name, type: type, count: 1 });
	    }
	    return setIn(state, key, field);
	  }), _defineProperty(_behaviors, _actionTypes.RESET, function (state) {
	    var result = empty;
	    var registeredFields = getIn(state, 'registeredFields');
	    if (registeredFields) {
	      result = setIn(result, 'registeredFields', registeredFields);
	    }
	    var values = getIn(state, 'initial');
	    if (values) {
	      result = setIn(result, 'values', values);
	      result = setIn(result, 'initial', values);
	    }
	    return result;
	  }), _defineProperty(_behaviors, _actionTypes.SUBMIT, function (state) {
	    return setIn(state, 'triggerSubmit', true);
	  }), _defineProperty(_behaviors, _actionTypes.START_ASYNC_VALIDATION, function (state, _ref18) {
	    var field = _ref18.meta.field;

	    return setIn(state, 'asyncValidating', field || true);
	  }), _defineProperty(_behaviors, _actionTypes.START_SUBMIT, function (state) {
	    return setIn(state, 'submitting', true);
	  }), _defineProperty(_behaviors, _actionTypes.STOP_ASYNC_VALIDATION, function (state, _ref19) {
	    var payload = _ref19.payload;

	    var result = state;
	    result = deleteIn(result, 'asyncValidating');
	    if (payload && Object.keys(payload).length) {
	      var _error = payload._error,
	          fieldErrors = _objectWithoutProperties(payload, ['_error']);

	      if (_error) {
	        result = setIn(result, 'error', _error);
	      }
	      if (Object.keys(fieldErrors).length) {
	        result = setIn(result, 'asyncErrors', fromJS(fieldErrors));
	      } else {
	        result = deleteIn(result, 'asyncErrors');
	      }
	    } else {
	      result = deleteIn(result, 'error');
	      result = deleteIn(result, 'asyncErrors');
	    }
	    return result;
	  }), _defineProperty(_behaviors, _actionTypes.STOP_SUBMIT, function (state, _ref20) {
	    var payload = _ref20.payload;

	    var result = state;
	    result = deleteIn(result, 'submitting');
	    result = deleteIn(result, 'submitFailed');
	    result = deleteIn(result, 'submitSucceeded');
	    if (payload && Object.keys(payload).length) {
	      var _error = payload._error,
	          fieldErrors = _objectWithoutProperties(payload, ['_error']);

	      if (_error) {
	        result = setIn(result, 'error', _error);
	      } else {
	        result = deleteIn(result, 'error');
	      }
	      if (Object.keys(fieldErrors).length) {
	        result = setIn(result, 'submitErrors', fromJS(fieldErrors));
	      } else {
	        result = deleteIn(result, 'submitErrors');
	      }
	      result = setIn(result, 'submitFailed', true);
	    } else {
	      result = setIn(result, 'submitSucceeded', true);
	      result = deleteIn(result, 'error');
	      result = deleteIn(result, 'submitErrors');
	    }
	    return result;
	  }), _defineProperty(_behaviors, _actionTypes.SET_SUBMIT_FAILED, function (state, _ref21) {
	    var fields = _ref21.meta.fields;

	    var result = state;
	    result = setIn(result, 'submitFailed', true);
	    result = deleteIn(result, 'submitSucceeded');
	    result = deleteIn(result, 'submitting');
	    fields.forEach(function (field) {
	      return result = setIn(result, 'fields.' + field + '.touched', true);
	    });
	    if (fields.length) {
	      result = setIn(result, 'anyTouched', true);
	    }
	    return result;
	  }), _defineProperty(_behaviors, _actionTypes.SET_SUBMIT_SUCCEEDED, function (state) {
	    var result = state;
	    result = deleteIn(result, 'submitFailed');
	    result = setIn(result, 'submitSucceeded', true);
	    return result;
	  }), _defineProperty(_behaviors, _actionTypes.TOUCH, function (state, _ref22) {
	    var fields = _ref22.meta.fields;

	    var result = state;
	    fields.forEach(function (field) {
	      return result = setIn(result, 'fields.' + field + '.touched', true);
	    });
	    result = setIn(result, 'anyTouched', true);
	    return result;
	  }), _defineProperty(_behaviors, _actionTypes.UNREGISTER_FIELD, function (state, _ref23) {
	    var _ref23$payload = _ref23.payload,
	        name = _ref23$payload.name,
	        destroyOnUnmount = _ref23$payload.destroyOnUnmount;

	    var result = state;
	    var key = 'registeredFields[\'' + name + '\']';
	    var field = getIn(result, key);
	    if (!field) {
	      return result;
	    }

	    var count = getIn(field, 'count') - 1;
	    if (count <= 0 && destroyOnUnmount) {
	      // Note: Cannot use deleteWithCleanUp here because of the flat nature of registeredFields
	      result = deleteIn(result, key);
	      if (deepEqual(getIn(result, 'registeredFields'), empty)) {
	        result = deleteIn(result, 'registeredFields');
	      }
	    } else {
	      field = setIn(field, 'count', count);
	      result = setIn(result, key, field);
	    }
	    if (destroyOnUnmount) {
	      result = deleteInWithCleanUp(result, 'syncErrors.' + name);
	      result = deleteInWithCleanUp(result, 'submitErrors.' + name);
	      result = deleteInWithCleanUp(result, 'asyncErrors.' + name);
	      result = deleteInWithCleanUp(result, 'syncWarnings.' + name);
	    }
	    return result;
	  }), _defineProperty(_behaviors, _actionTypes.UNTOUCH, function (state, _ref24) {
	    var fields = _ref24.meta.fields;

	    var result = state;
	    fields.forEach(function (field) {
	      return result = deleteIn(result, 'fields.' + field + '.touched');
	    });
	    var anyTouched = keys(getIn(result, 'registeredFields')).some(function (key) {
	      return getIn(result, 'fields.' + key + '.touched');
	    });
	    result = anyTouched ? setIn(result, 'anyTouched', true) : deleteIn(result, 'anyTouched');
	    return result;
	  }), _defineProperty(_behaviors, _actionTypes.UPDATE_SYNC_ERRORS, function (state, _ref25) {
	    var _ref25$payload = _ref25.payload,
	        syncErrors = _ref25$payload.syncErrors,
	        error = _ref25$payload.error;

	    var result = state;
	    if (error) {
	      result = setIn(result, 'error', error);
	      result = setIn(result, 'syncError', true);
	    } else {
	      result = deleteIn(result, 'error');
	      result = deleteIn(result, 'syncError');
	    }
	    if (Object.keys(syncErrors).length) {
	      result = setIn(result, 'syncErrors', syncErrors);
	    } else {
	      result = deleteIn(result, 'syncErrors');
	    }
	    return result;
	  }), _defineProperty(_behaviors, _actionTypes.UPDATE_SYNC_WARNINGS, function (state, _ref26) {
	    var _ref26$payload = _ref26.payload,
	        syncWarnings = _ref26$payload.syncWarnings,
	        warning = _ref26$payload.warning;

	    var result = state;
	    if (warning) {
	      result = setIn(result, 'warning', warning);
	    } else {
	      result = deleteIn(result, 'warning');
	    }
	    if (Object.keys(syncWarnings).length) {
	      result = setIn(result, 'syncWarnings', syncWarnings);
	    } else {
	      result = deleteIn(result, 'syncWarnings');
	    }
	    return result;
	  }), _behaviors);

	  var reducer = function reducer() {
	    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : empty;
	    var action = arguments[1];

	    var behavior = behaviors[action.type];
	    return behavior ? behavior(state, action) : state;
	  };

	  var byForm = function byForm(reducer) {
	    return function () {
	      var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : empty;
	      var action = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

	      var form = action && action.meta && action.meta.form;
	      if (!form || !isReduxFormAction(action)) {
	        return state;
	      }
	      if (action.type === _actionTypes.DESTROY) {
	        return action.meta.form.reduce(function (result, form) {
	          return deleteInWithCleanUp(result, form);
	        }, state);
	      }
	      var formState = getIn(state, form);
	      var result = reducer(formState, action);
	      return result === formState ? state : setIn(state, form, result);
	    };
	  };

	  /**
	   * Adds additional functionality to the reducer
	   */
	  function decorate(target) {
	    target.plugin = function plugin(reducers) {
	      var _this = this;

	      // use 'function' keyword to enable 'this'
	      return decorate(function () {
	        var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : empty;
	        var action = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
	        return Object.keys(reducers).reduce(function (accumulator, key) {
	          var previousState = getIn(accumulator, key);
	          var nextState = reducers[key](previousState, action, getIn(state, key));
	          return nextState === previousState ? accumulator : setIn(accumulator, key, nextState);
	        }, _this(state, action));
	      });
	    };

	    return target;
	  }

	  return decorate(byForm(reducer));
	};

	exports.default = createReducer;

/***/ }),
/* 563 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _toPath2 = __webpack_require__(353);

	var _toPath3 = _interopRequireDefault(_toPath2);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var createDeleteInWithCleanUp = function createDeleteInWithCleanUp(_ref) {
	  var deepEqual = _ref.deepEqual,
	      empty = _ref.empty,
	      getIn = _ref.getIn,
	      deleteIn = _ref.deleteIn,
	      setIn = _ref.setIn;

	  var deleteInWithCleanUp = function deleteInWithCleanUp(state, path) {
	    if (path[path.length - 1] === ']') {
	      // array path
	      var pathTokens = (0, _toPath3.default)(path);
	      pathTokens.pop();
	      var parent = getIn(state, pathTokens.join('.'));
	      return parent ? setIn(state, path, undefined) : state;
	    }

	    var result = state;
	    if (getIn(state, path) !== undefined) {
	      result = deleteIn(state, path);
	    }

	    var dotIndex = path.lastIndexOf('.');
	    if (dotIndex > 0) {
	      var parentPath = path.substring(0, dotIndex);
	      if (parentPath[parentPath.length - 1] !== ']') {
	        var _parent = getIn(result, parentPath);
	        if (deepEqual(_parent, empty)) {
	          return deleteInWithCleanUp(result, parentPath);
	        }
	      }
	    }
	    return result;
	  };

	  return deleteInWithCleanUp;
	};

	exports.default = createDeleteInWithCleanUp;

/***/ }),
/* 564 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createValues = __webpack_require__(565);

	var _createValues2 = _interopRequireDefault(_createValues);

	var _plain = __webpack_require__(350);

	var _plain2 = _interopRequireDefault(_plain);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = (0, _createValues2.default)(_plain2.default);

/***/ }),
/* 565 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _reactRedux = __webpack_require__(160);

	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

	var createValues = function createValues(_ref) {
	  var getIn = _ref.getIn;
	  return function (config) {
	    var _prop$getFormState$co = _extends({
	      prop: 'values',
	      getFormState: function getFormState(state) {
	        return getIn(state, 'form');
	      }
	    }, config),
	        form = _prop$getFormState$co.form,
	        prop = _prop$getFormState$co.prop,
	        getFormState = _prop$getFormState$co.getFormState;

	    return (0, _reactRedux.connect)(function (state) {
	      return _defineProperty({}, prop, getIn(getFormState(state), form + '.values'));
	    }, function () {
	      return {};
	    } // ignore dispatch
	    );
	  };
	};

	exports.default = createValues;

/***/ }),
/* 566 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _suggestionItem = __webpack_require__(567);

	var _suggestionItem2 = _interopRequireDefault(_suggestionItem);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // 3rd Party


	// Internal Modules


	/*

	*/
	var SuggestionList = function (_Component) {
	    _inherits(SuggestionList, _Component);

	    function SuggestionList() {
	        _classCallCheck(this, SuggestionList);

	        return _possibleConstructorReturn(this, (SuggestionList.__proto__ || Object.getPrototypeOf(SuggestionList)).apply(this, arguments));
	    }

	    _createClass(SuggestionList, [{
	        key: 'render',
	        value: function render() {
	            return _react2.default.createElement(
	                'div',
	                null,
	                _react2.default.createElement(
	                    'a',
	                    { href: '/index.html', className: 'dropdown-toggle d-block', onClick: function onClick(event) {
	                            return event.preventDefault();
	                        } },
	                    'Sugest\xF5es: (',
	                    this.props.suggestions.length,
	                    ')'
	                ),
	                _react2.default.createElement(
	                    'div',
	                    { className: 'd-flex justify-content-between mb-4 suggestion-list' },
	                    this.props.suggestions.map(function (suggestion, i) {
	                        return _react2.default.createElement(_suggestionItem2.default, { key: i, suggestion: suggestion });
	                    })
	                )
	            );
	        }
	    }]);

	    return SuggestionList;
	}(_react.Component);

	exports.default = SuggestionList;

/***/ }),
/* 567 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _reactRouterDom = __webpack_require__(203);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/*

	*/
	// 3rd Party
	var SuggestionItem = function SuggestionItem(props) {
	    return _react2.default.createElement(
	        'div',
	        { className: 'card suggestion' },
	        _react2.default.createElement('img', { src: props.suggestion.imageUrl, className: 'card-img-top suggestion-image' }),
	        _react2.default.createElement(
	            'div',
	            { className: 'card-block' },
	            _react2.default.createElement(
	                'h4',
	                { className: 'card-title' },
	                props.suggestion.addressAsStreet
	            ),
	            _react2.default.createElement(
	                _reactRouterDom.Link,
	                { to: '/app/user/report/' + props.suggestion.id },
	                'Detalhes >>'
	            )
	        )
	    );
	};

	exports.default = SuggestionItem;

/***/ }),
/* 568 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/*
	    Componente Alert do Bootstrap.

	    Faz render dos elementos nested dentro dele.
	*/
	var Alert = function Alert(props) {
	    var header = props.type === 'danger' ? 'Erro' : 'Sucesso';
	    setTimeout(function () {
	        props.timeoutCallback();
	    }, props.timeout * 1000);

	    return _react2.default.createElement(
	        'div',
	        { className: 'alert alert-' + props.type + ' alert-dismissible fade show alert-custom', role: 'alert' },
	        _react2.default.createElement(
	            'button',
	            { type: 'button', className: 'close', 'data-dismiss': 'alert', 'aria-label': 'Close' },
	            _react2.default.createElement(
	                'span',
	                { 'aria-hidden': 'true' },
	                '\xD7'
	            )
	        ),
	        props.children
	    );
	}; // 3rd Party
	exports.default = Alert;

/***/ }),
/* 569 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _reactRedux = __webpack_require__(160);

	var _reduxForm = __webpack_require__(332);

	var _axios = __webpack_require__(253);

	var _axios2 = _interopRequireDefault(_axios);

	var _comment_item = __webpack_require__(570);

	var _comment_item2 = _interopRequireDefault(_comment_item);

	var _modal = __webpack_require__(320);

	var _modal2 = _interopRequireDefault(_modal);

	var _spinner = __webpack_require__(321);

	var _spinner2 = _interopRequireDefault(_spinner);

	var _loading_text = __webpack_require__(322);

	var _loading_text2 = _interopRequireDefault(_loading_text);

	var _alert = __webpack_require__(568);

	var _alert2 = _interopRequireDefault(_alert);

	var _config = __webpack_require__(279);

	var _config2 = _interopRequireDefault(_config);

	var _actions_reports = __webpack_require__(327);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // 3rd Party


	// Internal Modules


	// Actions


	//
	var markerColors = {
	    "Pendente": "#959595",
	    "Em Resolução": "#FCF004",
	    "Resolvido": "#00FF00",
	    "Rejeitado": "#FF0000"
	};

	var PRIORITY_LEVELS = [1, 2, 3, 4, 5];

	/*
	    
	*/

	var ReportDetailsPage = function (_Component) {
	    _inherits(ReportDetailsPage, _Component);

	    function ReportDetailsPage(props) {
	        _classCallCheck(this, ReportDetailsPage);

	        var _this = _possibleConstructorReturn(this, (ReportDetailsPage.__proto__ || Object.getPrototypeOf(ReportDetailsPage)).call(this, props));

	        _this.state = {
	            id: '',
	            report: null,
	            comments: [],
	            submittingComment: false,
	            successMsg: '',
	            errorMsg: '',
	            selectingPriority: false,
	            submittingFollow: false,
	            isFollowing: false
	        };
	        return _this;
	    }

	    _createClass(ReportDetailsPage, [{
	        key: 'componentWillMount',
	        value: function componentWillMount() {
	            if (this.props.reports && this.props.reports.reports) {
	                var id = this.props.match.params.id;
	                var report = this.props.reports.reports[id].report;
	                var isFollowing = report.isFollowing;
	                this.setState({ id: id, report: report, isFollowing: isFollowing });
	                this.getComments(id, this.props.token.token);
	            }
	        }
	    }, {
	        key: 'renderCommentSection',
	        value: function renderCommentSection() {
	            var commentItems = this.state.comments.map(function (comment, i) {
	                return _react2.default.createElement(_comment_item2.default, { key: i, comment: comment });
	            });

	            return _react2.default.createElement(
	                'div',
	                null,
	                _react2.default.createElement(
	                    'a',
	                    { href: '/index.html', className: 'dropdown-toggle d-block mb-2', onClick: function onClick(event) {
	                            return event.preventDefault();
	                        } },
	                    'Coment\xE1rios: (',
	                    commentItems.length,
	                    ')'
	                ),
	                commentItems
	            );
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            //
	            var _props = this.props,
	                handleSubmit = _props.handleSubmit,
	                pristine = _props.pristine,
	                submitting = _props.submitting;


	            return this.state.report && _react2.default.createElement(
	                'div',
	                { className: 'container h-100' },
	                _react2.default.createElement(
	                    'div',
	                    { className: 'row justify-content-center custom-container' },
	                    _react2.default.createElement(
	                        'div',
	                        { className: 'col-md-6' },
	                        _react2.default.createElement(
	                            'div',
	                            { className: 'w-100 clearfix' },
	                            _react2.default.createElement(
	                                'a',
	                                { href: '/index.html', className: 'float-left', onClick: this.onPreviousPageClick.bind(this) },
	                                '<< Voltar'
	                            ),
	                            !this.state.isFollowing && _react2.default.createElement(
	                                'a',
	                                { href: '/index.html', className: 'float-right', onClick: this.onSubscribeClick.bind(this) },
	                                'Seguir >>'
	                            ) || _react2.default.createElement(
	                                'a',
	                                { href: '/index.html', className: 'float-right', onClick: this.onUnsubscribeClick.bind(this) },
	                                'Deixar de seguir >>'
	                            )
	                        ),
	                        this.state.selectingPriority && _react2.default.createElement(
	                            'div',
	                            { className: 'w-100' },
	                            _react2.default.createElement(
	                                'select',
	                                { className: 'form-control', onChange: this.onPriorityChange.bind(this) },
	                                _react2.default.createElement(
	                                    'option',
	                                    { defaultValue: true },
	                                    'Seleccione o n\xEDvel de urg\xEAncia...'
	                                ),
	                                PRIORITY_LEVELS.map(function (lvl) {
	                                    return _react2.default.createElement(
	                                        'option',
	                                        { key: lvl, value: lvl },
	                                        lvl
	                                    );
	                                })
	                            )
	                        ),
	                        _react2.default.createElement(
	                            'figure',
	                            null,
	                            _react2.default.createElement('img', { src: this.state.report.imageUrl, className: 'w-100 details-image' })
	                        ),
	                        _react2.default.createElement(
	                            'div',
	                            { className: 'row my-3' },
	                            _react2.default.createElement(
	                                'div',
	                                { className: 'col' },
	                                _react2.default.createElement(
	                                    'strong',
	                                    null,
	                                    'Morada:'
	                                ),
	                                ' ',
	                                this.state.report.addressAsStreet
	                            )
	                        ),
	                        _react2.default.createElement(
	                            'div',
	                            { className: 'row my-3' },
	                            _react2.default.createElement(
	                                'div',
	                                { className: 'col' },
	                                _react2.default.createElement(
	                                    'strong',
	                                    null,
	                                    'Tipo:'
	                                ),
	                                ' ',
	                                this.state.report.type
	                            )
	                        ),
	                        _react2.default.createElement(
	                            'div',
	                            { className: 'row my-3' },
	                            _react2.default.createElement(
	                                'div',
	                                { className: 'col' },
	                                _react2.default.createElement(
	                                    'strong',
	                                    null,
	                                    'Estado:'
	                                ),
	                                ' ',
	                                this.state.report.statusDescription,
	                                _react2.default.createElement('i', { className: 'fa fa-circle i', 'aria-hidden': 'true', style: { color: markerColors[this.state.report.statusDescription] } })
	                            )
	                        ),
	                        _react2.default.createElement(
	                            'div',
	                            { className: 'row my-3' },
	                            _react2.default.createElement(
	                                'div',
	                                { className: 'col' },
	                                _react2.default.createElement(
	                                    'strong',
	                                    null,
	                                    'Descri\xE7\xE3o:'
	                                ),
	                                _react2.default.createElement('br', null),
	                                this.state.report.description
	                            )
	                        ),
	                        _react2.default.createElement(
	                            'div',
	                            { className: 'row my-3' },
	                            _react2.default.createElement(
	                                'div',
	                                { className: 'col' },
	                                this.renderCommentSection()
	                            )
	                        ),
	                        _react2.default.createElement(
	                            'div',
	                            { className: 'row my-3' },
	                            _react2.default.createElement(
	                                'div',
	                                { className: 'col' },
	                                _react2.default.createElement(
	                                    'form',
	                                    { onSubmit: handleSubmit(this.onSubmit.bind(this)) },
	                                    _react2.default.createElement(_reduxForm.Field, { className: 'form-control', id: 'commentSection', rows: '3', name: 'content', component: 'textarea', placeholder: 'Escrever coment\xE1rio...' }),
	                                    _react2.default.createElement(
	                                        'div',
	                                        { className: 'd-flex justify-content-end mt-2' },
	                                        _react2.default.createElement(
	                                            'button',
	                                            { type: 'submit', className: 'btn btn-primary', disabled: pristine || submitting },
	                                            'Comentar'
	                                        )
	                                    )
	                                )
	                            )
	                        )
	                    )
	                ),
	                this.state.submittingComment && _react2.default.createElement(
	                    _modal2.default,
	                    null,
	                    _react2.default.createElement(
	                        'div',
	                        { className: 'd-flex justify-content-center align-items-center' },
	                        _react2.default.createElement(
	                            'div',
	                            { className: 'mr-3' },
	                            _react2.default.createElement(_spinner2.default, null)
	                        ),
	                        _react2.default.createElement(_loading_text2.default, { message: 'A submeter coment\xE1rio' })
	                    )
	                )
	            );
	        }
	    }, {
	        key: 'getComments',
	        value: function getComments(id, token) {
	            var _this2 = this;

	            _axios2.default.post(_config2.default + '/report/getComments/' + id, token).then(function (response) {
	                var comments = response.data;
	                console.log('Comments:', comments);
	                if (comments) _this2.setState({ comments: comments });
	            }).catch(function (error) {
	                console.log('Error fetching comments...', error);
	            });
	        }
	    }, {
	        key: 'postComment',
	        value: function postComment(content) {
	            var _this3 = this;

	            this.setState({ submittingComment: true });
	            var data = {
	                comment: { content: content },
	                token: this.props.token.token
	            };
	            _axios2.default.post(_config2.default + '/report/addComment/' + this.state.id, data).then(function (response) {
	                _this3.props.reset();
	                var comments = [].concat(_toConsumableArray(_this3.state.comments), [response.data]);
	                _this3.setState({ comments: comments, submittingComment: false, isFollowing: true });
	            }).catch(function (error) {
	                console.log('Failed to submit report', error);
	                _this3.setState({ submittingComment: false });
	            });
	        }
	    }, {
	        key: 'onSubmit',
	        value: function onSubmit(values) {
	            console.log('Submitting comment...', values);
	            this.postComment(values.content);
	        }
	    }, {
	        key: 'onPreviousPageClick',
	        value: function onPreviousPageClick(event) {
	            event.preventDefault();

	            // Go back to previous Route
	            localStorage.setItem('previousLocation', '/app/user/report_details');
	            this.props.history.goBack();
	        }
	    }, {
	        key: 'onSubscribeClick',
	        value: function onSubscribeClick(event) {
	            event.preventDefault();

	            // Display the priority input
	            this.setState({ selectingPriority: true });
	        }
	    }, {
	        key: 'onPriorityChange',
	        value: function onPriorityChange(event) {
	            var _this4 = this;

	            this.setState({ submittingFollow: true });
	            var data = {
	                token: this.props.token.token,
	                priority: event.target.value
	            };
	            _axios2.default.post(_config2.default + '/report/follow/' + this.state.id, data).then(function (response) {
	                console.log('Success!', response);
	                _this4.setState({ submittingFollow: false, selectingPriority: false, isFollowing: true });
	                _this4.props.dispatch((0, _actions_reports.toggleFollow)(_this4.props.match.params.id));
	            }).catch(function (error) {
	                console.log('Could not follow report...', error);
	                _this4.setState({ submittingFollow: false, selectingPriority: false });
	            });
	        }
	    }, {
	        key: 'onUnsubscribeClick',
	        value: function onUnsubscribeClick(event) {
	            var _this5 = this;

	            event.preventDefault();

	            _axios2.default.post(_config2.default + '/report/unfollow/' + this.state.report.id, this.props.token.token).then(function (response) {
	                console.log('Unfollowed!', response);
	                _this5.setState({ isFollowing: false });
	                _this5.props.dispatch((0, _actions_reports.toggleFollow)(_this5.props.match.params.id));
	            }).catch(function (error) {
	                console.log('Could not unfollow...', error);
	            });
	        }
	    }]);

	    return ReportDetailsPage;
	}(_react.Component);

	function mapStateToProps(store) {
	    return {
	        token: store.token,
	        reports: store.reports
	    };
	}

	function validate(values) {
	    var errors = {};

	    if (!values.content) errors.content = 'Deve introduzir um comentário antes de submeter';

	    return errors;
	}

	exports.default = (0, _reduxForm.reduxForm)({
	    form: 'Comment',
	    validate: validate
	})((0, _reactRedux.connect)(mapStateToProps)(ReportDetailsPage));

/***/ }),
/* 570 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/*

	*/
	var CommentItem = function CommentItem(props) {
	    return props.comment && _react2.default.createElement(
	        "div",
	        { className: "card mb-2" },
	        _react2.default.createElement(
	            "div",
	            { className: "card-header d-flex justify-content-between" },
	            _react2.default.createElement(
	                "span",
	                null,
	                props.comment.authorName,
	                " ",
	                _react2.default.createElement(
	                    "small",
	                    { className: "text-muted" },
	                    "(",
	                    props.comment.authorIdentifier,
	                    ")"
	                )
	            ),
	            _react2.default.createElement(
	                "span",
	                null,
	                props.comment.registerDate
	            )
	        ),
	        _react2.default.createElement(
	            "div",
	            { className: "card-block" },
	            _react2.default.createElement(
	                "blockquote",
	                { className: "card-blockquote" },
	                _react2.default.createElement(
	                    "p",
	                    null,
	                    props.comment.content
	                )
	            )
	        )
	    );
	}; // 3rd Party
	exports.default = CommentItem;

/***/ }),
/* 571 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _reactRedux = __webpack_require__(160);

	var _reactRouterDom = __webpack_require__(203);

	var _map_google = __webpack_require__(572);

	var _map_google2 = _interopRequireDefault(_map_google);

	var _button_add_report = __webpack_require__(574);

	var _button_add_report2 = _interopRequireDefault(_button_add_report);

	var _side_menu = __webpack_require__(575);

	var _side_menu2 = _interopRequireDefault(_side_menu);

	var _button_filters = __webpack_require__(576);

	var _button_filters2 = _interopRequireDefault(_button_filters);

	var _filter_field = __webpack_require__(577);

	var _filter_field2 = _interopRequireDefault(_filter_field);

	var _config = __webpack_require__(279);

	var _actions_reports = __webpack_require__(327);

	var _actions_interval_reports = __webpack_require__(326);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // 3rd Party


	// Internal Modules


	// Actions


	//
	var markerColors = {
	    "Pendente": "#959595",
	    "Em Resolução": "#FCF004",
	    "Resolvido": "#00FF00",
	    "Rejeitado": "#FF0000"
	};

	/*
	    
	*/

	var MapPage = function (_Component) {
	    _inherits(MapPage, _Component);

	    function MapPage(props) {
	        _classCallCheck(this, MapPage);

	        var _this = _possibleConstructorReturn(this, (MapPage.__proto__ || Object.getPrototypeOf(MapPage)).call(this, props));

	        _this.state = {
	            btnActive: true,
	            menuActiveLeft: false,
	            menuActiveRight: false,
	            selectedReport: null
	        };

	        // Add event listener to ESC key
	        document.onkeydown = function (event) {
	            event = event || window.event;
	            if (event.keyCode === 27) _this.onEscapePress();
	        };
	        return _this;
	    }

	    /*
	        Faz o pedido dos markers somente se existir uma sessão.
	    */


	    _createClass(MapPage, [{
	        key: 'componentWillMount',
	        value: function componentWillMount() {
	            var _this2 = this;

	            var previousLocation = localStorage.getItem('previousLocation');
	            if (previousLocation) localStorage.removeItem('previousLocation');

	            if (this.props.token.token && !previousLocation) {
	                this.props.dispatch((0, _actions_reports.getReports)(this.props.token.token));

	                // Se não temos o interval definido (rotina background)
	                if (!this.props.intervalReport) {
	                    var intervalId = setInterval(function () {
	                        console.log('[Background Routine] Reports');
	                        _this2.props.dispatch((0, _actions_reports.getReports)(_this2.props.token.token));
	                    }, _config.INTERVAL_TIME);
	                    this.props.dispatch((0, _actions_interval_reports.setIntervalReports)(intervalId));
	                }
	            } else if (this.props.reports.hidden) {
	                this.props.dispatch((0, _actions_reports.unsetHidden)());
	            }
	        }

	        /*
	            Se existirem coordenadas para adicionar um novo report,
	            faz redirect para a página de adicionar report.
	        */

	    }, {
	        key: 'componentWillReceiveProps',
	        value: function componentWillReceiveProps(nextProps) {
	            if (nextProps.newReportLocation) this.props.history.push('/app/user/report');
	        }
	    }, {
	        key: 'componentWillUnmount',
	        value: function componentWillUnmount() {
	            document.onkeydown = null;
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            var _this3 = this;

	            return _react2.default.createElement(
	                'div',
	                { className: 'h-100' },
	                this.state.menuActiveLeft && _react2.default.createElement(
	                    _side_menu2.default,
	                    { side: 'left' },
	                    _react2.default.createElement(
	                        'a',
	                        { href: '#', className: 'quit text-muted btn btn-primary', onClick: function onClick(event) {
	                                return _this3.onQuitLeftSideMenuClick(event);
	                            } },
	                        '\xD7'
	                    ),
	                    _react2.default.createElement('img', { className: 'details-image', src: this.state.selectedReport.imageUrl }),
	                    _react2.default.createElement(
	                        'div',
	                        { className: 'row my-3' },
	                        _react2.default.createElement(
	                            'div',
	                            { className: 'col' },
	                            _react2.default.createElement(
	                                'strong',
	                                null,
	                                'Morada:'
	                            ),
	                            ' ',
	                            this.state.selectedReport.addressAsStreet
	                        )
	                    ),
	                    _react2.default.createElement(
	                        'div',
	                        { className: 'row my-3' },
	                        _react2.default.createElement(
	                            'div',
	                            { className: 'col' },
	                            _react2.default.createElement(
	                                'strong',
	                                null,
	                                'Tipo:'
	                            ),
	                            ' ',
	                            this.state.selectedReport.type
	                        )
	                    ),
	                    _react2.default.createElement(
	                        'div',
	                        { className: 'row my-3' },
	                        _react2.default.createElement(
	                            'div',
	                            { className: 'col' },
	                            _react2.default.createElement(
	                                'strong',
	                                null,
	                                'Estado:'
	                            ),
	                            ' ',
	                            this.state.selectedReport.statusDescription,
	                            _react2.default.createElement('i', { className: 'fa fa-circle', 'aria-hidden': 'true', style: { color: markerColors[this.state.selectedReport.statusDescription] } })
	                        )
	                    ),
	                    _react2.default.createElement(
	                        'div',
	                        { className: 'row my-3' },
	                        _react2.default.createElement(
	                            'div',
	                            { className: 'col' },
	                            _react2.default.createElement(
	                                'strong',
	                                null,
	                                'Descri\xE7\xE3o:'
	                            ),
	                            _react2.default.createElement('br', null),
	                            this.state.selectedReport.description
	                        )
	                    ),
	                    _react2.default.createElement(
	                        'div',
	                        { className: 'row my-3' },
	                        _react2.default.createElement(
	                            'div',
	                            { className: 'col text-right' },
	                            _react2.default.createElement(
	                                _reactRouterDom.Link,
	                                { to: '/app/user/report/' + this.state.selectedReport.id },
	                                'Ver mais >>'
	                            )
	                        )
	                    )
	                ),
	                this.state.menuActiveRight && _react2.default.createElement(
	                    _side_menu2.default,
	                    { side: 'right' },
	                    _react2.default.createElement(
	                        'a',
	                        { href: '#', className: 'quit text-muted btn btn-primary', onClick: function onClick(event) {
	                                return _this3.onQuitRightSideMenuClick(event);
	                            } },
	                        '\xD7'
	                    ),
	                    _react2.default.createElement(
	                        'h4',
	                        { className: 'text-muted' },
	                        'Filtrar por Estado:'
	                    ),
	                    _react2.default.createElement('hr', null),
	                    _react2.default.createElement(_filter_field2.default, { name: 'Pendente', onChange: this.reportStateFilter.bind(this) }),
	                    _react2.default.createElement(_filter_field2.default, { name: 'Em Resolu\xE7\xE3o', onChange: this.reportStateFilter.bind(this) }),
	                    _react2.default.createElement(_filter_field2.default, { name: 'Resolvido', onChange: this.reportStateFilter.bind(this) }),
	                    _react2.default.createElement(_filter_field2.default, { name: 'Rejeitado', onChange: this.reportStateFilter.bind(this) })
	                ),
	                _react2.default.createElement(_map_google2.default, {
	                    initialLat: 38.6359837,
	                    initialLng: -9.1874799,
	                    reports: this.props.reports,
	                    onLocationSelected: this.onLocationSelected.bind(this),
	                    onMarkerClick: this.onMarkerClick.bind(this),
	                    searchLocation: this.props.searchLocation
	                }),
	                _react2.default.createElement(_button_filters2.default, { onClick: this.toggleFilterPanel.bind(this) }),
	                _react2.default.createElement(_button_add_report2.default, {
	                    active: this.state.btnActive,
	                    onClick: this.onAddReportClick.bind(this)
	                }),
	                !this.state.btnActive && _react2.default.createElement(
	                    'div',
	                    { className: 'exit-info' },
	                    _react2.default.createElement(
	                        'strong',
	                        null,
	                        'Pressione ESC para sair do modo Adicionar Ocorr\xEAncia'
	                    )
	                )
	            );
	        }
	    }, {
	        key: 'onAddReportClick',
	        value: function onAddReportClick() {
	            this.setState({ btnActive: false, menuActiveLeft: false });
	            this.props.dispatch((0, _actions_reports.setHidden)());
	        }
	    }, {
	        key: 'onEscapePress',
	        value: function onEscapePress() {
	            this.setState({ btnActive: true, menuActiveLeft: false, menuActiveRight: false });
	            this.props.dispatch((0, _actions_reports.unsetHidden)());
	        }
	    }, {
	        key: 'onLocationSelected',
	        value: function onLocationSelected(coords) {
	            this.props.dispatch((0, _actions_reports.setNewReportLocation)(coords));
	        }
	    }, {
	        key: 'onMarkerClick',
	        value: function onMarkerClick(reportId) {
	            this.setState({ menuActiveLeft: true, selectedReport: this.props.reports.reports[reportId].report });
	        }
	    }, {
	        key: 'onQuitLeftSideMenuClick',
	        value: function onQuitLeftSideMenuClick(event) {
	            event.preventDefault();

	            this.setState({ menuActiveLeft: false });
	        }
	    }, {
	        key: 'onQuitRightSideMenuClick',
	        value: function onQuitRightSideMenuClick(event) {
	            event.preventDefault();

	            this.setState({ menuActiveRight: false });
	        }
	    }, {
	        key: 'toggleFilterPanel',
	        value: function toggleFilterPanel() {
	            this.setState({ menuActiveRight: !this.state.menuActiveRight });
	        }
	    }, {
	        key: 'reportStateFilter',
	        value: function reportStateFilter(event) {
	            var _event$target = event.target,
	                name = _event$target.name,
	                checked = _event$target.checked;

	            console.log(name, checked);
	            if (checked) {
	                this.props.dispatch((0, _actions_reports.addStateFilter)(name));
	            } else {
	                this.props.dispatch((0, _actions_reports.removeStateFilter)(name));
	            }
	        }
	    }]);

	    return MapPage;
	}(_react.Component);

	function mapStateToProps(store) {
	    return {
	        token: store.token,
	        reports: store.reports,
	        newReportLocation: store.newReportLocation,
	        searchLocation: store.searchLocation,
	        intervalReport: store.intervalReport
	    };
	}

	exports.default = (0, _reactRedux.connect)(mapStateToProps)(MapPage);

/***/ }),
/* 572 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _geojson = __webpack_require__(573);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // 3rd Party


	// Internal Modules


	/*

	*/
	var GoogleMap = function (_Component) {
	    _inherits(GoogleMap, _Component);

	    function GoogleMap() {
	        _classCallCheck(this, GoogleMap);

	        return _possibleConstructorReturn(this, (GoogleMap.__proto__ || Object.getPrototypeOf(GoogleMap)).apply(this, arguments));
	    }

	    _createClass(GoogleMap, [{
	        key: 'shouldComponentUpdate',

	        /*
	            Garante que só existe uma execução de render()
	            para este componente.
	        */
	        value: function shouldComponentUpdate() {
	            return false;
	        }

	        /*
	            Começa por instânciar o Mapa e ligá-lo à div previamente
	            rendered.
	        */

	    }, {
	        key: 'componentDidMount',
	        value: function componentDidMount() {
	            var _this2 = this;

	            // Instanciate the map and put it in the DOM.
	            this.map = new google.maps.Map(this.refs.map, {
	                scrollwheel: true,
	                disableDefaultUI: true,
	                zoomControl: true,
	                zoomControlOptions: {
	                    position: google.maps.ControlPosition.LEFT_BOTTOM
	                },
	                disableDoubleClickZoom: true,
	                zoom: 13,
	                minZoom: 7,
	                center: {
	                    lat: this.props.initialLat,
	                    lng: this.props.initialLng
	                }
	            });

	            // Adiciona máscara e delimitações ao mapa
	            this.map.data.add({ geometry: new google.maps.Data.Polygon([_geojson.outerCoords, _geojson.innerCoords, _geojson.cascais, _geojson.moita]) });
	            this.map.data.setStyle({ strokeWeight: 1, strokeOpacity: 0 });

	            /*
	                Se o utilizador der permissão para aceder à sua localização,
	                centra na localização do mesmo.
	            */
	            if (navigator.geolocation) {
	                navigator.geolocation.getCurrentPosition(function (position) {
	                    var pos = {
	                        lat: position.coords.latitude,
	                        lng: position.coords.longitude
	                    };
	                    _this2.map.setCenter(pos);
	                });
	            }

	            // Current state of marker's visibility (to compare with next)
	            this.hidden = false;

	            // Previous searched location
	            this.searchLocation = null;

	            this.filters = this.props.reports.stateFilters;

	            // Array de marcadores no mapa
	            this.markers = this.props.reports.reports ? this.buildMarkersArray(this.props.reports.reports) : [];
	            if (!this.hidden) this.showMarkers();

	            /*
	                Marcador que aparece no centro do mapa quando se vai adicionar
	                um report.
	            */
	            this.addingMarker = new google.maps.Marker({
	                position: this.map.getCenter()
	            });
	            google.maps.event.addListener(this.addingMarker, 'click', function (event) {
	                var coords = _this2.getEventCoords(event);
	                _this2.props.onLocationSelected(coords);
	                _this2.stopInteraction();
	            });

	            // Regarding drag boudaries
	            this.lastValidCenter = this.map.getCenter();
	            if (this.props.reports.reports) {
	                console.log('Setting boudaries... In Did Mount....');
	                this.createDragBound();
	            }
	        }

	        /*
	            Onde toda a interação de outros componentes com o mapa
	            acontece.
	        */

	    }, {
	        key: 'componentWillReceiveProps',
	        value: function componentWillReceiveProps(_ref) {
	            var _ref$reports = _ref.reports,
	                reports = _ref$reports.reports,
	                fetching = _ref$reports.fetching,
	                hidden = _ref$reports.hidden,
	                stateFilters = _ref$reports.stateFilters,
	                searchLocation = _ref.searchLocation;

	            if (searchLocation && this.searchLocation !== searchLocation) {
	                this.searchLocation = searchLocation;
	                this.map.panTo(searchLocation);
	            }

	            if (this.hidden !== hidden) {
	                this.hidden = hidden;
	                this.toggleMarkers();
	            }

	            if (reports && !Object.is(this.reports, reports)) {
	                //
	                if (!this.lastValidCenter || !this.allowedBounds) {
	                    console.log('Setting boudaries...');
	                    this.createDragBound();
	                }

	                this.reports = reports;
	                this.markers = this.buildMarkersArray(reports);
	                if (!hidden) this.showMarkers();
	            }

	            if (this.hidden) {
	                this.startInteraction();
	            } else {
	                this.stopInteraction();
	            }

	            if (this.filters.length !== stateFilters.length) {
	                this.filters = stateFilters;
	                this.applyFilters();
	            }
	        }

	        /*
	            Faz render apenas de uma div onde futuramente iremos instanciar o Mapa.
	            Render só executa uma única vez (devido ao método shouldComponentUpdate).
	        */

	    }, {
	        key: 'render',
	        value: function render() {
	            return _react2.default.createElement('div', { id: 'map', ref: 'map' });
	        }

	        /*
	            Extrai os markers de cada propriedade de reports e constrói um array
	            de markers.
	        */

	    }, {
	        key: 'buildMarkersArray',
	        value: function buildMarkersArray(reports) {
	            var _this3 = this;

	            if (this.markers) this.hideMarkers();

	            var arr = [];

	            var _loop = function _loop(id) {
	                var report = reports[id];
	                var marker = report.marker;
	                marker.reportId = id;
	                marker.addListener('click', function () {
	                    console.log('ReportID:', marker.reportId);
	                    _this3.props.onMarkerClick(marker.reportId);
	                });
	                arr.push(marker);
	            };

	            for (var id in reports) {
	                _loop(id);
	            }
	            return arr;
	        }

	        /*
	            Dependendo do estado de visibilidade (mais recente), moostra
	            ou esconde os marcadores no mapa.
	        */

	    }, {
	        key: 'toggleMarkers',
	        value: function toggleMarkers() {
	            if (!this.hidden) {
	                this.showMarkers();
	            } else {
	                this.hideMarkers();
	            }
	        }

	        // Torna todos os marcadores visíveis no mapa

	    }, {
	        key: 'showMarkers',
	        value: function showMarkers() {
	            var _iteratorNormalCompletion = true;
	            var _didIteratorError = false;
	            var _iteratorError = undefined;

	            try {
	                for (var _iterator = this.markers[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
	                    var _marker = _step.value;

	                    _marker.setMap(this.map);
	                }
	            } catch (err) {
	                _didIteratorError = true;
	                _iteratorError = err;
	            } finally {
	                try {
	                    if (!_iteratorNormalCompletion && _iterator.return) {
	                        _iterator.return();
	                    }
	                } finally {
	                    if (_didIteratorError) {
	                        throw _iteratorError;
	                    }
	                }
	            }
	        }

	        // Esconde todos os marcadores no mapa

	    }, {
	        key: 'hideMarkers',
	        value: function hideMarkers() {
	            var _iteratorNormalCompletion2 = true;
	            var _didIteratorError2 = false;
	            var _iteratorError2 = undefined;

	            try {
	                for (var _iterator2 = this.markers[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
	                    var _marker2 = _step2.value;

	                    _marker2.setMap(null);
	                }
	            } catch (err) {
	                _didIteratorError2 = true;
	                _iteratorError2 = err;
	            } finally {
	                try {
	                    if (!_iteratorNormalCompletion2 && _iterator2.return) {
	                        _iterator2.return();
	                    }
	                } finally {
	                    if (_didIteratorError2) {
	                        throw _iteratorError2;
	                    }
	                }
	            }
	        }
	    }, {
	        key: 'getEventCoords',
	        value: function getEventCoords(event) {
	            var _event$latLng = event.latLng,
	                lat = _event$latLng.lat,
	                lng = _event$latLng.lng;

	            this.map.panTo(event.latLng);
	            return { lat: lat(), lng: lng() };
	        }
	    }, {
	        key: 'toggleAddReportListeners',
	        value: function toggleAddReportListeners() {
	            var _this4 = this;

	            // Make the marker follow the mouse
	            google.maps.event.addListener(this.map, 'mousemove', function (event) {
	                _this4.addingMarker.setPosition(event.latLng);
	            });

	            // Add the marker's click listener to the map aswell
	            google.maps.event.addListener(this.map, 'click', function (event) {
	                var coords = _this4.getEventCoords(event);
	                _this4.props.onLocationSelected(coords);
	                _this4.stopInteraction();
	            });
	        }
	    }, {
	        key: 'startInteraction',
	        value: function startInteraction() {
	            this.addingMarker.setPosition(this.map.getCenter());
	            this.addingMarker.setMap(this.map);
	            this.toggleAddReportListeners();
	        }
	    }, {
	        key: 'stopInteraction',
	        value: function stopInteraction() {
	            this.addingMarker.setMap(null);
	            google.maps.event.clearInstanceListeners(this.map);
	        }
	    }, {
	        key: 'applyFilters',
	        value: function applyFilters() {
	            console.log('Inside apply filters!');
	            var _iteratorNormalCompletion3 = true;
	            var _didIteratorError3 = false;
	            var _iteratorError3 = undefined;

	            try {
	                for (var _iterator3 = this.markers[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {
	                    var _marker3 = _step3.value;

	                    var status = this.reports[_marker3.reportId].report.statusDescription;
	                    if (this.filters.includes(status)) _marker3.setMap(this.map);else _marker3.setMap(null);
	                }
	            } catch (err) {
	                _didIteratorError3 = true;
	                _iteratorError3 = err;
	            } finally {
	                try {
	                    if (!_iteratorNormalCompletion3 && _iterator3.return) {
	                        _iterator3.return();
	                    }
	                } finally {
	                    if (_didIteratorError3) {
	                        throw _iteratorError3;
	                    }
	                }
	            }
	        }
	    }, {
	        key: 'createDragBound',
	        value: function createDragBound() {
	            var _this5 = this;

	            //this.lastValidCenter = this.map.getCenter();
	            this.allowedBounds = new google.maps.LatLngBounds(new google.maps.LatLng(32, -32), new google.maps.LatLng(43, -6));
	            setTimeout(function () {
	                console.log('BAM!', google.maps.event.addListener);
	                google.maps.event.addListener(_this5.map, 'center_changed', function () {
	                    if (_this5.allowedBounds.contains(_this5.map.getCenter())) {
	                        // still within valid bounds, so save the last valid position
	                        _this5.lastValidCenter = _this5.map.getCenter();
	                        return;
	                    }
	                    // not valid anymore => return to last valid position
	                    _this5.map.panTo(_this5.lastValidCenter);
	                });
	            }, 2500);
	        }
	    }]);

	    return GoogleMap;
	}(_react.Component);

	exports.default = GoogleMap;

/***/ }),
/* 573 */
/***/ (function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	// Máscara sobre o mapa
	var outerCoords = exports.outerCoords = [{ lng: -85.1054596961173, lat: -180 }, { lng: 85.1054596961173, lat: -180 }, { lng: 85.1054596961173, lat: 180 }, { lng: -85.1054596961173, lat: 180 }, { lng: -85.1054596961173, lat: 0 }];

	// Delimitação de Almada
	var innerCoords = exports.innerCoords = [{ lng: -9.146436846935099, lat: 38.688326212511001 }, { lng: -9.14628759953769, lat: 38.6883375045214 }, { lng: -9.146299596597681, lat: 38.6884139706262 }, { lng: -9.14665104522291, lat: 38.6884050617561 }, { lng: -9.146644930573499, lat: 38.688321794166797 }, { lng: -9.14649553531283, lat: 38.688323090730698 }, { lng: -9.146491467611529, lat: 38.688214311167201 }, { lng: -9.14727500455276, lat: 38.688185347202797 }, { lng: -9.147292603808671, lat: 38.688292297871797 }, { lng: -9.14715505285122, lat: 38.688310158111904 }, { lng: -9.147161418626011, lat: 38.688394238711098 }, { lng: -9.147490645578831, lat: 38.688366247566101 }, { lng: -9.14748939797814, lat: 38.688277980745603 }, { lng: -9.147364980749449, lat: 38.688298067560702 }, { lng: -9.147359349341681, lat: 38.688184614773903 }, { lng: -9.14761218558815, lat: 38.688150893812903 }, { lng: -9.147620671534471, lat: 38.688182345219701 }, { lng: -9.14786932279423, lat: 38.688145600019297 }, { lng: -9.147938999833659, lat: 38.688139406840598 }, { lng: -9.14815412447717, lat: 38.688105287741998 }, { lng: -9.148179637910831, lat: 38.688202712157597 }, { lng: -9.14813557419896, lat: 38.688215799416 }, { lng: -9.14814857004701, lat: 38.688265045521497 }, { lng: -9.149566418286581, lat: 38.688026170598 }, { lng: -9.14954846700422, lat: 38.687967595884103 }, { lng: -9.148491337229141, lat: 38.688137938765202 }, { lng: -9.148473024697079, lat: 38.688054234916002 }, { lng: -9.15033529255207, lat: 38.687757798357097 }, { lng: -9.150419525804431, lat: 38.687805793946502 }, { lng: -9.150444226263851, lat: 38.687886019800501 }, { lng: -9.150412856959999, lat: 38.687943312846301 }, { lng: -9.15042853804338, lat: 38.687995243114003 }, { lng: -9.15058026333992, lat: 38.687972121183599 }, { lng: -9.150555798717219, lat: 38.687908558864002 }, { lng: -9.15049333693984, lat: 38.687880548101298 }, { lng: -9.15048148618351, lat: 38.687798408880397 }, { lng: -9.150604213934679, lat: 38.6877001464971 }, { lng: -9.15074527916312, lat: 38.687687115001403 }, { lng: -9.150835836383131, lat: 38.687734968780802 }, { lng: -9.150862763442889, lat: 38.687818598176797 }, { lng: -9.150831510569599, lat: 38.687875890320399 }, { lng: -9.15084284433326, lat: 38.687921104227499 }, { lng: -9.15099663666974, lat: 38.687897962867197 }, { lng: -9.150974453454319, lat: 38.687849513184503 }, { lng: -9.150918289735371, lat: 38.687811359857498 }, { lng: -9.150899948915249, lat: 38.6877176596523 }, { lng: -9.1509800090196, lat: 38.687633097255798 }, { lng: -9.151247121147151, lat: 38.687593743047202 }, { lng: -9.15132550214857, lat: 38.687844741906098 }, { lng: -9.15137684084789, lat: 38.687834296980199 }, { lng: -9.15130297725864, lat: 38.6876101943094 }, { lng: -9.151728020810159, lat: 38.687547575420702 }, { lng: -9.151793308214319, lat: 38.687766885549699 }, { lng: -9.151840186740291, lat: 38.687758009720397 }, { lng: -9.151770099200011, lat: 38.687491899340998 }, { lng: -9.152032708022571, lat: 38.687442947697399 }, { lng: -9.152057763883439, lat: 38.687451286899297 }, { lng: -9.15234093452356, lat: 38.687409544593798 }, { lng: -9.152367211207761, lat: 38.687390846622897 }, { lng: -9.15246417586445, lat: 38.687380180082002 }, { lng: -9.15249862252573, lat: 38.687483022300903 }, { lng: -9.15254245607389, lat: 38.687477776804201 }, { lng: -9.152526874252789, lat: 38.687384590579804 }, { lng: -9.152606703202361, lat: 38.687372900470002 }, { lng: -9.15263142145602, lat: 38.687462317383698 }, { lng: -9.15267839538822, lat: 38.687452087397901 }, { lng: -9.15265641966224, lat: 38.6873454468587 }, { lng: -9.152759620953789, lat: 38.6873285093315 }, { lng: -9.1536758755474, lat: 38.686927402634403 }, { lng: -9.15432590219933, lat: 38.686660495396403 }, { lng: -9.154339938409739, lat: 38.686669383441902 }, { lng: -9.154808325828441, lat: 38.686479720783197 }, { lng: -9.155699134169501, lat: 38.686133142870801 }, { lng: -9.1557680116525, lat: 38.6860791244723 }, { lng: -9.1559168208377, lat: 38.685924322631202 }, { lng: -9.156326481812201, lat: 38.685767514989699 }, { lng: -9.156274195062471, lat: 38.6857114009387 }, { lng: -9.15680891466905, lat: 38.685410809168303 }, { lng: -9.157092376473869, lat: 38.685801065524302 }, { lng: -9.1568193847066, lat: 38.685911101216 }, { lng: -9.15685784373407, lat: 38.685964541817498 }, { lng: -9.15741447541915, lat: 38.685757978309802 }, { lng: -9.15737949828368, lat: 38.685707028710397 }, { lng: -9.15714354847522, lat: 38.6857790884943 }, { lng: -9.156873877553929, lat: 38.6853967240747 }, { lng: -9.1571801062204, lat: 38.685208388598902 }, { lng: -9.15739196338984, lat: 38.685139242151102 }, { lng: -9.15759309185615, lat: 38.685043345706802 }, { lng: -9.157725441368539, lat: 38.6851687483448 }, { lng: -9.15776286525845, lat: 38.685149594780398 }, { lng: -9.15772781310667, lat: 38.685101439293398 }, { lng: -9.158157184536069, lat: 38.684876976919803 }, { lng: -9.15819922509154, lat: 38.684859136638899 }, { lng: -9.158456496662909, lat: 38.684823727479198 }, { lng: -9.158473244323931, lat: 38.6847929320814 }, { lng: -9.15848170359229, lat: 38.684850796856999 }, { lng: -9.15850538970515, lat: 38.684923737089001 }, { lng: -9.158564385279, lat: 38.684998973681303 }, { lng: -9.15872551970995, lat: 38.685007645841502 }, { lng: -9.158863993190611, lat: 38.684998864633499 }, { lng: -9.159043598707999, lat: 38.6849568426003 }, { lng: -9.15917830737409, lat: 38.684917827436699 }, { lng: -9.159319454138499, lat: 38.684871094384498 }, { lng: -9.159421883769189, lat: 38.684824797349798 }, { lng: -9.159469965444959, lat: 38.684811850744197 }, { lng: -9.159533884494641, lat: 38.684780846554403 }, { lng: -9.159584965048021, lat: 38.684752652896002 }, { lng: -9.159722571843581, lat: 38.684683344154202 }, { lng: -9.15985434909579, lat: 38.684664438008603 }, { lng: -9.1599343173094, lat: 38.684630947024303 }, { lng: -9.16009488102504, lat: 38.684591702877597 }, { lng: -9.160213061130809, lat: 38.684529948859698 }, { lng: -9.16046288969617, lat: 38.6844243424894 }, { lng: -9.160607500519291, lat: 38.684402982492799 }, { lng: -9.160690183409111, lat: 38.684326318300599 }, { lng: -9.16077944159662, lat: 38.684267613008601 }, { lng: -9.16086227103259, lat: 38.6842012164363 }, { lng: -9.161003705188341, lat: 38.684406885265901 }, { lng: -9.16104543242829, lat: 38.6843914734526 }, { lng: -9.160951639259929, lat: 38.6841981798962 }, { lng: -9.16107028726635, lat: 38.6841611917827 }, { lng: -9.161365721467019, lat: 38.684094549001699 }, { lng: -9.16159603747619, lat: 38.683990727810396 }, { lng: -9.161739032751839, lat: 38.683968750973499 }, { lng: -9.161759908922789, lat: 38.6839820828257 }, { lng: -9.16181448665095, lat: 38.683965388473197 }, { lng: -9.16187005879463, lat: 38.683857705350697 }, { lng: -9.16205523714371, lat: 38.683811844551698 }, { lng: -9.16222828891603, lat: 38.683818246938202 }, { lng: -9.16235813864021, lat: 38.683817370782201 }, { lng: -9.16239544829925, lat: 38.683838750585103 }, { lng: -9.162524399320571, lat: 38.683839236044797 }, { lng: -9.16271542448203, lat: 38.683736754796698 }, { lng: -9.162826262178051, lat: 38.683868105221201 }, { lng: -9.162924515260521, lat: 38.683979839015997 }, { lng: -9.163196779184579, lat: 38.6838766361411 }, { lng: -9.163218477918139, lat: 38.683851136352501 }, { lng: -9.16421767882891, lat: 38.683446961045597 }, { lng: -9.16408685027135, lat: 38.683251838258897 }, { lng: -9.16399488386169, lat: 38.6831535600911 }, { lng: -9.164088185295631, lat: 38.683080585926902 }, { lng: -9.164147872207311, lat: 38.683003494180497 }, { lng: -9.16434795104758, lat: 38.682667536128598 }, { lng: -9.1644309793808, lat: 38.682607347144099 }, { lng: -9.164594045531789, lat: 38.682583119799801 }, { lng: -9.164738883965169, lat: 38.682561389683997 }, { lng: -9.16486598540153, lat: 38.682713493091001 }, { lng: -9.164900795786711, lat: 38.682696790644997 }, { lng: -9.1648186498174, lat: 38.682554384044998 }, { lng: -9.167662779565321, lat: 38.6819043492604 }, { lng: -9.16772417676712, lat: 38.681906059865298 }, { lng: -9.167775727176821, lat: 38.682205652171703 }, { lng: -9.167771802117061, lat: 38.682244243496001 }, { lng: -9.167783283599411, lat: 38.682315481929002 }, { lng: -9.167892500064131, lat: 38.682302262989303 }, { lng: -9.167872416017261, lat: 38.682224522204002 }, { lng: -9.16783900515958, lat: 38.682202842114798 }, { lng: -9.16783592338818, lat: 38.682172149675701 }, { lng: -9.168225577852191, lat: 38.682113660211499 }, { lng: -9.168278279394761, lat: 38.682158143228499 }, { lng: -9.168364081902469, lat: 38.682147113749302 }, { lng: -9.168452706228649, lat: 38.682148401874997 }, { lng: -9.16862909683212, lat: 38.682099815138997 }, { lng: -9.168722128193959, lat: 38.682056204600599 }, { lng: -9.169082665026959, lat: 38.6819550906446 }, { lng: -9.16922724839889, lat: 38.681876251537197 }, { lng: -9.16930119776487, lat: 38.681848032087501 }, { lng: -9.169331385411381, lat: 38.681837763108398 }, { lng: -9.169410521975889, lat: 38.681802832667103 }, { lng: -9.169498564596511, lat: 38.681764220076502 }, { lng: -9.16965864975424, lat: 38.681692535865103 }, { lng: -9.16975248884197, lat: 38.681641347095102 }, { lng: -9.169853397666071, lat: 38.681578207823797 }, { lng: -9.17000264792765, lat: 38.681536347131903 }, { lng: -9.17017922003696, lat: 38.681484429831102 }, { lng: -9.17031871914633, lat: 38.681420136314998 }, { lng: -9.170439494895129, lat: 38.681364022162398 }, { lng: -9.170524616351081, lat: 38.681330029652997 }, { lng: -9.17059494433245, lat: 38.681329404844298 }, { lng: -9.170647843865851, lat: 38.681324428861501 }, { lng: -9.17068623471806, lat: 38.681324626919 }, { lng: -9.17075122744197, lat: 38.681305495742997 }, { lng: -9.17083453409937, lat: 38.681288452197101 }, { lng: -9.17095397697228, lat: 38.681236134469899 }, { lng: -9.17104974395356, lat: 38.6811829503147 }, { lng: -9.171133091390271, lat: 38.681145278060903 }, { lng: -9.17126359866891, lat: 38.681102768716102 }, { lng: -9.17139224958278, lat: 38.681059287539199 }, { lng: -9.17150392038339, lat: 38.681009565878298 }, { lng: -9.171613964424029, lat: 38.680966250576503 }, { lng: -9.17191470654525, lat: 38.6809582603046 }, { lng: -9.171978015748049, lat: 38.680957697913897 }, { lng: -9.17209138206462, lat: 38.6809296634097 }, { lng: -9.17221888182393, lat: 38.680909704022099 }, { lng: -9.17232842310672, lat: 38.680863689240901 }, { lng: -9.172362068924709, lat: 38.680846186019203 }, { lng: -9.172623053293639, lat: 38.680782700848603 }, { lng: -9.17268059692082, lat: 38.680756966256197 }, { lng: -9.17293671477834, lat: 38.680786216027698 }, { lng: -9.173029926142821, lat: 38.680795201310097 }, { lng: -9.17305932637557, lat: 38.680817459660098 }, { lng: -9.173089380404109, lat: 38.6808135883253 }, { lng: -9.173116515630779, lat: 38.680790831717403 }, { lng: -9.17317797543468, lat: 38.680789383432099 }, { lng: -9.17326708252612, lat: 38.680816510942599 }, { lng: -9.173704783636479, lat: 38.680774871102599 }, { lng: -9.174084542771929, lat: 38.680795718982999 }, { lng: -9.174166912574281, lat: 38.680777960774101 }, { lng: -9.17426421445029, lat: 38.6807914144172 }, { lng: -9.17453269721744, lat: 38.680753982094402 }, { lng: -9.17457516982611, lat: 38.680782334605198 }, { lng: -9.17463334595517, lat: 38.680816139357297 }, { lng: -9.17466398254429, lat: 38.680805054294602 }, { lng: -9.174675018379, lat: 38.680773430996403 }, { lng: -9.17501161679402, lat: 38.680781235771299 }, { lng: -9.175173729830259, lat: 38.680834379297302 }, { lng: -9.175329137094501, lat: 38.680781644757097 }, { lng: -9.175965275343501, lat: 38.680738135008099 }, { lng: -9.17647964443441, lat: 38.680635357952802 }, { lng: -9.17678311412347, lat: 38.680475006970397 }, { lng: -9.17734580536548, lat: 38.680217847763302 }, { lng: -9.17780559631565, lat: 38.67999746025 }, { lng: -9.17803756082677, lat: 38.6798197307454 }, { lng: -9.17827337154395, lat: 38.6796068373338 }, { lng: -9.17855255480066, lat: 38.679436882897903 }, { lng: -9.17888087578338, lat: 38.6793266594781 }, { lng: -9.1792363611242, lat: 38.679204212516403 }, { lng: -9.17971254563737, lat: 38.6791313097293 }, { lng: -9.180065073962689, lat: 38.679073923875002 }, { lng: -9.180477459500869, lat: 38.679204259125498 }, { lng: -9.18082666612467, lat: 38.679399842090199 }, { lng: -9.18125397757521, lat: 38.679584186529098 }, { lng: -9.18169090060943, lat: 38.6797973505046 }, { lng: -9.18179246361843, lat: 38.679803556948301 }, { lng: -9.182793699199459, lat: 38.6794789261061 }, { lng: -9.18296679531336, lat: 38.679535924622002 }, { lng: -9.183145933018951, lat: 38.679519088416399 }, { lng: -9.18354015651151, lat: 38.679389977733898 }, { lng: -9.184052839877079, lat: 38.679117652748999 }, { lng: -9.1844199014373, lat: 38.678962473789298 }, { lng: -9.184686444755661, lat: 38.678887741971103 }, { lng: -9.185498242435211, lat: 38.678858631260901 }, { lng: -9.186337829485449, lat: 38.678843860165003 }, { lng: -9.18682695981258, lat: 38.678839448540202 }, { lng: -9.18688290226936, lat: 38.678838043673501 }, { lng: -9.18735282660457, lat: 38.6787388604181 }, { lng: -9.18827322805106, lat: 38.678593270829097 }, { lng: -9.189586108253661, lat: 38.678576088629796 }, { lng: -9.19083676293933, lat: 38.678438121567503 }, { lng: -9.19121768027369, lat: 38.678280544942098 }, { lng: -9.191739323399551, lat: 38.678182497562297 }, { lng: -9.19185539458311, lat: 38.678104970533902 }, { lng: -9.191951607289001, lat: 38.678099050516103 }, { lng: -9.19213369843825, lat: 38.6781191080551 }, { lng: -9.19234629841849, lat: 38.678143214577801 }, { lng: -9.192710909598469, lat: 38.678188999236703 }, { lng: -9.1934527147026, lat: 38.678160201769501 }, { lng: -9.19400824500771, lat: 38.6781159709533 }, { lng: -9.19402745049951, lat: 38.678303612518697 }, { lng: -9.193919761761819, lat: 38.6784037655828 }, { lng: -9.19394345079089, lat: 38.678474623994298 }, { lng: -9.19420171406273, lat: 38.678470476665403 }, { lng: -9.19418666372226, lat: 38.6783850380952 }, { lng: -9.19417366776479, lat: 38.678104472286797 }, { lng: -9.19576700173395, lat: 38.678022698686597 }, { lng: -9.19578714937324, lat: 38.6780949391853 }, { lng: -9.195792469830231, lat: 38.678174968434 }, { lng: -9.19577143321078, lat: 38.678251725003399 }, { lng: -9.19572685119045, lat: 38.678337705223697 }, { lng: -9.195422708676469, lat: 38.678371010615201 }, { lng: -9.195429616653589, lat: 38.678449858033098 }, { lng: -9.19593422183746, lat: 38.678419681689 }, { lng: -9.19615869058827, lat: 38.678406923842203 }, { lng: -9.196332600297641, lat: 38.678394347796498 }, { lng: -9.196329847946069, lat: 38.678316906622499 }, { lng: -9.196193790150209, lat: 38.678340574116604 }, { lng: -9.19599565306167, lat: 38.678338863820898 }, { lng: -9.195942145816129, lat: 38.678271789918 }, { lng: -9.19589215469197, lat: 38.678116502927303 }, { lng: -9.195895873534379, lat: 38.678018461295103 }, { lng: -9.196279033471621, lat: 38.677997679772503 }, { lng: -9.196592004039481, lat: 38.677970508237699 }, { lng: -9.196885129664761, lat: 38.677969103344097 }, { lng: -9.197155331410871, lat: 38.6779487176507 }, { lng: -9.19738048051183, lat: 38.677935225238201 }, { lng: -9.197898695785121, lat: 38.677924558315098 }, { lng: -9.19824571734619, lat: 38.678039213475202 }, { lng: -9.19857204567503, lat: 38.678114700590299 }, { lng: -9.19890722548109, lat: 38.678167489072202 }, { lng: -9.19918637878941, lat: 38.678161247791699 }, { lng: -9.19959273612843, lat: 38.678208976056602 }, { lng: -9.19972417381803, lat: 38.678238399708398 }, { lng: -9.199866845316009, lat: 38.678250611124803 }, { lng: -9.20001506926792, lat: 38.678249258052702 }, { lng: -9.200416618058661, lat: 38.678290539824097 }, { lng: -9.20060905971183, lat: 38.678326430970202 }, { lng: -9.20091993259507, lat: 38.678320977850099 }, { lng: -9.20106350826115, lat: 38.6784940562044 }, { lng: -9.20156885274624, lat: 38.678544743373699 }, { lng: -9.20186211652682, lat: 38.678567549681098 }, { lng: -9.2020902143041, lat: 38.678582491624098 }, { lng: -9.20241603668209, lat: 38.6786007661075 }, { lng: -9.20264767641561, lat: 38.6786375601746 }, { lng: -9.202828688931049, lat: 38.6786310402872 }, { lng: -9.20287967560694, lat: 38.678775055234901 }, { lng: -9.202870788678799, lat: 38.6788806190606 }, { lng: -9.203314654545281, lat: 38.678830611310801 }, { lng: -9.203277987347381, lat: 38.678745287120101 }, { lng: -9.20324562749653, lat: 38.678563446168098 }, { lng: -9.20364908134259, lat: 38.678508674249201 }, { lng: -9.203998133018439, lat: 38.678458722917902 }, { lng: -9.20457333066058, lat: 38.678231042005798 }, { lng: -9.20458160668738, lat: 38.678300237843999 }, { lng: -9.204606206758219, lat: 38.678316586989901 }, { lng: -9.20459916258082, lat: 38.678375474028897 }, { lng: -9.20473230666401, lat: 38.678364975002701 }, { lng: -9.20472080852298, lat: 38.678303194280502 }, { lng: -9.20466834333274, lat: 38.678290975687403 }, { lng: -9.204654562144929, lat: 38.678199311444999 }, { lng: -9.204850019574881, lat: 38.678106360379701 }, { lng: -9.204813444994411, lat: 38.677973020999701 }, { lng: -9.205113613660391, lat: 38.6779509884121 }, { lng: -9.205408623352691, lat: 38.677929631110203 }, { lng: -9.20603325185453, lat: 38.677780762924002 }, { lng: -9.20618820055298, lat: 38.677983639532499 }, { lng: -9.206205850189599, lat: 38.678072741374201 }, { lng: -9.205627480084431, lat: 38.678218398308999 }, { lng: -9.205638967949509, lat: 38.6782565729279 }, { lng: -9.206844243100109, lat: 38.677960583069002 }, { lng: -9.20687314300068, lat: 38.678079399463101 }, { lng: -9.206748744628319, lat: 38.6781060384562 }, { lng: -9.206777181653701, lat: 38.678186575544899 }, { lng: -9.207415128920291, lat: 38.6780446029667 }, { lng: -9.20739220524111, lat: 38.677964015388099 }, { lng: -9.20698127370153, lat: 38.678048592233502 }, { lng: -9.206936139952431, lat: 38.6779427152496 }, { lng: -9.2069899737669, lat: 38.677908172856597 }, { lng: -9.2071540028802, lat: 38.677634623397303 }, { lng: -9.20710981002259, lat: 38.677584317482101 }, { lng: -9.20696869892936, lat: 38.6775767000088 }, { lng: -9.20695662540137, lat: 38.677491683505302 }, { lng: -9.20703650805101, lat: 38.677393123251903 }, { lng: -9.207165352285401, lat: 38.677302673488803 }, { lng: -9.20726702406801, lat: 38.677216703278702 }, { lng: -9.20736360823434, lat: 38.677143482657399 }, { lng: -9.207487172261461, lat: 38.677061548471102 }, { lng: -9.20753505019572, lat: 38.676997328162301 }, { lng: -9.207632137158321, lat: 38.676958155270597 }, { lng: -9.207719399596741, lat: 38.676991489798702 }, { lng: -9.20795758947181, lat: 38.676959394613903 }, { lng: -9.208061739886279, lat: 38.677030768069699 }, { lng: -9.208402179592129, lat: 38.677304176350603 }, { lng: -9.209521499602531, lat: 38.677339354562001 }, { lng: -9.20960609794089, lat: 38.677478738775697 }, { lng: -9.210510075101549, lat: 38.677238630928201 }, { lng: -9.210559473375721, lat: 38.677329785254798 }, { lng: -9.210660865890819, lat: 38.677286155416702 }, { lng: -9.210740839486871, lat: 38.677331716402797 }, { lng: -9.210802084470989, lat: 38.677308540398798 }, { lng: -9.21074731934495, lat: 38.677173931080702 }, { lng: -9.21191011207185, lat: 38.6768139624062 }, { lng: -9.212184905236549, lat: 38.676740261178303 }, { lng: -9.212429605243949, lat: 38.676713048467903 }, { lng: -9.212544697802761, lat: 38.676725409770299 }, { lng: -9.212626405811809, lat: 38.676549810444598 }, { lng: -9.212724802672479, lat: 38.676506115495897 }, { lng: -9.2129712880159, lat: 38.676414477796399 }, { lng: -9.2135047685017, lat: 38.676273438472599 }, { lng: -9.213772768036639, lat: 38.6762982517183 }, { lng: -9.21385792043683, lat: 38.676359707600298 }, { lng: -9.214075990861209, lat: 38.676357690322497 }, { lng: -9.214074937042261, lat: 38.676287708693202 }, { lng: -9.2142283191725, lat: 38.6762629594879 }, { lng: -9.214470211610079, lat: 38.676202441950302 }, { lng: -9.214807369261671, lat: 38.676203100009303 }, { lng: -9.21508536722901, lat: 38.676227823169199 }, { lng: -9.215367367711821, lat: 38.676182420877403 }, { lng: -9.21563965987376, lat: 38.676164313425701 }, { lng: -9.21621523172062, lat: 38.676018366384 }, { lng: -9.216444304674781, lat: 38.676045069866198 }, { lng: -9.2167834250762, lat: 38.676053631898398 }, { lng: -9.21743033640846, lat: 38.676043935135198 }, { lng: -9.217719188201031, lat: 38.676003421601898 }, { lng: -9.21787071794502, lat: 38.675985801044298 }, { lng: -9.21797614856529, lat: 38.675966807263499 }, { lng: -9.21804909999711, lat: 38.676003870883697 }, { lng: -9.21816917262624, lat: 38.675965014699301 }, { lng: -9.21831370485787, lat: 38.675948359282401 }, { lng: -9.2183990685396, lat: 38.675970086861902 }, { lng: -9.218522538302439, lat: 38.675935607253798 }, { lng: -9.218603915208, lat: 38.6759221517135 }, { lng: -9.218715317643531, lat: 38.675910395530501 }, { lng: -9.21878925760935, lat: 38.675936732817398 }, { lng: -9.21891012980679, lat: 38.675950830374497 }, { lng: -9.218989291459399, lat: 38.6759500944652 }, { lng: -9.21909893021947, lat: 38.675897824167301 }, { lng: -9.219236439858809, lat: 38.6757964694268 }, { lng: -9.219302876946751, lat: 38.675706763393897 }, { lng: -9.21930538163455, lat: 38.675576124739102 }, { lng: -9.21937744216731, lat: 38.675546628355697 }, { lng: -9.21945788060507, lat: 38.6755466909826 }, { lng: -9.21952396487972, lat: 38.675509235698698 }, { lng: -9.219623618687089, lat: 38.675488400642102 }, { lng: -9.219698475315621, lat: 38.675431048189502 }, { lng: -9.21964467664044, lat: 38.6753612855453 }, { lng: -9.21961708525677, lat: 38.675292180187 }, { lng: -9.219680411791749, lat: 38.675216828093298 }, { lng: -9.219762412304711, lat: 38.675168231557798 }, { lng: -9.21985005198299, lat: 38.675120665311901 }, { lng: -9.219963033947421, lat: 38.6750690828705 }, { lng: -9.220138182396839, lat: 38.675017907963003 }, { lng: -9.220242285154439, lat: 38.674987307004798 }, { lng: -9.220363809876559, lat: 38.674976264971903 }, { lng: -9.2204290792136, lat: 38.675036910941898 }, { lng: -9.220512332368139, lat: 38.675139724967501 }, { lng: -9.220647616896221, lat: 38.675195218529502 }, { lng: -9.220732157297149, lat: 38.675238564708998 }, { lng: -9.22079363237979, lat: 38.6752838431564 }, { lng: -9.220840352283149, lat: 38.675333853737499 }, { lng: -9.220948888885379, lat: 38.6754364331779 }, { lng: -9.22094911832588, lat: 38.675527502664302 }, { lng: -9.221030430672061, lat: 38.675585294884897 }, { lng: -9.221082981104001, lat: 38.675640743238397 }, { lng: -9.22121022889173, lat: 38.675696305499301 }, { lng: -9.221291337108401, lat: 38.675740590294701 }, { lng: -9.22148792402505, lat: 38.675746777930101 }, { lng: -9.221480464718301, lat: 38.675868452121001 }, { lng: -9.223317910967619, lat: 38.675923382533497 }, { lng: -9.22333491471057, lat: 38.675620648891403 }, { lng: -9.223419513022501, lat: 38.675591933031001 }, { lng: -9.22353413533606, lat: 38.675572848552001 }, { lng: -9.22366195124583, lat: 38.6755148169092 }, { lng: -9.22369409938409, lat: 38.675505779461297 }, { lng: -9.223764931469541, lat: 38.675486020363401 }, { lng: -9.223890941245079, lat: 38.675460431028398 }, { lng: -9.22398627965098, lat: 38.675457744680898 }, { lng: -9.22411147821712, lat: 38.675462066178099 }, { lng: -9.224205831448989, lat: 38.6754629874955 }, { lng: -9.22434343099761, lat: 38.675443686047302 }, { lng: -9.224469523720851, lat: 38.675423501853203 }, { lng: -9.22460019327146, lat: 38.675401654287199 }, { lng: -9.22472985572559, lat: 38.675389539095498 }, { lng: -9.22483733512912, lat: 38.675354306709501 }, { lng: -9.22496341524295, lat: 38.675333312292203 }, { lng: -9.22507762496563, lat: 38.675287204676003 }, { lng: -9.22519574351761, lat: 38.675271780063198 }, { lng: -9.2252780975339, lat: 38.675246687878001 }, { lng: -9.225349876949799, lat: 38.675282047277598 }, { lng: -9.22542186522602, lat: 38.675255163748503 }, { lng: -9.22553958522133, lat: 38.675213528643702 }, { lng: -9.225649319501899, lat: 38.675175565777103 }, { lng: -9.22578805587616, lat: 38.675155444004403 }, { lng: -9.22589695583839, lat: 38.675138121278799 }, { lng: -9.22600418767448, lat: 38.675086672327701 }, { lng: -9.22609981701682, lat: 38.675028128104501 }, { lng: -9.22618526106843, lat: 38.674979586783699 }, { lng: -9.22627689719141, lat: 38.674960714465797 }, { lng: -9.226374822804109, lat: 38.674977001436602 }, { lng: -9.22642208069721, lat: 38.675062134619203 }, { lng: -9.226533311418009, lat: 38.675122345660498 }, { lng: -9.226626673287351, lat: 38.6751412891782 }, { lng: -9.22670069016098, lat: 38.675127086122501 }, { lng: -9.226817866787901, lat: 38.6751096860446 }, { lng: -9.226930518753869, lat: 38.675089981613503 }, { lng: -9.22702490945948, lat: 38.675055499293499 }, { lng: -9.227236159248219, lat: 38.675051090060002 }, { lng: -9.2273645762057, lat: 38.675040338390502 }, { lng: -9.227382734030339, lat: 38.675206274005802 }, { lng: -9.22716181364971, lat: 38.675224465970899 }, { lng: -9.22715890599668, lat: 38.675207379079502 }, { lng: -9.227054098597391, lat: 38.675213857929499 }, { lng: -9.227062143785661, lat: 38.675327187520999 }, { lng: -9.227194228977281, lat: 38.675315591012499 }, { lng: -9.22718098150116, lat: 38.675253203784997 }, { lng: -9.22737971101053, lat: 38.6752341384774 }, { lng: -9.227386547936881, lat: 38.675275327943403 }, { lng: -9.22769240351651, lat: 38.675258143100798 }, { lng: -9.227673834355681, lat: 38.675216065387303 }, { lng: -9.227903025025601, lat: 38.675204913069301 }, { lng: -9.227909943915019, lat: 38.675267001844198 }, { lng: -9.227982105967991, lat: 38.675259207341298 }, { lng: -9.227981883762929, lat: 38.6751616548651 }, { lng: -9.22750829054513, lat: 38.675196087614303 }, { lng: -9.227499253574971, lat: 38.675070873316102 }, { lng: -9.227639853212249, lat: 38.675059740705002 }, { lng: -9.227726681757821, lat: 38.675087301085398 }, { lng: -9.22778754965476, lat: 38.675069882991799 }, { lng: -9.22780078971873, lat: 38.675049222868097 }, { lng: -9.227849343992281, lat: 38.675060480423603 }, { lng: -9.227924890412639, lat: 38.675048870060799 }, { lng: -9.228000779131429, lat: 38.675029333103602 }, { lng: -9.22807897782787, lat: 38.675025806713698 }, { lng: -9.228138691713591, lat: 38.675023535201902 }, { lng: -9.22819079582179, lat: 38.675004040667098 }, { lng: -9.228229245559071, lat: 38.674978463031401 }, { lng: -9.228253895465331, lat: 38.6749674191298 }, { lng: -9.22830522455105, lat: 38.674942616245303 }, { lng: -9.22835664065137, lat: 38.6749385297719 }, { lng: -9.2284153313046, lat: 38.674929065893402 }, { lng: -9.228537419928919, lat: 38.674880177848898 }, { lng: -9.228625813852011, lat: 38.674844128991097 }, { lng: -9.2287212103214, lat: 38.674830620667201 }, { lng: -9.228810287482739, lat: 38.674839696604202 }, { lng: -9.228866041761639, lat: 38.674841065876997 }, { lng: -9.228946061096931, lat: 38.6748213094478 }, { lng: -9.229042882439909, lat: 38.6748258915691 }, { lng: -9.22911174734708, lat: 38.674820745863101 }, { lng: -9.22918468048926, lat: 38.674795739223697 }, { lng: -9.229261163176769, lat: 38.674777817304303 }, { lng: -9.2293454135938, lat: 38.6747491914101 }, { lng: -9.22941857534572, lat: 38.674716884289403 }, { lng: -9.229484634955289, lat: 38.6747009524913 }, { lng: -9.22955624848109, lat: 38.674679924166398 }, { lng: -9.229594042415741, lat: 38.674634076371603 }, { lng: -9.22967276350222, lat: 38.674597041873703 }, { lng: -9.22974843633647, lat: 38.674616057779801 }, { lng: -9.229839148785899, lat: 38.674612049852897 }, { lng: -9.229872355495219, lat: 38.674642186007802 }, { lng: -9.23002384732154, lat: 38.674561943441198 }, { lng: -9.230045288959889, lat: 38.6745738129 }, { lng: -9.23007780149816, lat: 38.674558466561997 }, { lng: -9.23010520501564, lat: 38.6744566887876 }, { lng: -9.23013169149699, lat: 38.674423113843197 }, { lng: -9.23019878678895, lat: 38.674384651300699 }, { lng: -9.230213604024581, lat: 38.674339019749503 }, { lng: -9.23064349904784, lat: 38.674288144127701 }, { lng: -9.230664578770289, lat: 38.674396851690503 }, { lng: -9.23072252775585, lat: 38.674399366905 }, { lng: -9.23076596094484, lat: 38.674586774662799 }, { lng: -9.23070861175731, lat: 38.674601271547097 }, { lng: -9.23072070028703, lat: 38.674655298211299 }, { lng: -9.230792663220321, lat: 38.674650026055701 }, { lng: -9.23083113332704, lat: 38.674768566405902 }, { lng: -9.230616600227011, lat: 38.674798689031398 }, { lng: -9.23062736007839, lat: 38.674871281722901 }, { lng: -9.231140147939801, lat: 38.674800253042399 }, { lng: -9.23112528400959, lat: 38.6747150896894 }, { lng: -9.23089332274537, lat: 38.674755282428499 }, { lng: -9.230875785051831, lat: 38.674637537380903 }, { lng: -9.23094394115147, lat: 38.674623473134297 }, { lng: -9.230931609856761, lat: 38.674561162414797 }, { lng: -9.23088732623277, lat: 38.674565902797397 }, { lng: -9.2308375660075, lat: 38.674370003284203 }, { lng: -9.231530763486401, lat: 38.674269803491804 }, { lng: -9.2320870796081, lat: 38.674152962973302 }, { lng: -9.23250661088478, lat: 38.674032907230902 }, { lng: -9.232829100760661, lat: 38.673887005519099 }, { lng: -9.233440714527299, lat: 38.673667039617598 }, { lng: -9.23380897417471, lat: 38.673538542894697 }, { lng: -9.234081085524631, lat: 38.673464457072001 }, { lng: -9.23443954470676, lat: 38.6734388306485 }, { lng: -9.234724857656539, lat: 38.673476132170201 }, { lng: -9.23483925783885, lat: 38.673510815822901 }, { lng: -9.23507901750961, lat: 38.673919309389198 }, { lng: -9.23554535521378, lat: 38.674079303737201 }, { lng: -9.2355503249813, lat: 38.674402907572897 }, { lng: -9.23639003869925, lat: 38.674587475581397 }, { lng: -9.23734198627346, lat: 38.674814668802597 }, { lng: -9.237942041493771, lat: 38.674941859653302 }, { lng: -9.239154850253589, lat: 38.674804273542598 }, { lng: -9.24032248065895, lat: 38.674829694904197 }, { lng: -9.240565597322741, lat: 38.674827571270001 }, { lng: -9.240554002207601, lat: 38.674708957173102 }, { lng: -9.240421927923, lat: 38.674706423577099 }, { lng: -9.240429214855849, lat: 38.674545296328901 }, { lng: -9.240830174727069, lat: 38.674533749663802 }, { lng: -9.24085559697561, lat: 38.674594941725097 }, { lng: -9.24091913580658, lat: 38.674594338956602 }, { lng: -9.240913478051599, lat: 38.674540615488603 }, { lng: -9.240962070371619, lat: 38.6745171859788 }, { lng: -9.240930406113099, lat: 38.674371826658202 }, { lng: -9.24076392280231, lat: 38.674358093802603 }, { lng: -9.240695214411859, lat: 38.674351089645398 }, { lng: -9.24064091204621, lat: 38.6743170136453 }, { lng: -9.240571372294839, lat: 38.674248673599699 }, { lng: -9.2405440064442, lat: 38.674061027382898 }, { lng: -9.24055646126962, lat: 38.673915163676803 }, { lng: -9.24069343411411, lat: 38.6737812722684 }, { lng: -9.24154005587094, lat: 38.6730587402891 }, { lng: -9.24202892201693, lat: 38.672325907501701 }, { lng: -9.24300294920439, lat: 38.670607695093999 }, { lng: -9.243561404473271, lat: 38.669747993920197 }, { lng: -9.244401659495081, lat: 38.668633395385299 }, { lng: -9.244723033734269, lat: 38.668210664547097 }, { lng: -9.245101840505409, lat: 38.668210029757397 }, { lng: -9.245359517500111, lat: 38.668133351763302 }, { lng: -9.245618192914719, lat: 38.6681210728186 }, { lng: -9.245888016374961, lat: 38.668027341486599 }, { lng: -9.24626122725622, lat: 38.667754815213598 }, { lng: -9.24670496598268, lat: 38.667607091629002 }, { lng: -9.24720719702532, lat: 38.667548615139701 }, { lng: -9.247472381662369, lat: 38.667689490686499 }, { lng: -9.24763693625717, lat: 38.6676316215461 }, { lng: -9.250553366271189, lat: 38.672438166854697 }, { lng: -9.25002947782257, lat: 38.672568747564199 }, { lng: -9.250089198986711, lat: 38.672729415528202 }, { lng: -9.25126303180755, lat: 38.672476144031201 }, { lng: -9.251237798578581, lat: 38.672324067448997 }, { lng: -9.25070175199037, lat: 38.672418822360399 }, { lng: -9.25014026193899, lat: 38.6715283647085 }, { lng: -9.24769946000076, lat: 38.667588777799999 }, { lng: -9.24839753176691, lat: 38.6672678341222 }, { lng: -9.24881150991664, lat: 38.667068772064802 }, { lng: -9.24912808632971, lat: 38.666494379395701 }, { lng: -9.249297444166359, lat: 38.666228652782003 }, { lng: -9.24946501919702, lat: 38.6659957316553 }, { lng: -9.24973225155999, lat: 38.665573950659102 }, { lng: -9.250993051152109, lat: 38.665246352882697 }, { lng: -9.252029040119121, lat: 38.665046998492201 }, { lng: -9.25346653642884, lat: 38.664786681257901 }, { lng: -9.253664931014111, lat: 38.664836392208102 }, { lng: -9.2537675526185, lat: 38.664852612211199 }, { lng: -9.25383456415531, lat: 38.664920786762103 }, { lng: -9.25415602434364, lat: 38.664883203925797 }, { lng: -9.2544847195702, lat: 38.664845730094797 }, { lng: -9.25466108022184, lat: 38.664853133376901 }, { lng: -9.25491720654078, lat: 38.664884453844401 }, { lng: -9.255012007954679, lat: 38.664907684736399 }, { lng: -9.25519551196988, lat: 38.664901779795301 }, { lng: -9.255333123325601, lat: 38.664892439734899 }, { lng: -9.255585912572361, lat: 38.664916043971701 }, { lng: -9.255630710389539, lat: 38.665003443623299 }, { lng: -9.255679076318099, lat: 38.665003245138102 }, { lng: -9.25574005305023, lat: 38.664986718594598 }, { lng: -9.25587109281839, lat: 38.665049415799501 }, { lng: -9.25588748635939, lat: 38.665113304499201 }, { lng: -9.25593624527049, lat: 38.665130759394501 }, { lng: -9.25592792589876, lat: 38.665252806052003 }, { lng: -9.2559116988129, lat: 38.665361052874403 }, { lng: -9.25586879276443, lat: 38.665387316509602 }, { lng: -9.25576691072242, lat: 38.665396314243502 }, { lng: -9.25566025187659, lat: 38.665423372609702 }, { lng: -9.255553435465799, lat: 38.665440344458801 }, { lng: -9.2553477450329, lat: 38.6655043844722 }, { lng: -9.255167643965731, lat: 38.6655741211286 }, { lng: -9.2549243396865, lat: 38.665672392713802 }, { lng: -9.254789756383721, lat: 38.665713680356902 }, { lng: -9.254536689217909, lat: 38.665834020411701 }, { lng: -9.25430678850369, lat: 38.665974315502801 }, { lng: -9.254322878944739, lat: 38.6660261376568 }, { lng: -9.25440983559476, lat: 38.666039357199402 }, { lng: -9.25497724292952, lat: 38.6657859233067 }, { lng: -9.255389733769571, lat: 38.665640358265698 }, { lng: -9.25571014428265, lat: 38.665528194118799 }, { lng: -9.25612579775362, lat: 38.665438176594797 }, { lng: -9.256411887100541, lat: 38.665372100144303 }, { lng: -9.256606827580709, lat: 38.665318702559802 }, { lng: -9.25674617759142, lat: 38.665280969290301 }, { lng: -9.25691369261053, lat: 38.665258821808003 }, { lng: -9.25706586344014, lat: 38.6652551931302 }, { lng: -9.25732040457452, lat: 38.665192483024597 }, { lng: -9.25738453329514, lat: 38.665149257480998 }, { lng: -9.25747328777676, lat: 38.665123632578599 }, { lng: -9.257649014198311, lat: 38.6650391606127 }, { lng: -9.258040113030219, lat: 38.664782903963001 }, { lng: -9.25816308504765, lat: 38.664689929842801 }, { lng: -9.25832813851645, lat: 38.664481703795197 }, { lng: -9.258493650377771, lat: 38.664302381211201 }, { lng: -9.258665692385961, lat: 38.664071206505398 }, { lng: -9.25872309600236, lat: 38.663738717928403 }, { lng: -9.258937129549061, lat: 38.663327697951203 }, { lng: -9.25904349752105, lat: 38.663084631163898 }, { lng: -9.25918846122662, lat: 38.662950732198702 }, { lng: -9.259371868617229, lat: 38.662931669243299 }, { lng: -9.259541473839709, lat: 38.662970297532802 }, { lng: -9.259687791180649, lat: 38.662922859736497 }, { lng: -9.260128038143311, lat: 38.662878254842703 }, { lng: -9.261479287288511, lat: 38.662807563132901 }, { lng: -9.261685747043931, lat: 38.662851782450097 }, { lng: -9.26186146481483, lat: 38.662803871776902 }, { lng: -9.262538597461569, lat: 38.662773005441899 }, { lng: -9.262750321779651, lat: 38.662772312766798 }, { lng: -9.262970151034359, lat: 38.662724065349998 }, { lng: -9.26297532425327, lat: 38.662585654248502 }, { lng: -9.262615204641611, lat: 38.662589136219303 }, { lng: -9.26050741339189, lat: 38.662695971210702 }, { lng: -9.260360037341281, lat: 38.6626685646876 }, { lng: -9.26020284565587, lat: 38.662491457700199 }, { lng: -9.260120714218299, lat: 38.662411542077201 }, { lng: -9.26012716022235, lat: 38.662353832181303 }, { lng: -9.260058823604091, lat: 38.662216220473603 }, { lng: -9.259916906862509, lat: 38.6620676956571 }, { lng: -9.25979728728862, lat: 38.661942201628399 }, { lng: -9.259632503854039, lat: 38.661742102268498 }, { lng: -9.25945880753136, lat: 38.661449764833598 }, { lng: -9.259205264519981, lat: 38.661216021171697 }, { lng: -9.259018604230739, lat: 38.661027663437203 }, { lng: -9.25880919735271, lat: 38.660787646076699 }, { lng: -9.25870302726965, lat: 38.660581217039599 }, { lng: -9.25882619418744, lat: 38.660464727025598 }, { lng: -9.2587584945387, lat: 38.660367377241798 }, { lng: -9.25861583337616, lat: 38.6604131626707 }, { lng: -9.257414297308969, lat: 38.6608932256988 }, { lng: -9.25722209553307, lat: 38.660820222051697 }, { lng: -9.25694702007408, lat: 38.660626858270398 }, { lng: -9.256775437334531, lat: 38.660461320344702 }, { lng: -9.25638338897024, lat: 38.660384019667902 }, { lng: -9.2561831993638, lat: 38.6602112817408 }, { lng: -9.255649789817809, lat: 38.659821684588501 }, { lng: -9.255040495919131, lat: 38.659362011718997 }, { lng: -9.25479037354576, lat: 38.659161739351603 }, { lng: -9.254531546478439, lat: 38.658985690159 }, { lng: -9.254374907360949, lat: 38.658886482715602 }, { lng: -9.254273310018981, lat: 38.658846922911501 }, { lng: -9.25395125253406, lat: 38.658682381665599 }, { lng: -9.253768932720639, lat: 38.658550001991799 }, { lng: -9.25336465919691, lat: 38.658270038625702 }, { lng: -9.25309805253239, lat: 38.658043711056102 }, { lng: -9.252929004720951, lat: 38.657884988162799 }, { lng: -9.252760931190551, lat: 38.657715449813303 }, { lng: -9.25259599487976, lat: 38.657548134962497 }, { lng: -9.252575455199761, lat: 38.657527251263801 }, { lng: -9.252573968882279, lat: 38.657358642993998 }, { lng: -9.252253879186309, lat: 38.657149934019998 }, { lng: -9.25196376285632, lat: 38.656859505101103 }, { lng: -9.25155542050519, lat: 38.656663799923599 }, { lng: -9.25118738904032, lat: 38.656267828001702 }, { lng: -9.250968890982771, lat: 38.656039136670699 }, { lng: -9.250804394632871, lat: 38.6558034450048 }, { lng: -9.25049892504502, lat: 38.655529377770598 }, { lng: -9.250350344687829, lat: 38.655327131967397 }, { lng: -9.250149290237861, lat: 38.6550970086086 }, { lng: -9.249786420185229, lat: 38.654803218031901 }, { lng: -9.24958541798674, lat: 38.654568773875603 }, { lng: -9.249464387659399, lat: 38.654468233422399 }, { lng: -9.24944252296037, lat: 38.654399170396303 }, { lng: -9.249379327606229, lat: 38.654346807027899 }, { lng: -9.249091014010959, lat: 38.654141303494903 }, { lng: -9.248964313354319, lat: 38.6540454070403 }, { lng: -9.24882733334589, lat: 38.653916372018699 }, { lng: -9.24873244127174, lat: 38.653827652052001 }, { lng: -9.248653495040919, lat: 38.653759133295999 }, { lng: -9.24857021370611, lat: 38.653751729449802 }, { lng: -9.248153996261919, lat: 38.653372872673103 }, { lng: -9.24802225065879, lat: 38.653247929517299 }, { lng: -9.24797202523785, lat: 38.653112840103198 }, { lng: -9.24791819493503, lat: 38.653071555567202 }, { lng: -9.247797576271489, lat: 38.652938039560503 }, { lng: -9.24767675188683, lat: 38.652776690038699 }, { lng: -9.247598717706181, lat: 38.652707805142903 }, { lng: -9.247490692805981, lat: 38.652615961913597 }, { lng: -9.24743545373051, lat: 38.6524911953382 }, { lng: -9.247326463156019, lat: 38.652329640814401 }, { lng: -9.247224366235629, lat: 38.6522425177548 }, { lng: -9.24716932074711, lat: 38.652122338729399 }, { lng: -9.247042344105131, lat: 38.651956452176201 }, { lng: -9.246909116946391, lat: 38.6517580163517 }, { lng: -9.246812967368379, lat: 38.651661559936301 }, { lng: -9.246722270514949, lat: 38.651546224986603 }, { lng: -9.24673798415769, lat: 38.651411583629901 }, { lng: -9.24682590497844, lat: 38.651354990240101 }, { lng: -9.24691946473625, lat: 38.651284378120202 }, { lng: -9.24701253159064, lat: 38.651226380798001 }, { lng: -9.24709498615778, lat: 38.651203074860398 }, { lng: -9.247249296734619, lat: 38.651153770410303 }, { lng: -9.247340401616039, lat: 38.651102551054699 }, { lng: -9.247402763393261, lat: 38.651049708384399 }, { lng: -9.24747544207535, lat: 38.650995780124397 }, { lng: -9.24758613710704, lat: 38.650956077021497 }, { lng: -9.247712012728879, lat: 38.650925153298402 }, { lng: -9.247977858745131, lat: 38.650823980376302 }, { lng: -9.247976419677499, lat: 38.650731209879098 }, { lng: -9.24785754729719, lat: 38.650695146449898 }, { lng: -9.247692964732011, lat: 38.650771031945901 }, { lng: -9.247457719169139, lat: 38.650875330301801 }, { lng: -9.247322961318559, lat: 38.650955617055502 }, { lng: -9.247205651492481, lat: 38.651035641082998 }, { lng: -9.24707617683085, lat: 38.651078673647199 }, { lng: -9.246941078832251, lat: 38.651144909955498 }, { lng: -9.246847258232149, lat: 38.651206156346497 }, { lng: -9.246741251120209, lat: 38.651244279171401 }, { lng: -9.24663406391279, lat: 38.651198910673799 }, { lng: -9.24636498663906, lat: 38.651025100586097 }, { lng: -9.24602877383732, lat: 38.650721857068298 }, { lng: -9.24587156052743, lat: 38.650509867901903 }, { lng: -9.245763854110949, lat: 38.650386494981497 }, { lng: -9.245639609940961, lat: 38.650248324311796 }, { lng: -9.245548600890579, lat: 38.6501126370866 }, { lng: -9.245505896394571, lat: 38.649988190795902 }, { lng: -9.245443606783301, lat: 38.649785746520202 }, { lng: -9.245412671560061, lat: 38.649701820276697 }, { lng: -9.24528490563449, lat: 38.649581068875101 }, { lng: -9.245224657247819, lat: 38.649517867460503 }, { lng: -9.24520499777292, lat: 38.649442476145701 }, { lng: -9.245074119728081, lat: 38.649350853270299 }, { lng: -9.24500196448597, lat: 38.649238310556697 }, { lng: -9.244883364482829, lat: 38.648989741088897 }, { lng: -9.244841515211339, lat: 38.648920510339799 }, { lng: -9.24481455666848, lat: 38.648848253716402 }, { lng: -9.24476959303383, lat: 38.648808056235403 }, { lng: -9.244846516274791, lat: 38.6487608451909 }, { lng: -9.24496411651152, lat: 38.648707477879697 }, { lng: -9.24502651472736, lat: 38.648672021394702 }, { lng: -9.24520261828591, lat: 38.648568828889204 }, { lng: -9.24540120835724, lat: 38.648508836860202 }, { lng: -9.245539443949511, lat: 38.648452665854897 }, { lng: -9.245705910853239, lat: 38.648372622712301 }, { lng: -9.24584297866434, lat: 38.648322674318102 }, { lng: -9.24593419668779, lat: 38.648279377436403 }, { lng: -9.246019194316791, lat: 38.648204881288201 }, { lng: -9.24601565465465, lat: 38.648124655309303 }, { lng: -9.2459755504818, lat: 38.648056666762201 }, { lng: -9.24589382166563, lat: 38.648052945747203 }, { lng: -9.245809280751651, lat: 38.6480752789071 }, { lng: -9.245596632165309, lat: 38.648199271480301 }, { lng: -9.245384226948261, lat: 38.648346405400503 }, { lng: -9.24521558749286, lat: 38.648449622697797 }, { lng: -9.245028082173899, lat: 38.648535627502902 }, { lng: -9.244933117569641, lat: 38.648611929176703 }, { lng: -9.244815538709521, lat: 38.648674029431099 }, { lng: -9.24464931868202, lat: 38.648695970590303 }, { lng: -9.244525976954939, lat: 38.648615801996698 }, { lng: -9.24441746954547, lat: 38.648544411976502 }, { lng: -9.244213922418719, lat: 38.648380513445098 }, { lng: -9.24414370455295, lat: 38.648311818537003 }, { lng: -9.24411788944958, lat: 38.648261622986503 }, { lng: -9.24410479606151, lat: 38.648187341928399 }, { lng: -9.244092441786631, lat: 38.648109002085199 }, { lng: -9.24396114665889, lat: 38.647997111361001 }, { lng: -9.24388937897484, lat: 38.647901950426302 }, { lng: -9.243821060898449, lat: 38.647792430491599 }, { lng: -9.2437082093416, lat: 38.647677394427099 }, { lng: -9.24363621725862, lat: 38.647567729102398 }, { lng: -9.24353008597884, lat: 38.647411913249996 }, { lng: -9.243428197834101, lat: 38.647285240884003 }, { lng: -9.24338664486663, lat: 38.647227534207197 }, { lng: -9.243325152872741, lat: 38.647136059598701 }, { lng: -9.24321762252262, lat: 38.647075284901 }, { lng: -9.24314583819157, lat: 38.6469714760374 }, { lng: -9.24306089087937, lat: 38.646751773587098 }, { lng: -9.242986210787601, lat: 38.646705998616 }, { lng: -9.24286860968831, lat: 38.646521372818803 }, { lng: -9.24283763446245, lat: 38.646434561867501 }, { lng: -9.24283960903772, lat: 38.646324287949902 }, { lng: -9.2428449843274, lat: 38.646196415414998 }, { lng: -9.243400080217061, lat: 38.645941534676801 }, { lng: -9.243572752929611, lat: 38.645861617611899 }, { lng: -9.24375684635425, lat: 38.645793027414797 }, { lng: -9.2439786819943, lat: 38.645720927534697 }, { lng: -9.244051565764719, lat: 38.6456878933026 }, { lng: -9.244113673311221, lat: 38.645656140514497 }, { lng: -9.244183471082019, lat: 38.6456235841055 }, { lng: -9.24420491857326, lat: 38.645576900397799 }, { lng: -9.24420007306346, lat: 38.6455013735441 }, { lng: -9.244129297725131, lat: 38.645470249621098 }, { lng: -9.24405131598715, lat: 38.645456308252001 }, { lng: -9.24393345436363, lat: 38.645492376511598 }, { lng: -9.24356943233656, lat: 38.645646716461897 }, { lng: -9.24331964371615, lat: 38.6457681785676 }, { lng: -9.243047845389381, lat: 38.645907139700398 }, { lng: -9.24282356509466, lat: 38.645999345080803 }, { lng: -9.242719900674549, lat: 38.646003122747103 }, { lng: -9.242667611790919, lat: 38.645971641517598 }, { lng: -9.242562498242179, lat: 38.645874002658502 }, { lng: -9.242179044090991, lat: 38.645491566494599 }, { lng: -9.24203916709819, lat: 38.645307151007501 }, { lng: -9.241906445534619, lat: 38.645102312306598 }, { lng: -9.241792819777521, lat: 38.644929180515703 }, { lng: -9.241678229171709, lat: 38.644700924733399 }, { lng: -9.241628422279611, lat: 38.644599790028003 }, { lng: -9.24162730540222, lat: 38.644527377777997 }, { lng: -9.24158241572249, lat: 38.644498619286303 }, { lng: -9.2415516505332, lat: 38.6444177502933 }, { lng: -9.241510009425779, lat: 38.6443541885874 }, { lng: -9.241497841620969, lat: 38.644287645218597 }, { lng: -9.24136641357361, lat: 38.644166924940897 }, { lng: -9.24123755228119, lat: 38.643973666372403 }, { lng: -9.241161757147511, lat: 38.643855301356297 }, { lng: -9.24104900765048, lat: 38.643746206860598 }, { lng: -9.24147546325918, lat: 38.643544077126002 }, { lng: -9.2419934557578, lat: 38.643304690615999 }, { lng: -9.24206607058578, lat: 38.643216896462299 }, { lng: -9.24200580348684, lat: 38.643144863884103 }, { lng: -9.241942563514231, lat: 38.643125194621497 }, { lng: -9.241883611681921, lat: 38.643146023963297 }, { lng: -9.241171198781251, lat: 38.643506880715897 }, { lng: -9.24088419142435, lat: 38.643619948000698 }, { lng: -9.2407914060948, lat: 38.643606325689703 }, { lng: -9.24062237935421, lat: 38.643445334815603 }, { lng: -9.240370154318599, lat: 38.643147403602498 }, { lng: -9.240298384859599, lat: 38.643074035940998 }, { lng: -9.24014235408597, lat: 38.643040747475901 }, { lng: -9.23979037682701, lat: 38.643014982356902 }, { lng: -9.23969995411105, lat: 38.642908468656501 }, { lng: -9.239563253685681, lat: 38.642683394246902 }, { lng: -9.239378437844801, lat: 38.642458685532098 }, { lng: -9.23930518278088, lat: 38.642273637438798 }, { lng: -9.23921820765943, lat: 38.642152493387101 }, { lng: -9.23914838239989, lat: 38.6419441713835 }, { lng: -9.239046418486589, lat: 38.641811550482302 }, { lng: -9.23891531887185, lat: 38.6417111848804 }, { lng: -9.238780542375, lat: 38.6416108484771 }, { lng: -9.2385270712102, lat: 38.641253383356798 }, { lng: -9.23832889084991, lat: 38.640883682255101 }, { lng: -9.238304557204881, lat: 38.640750327184698 }, { lng: -9.238973342297779, lat: 38.640436289313001 }, { lng: -9.23930801467772, lat: 38.640293767726703 }, { lng: -9.23931080039374, lat: 38.640235825765302 }, { lng: -9.239243768873189, lat: 38.640201507935899 }, { lng: -9.23911833521543, lat: 38.640237647443897 }, { lng: -9.23881362822055, lat: 38.640394296149303 }, { lng: -9.238387137413721, lat: 38.640578396179201 }, { lng: -9.238104048931341, lat: 38.640699975364903 }, { lng: -9.237958233267589, lat: 38.640605691999298 }, { lng: -9.237601272076009, lat: 38.640254785295497 }, { lng: -9.2372874404643, lat: 38.639825194094399 }, { lng: -9.237101482914699, lat: 38.639525190518498 }, { lng: -9.236922245887239, lat: 38.639184310943001 }, { lng: -9.23674423542807, lat: 38.638916028885497 }, { lng: -9.23668190868311, lat: 38.638716372199298 }, { lng: -9.236780767427961, lat: 38.638654453087902 }, { lng: -9.236960708393751, lat: 38.638562854227096 }, { lng: -9.23734678147421, lat: 38.638402381396901 }, { lng: -9.23737587411834, lat: 38.6383673343257 }, { lng: -9.237349236868949, lat: 38.638315253247299 }, { lng: -9.237286111464361, lat: 38.638295579438797 }, { lng: -9.237124125644049, lat: 38.6383523278786 }, { lng: -9.23696580835084, lat: 38.638408955001502 }, { lng: -9.2367857804705, lat: 38.638494786906698 }, { lng: -9.23641829929082, lat: 38.638669588927897 }, { lng: -9.23627332782884, lat: 38.638630332143599 }, { lng: -9.236071025511871, lat: 38.638469647335498 }, { lng: -9.23570992014011, lat: 38.638086978372897 }, { lng: -9.23529393675091, lat: 38.637510343854501 }, { lng: -9.23518470246642, lat: 38.637389410865303 }, { lng: -9.235026620002261, lat: 38.637213896678198 }, { lng: -9.234913577248401, lat: 38.6370843480708 }, { lng: -9.23481910882013, lat: 38.636960386802699 }, { lng: -9.23473912276217, lat: 38.636807290701597 }, { lng: -9.2345173569182, lat: 38.636582921879302 }, { lng: -9.23448221307595, lat: 38.6364701147848 }, { lng: -9.23442930942182, lat: 38.636397918744699 }, { lng: -9.23438904556134, lat: 38.6363036270062 }, { lng: -9.234566731358001, lat: 38.636184846344399 }, { lng: -9.234746685256709, lat: 38.636101807395697 }, { lng: -9.23508515596397, lat: 38.635968006999398 }, { lng: -9.235213701144231, lat: 38.635902837826997 }, { lng: -9.235297975260989, lat: 38.635841146535199 }, { lng: -9.23538201484434, lat: 38.635779373618803 }, { lng: -9.2353377681601, lat: 38.6357251114013 }, { lng: -9.23524045801538, lat: 38.635715040339498 }, { lng: -9.235141646991391, lat: 38.6357874033272 }, { lng: -9.235001587513089, lat: 38.635820702674202 }, { lng: -9.234901037478251, lat: 38.6359069540744 }, { lng: -9.234414276357001, lat: 38.636143765099497 }, { lng: -9.234134357455821, lat: 38.636291519787697 }, { lng: -9.234017835026391, lat: 38.636234606162802 }, { lng: -9.233924950934551, lat: 38.636206387288397 }, { lng: -9.23381330260974, lat: 38.636167623640198 }, { lng: -9.23369516817473, lat: 38.636005422878902 }, { lng: -9.233573274290899, lat: 38.635897756327999 }, { lng: -9.233450160616311, lat: 38.635717497076101 }, { lng: -9.233304631798839, lat: 38.6355737487184 }, { lng: -9.23314005651482, lat: 38.635401088111202 }, { lng: -9.233022259386489, lat: 38.635260773674602 }, { lng: -9.23292843077633, lat: 38.635178155776799 }, { lng: -9.232834161345361, lat: 38.635059234513299 }, { lng: -9.232645505577739, lat: 38.634828787469303 }, { lng: -9.232533191889409, lat: 38.634746433063199 }, { lng: -9.23233806569149, lat: 38.634693770428598 }, { lng: -9.232189719278161, lat: 38.634364934668099 }, { lng: -9.23200034708519, lat: 38.634087383493899 }, { lng: -9.231840093942751, lat: 38.633889276160303 }, { lng: -9.231721192634179, lat: 38.633676367545299 }, { lng: -9.231315015449759, lat: 38.633128719935002 }, { lng: -9.231230322984249, lat: 38.633035201709099 }, { lng: -9.231179514308121, lat: 38.633039192631799 }, { lng: -9.230993857856809, lat: 38.632703593639299 }, { lng: -9.230899423831641, lat: 38.632580982620503 }, { lng: -9.230814845251739, lat: 38.632494853134403 }, { lng: -9.230725067211679, lat: 38.632368684276798 }, { lng: -9.230606337715709, lat: 38.632166580573802 }, { lng: -9.23051218131036, lat: 38.632062162685301 }, { lng: -9.23041847482755, lat: 38.631979630725297 }, { lng: -9.230306385310209, lat: 38.631918977566997 }, { lng: -9.23021362213116, lat: 38.631898229352998 }, { lng: -9.230032907647219, lat: 38.631569695066602 }, { lng: -9.229912963223869, lat: 38.631287794230097 }, { lng: -9.229794784454331, lat: 38.631129102826101 }, { lng: -9.22971386050475, lat: 38.630981140970299 }, { lng: -9.22960986311462, lat: 38.630833310643602 }, { lng: -9.229445033239131, lat: 38.630642625664997 }, { lng: -9.22911510044055, lat: 38.630235682145603 }, { lng: -9.22895514156391, lat: 38.630062970327003 }, { lng: -9.22885130851637, lat: 38.6299261211512 }, { lng: -9.228734081103619, lat: 38.629822008829997 }, { lng: -9.2285832622008, lat: 38.629638313955802 }, { lng: -9.2284797010227, lat: 38.629526865231298 }, { lng: -9.22828194464009, lat: 38.629292800929299 }, { lng: -9.22816012675843, lat: 38.629195933749003 }, { lng: -9.22812603194348, lat: 38.629083839855497 }, { lng: -9.22800875330072, lat: 38.628976123174702 }, { lng: -9.22782578249161, lat: 38.628800106602903 }, { lng: -9.227385621574861, lat: 38.628151156392903 }, { lng: -9.22708248517, lat: 38.627881326721997 }, { lng: -9.226910577097859, lat: 38.627654765127097 }, { lng: -9.226689025709049, lat: 38.627176359683602 }, { lng: -9.226575465455751, lat: 38.626768914499202 }, { lng: -9.22640228300191, lat: 38.626458227815398 }, { lng: -9.22621236562753, lat: 38.626051586730703 }, { lng: -9.2259958300251, lat: 38.625713836457898 }, { lng: -9.22583535460771, lat: 38.625430417970797 }, { lng: -9.225565889886701, lat: 38.624820489132397 }, { lng: -9.22525512430134, lat: 38.624523156818398 }, { lng: -9.22505130061505, lat: 38.624212760299898 }, { lng: -9.224985791021849, lat: 38.623937009021603 }, { lng: -9.224874848306371, lat: 38.623685733852497 }, { lng: -9.224641393896571, lat: 38.6234356917155 }, { lng: -9.22406361173373, lat: 38.623164815421603 }, { lng: -9.223684860350261, lat: 38.6229640530184 }, { lng: -9.223450573135381, lat: 38.6226660928915 }, { lng: -9.223183317034531, lat: 38.622199997569801 }, { lng: -9.222717782089831, lat: 38.621795920729902 }, { lng: -9.222158471655041, lat: 38.621272549436803 }, { lng: -9.221810112478471, lat: 38.620507241003999 }, { lng: -9.2214746793528, lat: 38.6199888981754 }, { lng: -9.221060157679251, lat: 38.619517136782903 }, { lng: -9.220452169293161, lat: 38.618801982931501 }, { lng: -9.2200295115394, lat: 38.618193374728598 }, { lng: -9.219586907374261, lat: 38.617487847680998 }, { lng: -9.21932638498113, lat: 38.6173354221213 }, { lng: -9.2192015042433, lat: 38.617110122546201 }, { lng: -9.2189694245168, lat: 38.616826282203398 }, { lng: -9.2187655579362, lat: 38.616411194488897 }, { lng: -9.218486176430339, lat: 38.616020507836097 }, { lng: -9.21833016458511, lat: 38.615747933878197 }, { lng: -9.2180653304433, lat: 38.615309456268797 }, { lng: -9.217954474862941, lat: 38.615000609430098 }, { lng: -9.21779864643568, lat: 38.6147399280418 }, { lng: -9.217841521485051, lat: 38.614560721097803 }, { lng: -9.217703151645431, lat: 38.614414547584602 }, { lng: -9.217549515257289, lat: 38.614336971607798 }, { lng: -9.21723977830559, lat: 38.6135619210621 }, { lng: -9.21714163065832, lat: 38.613410596308903 }, { lng: -9.21706233139305, lat: 38.613275404918099 }, { lng: -9.21697358970815, lat: 38.613138948839698 }, { lng: -9.216782146699179, lat: 38.612875977262902 }, { lng: -9.216529726493381, lat: 38.612505572284803 }, { lng: -9.216448287319681, lat: 38.612396427952902 }, { lng: -9.21641553070193, lat: 38.612340612350501 }, { lng: -9.216300616746651, lat: 38.612104500309798 }, { lng: -9.21619866611643, lat: 38.611898893519303 }, { lng: -9.2160876700347, lat: 38.611701745084503 }, { lng: -9.215930736662051, lat: 38.611428098807004 }, { lng: -9.21585923307471, lat: 38.6113225589663 }, { lng: -9.21576772694619, lat: 38.611207563809501 }, { lng: -9.21563466675649, lat: 38.611055386999297 }, { lng: -9.21557351232806, lat: 38.610981371987101 }, { lng: -9.215482817788009, lat: 38.610866997846003 }, { lng: -9.21540991361571, lat: 38.610760387008703 }, { lng: -9.21521340827069, lat: 38.610404324955098 }, { lng: -9.21514726696663, lat: 38.610304049776097 }, { lng: -9.215089078237231, lat: 38.610228827922803 }, { lng: -9.21499707064069, lat: 38.610126360582903 }, { lng: -9.214828820340511, lat: 38.6099849637665 }, { lng: -9.21464264294957, lat: 38.609842288426698 }, { lng: -9.214550450883531, lat: 38.609780988074199 }, { lng: -9.214455100686751, lat: 38.609707910952899 }, { lng: -9.214332240076921, lat: 38.609584290970702 }, { lng: -9.21419558928714, lat: 38.609444669449402 }, { lng: -9.2140859502362, lat: 38.609307412337998 }, { lng: -9.21401263536279, lat: 38.609188104000403 }, { lng: -9.213961141118871, lat: 38.609099672544197 }, { lng: -9.213911500406629, lat: 38.609012572439703 }, { lng: -9.213787301707439, lat: 38.608845453782997 }, { lng: -9.213703538915791, lat: 38.608733989513297 }, { lng: -9.21364268981227, lat: 38.6086342933202 }, { lng: -9.21355432169466, lat: 38.608475762330102 }, { lng: -9.2133950516297, lat: 38.608197895728999 }, { lng: -9.213139615122641, lat: 38.607754186589901 }, { lng: -9.21302269001127, lat: 38.607566639142199 }, { lng: -9.212866747556429, lat: 38.607311442112703 }, { lng: -9.21269601010985, lat: 38.6070342243817 }, { lng: -9.212636647681119, lat: 38.606926138264598 }, { lng: -9.21255832428516, lat: 38.606778859361498 }, { lng: -9.212498400783909, lat: 38.606633756351499 }, { lng: -9.21246552574131, lat: 38.6065696505867 }, { lng: -9.21235725814763, lat: 38.606400579944598 }, { lng: -9.21226538913756, lat: 38.606260633968802 }, { lng: -9.212223140610361, lat: 38.606176264596897 }, { lng: -9.21214133271932, lat: 38.605995508647503 }, { lng: -9.212100659912389, lat: 38.605924270977098 }, { lng: -9.212039150602561, lat: 38.605872318788499 }, { lng: -9.21198381171979, lat: 38.605833466765198 }, { lng: -9.211941179678909, lat: 38.605777111209598 }, { lng: -9.211929898846339, lat: 38.6057365891158 }, { lng: -9.211926050958571, lat: 38.605679332780603 }, { lng: -9.211919039363959, lat: 38.605617333172198 }, { lng: -9.21190154758265, lat: 38.605568583675201 }, { lng: -9.211808343998779, lat: 38.605439275458203 }, { lng: -9.211626883086369, lat: 38.605196207857198 }, { lng: -9.21153083230927, lat: 38.605022337820202 }, { lng: -9.211474128814791, lat: 38.604892788398899 }, { lng: -9.21142342775561, lat: 38.604757142862198 }, { lng: -9.21137576160419, lat: 38.604617779652997 }, { lng: -9.211335978325559, lat: 38.6044987910579 }, { lng: -9.21129347887333, lat: 38.604404873337202 }, { lng: -9.211237878291341, lat: 38.604295034851702 }, { lng: -9.21114711662544, lat: 38.604121660713901 }, { lng: -9.211054942703891, lat: 38.603961360219301 }, { lng: -9.21098009475876, lat: 38.603830713852702 }, { lng: -9.210934278266709, lat: 38.603722502006597 }, { lng: -9.21085309268623, lat: 38.603529216384999 }, { lng: -9.210694730191991, lat: 38.6032107166901 }, { lng: -9.210572729676629, lat: 38.6029826772753 }, { lng: -9.21051386257926, lat: 38.6028536859288 }, { lng: -9.21043296887952, lat: 38.602633557921898 }, { lng: -9.210299880944611, lat: 38.602277888476003 }, { lng: -9.2102328912241, lat: 38.602166267122897 }, { lng: -9.210171693347959, lat: 38.601996761883697 }, { lng: -9.21002060974266, lat: 38.601657923433002 }, { lng: -9.209876513049579, lat: 38.601333703528397 }, { lng: -9.209772795894221, lat: 38.601106758758199 }, { lng: -9.209636361515781, lat: 38.600826336141097 }, { lng: -9.20956744822117, lat: 38.600647261138803 }, { lng: -9.209500707263119, lat: 38.600452134542998 }, { lng: -9.20948478294757, lat: 38.600408142655098 }, { lng: -9.209470782214281, lat: 38.6003855694427 }, { lng: -9.20943974488595, lat: 38.600344056845302 }, { lng: -9.2093620141918, lat: 38.600227762192397 }, { lng: -9.20925635469345, lat: 38.600078300998199 }, { lng: -9.209130694642511, lat: 38.599858040457597 }, { lng: -9.209052227538329, lat: 38.599700043441402 }, { lng: -9.209000148150039, lat: 38.5995716175822 }, { lng: -9.20895086168799, lat: 38.599422810603997 }, { lng: -9.20887847502463, lat: 38.599264758452897 }, { lng: -9.208786708458, lat: 38.599069226388004 }, { lng: -9.20866146936673, lat: 38.598830498587802 }, { lng: -9.208582985610731, lat: 38.598671238447601 }, { lng: -9.208532687534531, lat: 38.598554690165301 }, { lng: -9.20850082502848, lat: 38.598458328755903 }, { lng: -9.208475304423921, lat: 38.598378569384899 }, { lng: -9.208414339741729, lat: 38.5982704965243 }, { lng: -9.208392425019721, lat: 38.5981709827416 }, { lng: -9.20836532939536, lat: 38.598093583502603 }, { lng: -9.208339479881859, lat: 38.597992298853903 }, { lng: -9.208298716657421, lat: 38.597906740506602 }, { lng: -9.20821995712995, lat: 38.597721176504201 }, { lng: -9.20810582342194, lat: 38.597465140684399 }, { lng: -9.208014176618249, lat: 38.597239165128798 }, { lng: -9.207931886153091, lat: 38.597016702256099 }, { lng: -9.20788629135582, lat: 38.5968768697591 }, { lng: -9.20768857542876, lat: 38.596465582194 }, { lng: -9.207648027217351, lat: 38.5962941733669 }, { lng: -9.20759513561757, lat: 38.596103689870802 }, { lng: -9.20757686954359, lat: 38.596002335378699 }, { lng: -9.207594544947501, lat: 38.595963983572702 }, { lng: -9.207576041070681, lat: 38.595847137462798 }, { lng: -9.20749368040781, lat: 38.595573870511402 }, { lng: -9.20739571901696, lat: 38.595324082892603 }, { lng: -9.20729354015293, lat: 38.595053429871797 }, { lng: -9.207240525197371, lat: 38.594861779859002 }, { lng: -9.207181919930299, lat: 38.594703508113298 }, { lng: -9.20713462834663, lat: 38.594588099872603 }, { lng: -9.20702878379892, lat: 38.594371259031199 }, { lng: -9.206994297911599, lat: 38.594298699683598 }, { lng: -9.206964218201859, lat: 38.594221418420297 }, { lng: -9.206953689108049, lat: 38.594130804225202 }, { lng: -9.206943108095951, lat: 38.594029384476499 }, { lng: -9.20691569933903, lat: 38.593923432264098 }, { lng: -9.20681331661509, lat: 38.593638369571401 }, { lng: -9.206718575625141, lat: 38.593396922890598 }, { lng: -9.20666436117228, lat: 38.593232666154698 }, { lng: -9.206616972224531, lat: 38.593064203081802 }, { lng: -9.2065496581831, lat: 38.592729363424397 }, { lng: -9.206476519529209, lat: 38.592358278380402 }, { lng: -9.206443743024771, lat: 38.592199770169799 }, { lng: -9.206406891306809, lat: 38.592075974827999 }, { lng: -9.20636123933787, lat: 38.591970190662799 }, { lng: -9.206280240664681, lat: 38.5917876200987 }, { lng: -9.206237605474939, lat: 38.591684153002902 }, { lng: -9.20621557134268, lat: 38.5915303177499 }, { lng: -9.20617389057063, lat: 38.591382697121297 }, { lng: -9.20612647534908, lat: 38.5912661220827 }, { lng: -9.206060693825529, lat: 38.5911341261194 }, { lng: -9.205983300628979, lat: 38.5909934132046 }, { lng: -9.20593137655881, lat: 38.590874531920399 }, { lng: -9.2058882987441, lat: 38.590741251249902 }, { lng: -9.205865055670451, lat: 38.590606523109798 }, { lng: -9.20581405002125, lat: 38.590449445595702 }, { lng: -9.20574843802091, lat: 38.590282317454303 }, { lng: -9.205703902713759, lat: 38.590151389444401 }, { lng: -9.2056781031598, lat: 38.590052539353799 }, { lng: -9.20564367592238, lat: 38.5898833246127 }, { lng: -9.205606296786989, lat: 38.589716572681198 }, { lng: -9.205582635280621, lat: 38.589607429304799 }, { lng: -9.2055294307248, lat: 38.589502885917099 }, { lng: -9.20545899090162, lat: 38.5893662516769 }, { lng: -9.20536376517475, lat: 38.589198766777201 }, { lng: -9.20516481362835, lat: 38.588856216862098 }, { lng: -9.205072147944611, lat: 38.588652944551903 }, { lng: -9.205030869686439, lat: 38.5885399114931 }, { lng: -9.205006657401141, lat: 38.588439874735997 }, { lng: -9.20498017882672, lat: 38.588295632878697 }, { lng: -9.204938082077931, lat: 38.588173686617601 }, { lng: -9.20491722615761, lat: 38.588098751514202 }, { lng: -9.20487776455818, lat: 38.588000027229498 }, { lng: -9.204783333034859, lat: 38.587785691839798 }, { lng: -9.2046637844758, lat: 38.587456915841301 }, { lng: -9.204603349319139, lat: 38.587274790707397 }, { lng: -9.20454660141224, lat: 38.587040111314899 }, { lng: -9.204515057647811, lat: 38.586964009244099 }, { lng: -9.204457515528031, lat: 38.586876263569302 }, { lng: -9.204400656645999, lat: 38.586780577329797 }, { lng: -9.204338517180821, lat: 38.586584232230599 }, { lng: -9.20416581326527, lat: 38.586061010919899 }, { lng: -9.204100223358751, lat: 38.5858408241359 }, { lng: -9.20405766586523, lat: 38.585742126956497 }, { lng: -9.20401995773593, lat: 38.585660681721599 }, { lng: -9.203905969732959, lat: 38.585458232216503 }, { lng: -9.20380234209091, lat: 38.585265423695098 }, { lng: -9.20374410837027, lat: 38.585131106083203 }, { lng: -9.203692522613499, lat: 38.585034924420199 }, { lng: -9.20365810514115, lat: 38.584965967427202 }, { lng: -9.20363888026024, lat: 38.584900473765899 }, { lng: -9.20359441291202, lat: 38.584773239275698 }, { lng: -9.20354712503122, lat: 38.584665037531799 }, { lng: -9.203470721136171, lat: 38.584535568340698 }, { lng: -9.20337515554661, lat: 38.584298273311099 }, { lng: -9.20330771539164, lat: 38.584154492021703 }, { lng: -9.20325129694168, lat: 38.584041601176502 }, { lng: -9.20318083101408, lat: 38.583902619033701 }, { lng: -9.20312948632707, lat: 38.583760316410299 }, { lng: -9.20304728677309, lat: 38.5835498284114 }, { lng: -9.202943645701421, lat: 38.583325215364098 }, { lng: -9.202854685486219, lat: 38.583169657010103 }, { lng: -9.2028063909816, lat: 38.583093708423696 }, { lng: -9.202743761197191, lat: 38.5830184349226 }, { lng: -9.20260641924957, lat: 38.5828812373544 }, { lng: -9.202455196616659, lat: 38.582728673513301 }, { lng: -9.20232226235113, lat: 38.582579459128503 }, { lng: -9.202221749203019, lat: 38.582464625791303 }, { lng: -9.202177370011359, lat: 38.582389270825701 }, { lng: -9.20207858085155, lat: 38.582189655894503 }, { lng: -9.20196255202702, lat: 38.581949577434102 }, { lng: -9.20184134437309, lat: 38.581716204886199 }, { lng: -9.20166162125952, lat: 38.581390769152698 }, { lng: -9.201275411063349, lat: 38.580714556395201 }, { lng: -9.201218975483, lat: 38.580600491783102 }, { lng: -9.201166800525639, lat: 38.580463687072402 }, { lng: -9.20112023093742, lat: 38.580348988282097 }, { lng: -9.20100836560912, lat: 38.580180479369702 }, { lng: -9.20096610683397, lat: 38.5801009662556 }, { lng: -9.20090871460941, lat: 38.580022669463801 }, { lng: -9.20083903596143, lat: 38.5799361991293 }, { lng: -9.200795760740069, lat: 38.5798888503599 }, { lng: -9.200777071863721, lat: 38.579859207808802 }, { lng: -9.20076448392585, lat: 38.579830676141199 }, { lng: -9.20074674090052, lat: 38.579763997363003 }, { lng: -9.20072722476773, lat: 38.5796782412908 }, { lng: -9.200691687736381, lat: 38.579580108363402 }, { lng: -9.20057686060491, lat: 38.579319742094199 }, { lng: -9.200485954513111, lat: 38.579140414670697 }, { lng: -9.200421972693681, lat: 38.579027585897201 }, { lng: -9.200378462225039, lat: 38.578964750662102 }, { lng: -9.200338160829411, lat: 38.578908998905199 }, { lng: -9.20027814131611, lat: 38.578854595275601 }, { lng: -9.20019726947033, lat: 38.578786695805398 }, { lng: -9.20016163771824, lat: 38.578744048661697 }, { lng: -9.20010176498379, lat: 38.578599027991899 }, { lng: -9.20004377414512, lat: 38.578480200863602 }, { lng: -9.20000012864001, lat: 38.578407727191703 }, { lng: -9.199899500004911, lat: 38.578284511689802 }, { lng: -9.19978380824787, lat: 38.578120363864201 }, { lng: -9.199660970890751, lat: 38.577923216070502 }, { lng: -9.1995502444965, lat: 38.5777380330806 }, { lng: -9.19945393774986, lat: 38.577596943644402 }, { lng: -9.19938834125138, lat: 38.577475754183801 }, { lng: -9.199330248531449, lat: 38.577349814836403 }, { lng: -9.199249325378799, lat: 38.577169670269797 }, { lng: -9.199173551490439, lat: 38.576973446198203 }, { lng: -9.199098279681881, lat: 38.576818925698099 }, { lng: -9.19904365097711, lat: 38.5767251097976 }, { lng: -9.198954529725791, lat: 38.576611789367 }, { lng: -9.19877781540114, lat: 38.5763795547863 }, { lng: -9.19866958547644, lat: 38.576253976096503 }, { lng: -9.19863584900553, lat: 38.576230414591301 }, { lng: -9.198582102504419, lat: 38.576227934836403 }, { lng: -9.198453199336511, lat: 38.575937969622302 }, { lng: -9.198300110478931, lat: 38.5755491339199 }, { lng: -9.198097657659231, lat: 38.575120127134298 }, { lng: -9.19789921255396, lat: 38.574690452930099 }, { lng: -9.1977420857372, lat: 38.574447226090797 }, { lng: -9.197622181049139, lat: 38.574253748908802 }, { lng: -9.19741464777691, lat: 38.573837394700597 }, { lng: -9.197314387060469, lat: 38.573629413018601 }, { lng: -9.19720212891734, lat: 38.573440722987002 }, { lng: -9.19712528206804, lat: 38.573326212105599 }, { lng: -9.19699827894356, lat: 38.573156753903902 }, { lng: -9.196898833590399, lat: 38.573012001025901 }, { lng: -9.19682252614338, lat: 38.572887394196997 }, { lng: -9.196743402747771, lat: 38.572727592275299 }, { lng: -9.196605368910021, lat: 38.572432846109301 }, { lng: -9.196480448949879, lat: 38.572209679409198 }, { lng: -9.19636087773655, lat: 38.571976292066303 }, { lng: -9.19631372117526, lat: 38.571875197743402 }, { lng: -9.19624762576969, lat: 38.571719509992 }, { lng: -9.19618044024773, lat: 38.571591128341097 }, { lng: -9.1955356517102, lat: 38.570389914613301 }, { lng: -9.195138983969841, lat: 38.569611263749799 }, { lng: -9.19502492454134, lat: 38.569392682794302 }, { lng: -9.194921093024419, lat: 38.569159779782197 }, { lng: -9.19480259984636, lat: 38.568904760625102 }, { lng: -9.19462959612444, lat: 38.568501779996097 }, { lng: -9.19442627351637, lat: 38.5680494422189 }, { lng: -9.19428674321642, lat: 38.567760650989399 }, { lng: -9.193976757054809, lat: 38.567186410118801 }, { lng: -9.193613484418821, lat: 38.566499330473597 }, { lng: -9.19346953741546, lat: 38.566221390573503 }, { lng: -9.19316790323067, lat: 38.565598159626198 }, { lng: -9.1930254393535, lat: 38.565311825473302 }, { lng: -9.19292653405865, lat: 38.565093105020502 }, { lng: -9.192756657451071, lat: 38.564752701799499 }, { lng: -9.19265025361762, lat: 38.564538825052303 }, { lng: -9.19252923969403, lat: 38.564267789050398 }, { lng: -9.192374385701539, lat: 38.563918957299101 }, { lng: -9.19229549720801, lat: 38.563719153125803 }, { lng: -9.192215375498799, lat: 38.563544497998997 }, { lng: -9.19191884963438, lat: 38.562954635400601 }, { lng: -9.1917559234439, lat: 38.562618399680403 }, { lng: -9.191613955308529, lat: 38.562318366837999 }, { lng: -9.19146135381785, lat: 38.561958163165997 }, { lng: -9.191288766771001, lat: 38.561541306136803 }, { lng: -9.191189214818881, lat: 38.561285657623799 }, { lng: -9.191107678299201, lat: 38.561108577742097 }, { lng: -9.190847957545779, lat: 38.5606567427185 }, { lng: -9.19077167402158, lat: 38.560532131349298 }, { lng: -9.19071839173338, lat: 38.560419291959498 }, { lng: -9.190675828146221, lat: 38.560309867953102 }, { lng: -9.190551122725561, lat: 38.559833028200202 }, { lng: -9.19033787280598, lat: 38.558966132480201 }, { lng: -9.19018737101441, lat: 38.558333687948597 }, { lng: -9.19014247003313, lat: 38.558174115151203 }, { lng: -9.19007568345798, lat: 38.557969422952297 }, { lng: -9.189993676784001, lat: 38.5577673039163 }, { lng: -9.189862065383419, lat: 38.557491678918701 }, { lng: -9.189752263226691, lat: 38.557256296915199 }, { lng: -9.189632348554991, lat: 38.556956697299697 }, { lng: -9.189502773966639, lat: 38.556717979435803 }, { lng: -9.189336865957779, lat: 38.556387713019902 }, { lng: -9.18919869119029, lat: 38.556078637201303 }, { lng: -9.189102251630411, lat: 38.555822959424397 }, { lng: -9.188891892790529, lat: 38.5551045768553 }, { lng: -9.18879500116712, lat: 38.554708016227103 }, { lng: -9.18867522920914, lat: 38.5542609471267 }, { lng: -9.18853242191398, lat: 38.553689957572097 }, { lng: -9.188414890658249, lat: 38.553137294795697 }, { lng: -9.188322207187451, lat: 38.552620165510397 }, { lng: -9.188193508130849, lat: 38.5520330155625 }, { lng: -9.18812745326634, lat: 38.551665989410701 }, { lng: -9.188082038532039, lat: 38.551470566186197 }, { lng: -9.18798187014022, lat: 38.551060971479302 }, { lng: -9.18792657693521, lat: 38.5508024903896 }, { lng: -9.18786594131659, lat: 38.5504999167919 }, { lng: -9.187821574600241, lat: 38.550321239951103 }, { lng: -9.18755053033814, lat: 38.550377010575602 }, { lng: -9.18715234499366, lat: 38.550453744166198 }, { lng: -9.186837278116791, lat: 38.550511803023397 }, { lng: -9.18675480953852, lat: 38.550528221232597 }, { lng: -9.186492088042421, lat: 38.5505806733849 }, { lng: -9.186095941840071, lat: 38.550648017513801 }, { lng: -9.185331967697991, lat: 38.550797764600297 }, { lng: -9.184977449442201, lat: 38.550864010119497 }, { lng: -9.18416040847239, lat: 38.5510326903131 }, { lng: -9.184036366223451, lat: 38.5510537127861 }, { lng: -9.184162133826121, lat: 38.5513872293049 }, { lng: -9.18433996731204, lat: 38.5519007131264 }, { lng: -9.18455599454871, lat: 38.552515733402103 }, { lng: -9.184781438637399, lat: 38.5531704789977 }, { lng: -9.185043354034651, lat: 38.553934619487997 }, { lng: -9.18518620002599, lat: 38.554361213246203 }, { lng: -9.1854373240333, lat: 38.555077077064198 }, { lng: -9.18567992937686, lat: 38.555782471053497 }, { lng: -9.185760220457359, lat: 38.5560564932887 }, { lng: -9.18585674933864, lat: 38.5563269472446 }, { lng: -9.18594118340067, lat: 38.556554899797099 }, { lng: -9.18609033015291, lat: 38.556971802284899 }, { lng: -9.18626086884605, lat: 38.557486514737903 }, { lng: -9.18630651213735, lat: 38.557626899676201 }, { lng: -9.186498406308409, lat: 38.558189707444001 }, { lng: -9.186606437203499, lat: 38.558524819924102 }, { lng: -9.18625038272917, lat: 38.558700801792199 }, { lng: -9.185647442304861, lat: 38.5589870116304 }, { lng: -9.18481923254736, lat: 38.559386674491698 }, { lng: -9.18462452859694, lat: 38.559487965827699 }, { lng: -9.184456770671749, lat: 38.559863754404603 }, { lng: -9.184015340477361, lat: 38.560031129676098 }, { lng: -9.18334688517599, lat: 38.560318008660801 }, { lng: -9.18327033382795, lat: 38.560639292539904 }, { lng: -9.18310787504697, lat: 38.561520744893301 }, { lng: -9.183008868271409, lat: 38.562072474035297 }, { lng: -9.182792283145391, lat: 38.563184746251501 }, { lng: -9.182727182647129, lat: 38.563551779025197 }, { lng: -9.18267716591823, lat: 38.563788778082703 }, { lng: -9.181545476940039, lat: 38.564240145384602 }, { lng: -9.18074217570361, lat: 38.5645912730158 }, { lng: -9.17912439124947, lat: 38.565267852199099 }, { lng: -9.17848814343893, lat: 38.565525676302499 }, { lng: -9.177104960135621, lat: 38.566123915652199 }, { lng: -9.17635247132689, lat: 38.566429428615997 }, { lng: -9.17513030171418, lat: 38.566929736481796 }, { lng: -9.174283525260989, lat: 38.5672936363259 }, { lng: -9.172927722788749, lat: 38.567869786042799 }, { lng: -9.17220540740078, lat: 38.568201396267199 }, { lng: -9.17070431868386, lat: 38.568881502214403 }, { lng: -9.16999332753927, lat: 38.569180390070699 }, { lng: -9.168286772508351, lat: 38.569905888768197 }, { lng: -9.167375239150269, lat: 38.570312382876899 }, { lng: -9.166153731975591, lat: 38.570859249751003 }, { lng: -9.165456632827791, lat: 38.571161052076597 }, { lng: -9.165166183118931, lat: 38.571295220784201 }, { lng: -9.16406466179633, lat: 38.571729757994099 }, { lng: -9.162844114505649, lat: 38.572219022112598 }, { lng: -9.16208544706994, lat: 38.572373524278298 }, { lng: -9.16105128186145, lat: 38.572593409791303 }, { lng: -9.16041121788383, lat: 38.572729744952703 }, { lng: -9.159725866801461, lat: 38.572892954934602 }, { lng: -9.15835667189261, lat: 38.573245023638101 }, { lng: -9.15802712759449, lat: 38.573350603876797 }, { lng: -9.15709466657685, lat: 38.573647392845501 }, { lng: -9.156765902599609, lat: 38.573751699782697 }, { lng: -9.1570067537039, lat: 38.573977407570901 }, { lng: -9.157313652943079, lat: 38.574264143199301 }, { lng: -9.15745944468202, lat: 38.574397625590102 }, { lng: -9.15760521017233, lat: 38.574529221730103 }, { lng: -9.15778499497643, lat: 38.5748580572726 }, { lng: -9.158086724328649, lat: 38.5753054538215 }, { lng: -9.15834231699904, lat: 38.575703617347003 }, { lng: -9.158687126925271, lat: 38.576266568900103 }, { lng: -9.158869528580039, lat: 38.5766653725059 }, { lng: -9.159021489933769, lat: 38.5770546283172 }, { lng: -9.159136170300069, lat: 38.577395566191797 }, { lng: -9.15927657157077, lat: 38.577689707538802 }, { lng: -9.1594470397482, lat: 38.577959804603999 }, { lng: -9.15951745697536, lat: 38.578117906742101 }, { lng: -9.15967033825976, lat: 38.578490214723601 }, { lng: -9.15996814915983, lat: 38.579103115181198 }, { lng: -9.160139298818921, lat: 38.5794286967255 }, { lng: -9.16044415248234, lat: 38.579915693004203 }, { lng: -9.160737553269801, lat: 38.580403691600203 }, { lng: -9.160932312315341, lat: 38.580782656317503 }, { lng: -9.161187192990949, lat: 38.581401967563401 }, { lng: -9.16139403872565, lat: 38.581919551377801 }, { lng: -9.161698738661579, lat: 38.582579048219699 }, { lng: -9.162174188401369, lat: 38.5836066404189 }, { lng: -9.162439219942771, lat: 38.584139566487302 }, { lng: -9.16300475428608, lat: 38.5852933736221 }, { lng: -9.16345040615678, lat: 38.586264835327597 }, { lng: -9.16396854121685, lat: 38.587360413841402 }, { lng: -9.16424500997358, lat: 38.587976641153297 }, { lng: -9.164677663699671, lat: 38.588567535061699 }, { lng: -9.165411200568521, lat: 38.589538425116103 }, { lng: -9.166023279053279, lat: 38.5903141040477 }, { lng: -9.166560084298879, lat: 38.591041975625402 }, { lng: -9.166864797737, lat: 38.591336636624398 }, { lng: -9.16814003817111, lat: 38.592492067109603 }, { lng: -9.16942326676531, lat: 38.593673172846501 }, { lng: -9.16994722524743, lat: 38.594110637756899 }, { lng: -9.171137243521899, lat: 38.595127887310497 }, { lng: -9.171709256124871, lat: 38.595624823154402 }, { lng: -9.172756597339941, lat: 38.596320925855103 }, { lng: -9.172956401707079, lat: 38.596604614572797 }, { lng: -9.17339907391014, lat: 38.597228621803097 }, { lng: -9.17372908685218, lat: 38.597697608977398 }, { lng: -9.174000202816901, lat: 38.597934985456803 }, { lng: -9.17527771673964, lat: 38.599048792915198 }, { lng: -9.175511883516879, lat: 38.599349999719998 }, { lng: -9.176148991924739, lat: 38.600183949994303 }, { lng: -9.176584012248091, lat: 38.600799184879499 }, { lng: -9.176443295106459, lat: 38.600855574200303 }, { lng: -9.176333125579889, lat: 38.600920962087599 }, { lng: -9.176244286784, lat: 38.600985258918001 }, { lng: -9.176177421056369, lat: 38.601028917883198 }, { lng: -9.176137179094461, lat: 38.601127462370201 }, { lng: -9.176100656960051, lat: 38.601316145016497 }, { lng: -9.17608013205858, lat: 38.601468020560397 }, { lng: -9.17604831751385, lat: 38.601673056745298 }, { lng: -9.176037175328871, lat: 38.601862504931397 }, { lng: -9.17602685855004, lat: 38.602022217441302 }, { lng: -9.176058457793671, lat: 38.602285600045299 }, { lng: -9.17607619055344, lat: 38.6023766005871 }, { lng: -9.176057071965459, lat: 38.602451177345998 }, { lng: -9.175983824083341, lat: 38.6025459641249 }, { lng: -9.175885265656211, lat: 38.6025810720949 }, { lng: -9.175405853442371, lat: 38.602705249327499 }, { lng: -9.17491010757019, lat: 38.602827672031403 }, { lng: -9.174079846857079, lat: 38.603053150050101 }, { lng: -9.173614208977829, lat: 38.6031624224468 }, { lng: -9.17296359351945, lat: 38.603323866624301 }, { lng: -9.172495030028539, lat: 38.603405325752398 }, { lng: -9.17189388581459, lat: 38.603583171380002 }, { lng: -9.17154813157358, lat: 38.603774600984401 }, { lng: -9.17128146993258, lat: 38.603934521292501 }, { lng: -9.17109322494178, lat: 38.604015552977501 }, { lng: -9.1707790920623, lat: 38.604123373694499 }, { lng: -9.17054774501594, lat: 38.604192897921003 }, { lng: -9.17036386462464, lat: 38.604234164309602 }, { lng: -9.17054401613677, lat: 38.6046350407726 }, { lng: -9.17087972640309, lat: 38.605410350697802 }, { lng: -9.17105007224901, lat: 38.605839058876398 }, { lng: -9.171115893527791, lat: 38.606024848457899 }, { lng: -9.171156111766781, lat: 38.6063616613636 }, { lng: -9.17118073736674, lat: 38.606843187842301 }, { lng: -9.17119101904184, lat: 38.607205938250402 }, { lng: -9.171173694756259, lat: 38.607318150925899 }, { lng: -9.171172488513569, lat: 38.607409319276698 }, { lng: -9.171191768390971, lat: 38.607520219929597 }, { lng: -9.17123196135725, lat: 38.607680474688799 }, { lng: -9.17125419600357, lat: 38.607820981019401 }, { lng: -9.171300397040079, lat: 38.607872185301296 }, { lng: -9.17171431449815, lat: 38.608027045192202 }, { lng: -9.17220175332657, lat: 38.608193325989099 }, { lng: -9.173315549424171, lat: 38.608620575714099 }, { lng: -9.17388945837296, lat: 38.608827602264498 }, { lng: -9.17428425924887, lat: 38.608969833425803 }, { lng: -9.174681544328971, lat: 38.6091962688566 }, { lng: -9.17514503585226, lat: 38.609451925377101 }, { lng: -9.175543375029211, lat: 38.609663483408902 }, { lng: -9.17599918156372, lat: 38.609919205860997 }, { lng: -9.17629706860634, lat: 38.610083017758399 }, { lng: -9.176610082171971, lat: 38.610236959016497 }, { lng: -9.17686326881838, lat: 38.610366573687003 }, { lng: -9.177247111822339, lat: 38.610535651712297 }, { lng: -9.17747354266322, lat: 38.610648569625397 }, { lng: -9.17763413934971, lat: 38.610750272508596 }, { lng: -9.17781473519336, lat: 38.610876934384102 }, { lng: -9.17812058690112, lat: 38.611106692029303 }, { lng: -9.178347885945071, lat: 38.6112791434714 }, { lng: -9.178389475613219, lat: 38.611321017741702 }, { lng: -9.178150282686939, lat: 38.611459990636099 }, { lng: -9.17788515310065, lat: 38.611638829019903 }, { lng: -9.177559343181381, lat: 38.611877207395899 }, { lng: -9.177315988528299, lat: 38.612077644115899 }, { lng: -9.177204871807829, lat: 38.612165925208402 }, { lng: -9.17702842229432, lat: 38.612293346128403 }, { lng: -9.176657708587181, lat: 38.612555004785101 }, { lng: -9.176447868357959, lat: 38.612715507311599 }, { lng: -9.17633569964249, lat: 38.612826498065203 }, { lng: -9.17614099349171, lat: 38.613025058196797 }, { lng: -9.175987599817381, lat: 38.6131592937666 }, { lng: -9.175889114731749, lat: 38.613248360923201 }, { lng: -9.175814787907211, lat: 38.613348201589297 }, { lng: -9.17576307231092, lat: 38.613439819977899 }, { lng: -9.175688770846961, lat: 38.613668027277399 }, { lng: -9.17562010925551, lat: 38.613897712932598 }, { lng: -9.1755645225614, lat: 38.614070709907601 }, { lng: -9.175477173315031, lat: 38.6144448649721 }, { lng: -9.17543326976126, lat: 38.614552361398601 }, { lng: -9.17532052343633, lat: 38.614703080760002 }, { lng: -9.17510515668244, lat: 38.615045593801703 }, { lng: -9.174977197545269, lat: 38.615279678760203 }, { lng: -9.174874032408081, lat: 38.615529036601501 }, { lng: -9.174797969002791, lat: 38.6156833896504 }, { lng: -9.174742690395799, lat: 38.615790987077602 }, { lng: -9.174633515226621, lat: 38.6159267197663 }, { lng: -9.17439500207376, lat: 38.616201609867602 }, { lng: -9.17427041623289, lat: 38.6163196398943 }, { lng: -9.174104342790651, lat: 38.616466867266197 }, { lng: -9.17389979478555, lat: 38.616645246767398 }, { lng: -9.173772935753689, lat: 38.616789063005797 }, { lng: -9.17362421049236, lat: 38.616984779562799 }, { lng: -9.17346896724068, lat: 38.617261715179801 }, { lng: -9.17333933558786, lat: 38.6174681594822 }, { lng: -9.17328881853631, lat: 38.617643092905602 }, { lng: -9.17320567005692, lat: 38.617832279709603 }, { lng: -9.173082110578161, lat: 38.618029659022497 }, { lng: -9.173006936400149, lat: 38.618246430293397 }, { lng: -9.172969480407341, lat: 38.618450975714502 }, { lng: -9.172935867047119, lat: 38.618572252044402 }, { lng: -9.172883583586501, lat: 38.618712519225802 }, { lng: -9.172761948320961, lat: 38.618860341528602 }, { lng: -9.17262323271796, lat: 38.619057859517902 }, { lng: -9.1726206887356, lat: 38.619136159029303 }, { lng: -9.17263560590197, lat: 38.619294655752803 }, { lng: -9.172694516114349, lat: 38.619437900167597 }, { lng: -9.17282898919718, lat: 38.619653882952001 }, { lng: -9.172932602807229, lat: 38.619831411702599 }, { lng: -9.1730275467364, lat: 38.619925777104498 }, { lng: -9.173116773882899, lat: 38.619982456892998 }, { lng: -9.173353276714669, lat: 38.6200914168098 }, { lng: -9.173761777303239, lat: 38.620295052948897 }, { lng: -9.174011308693631, lat: 38.620431647504901 }, { lng: -9.174154414388431, lat: 38.620537477652199 }, { lng: -9.174225882371511, lat: 38.620588363909803 }, { lng: -9.17429752596361, lat: 38.6206512292094 }, { lng: -9.174369331168, lat: 38.6207258971179 }, { lng: -9.17443107136385, lat: 38.620802728206201 }, { lng: -9.174490854200769, lat: 38.620919115525801 }, { lng: -9.17450199264028, lat: 38.620990448073599 }, { lng: -9.17451847393678, lat: 38.621081554279399 }, { lng: -9.174511339571239, lat: 38.621374014057601 }, { lng: -9.174512141876789, lat: 38.621604071382002 }, { lng: -9.174509648962481, lat: 38.621780555893501 }, { lng: -9.17452609376333, lat: 38.621869679748102 }, { lng: -9.174547564881671, lat: 38.621956685214997 }, { lng: -9.174541101853061, lat: 38.622034124209698 }, { lng: -9.17452658073659, lat: 38.622077849507598 }, { lng: -9.174479568909369, lat: 38.622145737917897 }, { lng: -9.17438740459812, lat: 38.622235740171298 }, { lng: -9.174324569734051, lat: 38.622305390784597 }, { lng: -9.174232563514471, lat: 38.622414215535699 }, { lng: -9.174176604703121, lat: 38.622475248176997 }, { lng: -9.174147302351789, lat: 38.622497576723198 }, { lng: -9.17410289755925, lat: 38.622531389724799 }, { lng: -9.174024049447469, lat: 38.622581728068198 }, { lng: -9.173886494691279, lat: 38.622677086356397 }, { lng: -9.173681817104219, lat: 38.622816190739002 }, { lng: -9.173522992302161, lat: 38.622925791163503 }, { lng: -9.17337057908755, lat: 38.623050102987598 }, { lng: -9.173314809543591, lat: 38.623123923097701 }, { lng: -9.17323186049607, lat: 38.623279872076203 }, { lng: -9.17316184280789, lat: 38.623416331624597 }, { lng: -9.173089373099749, lat: 38.6235666906557 }, { lng: -9.173054862760759, lat: 38.623633476480798 }, { lng: -9.172942061351749, lat: 38.6238292285216 }, { lng: -9.17288311735763, lat: 38.623945777272702 }, { lng: -9.17282502120705, lat: 38.624033582027799 }, { lng: -9.1727603181004, lat: 38.624101536877902 }, { lng: -9.17268063888188, lat: 38.624189533351903 }, { lng: -9.17257082046239, lat: 38.624321845784898 }, { lng: -9.172465163580821, lat: 38.624439796618098 }, { lng: -9.172345509116029, lat: 38.624550940035498 }, { lng: -9.17227222820078, lat: 38.624644732794899 }, { lng: -9.172134239788029, lat: 38.624766489022697 }, { lng: -9.17204551280642, lat: 38.6248327642476 }, { lng: -9.171956747189141, lat: 38.624895975225897 }, { lng: -9.17190068562533, lat: 38.6249500715235 }, { lng: -9.17185775384096, lat: 38.625038641047901 }, { lng: -9.17179852127167, lat: 38.6251353751016 }, { lng: -9.17174006141501, lat: 38.625206243894397 }, { lng: -9.17170588536279, lat: 38.625240780401697 }, { lng: -9.171646842201071, lat: 38.625263104798897 }, { lng: -9.171561116963639, lat: 38.6252747645187 }, { lng: -9.17142483094181, lat: 38.625283903873601 }, { lng: -9.17124432587204, lat: 38.625300372514197 }, { lng: -9.171118130413131, lat: 38.625308429292197 }, { lng: -9.17105393045216, lat: 38.625323858478197 }, { lng: -9.17099741374081, lat: 38.625354179058 }, { lng: -9.170977804814781, lat: 38.625395970883801 }, { lng: -9.17098537362404, lat: 38.625538495006602 }, { lng: -9.17100051128711, lat: 38.625711944009502 }, { lng: -9.171008555811509, lat: 38.6258318619264 }, { lng: -9.171024787768649, lat: 38.6260334944512 }, { lng: -9.17101837038032, lat: 38.626113902752998 }, { lng: -9.17099917543176, lat: 38.626184422825297 }, { lng: -9.170955934105759, lat: 38.626259213415501 }, { lng: -9.17089595048737, lat: 38.626391624448303 }, { lng: -9.17085173944438, lat: 38.626479299636401 }, { lng: -9.170706430922751, lat: 38.626786501047903 }, { lng: -9.17059984188665, lat: 38.627015528890801 }, { lng: -9.170407964439841, lat: 38.627422319154 }, { lng: -9.170314611844621, lat: 38.627613578627603 }, { lng: -9.170289397804391, lat: 38.627656950479199 }, { lng: -9.170213212451941, lat: 38.627717167842199 }, { lng: -9.16997326125415, lat: 38.627903688448001 }, { lng: -9.16978833639253, lat: 38.628052067543003 }, { lng: -9.169352897238211, lat: 38.628403639386697 }, { lng: -9.169118200235779, lat: 38.628597046058204 }, { lng: -9.168577875856389, lat: 38.629033675781599 }, { lng: -9.168352995780291, lat: 38.6292151962544 }, { lng: -9.16790639292109, lat: 38.629573707581201 }, { lng: -9.16768281633788, lat: 38.629758184272703 }, { lng: -9.16721131190315, lat: 38.630134747189501 }, { lng: -9.16688385535968, lat: 38.630394461914001 }, { lng: -9.16662088371937, lat: 38.630602530721298 }, { lng: -9.166753418729771, lat: 38.630762961462501 }, { lng: -9.166680399045481, lat: 38.630788468668101 }, { lng: -9.166544273652629, lat: 38.630809488817903 }, { lng: -9.16642820206043, lat: 38.630819429305198 }, { lng: -9.16632337879463, lat: 38.630829276641599 }, { lng: -9.16626811400792, lat: 38.630851565865697 }, { lng: -9.16616516242377, lat: 38.6308951711151 }, { lng: -9.166108096353661, lat: 38.630919906527403 }, { lng: -9.16602869081083, lat: 38.630940426136199 }, { lng: -9.16597947573054, lat: 38.630943835997201 }, { lng: -9.16588708736098, lat: 38.6309317720034 }, { lng: -9.165813555316619, lat: 38.630913596208202 }, { lng: -9.16575009103722, lat: 38.6309002840975 }, { lng: -9.16569820535002, lat: 38.630893805913701 }, { lng: -9.165611024537389, lat: 38.630892592711497 }, { lng: -9.165496168581569, lat: 38.630899553411098 }, { lng: -9.165397920365489, lat: 38.630911052515202 }, { lng: -9.1653353927742, lat: 38.6309155650465 }, { lng: -9.165250008881671, lat: 38.630911367585398 }, { lng: -9.165155837944249, lat: 38.6309032795563 }, { lng: -9.16503990286775, lat: 38.630882955094897 }, { lng: -9.164971763322679, lat: 38.6308720249788 }, { lng: -9.16493892444773, lat: 38.6308723146185 }, { lng: -9.16491380610999, lat: 38.630882448557301 }, { lng: -9.164845603360421, lat: 38.630931604071797 }, { lng: -9.164742811631999, lat: 38.631026736013801 }, { lng: -9.16468575734801, lat: 38.631083987700499 }, { lng: -9.164662216327701, lat: 38.631116445709502 }, { lng: -9.164654222082881, lat: 38.631135342012897 }, { lng: -9.16465460009719, lat: 38.631161639330102 }, { lng: -9.16466923780313, lat: 38.631213577387797 }, { lng: -9.16468243153464, lat: 38.631292728724397 }, { lng: -9.16470105278508, lat: 38.631397690555801 }, { lng: -9.164714605600951, lat: 38.631462067406197 }, { lng: -9.16474083408959, lat: 38.631529215036799 }, { lng: -9.16479428466544, lat: 38.6316447666835 }, { lng: -9.164849885562541, lat: 38.631781732064802 }, { lng: -9.16489782379719, lat: 38.6318655358466 }, { lng: -9.16493430301588, lat: 38.631934662156603 }, { lng: -9.16501662544667, lat: 38.632133284803501 }, { lng: -9.165332393709329, lat: 38.632074376585898 }, { lng: -9.16554157293846, lat: 38.632029919319301 }, { lng: -9.165686400450239, lat: 38.631998911121698 }, { lng: -9.16581733020525, lat: 38.631960012816002 }, { lng: -9.166060213164149, lat: 38.631895438609902 }, { lng: -9.16627226951093, lat: 38.631835551864903 }, { lng: -9.16639705524225, lat: 38.631816614842002 }, { lng: -9.16659264723784, lat: 38.6317939858776 }, { lng: -9.16674788068334, lat: 38.631775770378901 }, { lng: -9.16687926622563, lat: 38.631776592119699 }, { lng: -9.167043654232231, lat: 38.631780090178196 }, { lng: -9.167375378409981, lat: 38.631784539100799 }, { lng: -9.16743070699505, lat: 38.6318544942608 }, { lng: -9.16750407010349, lat: 38.631941131282197 }, { lng: -9.167596257522471, lat: 38.632026520840299 }, { lng: -9.168232767467069, lat: 38.632661078842901 }, { lng: -9.16844180921713, lat: 38.632870460143799 }, { lng: -9.168912734283159, lat: 38.633321905847403 }, { lng: -9.169130735987689, lat: 38.633539139879801 }, { lng: -9.16929952136973, lat: 38.633504939697801 }, { lng: -9.169526891743001, lat: 38.633455814686997 }, { lng: -9.169738722145491, lat: 38.633420155160898 }, { lng: -9.16996190678592, lat: 38.633391420852703 }, { lng: -9.169862121205121, lat: 38.633655070099898 }, { lng: -9.169752548857501, lat: 38.633988796259104 }, { lng: -9.16969464869152, lat: 38.634178651856899 }, { lng: -9.16966003346803, lat: 38.634318852649997 }, { lng: -9.169629197029611, lat: 38.634585402039903 }, { lng: -9.169600972980289, lat: 38.634818686984602 }, { lng: -9.16958814434995, lat: 38.634996258925902 }, { lng: -9.1695856460397, lat: 38.635085546624502 }, { lng: -9.169576384217789, lat: 38.635271553563598 }, { lng: -9.16956398779903, lat: 38.635375793034299 }, { lng: -9.16955500977625, lat: 38.635454154695502 }, { lng: -9.16955028129088, lat: 38.635564270597399 }, { lng: -9.169550962191961, lat: 38.635699114141403 }, { lng: -9.16956161994745, lat: 38.636223280971301 }, { lng: -9.16963363156235, lat: 38.636302903203699 }, { lng: -9.16977990372045, lat: 38.636459336926499 }, { lng: -9.169852338461769, lat: 38.636528595184103 }, { lng: -9.16991529141257, lat: 38.636601360465903 }, { lng: -9.169936163578649, lat: 38.636646845966901 }, { lng: -9.169960084386419, lat: 38.636728876865497 }, { lng: -9.169961028914059, lat: 38.6367943547491 }, { lng: -9.16995795763361, lat: 38.636843922288698 }, { lng: -9.169947287471979, lat: 38.636892661784103 }, { lng: -9.16989235019572, lat: 38.637073129137903 }, { lng: -9.16984751883094, lat: 38.637205401557701 }, { lng: -9.169837954517901, lat: 38.637243136994599 }, { lng: -9.16983716363379, lat: 38.637275933069397 }, { lng: -9.16985499931315, lat: 38.637373874664 }, { lng: -9.169864041469619, lat: 38.637387666825603 }, { lng: -9.169930927188769, lat: 38.637462470868797 }, { lng: -9.17017363823925, lat: 38.637775141312801 }, { lng: -9.170424622736739, lat: 38.638088190965099 }, { lng: -9.170434559523009, lat: 38.638116386119002 }, { lng: -9.17012382788525, lat: 38.638215350846501 }, { lng: -9.16995912010359, lat: 38.638270320042402 }, { lng: -9.16980539505097, lat: 38.638306455073 }, { lng: -9.16959495787378, lat: 38.638343989591903 }, { lng: -9.16942733934628, lat: 38.638380158045898 }, { lng: -9.16932090649569, lat: 38.638406415998801 }, { lng: -9.16908561306812, lat: 38.638480925050402 }, { lng: -9.16893982461775, lat: 38.638533741708898 }, { lng: -9.16884273121174, lat: 38.6385544198587 }, { lng: -9.16867999316398, lat: 38.638570725568499 }, { lng: -9.16871889934942, lat: 38.638728108242297 }, { lng: -9.168774855890961, lat: 38.638977045722697 }, { lng: -9.16877434126849, lat: 38.639116852375501 }, { lng: -9.168749670566649, lat: 38.639333257873702 }, { lng: -9.16873848717078, lat: 38.639473703051102 }, { lng: -9.168674629661179, lat: 38.639697396986101 }, { lng: -9.16862786458881, lat: 38.639871303796099 }, { lng: -9.168626078340081, lat: 38.639922843463197 }, { lng: -9.1686387778872, lat: 38.639974888161603 }, { lng: -9.16866455698627, lat: 38.640010327062498 }, { lng: -9.16870029840395, lat: 38.640035777992701 }, { lng: -9.16889760086346, lat: 38.640130321090098 }, { lng: -9.16910653931941, lat: 38.640243500103999 }, { lng: -9.169246103811091, lat: 38.640372154596797 }, { lng: -9.16949267048795, lat: 38.640601471002498 }, { lng: -9.16933635589845, lat: 38.640720863910801 }, { lng: -9.169166397904609, lat: 38.640850284423401 }, { lng: -9.16864833373192, lat: 38.641259963193697 }, { lng: -9.16833252648089, lat: 38.641542366087101 }, { lng: -9.168099734514749, lat: 38.641424172148703 }, { lng: -9.16793201690267, lat: 38.6413425131758 }, { lng: -9.1677582530873, lat: 38.641287574661703 }, { lng: -9.167627944572979, lat: 38.641266928717002 }, { lng: -9.16748391623557, lat: 38.641259284454598 }, { lng: -9.16696629170549, lat: 38.641301068694801 }, { lng: -9.166532488616239, lat: 38.641333642676898 }, { lng: -9.165651831301931, lat: 38.641417365578903 }, { lng: -9.16568537248226, lat: 38.641553719693803 }, { lng: -9.165766597587799, lat: 38.641851074983698 }, { lng: -9.165819336826729, lat: 38.642052112527601 }, { lng: -9.165748920563891, lat: 38.642075526145902 }, { lng: -9.165543721147341, lat: 38.642118957852901 }, { lng: -9.16535242321121, lat: 38.642154337707701 }, { lng: -9.16522936763171, lat: 38.642167761739998 }, { lng: -9.165309720166491, lat: 38.642483955303703 }, { lng: -9.16536146829263, lat: 38.6427840877584 }, { lng: -9.16540861540317, lat: 38.643075799581098 }, { lng: -9.165435547292351, lat: 38.643279591736402 }, { lng: -9.16547264118066, lat: 38.6435273432106 }, { lng: -9.165483533549651, lat: 38.643669842478999 }, { lng: -9.16547757550261, lat: 38.643782853306398 }, { lng: -9.16546190697485, lat: 38.643835416216902 }, { lng: -9.165429774143339, lat: 38.643885245473399 }, { lng: -9.16532922119678, lat: 38.643969907903298 }, { lng: -9.16520153254911, lat: 38.644044269434097 }, { lng: -9.165102730542101, lat: 38.644106576435703 }, { lng: -9.16504406776143, lat: 38.644156636032001 }, { lng: -9.16501430024457, lat: 38.644195546456203 }, { lng: -9.16500248032933, lat: 38.644252036161099 }, { lng: -9.16498893824282, lat: 38.644365119262801 }, { lng: -9.164995786346759, lat: 38.644489815738801 }, { lng: -9.16499903830131, lat: 38.6445804064033 }, { lng: -9.164994770021909, lat: 38.644634942317197 }, { lng: -9.164973092556229, lat: 38.644709449350003 }, { lng: -9.16476622950114, lat: 38.645293367588302 }, { lng: -9.164480774485851, lat: 38.645107622572098 }, { lng: -9.164251645812829, lat: 38.644965065430704 }, { lng: -9.16407679206989, lat: 38.644850681168698 }, { lng: -9.16369277326838, lat: 38.644623732884 }, { lng: -9.163358875707839, lat: 38.644407787433202 }, { lng: -9.163171597415619, lat: 38.644291523158202 }, { lng: -9.16308640720503, lat: 38.644245793916198 }, { lng: -9.163026612129579, lat: 38.644217584040199 }, { lng: -9.16291372606238, lat: 38.6441789445783 }, { lng: -9.162668320890861, lat: 38.644102292126597 }, { lng: -9.16236928118192, lat: 38.644025743563198 }, { lng: -9.161998812079171, lat: 38.643902175709798 }, { lng: -9.16186224494605, lat: 38.644062821676002 }, { lng: -9.16171442193974, lat: 38.644231579956298 }, { lng: -9.161481700290789, lat: 38.644511522274698 }, { lng: -9.16124957623216, lat: 38.644792897447999 }, { lng: -9.161092623534129, lat: 38.644982005835303 }, { lng: -9.160873799535119, lat: 38.644957176750403 }, { lng: -9.16056655024496, lat: 38.6449251978474 }, { lng: -9.160280747362579, lat: 38.644891142644703 }, { lng: -9.1598274765315, lat: 38.6448490938674 }, { lng: -9.15968966763741, lat: 38.645011726356003 }, { lng: -9.159546963708451, lat: 38.6451852994877 }, { lng: -9.15932538272649, lat: 38.645450189227397 }, { lng: -9.15938100050856, lat: 38.645499784750797 }, { lng: -9.15947313276236, lat: 38.645581219255902 }, { lng: -9.159546287230381, lat: 38.6456686735986 }, { lng: -9.15965068282129, lat: 38.645812421139901 }, { lng: -9.159710588996569, lat: 38.645945571107099 }, { lng: -9.159345228391389, lat: 38.646043457178997 }, { lng: -9.15900795721123, lat: 38.646121635829502 }, { lng: -9.15867312846698, lat: 38.646193933306797 }, { lng: -9.15843149507864, lat: 38.646244607251703 }, { lng: -9.15794762663781, lat: 38.646361363463498 }, { lng: -9.15771255928531, lat: 38.646429721416901 }, { lng: -9.1574725761884, lat: 38.646516052329403 }, { lng: -9.157409079634499, lat: 38.646541918077403 }, { lng: -9.157314335231611, lat: 38.646631928469397 }, { lng: -9.157091189259649, lat: 38.646835931939897 }, { lng: -9.156930348994081, lat: 38.646978945231602 }, { lng: -9.15685461394084, lat: 38.647024739853698 }, { lng: -9.156644281438981, lat: 38.647144403926703 }, { lng: -9.15641994603223, lat: 38.6472652764853 }, { lng: -9.15625150390686, lat: 38.6473662907893 }, { lng: -9.15595520121826, lat: 38.647571919228199 }, { lng: -9.15590109726341, lat: 38.647499159248099 }, { lng: -9.155720682286789, lat: 38.647332290109098 }, { lng: -9.15555172077949, lat: 38.647171355917898 }, { lng: -9.155455277531161, lat: 38.647093469122602 }, { lng: -9.155254002163311, lat: 38.647139822979902 }, { lng: -9.15497211009051, lat: 38.647211560831401 }, { lng: -9.154529956596759, lat: 38.647321987852003 }, { lng: -9.154168880785869, lat: 38.647415224512898 }, { lng: -9.153878442932861, lat: 38.647500006722602 }, { lng: -9.153213370683719, lat: 38.647661830367703 }, { lng: -9.15310717844501, lat: 38.647560786962899 }, { lng: -9.15284398468353, lat: 38.647517506702002 }, { lng: -9.15262813534139, lat: 38.647484169689498 }, { lng: -9.152235956656179, lat: 38.6474252555399 }, { lng: -9.15206782269024, lat: 38.647548956769299 }, { lng: -9.15185803921494, lat: 38.647716175031498 }, { lng: -9.15165616363501, lat: 38.647907101525703 }, { lng: -9.151549316525131, lat: 38.6480269353873 }, { lng: -9.151460257883089, lat: 38.648162380056299 }, { lng: -9.151364487159849, lat: 38.648350488788303 }, { lng: -9.151162073270051, lat: 38.648746441632497 }, { lng: -9.15102898633222, lat: 38.649009098796903 }, { lng: -9.151090356636811, lat: 38.649238357372603 }, { lng: -9.151188688427681, lat: 38.649579258882802 }, { lng: -9.15128106969868, lat: 38.649864728343303 }, { lng: -9.151331592809751, lat: 38.650049488077897 }, { lng: -9.15091889380448, lat: 38.650060020475699 }, { lng: -9.15074216250602, lat: 38.650063543494703 }, { lng: -9.150536047865071, lat: 38.650044528940803 }, { lng: -9.150410801622121, lat: 38.650025802519799 }, { lng: -9.1501929825363, lat: 38.649983112593802 }, { lng: -9.150037277769851, lat: 38.649954739128603 }, { lng: -9.149819664567479, lat: 38.649926909879497 }, { lng: -9.14959454491868, lat: 38.649896165616198 }, { lng: -9.14938330280224, lat: 38.649872241897597 }, { lng: -9.14924762843556, lat: 38.649838740761602 }, { lng: -9.149010478791141, lat: 38.6497616241057 }, { lng: -9.148760527987349, lat: 38.649680562723802 }, { lng: -9.148398475222249, lat: 38.649527155219303 }, { lng: -9.148182611918919, lat: 38.649435890640603 }, { lng: -9.147596064715421, lat: 38.649214162693802 }, { lng: -9.14743332154319, lat: 38.649134414816899 }, { lng: -9.147289441350839, lat: 38.649243850036001 }, { lng: -9.147057965978179, lat: 38.649397460175301 }, { lng: -9.14673930952195, lat: 38.649608398185102 }, { lng: -9.146619936214099, lat: 38.649688254195198 }, { lng: -9.146352577093991, lat: 38.6498715452745 }, { lng: -9.14619128356585, lat: 38.649984372855101 }, { lng: -9.14589854242387, lat: 38.650192199770501 }, { lng: -9.14575789072599, lat: 38.650294487047901 }, { lng: -9.14550661190313, lat: 38.650469975697398 }, { lng: -9.14531421374733, lat: 38.650617213326498 }, { lng: -9.14489111494685, lat: 38.650933362460599 }, { lng: -9.144773539653309, lat: 38.651018602221697 }, { lng: -9.144655829316051, lat: 38.651086009033399 }, { lng: -9.14474958747507, lat: 38.651202031692897 }, { lng: -9.14478754649482, lat: 38.651254670314799 }, { lng: -9.144835621233501, lat: 38.651348386995998 }, { lng: -9.144866734666399, lat: 38.651404504229298 }, { lng: -9.144902906713311, lat: 38.6514606722805 }, { lng: -9.14495036396427, lat: 38.651518720851399 }, { lng: -9.145018163067601, lat: 38.6515775906106 }, { lng: -9.14508330304891, lat: 38.651635486151598 }, { lng: -9.14514112348729, lat: 38.651703265482901 }, { lng: -9.14527921941003, lat: 38.651867995760398 }, { lng: -9.14534460256051, lat: 38.6519426465889 }, { lng: -9.145388383832399, lat: 38.652000726785097 }, { lng: -9.14543704709101, lat: 38.652046875082 }, { lng: -9.145547003805991, lat: 38.6521460002377 }, { lng: -9.145656923646991, lat: 38.652243055572697 }, { lng: -9.145707705328009, lat: 38.6523005318641 }, { lng: -9.145768092248909, lat: 38.652371263088803 }, { lng: -9.14582081603622, lat: 38.652436202739899 }, { lng: -9.145863220682759, lat: 38.652486371252003 }, { lng: -9.14588648054362, lat: 38.652530757546202 }, { lng: -9.145898895761629, lat: 38.652604965861102 }, { lng: -9.14590643128229, lat: 38.652691014172703 }, { lng: -9.14591981704254, lat: 38.652744405652797 }, { lng: -9.145930909059309, lat: 38.652773589137503 }, { lng: -9.14596423930948, lat: 38.652806984960002 }, { lng: -9.145997269823461, lat: 38.6528195839498 }, { lng: -9.146060730496901, lat: 38.652839751846102 }, { lng: -9.146198836275399, lat: 38.6528742219569 }, { lng: -9.146288904693501, lat: 38.652907130758301 }, { lng: -9.146395989039609, lat: 38.652973671996101 }, { lng: -9.14650425823667, lat: 38.653043087222699 }, { lng: -9.14657039621914, lat: 38.653073227795403 }, { lng: -9.14665157071688, lat: 38.653103153364398 }, { lng: -9.146802274826021, lat: 38.653175708309703 }, { lng: -9.14692595996487, lat: 38.653262732549003 }, { lng: -9.147067505279489, lat: 38.653361581539798 }, { lng: -9.146990711275681, lat: 38.653463316693902 }, { lng: -9.14690395609019, lat: 38.653583873820303 }, { lng: -9.14685525740769, lat: 38.653666000928297 }, { lng: -9.14681308208025, lat: 38.653721857373498 }, { lng: -9.146733427386881, lat: 38.653799743312398 }, { lng: -9.146629804817531, lat: 38.653880901391503 }, { lng: -9.146542352985019, lat: 38.653952015005999 }, { lng: -9.14648750271629, lat: 38.654005005816103 }, { lng: -9.14646545875315, lat: 38.654046814539797 }, { lng: -9.146456145248759, lat: 38.654103286048802 }, { lng: -9.14645737143996, lat: 38.654149302572499 }, { lng: -9.1464742028522, lat: 38.6541778930928 }, { lng: -9.146511236221031, lat: 38.654205316806497 }, { lng: -9.14655174634291, lat: 38.6542188381042 }, { lng: -9.146669513172441, lat: 38.654236641647699 }, { lng: -9.146781976217779, lat: 38.654244585867701 }, { lng: -9.146819050310031, lat: 38.654274888078398 }, { lng: -9.14686491122572, lat: 38.654309171314097 }, { lng: -9.14692089266806, lat: 38.654336430673098 }, { lng: -9.14696274740138, lat: 38.654346964839398 }, { lng: -9.14705104368819, lat: 38.654344220422097 }, { lng: -9.14717840996931, lat: 38.654325276883498 }, { lng: -9.14726665028398, lat: 38.654318565677201 }, { lng: -9.147377031805901, lat: 38.654309231161101 }, { lng: -9.14746573128541, lat: 38.654505555546002 }, { lng: -9.147536983987999, lat: 38.654678696012702 }, { lng: -9.14758104933745, lat: 38.6548456837766 }, { lng: -9.147662517702519, lat: 38.655074853418597 }, { lng: -9.14776230631947, lat: 38.655389355129998 }, { lng: -9.147459292459789, lat: 38.655391985987798 }, { lng: -9.147056763067271, lat: 38.655408361969698 }, { lng: -9.14653099782101, lat: 38.655427249244703 }, { lng: -9.14625914889962, lat: 38.655317726147899 }, { lng: -9.14559939684249, lat: 38.655048618280901 }, { lng: -9.145205715573971, lat: 38.6548855589269 }, { lng: -9.144591748895181, lat: 38.654644780974202 }, { lng: -9.14422731964563, lat: 38.654503270938498 }, { lng: -9.144133918448899, lat: 38.654469936269201 }, { lng: -9.143844735898471, lat: 38.654467486505297 }, { lng: -9.143441986689449, lat: 38.654467994283799 }, { lng: -9.143145798016659, lat: 38.654457136711002 }, { lng: -9.142645270298971, lat: 38.654423811631702 }, { lng: -9.14227254508187, lat: 38.654411176639499 }, { lng: -9.1414237489521, lat: 38.654388777573402 }, { lng: -9.14110902485597, lat: 38.654227640493701 }, { lng: -9.14077712100968, lat: 38.654062146568897 }, { lng: -9.1397652067084, lat: 38.653531478113102 }, { lng: -9.13944332617749, lat: 38.653351029121303 }, { lng: -9.139295236654229, lat: 38.653267629889903 }, { lng: -9.13888965865126, lat: 38.652893690835597 }, { lng: -9.139054431353509, lat: 38.652683288736696 }, { lng: -9.1394351452403, lat: 38.652225830642699 }, { lng: -9.139698719861141, lat: 38.652114654444901 }, { lng: -9.140598892685301, lat: 38.651797380387102 }, { lng: -9.14092752050872, lat: 38.651549895315199 }, { lng: -9.14094683475836, lat: 38.650814137965398 }, { lng: -9.14096522475479, lat: 38.650503925636201 }, { lng: -9.14096737336946, lat: 38.650436080611399 }, { lng: -9.140891308502329, lat: 38.6503769229695 }, { lng: -9.140772572828009, lat: 38.650191664385403 }, { lng: -9.140682372681811, lat: 38.649968594780802 }, { lng: -9.14064885814677, lat: 38.649872319671402 }, { lng: -9.140574348559131, lat: 38.649604527092897 }, { lng: -9.140519297458001, lat: 38.649463306521298 }, { lng: -9.14046794566003, lat: 38.649348354676299 }, { lng: -9.140400473604339, lat: 38.649222105985899 }, { lng: -9.14036356979814, lat: 38.649113427143199 }, { lng: -9.140335848063421, lat: 38.649020616059801 }, { lng: -9.140294275818359, lat: 38.648939721986601 }, { lng: -9.14023461098594, lat: 38.648870334636698 }, { lng: -9.140110717188479, lat: 38.648767364443003 }, { lng: -9.13999712225546, lat: 38.648686099387 }, { lng: -9.139877202940561, lat: 38.648595970744303 }, { lng: -9.13979134031654, lat: 38.648501676353099 }, { lng: -9.13967559443563, lat: 38.648357017762002 }, { lng: -9.139504387931421, lat: 38.648345158156502 }, { lng: -9.139161715834151, lat: 38.648310457882403 }, { lng: -9.13883293679358, lat: 38.648275638053597 }, { lng: -9.1386255087398, lat: 38.648252557455699 }, { lng: -9.137832113404791, lat: 38.648177684102002 }, { lng: -9.13751848122812, lat: 38.648141737788698 }, { lng: -9.137435058147799, lat: 38.6481394796416 }, { lng: -9.137355648553079, lat: 38.648145121215201 }, { lng: -9.137272038314331, lat: 38.648179075774003 }, { lng: -9.13713460661249, lat: 38.648282317792997 }, { lng: -9.1370141228902, lat: 38.648423064890501 }, { lng: -9.13691450616354, lat: 38.648527874683197 }, { lng: -9.136804133378339, lat: 38.648627369188098 }, { lng: -9.13667219259446, lat: 38.648762269866701 }, { lng: -9.13651046047492, lat: 38.648935078441497 }, { lng: -9.13641474538221, lat: 38.649047781367898 }, { lng: -9.136347127976849, lat: 38.649133127388502 }, { lng: -9.136297780985659, lat: 38.649218764376698 }, { lng: -9.13625142248709, lat: 38.649337163890102 }, { lng: -9.136205792197419, lat: 38.649499969221097 }, { lng: -9.136177258155771, lat: 38.649628036354798 }, { lng: -9.136104292822569, lat: 38.649881695493001 }, { lng: -9.13593127795701, lat: 38.650464191356498 }, { lng: -9.135726277569759, lat: 38.650648633350698 }, { lng: -9.13558014757651, lat: 38.650795544042097 }, { lng: -9.135488531748759, lat: 38.6509231607169 }, { lng: -9.135431017209079, lat: 38.651057335684897 }, { lng: -9.135384014517159, lat: 38.651171236358202 }, { lng: -9.135356490973709, lat: 38.651281369617401 }, { lng: -9.135322322141, lat: 38.651359939975002 }, { lng: -9.13524499096297, lat: 38.651523107483897 }, { lng: -9.13518242161827, lat: 38.651657320222498 }, { lng: -9.135136477658669, lat: 38.651707259528798 }, { lng: -9.134982512677221, lat: 38.651852797105903 }, { lng: -9.13492145881982, lat: 38.651914755384503 }, { lng: -9.134878301444219, lat: 38.651991424437803 }, { lng: -9.13483988258611, lat: 38.652037332063003 }, { lng: -9.13475600444426, lat: 38.652093536845598 }, { lng: -9.13468016786109, lat: 38.652174361796298 }, { lng: -9.134650539072361, lat: 38.652224155804397 }, { lng: -9.134621787361841, lat: 38.652378439419401 }, { lng: -9.134622650693389, lat: 38.652531025480101 }, { lng: -9.134635341635731, lat: 38.652716121870696 }, { lng: -9.13464142792176, lat: 38.652790384724199 }, { lng: -9.13463641542767, lat: 38.652834567663902 }, { lng: -9.13461054349057, lat: 38.652882351337503 }, { lng: -9.13454099584893, lat: 38.652969152289899 }, { lng: -9.134442646543119, lat: 38.653067097622802 }, { lng: -9.13432657254625, lat: 38.653162135479803 }, { lng: -9.13411740591239, lat: 38.653336790687398 }, { lng: -9.13396136491644, lat: 38.653465950144501 }, { lng: -9.133798837087451, lat: 38.6535912031785 }, { lng: -9.13368629917202, lat: 38.653668374341699 }, { lng: -9.133625989297659, lat: 38.653692670403302 }, { lng: -9.13352155143056, lat: 38.653716356585001 }, { lng: -9.13346907570029, lat: 38.653718245763699 }, { lng: -9.13334585644097, lat: 38.653753982049203 }, { lng: -9.133259383967131, lat: 38.653797331030603 }, { lng: -9.133192038186589, lat: 38.653861321254702 }, { lng: -9.133060702091379, lat: 38.6540407138882 }, { lng: -9.132986129663101, lat: 38.654179533831297 }, { lng: -9.132931856776141, lat: 38.654275122954601 }, { lng: -9.132871011462271, lat: 38.654344009115498 }, { lng: -9.13276881120319, lat: 38.654445952168302 }, { lng: -9.13263271978173, lat: 38.654556023490898 }, { lng: -9.132529972794391, lat: 38.654651487961601 }, { lng: -9.13246780122779, lat: 38.654724352359203 }, { lng: -9.132422039428681, lat: 38.654779242525301 }, { lng: -9.13237739851958, lat: 38.654840067464903 }, { lng: -9.13232236918436, lat: 38.654898005795602 }, { lng: -9.1322777006395, lat: 38.654956852779897 }, { lng: -9.13221115111417, lat: 38.655078217380002 }, { lng: -9.13214772873657, lat: 38.655193157762803 }, { lng: -9.132086218051199, lat: 38.655313578453303 }, { lng: -9.132031494932811, lat: 38.655368544999398 }, { lng: -9.131916466476561, lat: 38.655456724565603 }, { lng: -9.13175513005144, lat: 38.655568993990698 }, { lng: -9.13166299279278, lat: 38.655626711047397 }, { lng: -9.131583932019559, lat: 38.655658106784401 }, { lng: -9.131539838093881, lat: 38.655667397475703 }, { lng: -9.131487992306219, lat: 38.655664870987998 }, { lng: -9.13144746458541, lat: 38.6556503537373 }, { lng: -9.131383796626791, lat: 38.655615224630097 }, { lng: -9.131336521342311, lat: 38.655577976536499 }, { lng: -9.1312717263762, lat: 38.6555527684678 }, { lng: -9.13120220989104, lat: 38.655543451997602 }, { lng: -9.131114999211389, lat: 38.655542213484097 }, { lng: -9.131046733729519, lat: 38.655531898972498 }, { lng: -9.130999788593639, lat: 38.655518428095903 }, { lng: -9.13091325043826, lat: 38.655474579542499 }, { lng: -9.13082439532436, lat: 38.655437773310403 }, { lng: -9.13073371862143, lat: 38.655410264371497 }, { lng: -9.130629864786121, lat: 38.655385117032701 }, { lng: -9.130580110153501, lat: 38.655351041666599 }, { lng: -9.130547878613431, lat: 38.655304746155998 }, { lng: -9.130519239575831, lat: 38.655244548609403 }, { lng: -9.130499515013719, lat: 38.655189225828501 }, { lng: -9.130461379729301, lat: 38.655164781753598 }, { lng: -9.130381439274499, lat: 38.655140694105803 }, { lng: -9.13032069313782, lat: 38.655134276767697 }, { lng: -9.130247701425629, lat: 38.655147780452602 }, { lng: -9.130170861468731, lat: 38.6551652777055 }, { lng: -9.130107730271879, lat: 38.655168792071301 }, { lng: -9.129919577524999, lat: 38.655170397478599 }, { lng: -9.129845203166189, lat: 38.655174992990901 }, { lng: -9.12976153513344, lat: 38.655189041352401 }, { lng: -9.12971590197497, lat: 38.655203479022298 }, { lng: -9.12970366268029, lat: 38.655207368459301 }, { lng: -9.12966882072296, lat: 38.6552463095639 }, { lng: -9.129645475115231, lat: 38.655294070615803 }, { lng: -9.129621853777349, lat: 38.655322017350102 }, { lng: -9.129584336407881, lat: 38.6553421536372 }, { lng: -9.129516216097731, lat: 38.655350662776897 }, { lng: -9.129393851743821, lat: 38.655357651261902 }, { lng: -9.12930639111068, lat: 38.655379568548 }, { lng: -9.129254834847529, lat: 38.6553978416391 }, { lng: -9.12922614203776, lat: 38.655424838804798 }, { lng: -9.1292340936927, lat: 38.655451524796703 }, { lng: -9.129282192360749, lat: 38.6555482176203 }, { lng: -9.12930313847445, lat: 38.655600559370797 }, { lng: -9.129308959923801, lat: 38.655655995361101 }, { lng: -9.12929978373678, lat: 38.655723366747402 }, { lng: -9.12921699315438, lat: 38.6558835113211 }, { lng: -9.129226958128241, lat: 38.655930807544401 }, { lng: -9.12942102302727, lat: 38.656032741975999 }, { lng: -9.12932774150107, lat: 38.656239909367898 }, { lng: -9.12941432715272, lat: 38.656270520554799 }, { lng: -9.12863928487298, lat: 38.657559046388002 }, { lng: -9.12859362608495, lat: 38.657588437988899 }, { lng: -9.128528965153579, lat: 38.657581690929497 }, { lng: -9.1284960311567, lat: 38.657642238196402 }, { lng: -9.128696792384369, lat: 38.657712860007202 }, { lng: -9.128732958809151, lat: 38.657661838133301 }, { lng: -9.12868938285323, lat: 38.657626174425303 }, { lng: -9.12868269610455, lat: 38.657582816479497 }, { lng: -9.129476547424179, lat: 38.656283771867102 }, { lng: -9.130215397735009, lat: 38.656420329700197 }, { lng: -9.13837698002051, lat: 38.659542971448303 }, { lng: -9.138480875686049, lat: 38.659595221877602 }, { lng: -9.138556955959221, lat: 38.659679150945401 }, { lng: -9.138588178065669, lat: 38.659759142669202 }, { lng: -9.138983136775559, lat: 38.663022462102496 }, { lng: -9.138901717309009, lat: 38.663065949227899 }, { lng: -9.138964000993219, lat: 38.663124414882297 }, { lng: -9.13930372883191, lat: 38.6629928571938 }, { lng: -9.139491370055429, lat: 38.663216255462999 }, { lng: -9.139546235016621, lat: 38.663335319963601 }, { lng: -9.139663203196459, lat: 38.663295126049697 }, { lng: -9.139954825568029, lat: 38.663624737851201 }, { lng: -9.13962315202928, lat: 38.663847295029903 }, { lng: -9.13972977851199, lat: 38.663946367594498 }, { lng: -9.139848915321821, lat: 38.6638721029245 }, { lng: -9.14002169142886, lat: 38.664009876932496 }, { lng: -9.13992079943217, lat: 38.664123347722899 }, { lng: -9.140496476266531, lat: 38.6647342552683 }, { lng: -9.140605502601851, lat: 38.664717278379001 }, { lng: -9.14085521324755, lat: 38.664982930184898 }, { lng: -9.140774470591349, lat: 38.665074698150903 }, { lng: -9.14112831703383, lat: 38.665457361816102 }, { lng: -9.1412432429982, lat: 38.669264816970397 }, { lng: -9.14129841229253, lat: 38.6693071309939 }, { lng: -9.14134395255811, lat: 38.671085162485603 }, { lng: -9.14140545799073, lat: 38.671079230171898 }, { lng: -9.14135287609945, lat: 38.669290623721999 }, { lng: -9.141400480038779, lat: 38.669268775296302 }, { lng: -9.14138267573202, lat: 38.6677065087 }, { lng: -9.141847271331439, lat: 38.667702498019104 }, { lng: -9.141892597469541, lat: 38.668606228449399 }, { lng: -9.14195825466123, lat: 38.668609894951899 }, { lng: -9.141898058228429, lat: 38.666647866778398 }, { lng: -9.14208404138612, lat: 38.6666372509113 }, { lng: -9.142093410073571, lat: 38.666551866522397 }, { lng: -9.142257580820219, lat: 38.666559004972797 }, { lng: -9.14226220881768, lat: 38.666511856119897 }, { lng: -9.142131007162231, lat: 38.666504342266499 }, { lng: -9.14206253663926, lat: 38.665532258903099 }, { lng: -9.14232971687578, lat: 38.665478512879801 }, { lng: -9.14293647090091, lat: 38.665486065188603 }, { lng: -9.14296712589357, lat: 38.666505764489997 }, { lng: -9.14299452114877, lat: 38.666501294204402 }, { lng: -9.142974421824221, lat: 38.665464299467601 }, { lng: -9.143263975599909, lat: 38.665457558035797 }, { lng: -9.1433634020807, lat: 38.665533897470702 }, { lng: -9.143636696750599, lat: 38.665531533800397 }, { lng: -9.143681891477851, lat: 38.6667994521151 }, { lng: -9.14373639812206, lat: 38.666794747395102 }, { lng: -9.143702054459149, lat: 38.665513762983601 }, { lng: -9.144516330820389, lat: 38.6655068062555 }, { lng: -9.144539917137021, lat: 38.666406400008498 }, { lng: -9.14461660255872, lat: 38.666410150717603 }, { lng: -9.1445982322196, lat: 38.6654975404156 }, { lng: -9.14573485778411, lat: 38.665487692403197 }, { lng: -9.145952505219769, lat: 38.6654086060027 }, { lng: -9.146477516358861, lat: 38.665828326778701 }, { lng: -9.14560118639718, lat: 38.666470081944603 }, { lng: -9.145667627013109, lat: 38.666529496140399 }, { lng: -9.14653304899733, lat: 38.665887749423398 }, { lng: -9.146864906306879, lat: 38.666159248600003 }, { lng: -9.146572858684941, lat: 38.666380223465602 }, { lng: -9.146617116175261, lat: 38.666422716024599 }, { lng: -9.1469311719286, lat: 38.666214429854598 }, { lng: -9.14716373254727, lat: 38.666426619305902 }, { lng: -9.14730910886821, lat: 38.666656679451599 }, { lng: -9.14603018794136, lat: 38.667820519729197 }, { lng: -9.14611355250886, lat: 38.667922576659699 }, { lng: -9.147645395349439, lat: 38.667249454374897 }, { lng: -9.148336844349339, lat: 38.668216115125603 }, { lng: -9.14560449655051, lat: 38.6694096875082 }, { lng: -9.145671247598569, lat: 38.669499099055599 }, { lng: -9.148392860582989, lat: 38.668309942125397 }, { lng: -9.14921715004059, lat: 38.669462811298601 }, { lng: -9.146944480429941, lat: 38.670476669751899 }, { lng: -9.14701551017259, lat: 38.670551451434598 }, { lng: -9.149283938817669, lat: 38.669554652579102 }, { lng: -9.149890856466531, lat: 38.670415030773903 }, { lng: -9.14807759513689, lat: 38.671220608750801 }, { lng: -9.14813206228215, lat: 38.671310125447597 }, { lng: -9.149959371066011, lat: 38.670506582799597 }, { lng: -9.150367823573591, lat: 38.671088895977498 }, { lng: -9.15042697982552, lat: 38.671063252852399 }, { lng: -9.1504831583736, lat: 38.671127440325002 }, { lng: -9.149507100154199, lat: 38.671576961470201 }, { lng: -9.149558591870459, lat: 38.671651100658003 }, { lng: -9.150479152710121, lat: 38.671250339056897 }, { lng: -9.15104749734893, lat: 38.6720305153789 }, { lng: -9.150067606924541, lat: 38.672485753142603 }, { lng: -9.146044848358271, lat: 38.6730376661164 }, { lng: -9.146082843297931, lat: 38.673230378220097 }, { lng: -9.14854962033721, lat: 38.672894131481797 }, { lng: -9.149154185507101, lat: 38.672807985781297 }, { lng: -9.149764932464681, lat: 38.672719980733 }, { lng: -9.149862333252861, lat: 38.673269153659199 }, { lng: -9.149277662873541, lat: 38.673332161712899 }, { lng: -9.149278718340771, lat: 38.673406650040697 }, { lng: -9.14932616829142, lat: 38.6734062368445 }, { lng: -9.14909189901025, lat: 38.673627434611497 }, { lng: -9.14874445443419, lat: 38.674052292640198 }, { lng: -9.148614547634031, lat: 38.674194039220403 }, { lng: -9.148516114891381, lat: 38.674318932369502 }, { lng: -9.148215467448489, lat: 38.674697893279202 }, { lng: -9.14787852924883, lat: 38.675118519266903 }, { lng: -9.147768410015139, lat: 38.675164963927003 }, { lng: -9.14767292272793, lat: 38.675132733192797 }, { lng: -9.147587890470581, lat: 38.6750838415781 }, { lng: -9.147535620669091, lat: 38.675117350527003 }, { lng: -9.147402787600431, lat: 38.675052387958601 }, { lng: -9.14535187881329, lat: 38.677554102766003 }, { lng: -9.145291613982261, lat: 38.677632000780001 }, { lng: -9.14514402726196, lat: 38.677555903452301 }, { lng: -9.14435261915332, lat: 38.677188932497302 }, { lng: -9.144763970250491, lat: 38.676680838226702 }, { lng: -9.144597820507601, lat: 38.6766083183756 }, { lng: -9.14434051994893, lat: 38.676925823265101 }, { lng: -9.142797000138289, lat: 38.678917936815203 }, { lng: -9.141969650665629, lat: 38.679869383849898 }, { lng: -9.142121416232079, lat: 38.679956617135602 }, { lng: -9.14215896695106, lat: 38.679946387108899 }, { lng: -9.142714191308499, lat: 38.679272752940101 }, { lng: -9.143636153221779, lat: 38.679687789184001 }, { lng: -9.14306884468875, lat: 38.680400894904899 }, { lng: -9.143208618317489, lat: 38.680517782663003 }, { lng: -9.1438379975954, lat: 38.679764681463901 }, { lng: -9.14436882159424, lat: 38.680035547094498 }, { lng: -9.144384061333779, lat: 38.680016141928597 }, { lng: -9.145312384257331, lat: 38.680473803814699 }, { lng: -9.14532700563835, lat: 38.680467374407101 }, { lng: -9.14585192459964, lat: 38.6807259434595 }, { lng: -9.14584683049031, lat: 38.680739497675603 }, { lng: -9.145988642507611, lat: 38.680813036259103 }, { lng: -9.146004947014969, lat: 38.680803884403801 }, { lng: -9.146424787872681, lat: 38.681010216808701 }, { lng: -9.14641639395234, lat: 38.6810265029224 }, { lng: -9.146890239232169, lat: 38.681256597022198 }, { lng: -9.1463761346794, lat: 38.682049249516098 }, { lng: -9.14456515766893, lat: 38.684825857108997 }, { lng: -9.14457234472204, lat: 38.684911455853197 }, { lng: -9.144623227526971, lat: 38.684958577605897 }, { lng: -9.144714108108269, lat: 38.684964635695401 }, { lng: -9.14581579367476, lat: 38.685413139926098 }, { lng: -9.146200657115219, lat: 38.685566451520501 }, { lng: -9.14617809150722, lat: 38.685611954185603 }, { lng: -9.14588481397946, lat: 38.686085429873103 }, { lng: -9.14570818891641, lat: 38.686371699102999 }, { lng: -9.14567748115968, lat: 38.686517081801 }, { lng: -9.14562285693996, lat: 38.686514494782998 }, { lng: -9.1456364349655, lat: 38.686694804182601 }, { lng: -9.14567666080158, lat: 38.686695175609799 }, { lng: -9.145690256558339, lat: 38.686672809207003 }, { lng: -9.146197094365901, lat: 38.686779031298798 }, { lng: -9.146927812227601, lat: 38.68675467456 }, { lng: -9.147134619627909, lat: 38.686798907424901 }, { lng: -9.14714552601616, lat: 38.686855383521497 }, { lng: -9.14689481242284, lat: 38.686908092680198 }, { lng: -9.146249158712211, lat: 38.6869091888505 }, { lng: -9.146241304421279, lat: 38.687110226418298 }, { lng: -9.145483054554971, lat: 38.686836745870202 }, { lng: -9.14545118556603, lat: 38.686858912827297 }, { lng: -9.146332261236751, lat: 38.687194740701003 }, { lng: -9.14633417296313, lat: 38.687037264702397 }, { lng: -9.1463983674982, lat: 38.687033556592702 }, { lng: -9.146408173014141, lat: 38.687589617307502 }, { lng: -9.14632390399883, lat: 38.687595754946699 }, { lng: -9.146327693883901, lat: 38.687628147935001 }, { lng: -9.14615375251792, lat: 38.687640644600499 }, { lng: -9.146162589791549, lat: 38.687697139609803 }, { lng: -9.146418548266171, lat: 38.687722211426802 }, { lng: -9.146423705336129, lat: 38.687737211773999 }, { lng: -9.146435383036399, lat: 38.687937445012302 }, { lng: -9.146255920662661, lat: 38.687998906305602 }, { lng: -9.146175100769989, lat: 38.688053652241898 }, { lng: -9.14614991716082, lat: 38.688093595356698 }, { lng: -9.146170062708039, lat: 38.688226376887002 }, { lng: -9.14643034808045, lat: 38.688207543494798 }, { lng: -9.146436846935099, lat: 38.688326212511001 }];

	var moita = exports.moita = [{ lng: -8.97660822522564, lat: 38.680344554173402 }, { lng: -8.97662170860068, lat: 38.680367248142097 }, { lng: -8.97661545605752, lat: 38.6804025137398 }, { lng: -8.976468669224531, lat: 38.680507255704597 }, { lng: -8.97631120803595, lat: 38.680613066232297 }, { lng: -8.976305793541981, lat: 38.680651210141797 }, { lng: -8.976244568828291, lat: 38.680731459104798 }, { lng: -8.976038477440779, lat: 38.680963103519503 }, { lng: -8.97575425195846, lat: 38.681303040308698 }, { lng: -8.975708636486271, lat: 38.681362463452402 }, { lng: -8.97569204567036, lat: 38.681408072637304 }, { lng: -8.97569292245081, lat: 38.681482743788401 }, { lng: -8.975728133827481, lat: 38.681555003830198 }, { lng: -8.97580825051816, lat: 38.681624956722104 }, { lng: -8.97617468099779, lat: 38.681757162317098 }, { lng: -8.97669799382396, lat: 38.681968856156601 }, { lng: -8.97691083915625, lat: 38.682077210456598 }, { lng: -8.9770388979813, lat: 38.682177808687797 }, { lng: -8.977084973860149, lat: 38.682274941239498 }, { lng: -8.97707924398591, lat: 38.682461537043203 }, { lng: -8.97701500937613, lat: 38.682843396862701 }, { lng: -8.97688657694628, lat: 38.683385436649701 }, { lng: -8.97684520596958, lat: 38.683688400311397 }, { lng: -8.976853044601169, lat: 38.684129915366398 }, { lng: -8.97686832033021, lat: 38.684529940717098 }, { lng: -8.9768938922186, lat: 38.684681085618301 }, { lng: -8.977087952647899, lat: 38.685214487132399 }, { lng: -8.97723819377409, lat: 38.685646954398102 }, { lng: -8.97750984968768, lat: 38.686269150944497 }, { lng: -8.97778705530073, lat: 38.686922387964003 }, { lng: -8.977966049101219, lat: 38.687306903047698 }, { lng: -8.97824156303883, lat: 38.687806652622299 }, { lng: -8.978536324215829, lat: 38.688349772872201 }, { lng: -8.979022402584629, lat: 38.689229571294398 }, { lng: -8.979336683364339, lat: 38.689652470400297 }, { lng: -8.97966424138097, lat: 38.690070944148701 }, { lng: -8.980421288345569, lat: 38.691031736458598 }, { lng: -8.98106832836735, lat: 38.691872977954198 }, { lng: -8.98135851776639, lat: 38.692268931922598 }, { lng: -8.98163996917134, lat: 38.692596485860399 }, { lng: -8.98200928777862, lat: 38.692967091902602 }, { lng: -8.982908436208101, lat: 38.693866933364603 }, { lng: -8.98411523886392, lat: 38.6950711525974 }, { lng: -8.984936883829031, lat: 38.695896501672401 }, { lng: -8.98590074160154, lat: 38.696867188638699 }, { lng: -8.98780921285457, lat: 38.696859722385 }, { lng: -8.98996976305285, lat: 38.696833527710197 }, { lng: -8.992293993831, lat: 38.696816447957303 }, { lng: -8.9967044900277, lat: 38.696781116871797 }, { lng: -8.99752742502187, lat: 38.696774488609599 }, { lng: -9.00093261463341, lat: 38.696350625804797 }, { lng: -9.004480753560509, lat: 38.695831917482899 }, { lng: -9.00971372574678, lat: 38.694950868779102 }, { lng: -9.012546366087641, lat: 38.694481424020502 }, { lng: -9.014047336582189, lat: 38.694233743705503 }, { lng: -9.015964875454889, lat: 38.693914160756997 }, { lng: -9.01766866820051, lat: 38.693571396023202 }, { lng: -9.020092774897879, lat: 38.693070630736401 }, { lng: -9.02267979439212, lat: 38.692548762105801 }, { lng: -9.025610746823229, lat: 38.6919308800802 }, { lng: -9.029468137997769, lat: 38.691064230977197 }, { lng: -9.03038827391708, lat: 38.690830795455398 }, { lng: -9.0314513865648, lat: 38.6904877982602 }, { lng: -9.03251448736988, lat: 38.6901172234707 }, { lng: -9.03241812515261, lat: 38.684768248549098 }, { lng: -9.033194326894209, lat: 38.684474464247103 }, { lng: -9.034119843005859, lat: 38.684119170019798 }, { lng: -9.034654383190571, lat: 38.684025064993797 }, { lng: -9.03532428065447, lat: 38.683906660097598 }, { lng: -9.03624445830715, lat: 38.683703536209201 }, { lng: -9.036890437997579, lat: 38.683538381722599 }, { lng: -9.037455503729459, lat: 38.683382219649602 }, { lng: -9.0381465702692, lat: 38.6831613869726 }, { lng: -9.03863404286421, lat: 38.682994746160297 }, { lng: -9.03898063154762, lat: 38.682829101929599 }, { lng: -9.039614067929231, lat: 38.682509452413903 }, { lng: -9.040282182784621, lat: 38.682142506036797 }, { lng: -9.041572072371791, lat: 38.681362120267202 }, { lng: -9.042417647910501, lat: 38.680844698002502 }, { lng: -9.042746392323229, lat: 38.680659906970597 }, { lng: -9.04219390773015, lat: 38.679711529022399 }, { lng: -9.04279838343183, lat: 38.679476219383197 }, { lng: -9.043001523922189, lat: 38.679391763685899 }, { lng: -9.04324326249364, lat: 38.679279443687399 }, { lng: -9.04349499500136, lat: 38.679139480921201 }, { lng: -9.04375344205225, lat: 38.678967577920197 }, { lng: -9.044200447975159, lat: 38.678667185554801 }, { lng: -9.044342076922341, lat: 38.678580505226897 }, { lng: -9.044506044348291, lat: 38.678461852411303 }, { lng: -9.044718915474141, lat: 38.678302736187398 }, { lng: -9.04495818169339, lat: 38.678140795151897 }, { lng: -9.045346173263651, lat: 38.677890586280199 }, { lng: -9.04524169216065, lat: 38.677707822714503 }, { lng: -9.045197950030589, lat: 38.677448552445902 }, { lng: -9.045161931810551, lat: 38.677245884929803 }, { lng: -9.045146308078021, lat: 38.6771286343442 }, { lng: -9.045148296945721, lat: 38.676851086871501 }, { lng: -9.04513940218969, lat: 38.676278069065603 }, { lng: -9.04513791162864, lat: 38.676160707340998 }, { lng: -9.045123811448081, lat: 38.675720151287301 }, { lng: -9.04527855650276, lat: 38.675703726326702 }, { lng: -9.045408626615369, lat: 38.675684785840403 }, { lng: -9.04547718298385, lat: 38.6756718190911 }, { lng: -9.04550674749556, lat: 38.6756425745751 }, { lng: -9.045594428717949, lat: 38.6754622709459 }, { lng: -9.045664353724501, lat: 38.675286339558703 }, { lng: -9.04569112151464, lat: 38.675177132966901 }, { lng: -9.04577711716497, lat: 38.674999727606902 }, { lng: -9.04581982431848, lat: 38.674897242674902 }, { lng: -9.045857316917109, lat: 38.674800294205298 }, { lng: -9.04587793287843, lat: 38.674623484574497 }, { lng: -9.04590906688883, lat: 38.674442092445403 }, { lng: -9.04593426499968, lat: 38.6743452417033 }, { lng: -9.04596667775246, lat: 38.674264908466903 }, { lng: -9.04587739905565, lat: 38.674003291324702 }, { lng: -9.04581727835382, lat: 38.673847745503998 }, { lng: -9.045603783001249, lat: 38.673812120106099 }, { lng: -9.045458713809889, lat: 38.673762177397599 }, { lng: -9.04530817943135, lat: 38.673689938184602 }, { lng: -9.04508986470899, lat: 38.673554997447603 }, { lng: -9.044940605500701, lat: 38.673447074310502 }, { lng: -9.044875835043941, lat: 38.673341286619497 }, { lng: -9.04485180952053, lat: 38.673105373197501 }, { lng: -9.044836435123999, lat: 38.672799764036803 }, { lng: -9.04481632824667, lat: 38.672736417039999 }, { lng: -9.04480637644591, lat: 38.672649479079801 }, { lng: -9.04488270093014, lat: 38.672271808024803 }, { lng: -9.04494126711065, lat: 38.672033811186601 }, { lng: -9.045052438809391, lat: 38.671776220684201 }, { lng: -9.04523214060543, lat: 38.671639423581901 }, { lng: -9.045598654264721, lat: 38.671383889981001 }, { lng: -9.045787025399489, lat: 38.671242796929 }, { lng: -9.04597159610155, lat: 38.671082629954199 }, { lng: -9.04605031503989, lat: 38.671047338281497 }, { lng: -9.046157099213399, lat: 38.671005066949597 }, { lng: -9.04625876454304, lat: 38.670967069250501 }, { lng: -9.046388659778099, lat: 38.670939761524899 }, { lng: -9.046467928486329, lat: 38.670929497632102 }, { lng: -9.046557428935071, lat: 38.670910876315503 }, { lng: -9.04666975156753, lat: 38.6708657561663 }, { lng: -9.046751912465171, lat: 38.670820882342703 }, { lng: -9.04683562878386, lat: 38.670754021274199 }, { lng: -9.046970531391819, lat: 38.6705651529916 }, { lng: -9.04708820370371, lat: 38.670412268372999 }, { lng: -9.0470576089893, lat: 38.670355844382797 }, { lng: -9.046974158621749, lat: 38.670154993624301 }, { lng: -9.046930845508051, lat: 38.670073898752101 }, { lng: -9.046898462078721, lat: 38.670021636880001 }, { lng: -9.04681597993339, lat: 38.6698963475203 }, { lng: -9.04661185675265, lat: 38.669630142008899 }, { lng: -9.04653469719476, lat: 38.6695077853106 }, { lng: -9.04649750430479, lat: 38.669492854043497 }, { lng: -9.04640614370906, lat: 38.669365112372603 }, { lng: -9.04628793296461, lat: 38.669204432592799 }, { lng: -9.04625338088429, lat: 38.669116428362599 }, { lng: -9.04621626031731, lat: 38.669107079604402 }, { lng: -9.04595815091297, lat: 38.668606544682703 }, { lng: -9.045881738522811, lat: 38.668416620700299 }, { lng: -9.045709120348601, lat: 38.667988649463901 }, { lng: -9.04563378066695, lat: 38.667882944548502 }, { lng: -9.04559007719474, lat: 38.667771408700403 }, { lng: -9.04556246051111, lat: 38.667677763359897 }, { lng: -9.045577214074759, lat: 38.6675726139215 }, { lng: -9.04592854988968, lat: 38.667521503871903 }, { lng: -9.046297783834101, lat: 38.66746340153 }, { lng: -9.046580877603169, lat: 38.667434975730401 }, { lng: -9.047177211861079, lat: 38.667381755417097 }, { lng: -9.04745156884989, lat: 38.667353393990801 }, { lng: -9.047947732006129, lat: 38.667314817044897 }, { lng: -9.048019741432039, lat: 38.667308768794001 }, { lng: -9.048077639489531, lat: 38.667284886931803 }, { lng: -9.04828025891541, lat: 38.667027745246898 }, { lng: -9.048391099485769, lat: 38.666880585066799 }, { lng: -9.0485120297941, lat: 38.6666959661598 }, { lng: -9.048612128016231, lat: 38.666526642752103 }, { lng: -9.048635906103071, lat: 38.666462948329901 }, { lng: -9.048648540166971, lat: 38.666345565997602 }, { lng: -9.0486578811617, lat: 38.666248837791301 }, { lng: -9.04869056616764, lat: 38.666190393765703 }, { lng: -9.048798739137871, lat: 38.666113603056303 }, { lng: -9.0489123699356, lat: 38.666050558078702 }, { lng: -9.04909271116048, lat: 38.665974561302797 }, { lng: -9.04919436551763, lat: 38.665936470162798 }, { lng: -9.04925721625589, lat: 38.6658918377003 }, { lng: -9.049293541224831, lat: 38.665838947260099 }, { lng: -9.04927534744057, lat: 38.6657908077215 }, { lng: -9.0490038028668, lat: 38.665355060271402 }, { lng: -9.04880658049888, lat: 38.665070784694898 }, { lng: -9.048649558719511, lat: 38.6647765537138 }, { lng: -9.04851166696743, lat: 38.664450375383502 }, { lng: -9.048508337077481, lat: 38.664324653135601 }, { lng: -9.048560134603459, lat: 38.664251099030999 }, { lng: -9.048631808268381, lat: 38.664213243932799 }, { lng: -9.04877717932354, lat: 38.664152742211002 }, { lng: -9.04900292711481, lat: 38.664043238779001 }, { lng: -9.04934065476996, lat: 38.663886014270901 }, { lng: -9.04950684824875, lat: 38.663800216160602 }, { lng: -9.049520954579931, lat: 38.663663453116499 }, { lng: -9.049553774340501, lat: 38.663471325196198 }, { lng: -9.04956716321481, lat: 38.663395103441196 }, { lng: -9.04957167167427, lat: 38.663334357679503 }, { lng: -9.049571135461781, lat: 38.663147982389603 }, { lng: -9.049570934521631, lat: 38.662853605533897 }, { lng: -9.04956950864533, lat: 38.662741829899602 }, { lng: -9.049581317490089, lat: 38.6625595069547 }, { lng: -9.04958747552385, lat: 38.662493156080799 }, { lng: -9.049622038633149, lat: 38.662437666096103 }, { lng: -9.0495369548089, lat: 38.6622434938241 }, { lng: -9.04951433612298, lat: 38.662127737833401 }, { lng: -9.04950324526653, lat: 38.661924783966199 }, { lng: -9.04949066423872, lat: 38.661757879251198 }, { lng: -9.049511443716041, lat: 38.6617300618257 }, { lng: -9.049542836689261, lat: 38.661704947418798 }, { lng: -9.04979549388433, lat: 38.661647675400303 }, { lng: -9.05026783653444, lat: 38.6615514547629 }, { lng: -9.050508417499559, lat: 38.661506772727201 }, { lng: -9.05062514095694, lat: 38.661411984580603 }, { lng: -9.05062320285227, lat: 38.661395424126297 }, { lng: -9.05060175267935, lat: 38.661362264515901 }, { lng: -9.050506288441831, lat: 38.661191862737297 }, { lng: -9.050484408616519, lat: 38.661134022695997 }, { lng: -9.05050775238951, lat: 38.661027544961399 }, { lng: -9.05055971422731, lat: 38.6606792503298 }, { lng: -9.050583596014, lat: 38.660480255073303 }, { lng: -9.05059836903755, lat: 38.660252238949703 }, { lng: -9.050584194855031, lat: 38.660104619475597 }, { lng: -9.05054236114921, lat: 38.6599958595638 }, { lng: -9.050504350794711, lat: 38.659916079081903 }, { lng: -9.050439884700159, lat: 38.659833712687202 }, { lng: -9.05026710053469, lat: 38.659672117036699 }, { lng: -9.05004070329473, lat: 38.659288714390897 }, { lng: -9.049968894439539, lat: 38.659180189233602 }, { lng: -9.04994644494821, lat: 38.659068573829202 }, { lng: -9.049914716207081, lat: 38.658932086130797 }, { lng: -9.049874031038449, lat: 38.6587599049614 }, { lng: -9.04982095334806, lat: 38.658607002585299 }, { lng: -9.04975059429114, lat: 38.658468199851697 }, { lng: -9.04964344839313, lat: 38.6583542790435 }, { lng: -9.049454103049809, lat: 38.658055622370703 }, { lng: -9.049370112372699, lat: 38.657811895301201 }, { lng: -9.04931379512913, lat: 38.657548762498699 }, { lng: -9.049306643972731, lat: 38.657402436279199 }, { lng: -9.049332413236129, lat: 38.657215860153897 }, { lng: -9.049359806341281, lat: 38.657147999798099 }, { lng: -9.04938984313034, lat: 38.657026242615999 }, { lng: -9.049416408752, lat: 38.656883890539397 }, { lng: -9.049420669125681, lat: 38.656803777601397 }, { lng: -9.049402027666151, lat: 38.656729336264704 }, { lng: -9.049366103826699, lat: 38.656668902667398 }, { lng: -9.04928583138906, lat: 38.656581168095101 }, { lng: -9.04912544614991, lat: 38.6564360437742 }, { lng: -9.049015533185891, lat: 38.656348626706801 }, { lng: -9.048606629479091, lat: 38.656020430576902 }, { lng: -9.04838469540298, lat: 38.655877232719902 }, { lng: -9.048131043712131, lat: 38.655724461102899 }, { lng: -9.04795337920349, lat: 38.655593348977199 }, { lng: -9.04774038515562, lat: 38.655430528923702 }, { lng: -9.04754513293153, lat: 38.6551628099769 }, { lng: -9.047514300724441, lat: 38.655087115109197 }, { lng: -9.047480199929611, lat: 38.654881367106697 }, { lng: -9.047448402602679, lat: 38.6547298321345 }, { lng: -9.047364418994871, lat: 38.6544943889742 }, { lng: -9.047262624414619, lat: 38.654348808547702 }, { lng: -9.047152639292509, lat: 38.654146719783299 }, { lng: -9.04708082062192, lat: 38.6540367542109 }, { lng: -9.046977672525371, lat: 38.653802905368501 }, { lng: -9.04689334141816, lat: 38.653539808971999 }, { lng: -9.04689776928817, lat: 38.653328358524597 }, { lng: -9.04692249069851, lat: 38.653059003527297 }, { lng: -9.046955786925681, lat: 38.652904075447999 }, { lng: -9.047039262544819, lat: 38.652675612760603 }, { lng: -9.047212067495609, lat: 38.652280793286003 }, { lng: -9.04731569224665, lat: 38.652128108864098 }, { lng: -9.047380827919101, lat: 38.651984010781398 }, { lng: -9.04738354474161, lat: 38.6517823887974 }, { lng: -9.04735053565456, lat: 38.651670769686703 }, { lng: -9.047279790793709, lat: 38.651509810301 }, { lng: -9.047037437259821, lat: 38.650970238183298 }, { lng: -9.04683789570203, lat: 38.650481586825201 }, { lng: -9.046754850538861, lat: 38.650184070310097 }, { lng: -9.04663117589533, lat: 38.649555018442001 }, { lng: -9.046574601720261, lat: 38.649261351335703 }, { lng: -9.046520470119111, lat: 38.649006219527799 }, { lng: -9.04647410982982, lat: 38.648820207859004 }, { lng: -9.046403748146441, lat: 38.648589519008603 }, { lng: -9.04634383512871, lat: 38.6482047155164 }, { lng: -9.046316387309361, lat: 38.648033420275397 }, { lng: -9.04631528849719, lat: 38.647947041725402 }, { lng: -9.046321581058621, lat: 38.647854752045198 }, { lng: -9.046343122228789, lat: 38.647796209055599 }, { lng: -9.04638431079236, lat: 38.647756252101097 }, { lng: -9.04649814201013, lat: 38.6477018555521 }, { lng: -9.046666950636579, lat: 38.647635135325899 }, { lng: -9.046790043794831, lat: 38.6476003208085 }, { lng: -9.04693286630325, lat: 38.647589910664699 }, { lng: -9.0471964839022, lat: 38.647607756053397 }, { lng: -9.047439503829001, lat: 38.647640802576298 }, { lng: -9.047808707952511, lat: 38.647652056987702 }, { lng: -9.047984469745259, lat: 38.647652933593797 }, { lng: -9.04811663054177, lat: 38.647635598033801 }, { lng: -9.04856149979322, lat: 38.647508621605098 }, { lng: -9.04868168427128, lat: 38.647484257375197 }, { lng: -9.048906218368581, lat: 38.647463847687298 }, { lng: -9.049137563461329, lat: 38.647437355150601 }, { lng: -9.049374350139489, lat: 38.647413968745099 }, { lng: -9.049566531207221, lat: 38.647392272630498 }, { lng: -9.049965888765531, lat: 38.64734463624 }, { lng: -9.05007228645345, lat: 38.647311103062599 }, { lng: -9.050057815248829, lat: 38.647212129843602 }, { lng: -9.05005064075263, lat: 38.647126791648397 }, { lng: -9.050053211857829, lat: 38.647013450327698 }, { lng: -9.050060485333089, lat: 38.646863140072497 }, { lng: -9.05005811647872, lat: 38.646758575270702 }, { lng: -9.05004801135142, lat: 38.646605969963403 }, { lng: -9.050039013419919, lat: 38.6464591202189 }, { lng: -9.05002057348066, lat: 38.646301265487999 }, { lng: -9.04998879416519, lat: 38.646196121376903 }, { lng: -9.049911271590929, lat: 38.646034677880998 }, { lng: -9.04984168748296, lat: 38.6459290192848 }, { lng: -9.049708544441639, lat: 38.645774314445099 }, { lng: -9.04971305159415, lat: 38.645641593341402 }, { lng: -9.049720152298489, lat: 38.645486688519803 }, { lng: -9.04971504859412, lat: 38.645248649495102 }, { lng: -9.04968522705405, lat: 38.645062867034802 }, { lng: -9.049642945484541, lat: 38.644872948404398 }, { lng: -9.04961000731033, lat: 38.6446863841104 }, { lng: -9.04960353548568, lat: 38.644593112361903 }, { lng: -9.04952728224826, lat: 38.644521916530898 }, { lng: -9.04945503184571, lat: 38.644441049782799 }, { lng: -9.049376162154431, lat: 38.644326725803801 }, { lng: -9.0493507539414, lat: 38.644243870628102 }, { lng: -9.049316659257331, lat: 38.644119560888697 }, { lng: -9.04928375767447, lat: 38.643944252643003 }, { lng: -9.049230027982579, lat: 38.6437210955065 }, { lng: -9.04918932146599, lat: 38.643555396874703 }, { lng: -9.04917606512784, lat: 38.643335164736698 }, { lng: -9.049211216858311, lat: 38.643218326219497 }, { lng: -9.04926288782843, lat: 38.643126938472399 }, { lng: -9.04934899294522, lat: 38.643016097465001 }, { lng: -9.04948221877236, lat: 38.642916056360399 }, { lng: -9.04962541647639, lat: 38.642814402005797 }, { lng: -9.049734447303299, lat: 38.642744817216297 }, { lng: -9.04975971684471, lat: 38.642682010569501 }, { lng: -9.049774084076279, lat: 38.642601728156897 }, { lng: -9.049755482806781, lat: 38.642547829225599 }, { lng: -9.049687361272269, lat: 38.642412067611602 }, { lng: -9.049600914319059, lat: 38.642244478156996 }, { lng: -9.04935510720993, lat: 38.641801772641699 }, { lng: -9.0490884621316, lat: 38.641355444545198 }, { lng: -9.04893030492082, lat: 38.641184545267599 }, { lng: -9.048806527295181, lat: 38.641061381469797 }, { lng: -9.04877256149034, lat: 38.641027509523802 }, { lng: -9.048604283551841, lat: 38.640846507206099 }, { lng: -9.048407522298611, lat: 38.640637708853703 }, { lng: -9.04832547215994, lat: 38.640616284676597 }, { lng: -9.04804420678391, lat: 38.640590560756699 }, { lng: -9.04754871964726, lat: 38.6405904786237 }, { lng: -9.04730359322852, lat: 38.640606451552998 }, { lng: -9.046834148799331, lat: 38.640658224916898 }, { lng: -9.04651544873164, lat: 38.640696748687503 }, { lng: -9.04601783236189, lat: 38.640736758932903 }, { lng: -9.04565028017918, lat: 38.640753683720398 }, { lng: -9.045316196630671, lat: 38.640792324227199 }, { lng: -9.04504093512482, lat: 38.640832577104902 }, { lng: -9.044623289190829, lat: 38.6409299698607 }, { lng: -9.044545484518659, lat: 38.6409350819075 }, { lng: -9.04430055755595, lat: 38.6408672729915 }, { lng: -9.04397177907421, lat: 38.640762912315502 }, { lng: -9.04380258762313, lat: 38.640707840044101 }, { lng: -9.0435648947386, lat: 38.640630871523101 }, { lng: -9.04334238331583, lat: 38.640546490569001 }, { lng: -9.043220713912969, lat: 38.6405072603742 }, { lng: -9.042979408804451, lat: 38.640434822785501 }, { lng: -9.042751419462959, lat: 38.640371292814599 }, { lng: -9.042450997259239, lat: 38.640265177769898 }, { lng: -9.04225916099441, lat: 38.640208839785103 }, { lng: -9.04183932483769, lat: 38.640087342050599 }, { lng: -9.041398287234671, lat: 38.639942230647698 }, { lng: -9.04125375243464, lat: 38.639892822062301 }, { lng: -9.041225081287219, lat: 38.639869351639803 }, { lng: -9.041197935190191, lat: 38.6398116405542 }, { lng: -9.04118656639821, lat: 38.639666162192803 }, { lng: -9.04115694221117, lat: 38.639266975741698 }, { lng: -9.041143663343121, lat: 38.639115652446002 }, { lng: -9.041142743902579, lat: 38.639042878070399 }, { lng: -9.041096024976721, lat: 38.638790745697001 }, { lng: -9.04102280420817, lat: 38.638385867523702 }, { lng: -9.04100033038147, lat: 38.638252359625596 }, { lng: -9.040988624797411, lat: 38.638080219959001 }, { lng: -9.04097181012774, lat: 38.637949643491503 }, { lng: -9.04096776146816, lat: 38.637774469930399 }, { lng: -9.040485130263191, lat: 38.637772365424603 }, { lng: -9.039979571050679, lat: 38.6377553914025 }, { lng: -9.039716077576349, lat: 38.637735097311399 }, { lng: -9.03955708623756, lat: 38.637731916292701 }, { lng: -9.0390649246477, lat: 38.637729789688898 }, { lng: -9.03877537294062, lat: 38.637737978786703 }, { lng: -9.03873225753906, lat: 38.637771010929299 }, { lng: -9.03838390127591, lat: 38.638070704755499 }, { lng: -9.038118465087001, lat: 38.638334086871602 }, { lng: -9.037869671344851, lat: 38.638569230916197 }, { lng: -9.037584928081211, lat: 38.6388045623005 }, { lng: -9.037483690858309, lat: 38.638882542262202 }, { lng: -9.037278965212881, lat: 38.639005915545702 }, { lng: -9.03713052543311, lat: 38.639093184305402 }, { lng: -9.03689750641982, lat: 38.639231633457499 }, { lng: -9.03670968514003, lat: 38.639347491239 }, { lng: -9.03636630585066, lat: 38.639596692762701 }, { lng: -9.036086845257209, lat: 38.639805316751897 }, { lng: -9.035971061049599, lat: 38.639923494459197 }, { lng: -9.03586448853169, lat: 38.640034217959403 }, { lng: -9.03581255323029, lat: 38.640114879645502 }, { lng: -9.035753332295741, lat: 38.640228211205802 }, { lng: -9.0356976283761, lat: 38.640310251325403 }, { lng: -9.03556150016505, lat: 38.6404731790863 }, { lng: -9.035479538439789, lat: 38.640595600308799 }, { lng: -9.03544945890471, lat: 38.640587004430103 }, { lng: -9.035303720978661, lat: 38.640752884086602 }, { lng: -9.034821230017389, lat: 38.640772823160503 }, { lng: -9.034132748001481, lat: 38.640806424111098 }, { lng: -9.03368674504911, lat: 38.640713293846098 }, { lng: -9.03354624252092, lat: 38.640683207510101 }, { lng: -9.033381276995939, lat: 38.640653316474499 }, { lng: -9.03334482682058, lat: 38.640622429089397 }, { lng: -9.03325372810481, lat: 38.640437385680499 }, { lng: -9.033129888704799, lat: 38.6402244871365 }, { lng: -9.03284962679305, lat: 38.639764715897201 }, { lng: -9.03279343296893, lat: 38.639661285117597 }, { lng: -9.032431628744019, lat: 38.639788743160402 }, { lng: -9.032400775346501, lat: 38.6397459236061 }, { lng: -9.03234858919968, lat: 38.639660210387497 }, { lng: -9.03226679429909, lat: 38.639475184726798 }, { lng: -9.03220099986315, lat: 38.6393568731581 }, { lng: -9.032189072186529, lat: 38.6393124676977 }, { lng: -9.032101886990629, lat: 38.639155676772099 }, { lng: -9.03201864742903, lat: 38.639001921802603 }, { lng: -9.031938956107551, lat: 38.638837688350101 }, { lng: -9.03189615341085, lat: 38.6387400085667 }, { lng: -9.0318721727132, lat: 38.638640652792098 }, { lng: -9.03186375961841, lat: 38.638573972171898 }, { lng: -9.031870613566729, lat: 38.6385159976588 }, { lng: -9.031852333900661, lat: 38.638266526414597 }, { lng: -9.03181473728857, lat: 38.637831730183301 }, { lng: -9.031800510338099, lat: 38.637750224597298 }, { lng: -9.031702799929651, lat: 38.637504429804402 }, { lng: -9.03164004655997, lat: 38.637335561958402 }, { lng: -9.03158552867778, lat: 38.6372097776622 }, { lng: -9.03151166752777, lat: 38.637208906317497 }, { lng: -9.03140370204058, lat: 38.637355212972302 }, { lng: -9.03111110435019, lat: 38.637716883020197 }, { lng: -9.031014409827399, lat: 38.6378557179792 }, { lng: -9.03094256630488, lat: 38.638016435499601 }, { lng: -9.030927112778761, lat: 38.638139781740698 }, { lng: -9.030914941892631, lat: 38.638231935778101 }, { lng: -9.030904645732139, lat: 38.638318134606202 }, { lng: -9.030896225199911, lat: 38.638361256881403 }, { lng: -9.03066004085038, lat: 38.638320552036099 }, { lng: -9.03050344816937, lat: 38.638298243211402 }, { lng: -9.030459299589619, lat: 38.638294621020002 }, { lng: -9.030328162800259, lat: 38.638296619535303 }, { lng: -9.030165715849931, lat: 38.6383018288576 }, { lng: -9.030011932811201, lat: 38.638302017994697 }, { lng: -9.029842814374041, lat: 38.638288452059797 }, { lng: -9.02972419728891, lat: 38.638271800015097 }, { lng: -9.029616914230621, lat: 38.638261811638102 }, { lng: -9.02946939591274, lat: 38.638257990304602 }, { lng: -9.029287997797621, lat: 38.638263343612898 }, { lng: -9.02913902737861, lat: 38.638253588563302 }, { lng: -9.029051904585611, lat: 38.638248312310303 }, { lng: -9.02892200013294, lat: 38.638238495640103 }, { lng: -9.02867858187431, lat: 38.638225502349798 }, { lng: -9.02861291251323, lat: 38.638209340131702 }, { lng: -9.028491636454669, lat: 38.638191444257899 }, { lng: -9.028395378968909, lat: 38.638153623722403 }, { lng: -9.02831677138124, lat: 38.6381126989873 }, { lng: -9.028263447445241, lat: 38.638082483199199 }, { lng: -9.02811401427221, lat: 38.638026244249701 }, { lng: -9.02801769454924, lat: 38.637983477546697 }, { lng: -9.0279197801002, lat: 38.637914052774903 }, { lng: -9.027803987272589, lat: 38.637819996969498 }, { lng: -9.02774121565872, lat: 38.637750484333097 }, { lng: -9.02763762191063, lat: 38.637630571991302 }, { lng: -9.027494652425631, lat: 38.637484564252901 }, { lng: -9.02731104828195, lat: 38.637321752507098 }, { lng: -9.02721838882352, lat: 38.637268144771298 }, { lng: -9.02711467692103, lat: 38.637240200737601 }, { lng: -9.027066161865109, lat: 38.637236248505097 }, { lng: -9.027001873270731, lat: 38.637044783194099 }, { lng: -9.02694852288939, lat: 38.636882777133501 }, { lng: -9.026915298723781, lat: 38.636778538266597 }, { lng: -9.02689428619983, lat: 38.636668528304497 }, { lng: -9.026881717926861, lat: 38.636516659078303 }, { lng: -9.02688375586459, lat: 38.636431248800697 }, { lng: -9.02688998774387, lat: 38.636331660205798 }, { lng: -9.02692282200778, lat: 38.636183139202899 }, { lng: -9.02696174451515, lat: 38.636025204176903 }, { lng: -9.026974250515901, lat: 38.635940970534598 }, { lng: -9.02699231073289, lat: 38.635823368189897 }, { lng: -9.027008668351771, lat: 38.635679835603199 }, { lng: -9.02706132892933, lat: 38.635425768611299 }, { lng: -9.027085635085569, lat: 38.635321264896099 }, { lng: -9.02710132877019, lat: 38.635244131356899 }, { lng: -9.027095616780329, lat: 38.635034105854302 }, { lng: -9.02710477860921, lat: 38.634921434032002 }, { lng: -9.027131654460129, lat: 38.634782507030103 }, { lng: -9.027166113180391, lat: 38.634635322020202 }, { lng: -9.027194940906959, lat: 38.634524845593297 }, { lng: -9.02724367140952, lat: 38.634426014918397 }, { lng: -9.02732922272545, lat: 38.634259340429502 }, { lng: -9.027367379564589, lat: 38.634168967128602 }, { lng: -9.027327563204929, lat: 38.6341538694709 }, { lng: -9.027162274358769, lat: 38.634105320808402 }, { lng: -9.026889449014989, lat: 38.634035161615799 }, { lng: -9.02666496661818, lat: 38.633973822591798 }, { lng: -9.026452437722369, lat: 38.633885371236097 }, { lng: -9.026330856111681, lat: 38.633832969076401 }, { lng: -9.026091554856761, lat: 38.6337802141814 }, { lng: -9.02576419400798, lat: 38.633702182979498 }, { lng: -9.025620447602011, lat: 38.6336771571873 }, { lng: -9.025549185384779, lat: 38.633672839164703 }, { lng: -9.025487185705151, lat: 38.633665021972298 }, { lng: -9.025368984907381, lat: 38.633635119512803 }, { lng: -9.025093865543271, lat: 38.633509214517296 }, { lng: -9.024978530221331, lat: 38.6334698322337 }, { lng: -9.02473746039011, lat: 38.633404110102497 }, { lng: -9.024342084491741, lat: 38.633332271943601 }, { lng: -9.024222550051819, lat: 38.633315435686498 }, { lng: -9.024084933448311, lat: 38.633303337443799 }, { lng: -9.023907636727071, lat: 38.633267933714698 }, { lng: -9.023747885123219, lat: 38.633221589157102 }, { lng: -9.02371148178992, lat: 38.633212408707401 }, { lng: -9.02351111859376, lat: 38.633141512486397 }, { lng: -9.02329724008937, lat: 38.6330731500395 }, { lng: -9.023118305366131, lat: 38.6330355073543 }, { lng: -9.02300332603823, lat: 38.633024585029197 }, { lng: -9.02289005569274, lat: 38.633021843340799 }, { lng: -9.022765987770621, lat: 38.633009816153297 }, { lng: -9.02256300976855, lat: 38.632978034144102 }, { lng: -9.02230996853957, lat: 38.632927801817203 }, { lng: -9.02199184977875, lat: 38.632862661398804 }, { lng: -9.02200593645976, lat: 38.632776076812398 }, { lng: -9.02204331485348, lat: 38.632622841028997 }, { lng: -9.02205823483804, lat: 38.632519582452602 }, { lng: -9.022061502269681, lat: 38.632403357005401 }, { lng: -9.022044396269759, lat: 38.6321342327821 }, { lng: -9.022036526038111, lat: 38.631989718304503 }, { lng: -9.022019983427469, lat: 38.631868956463499 }, { lng: -9.02200665327905, lat: 38.631775371008899 }, { lng: -9.02198723528541, lat: 38.631672198564203 }, { lng: -9.02193856206641, lat: 38.631525557387498 }, { lng: -9.0219231413814, lat: 38.6313739811633 }, { lng: -9.021914560238731, lat: 38.631293423129399 }, { lng: -9.0218999137278, lat: 38.631204444477 }, { lng: -9.021874580272661, lat: 38.630994841418499 }, { lng: -9.021857445047001, lat: 38.630844269085003 }, { lng: -9.02186509954174, lat: 38.630627298123301 }, { lng: -9.021877156204759, lat: 38.630496859581697 }, { lng: -9.02187479779167, lat: 38.630436434165901 }, { lng: -9.021862243573199, lat: 38.630396260705403 }, { lng: -9.021813285507029, lat: 38.630346819717403 }, { lng: -9.02179466979249, lat: 38.630308947917101 }, { lng: -9.02177857003873, lat: 38.629861011764099 }, { lng: -9.02176785044635, lat: 38.629486450592502 }, { lng: -9.021757897005051, lat: 38.629285016255899 }, { lng: -9.02178011438882, lat: 38.629149633449003 }, { lng: -9.02182934487117, lat: 38.628979821923899 }, { lng: -9.021907806243631, lat: 38.628721956781803 }, { lng: -9.0219097655709, lat: 38.628518088929603 }, { lng: -9.02196724580519, lat: 38.628281731383701 }, { lng: -9.02202149801189, lat: 38.628053682163902 }, { lng: -9.0220516504576, lat: 38.6279290522982 }, { lng: -9.02206443158987, lat: 38.627736907289602 }, { lng: -9.022058355013399, lat: 38.627607774797603 }, { lng: -9.02204638874967, lat: 38.627494096285901 }, { lng: -9.02201916979776, lat: 38.627373324486697 }, { lng: -9.021989062560539, lat: 38.627259784695298 }, { lng: -9.021920101569609, lat: 38.627059970548103 }, { lng: -9.02185887827939, lat: 38.626873160201598 }, { lng: -9.021830289655609, lat: 38.626761948222203 }, { lng: -9.021828649254671, lat: 38.626638550776804 }, { lng: -9.02180082982235, lat: 38.626459772279098 }, { lng: -9.02178577723461, lat: 38.626347284607903 }, { lng: -9.02171321034516, lat: 38.626347836686698 }, { lng: -9.02120763754956, lat: 38.626378887123401 }, { lng: -9.021195435556409, lat: 38.626367176446898 }, { lng: -9.020733742338081, lat: 38.626166746881601 }, { lng: -9.020132278460441, lat: 38.625908095705597 }, { lng: -9.01938813383607, lat: 38.625589004276399 }, { lng: -9.018902079167709, lat: 38.625376948649702 }, { lng: -9.01883542818571, lat: 38.625363309643703 }, { lng: -9.018756888073201, lat: 38.625363905104201 }, { lng: -9.018212914401911, lat: 38.625465226133599 }, { lng: -9.017349310330999, lat: 38.625627062967197 }, { lng: -9.016975563239789, lat: 38.625695111965499 }, { lng: -9.01680293113672, lat: 38.625785236694803 }, { lng: -9.01640960164627, lat: 38.625998008072301 }, { lng: -9.01626739493563, lat: 38.626097449980499 }, { lng: -9.016212075245489, lat: 38.626146513050401 }, { lng: -9.016109189666381, lat: 38.626268178189399 }, { lng: -9.015933737084509, lat: 38.626484164164403 }, { lng: -9.0157943645261, lat: 38.626711589090199 }, { lng: -9.01568463091566, lat: 38.626874742735701 }, { lng: -9.015537459896279, lat: 38.627065470462298 }, { lng: -9.01541884861556, lat: 38.627244100052202 }, { lng: -9.01535672409014, lat: 38.627235019964097 }, { lng: -9.015145448427351, lat: 38.6272176986826 }, { lng: -9.01455571975144, lat: 38.627250705140199 }, { lng: -9.01450601388583, lat: 38.627252247963199 }, { lng: -9.01377618753388, lat: 38.627294416731601 }, { lng: -9.01312631340125, lat: 38.627330119829701 }, { lng: -9.01260920509133, lat: 38.627357615772603 }, { lng: -9.012261019561061, lat: 38.627375458170903 }, { lng: -9.01168507448587, lat: 38.627409338380801 }, { lng: -9.011577411012301, lat: 38.627244400623702 }, { lng: -9.011511654821691, lat: 38.627172646730699 }, { lng: -9.01142468198403, lat: 38.627094031171602 }, { lng: -9.011354909451139, lat: 38.627060236816298 }, { lng: -9.011211391693291, lat: 38.627053030220203 }, { lng: -9.011148083510561, lat: 38.627059359716199 }, { lng: -9.01111369855388, lat: 38.626961342168599 }, { lng: -9.011114558572469, lat: 38.626909358113998 }, { lng: -9.011112750333631, lat: 38.626761276822002 }, { lng: -9.01109560784106, lat: 38.626589804880901 }, { lng: -9.011071370793349, lat: 38.626457300237597 }, { lng: -9.01103749922151, lat: 38.626278834717802 }, { lng: -9.01100247881614, lat: 38.626128754202099 }, { lng: -9.010972832920951, lat: 38.6260519574368 }, { lng: -9.010921697208691, lat: 38.625945774446997 }, { lng: -9.0108800686995, lat: 38.625875102982199 }, { lng: -9.01071262874693, lat: 38.6256195445822 }, { lng: -9.010590074921669, lat: 38.6254291318428 }, { lng: -9.01043090670133, lat: 38.625211882762301 }, { lng: -9.010279759177431, lat: 38.625011778784803 }, { lng: -9.01016697494491, lat: 38.624868768602902 }, { lng: -9.010007823112151, lat: 38.624643227739597 }, { lng: -9.009907073181161, lat: 38.624554536006997 }, { lng: -9.00974976493624, lat: 38.624404742666997 }, { lng: -9.009570405069381, lat: 38.624245023432302 }, { lng: -9.00948476623017, lat: 38.624152704064898 }, { lng: -9.009447184500139, lat: 38.624103259057399 }, { lng: -9.00940997841154, lat: 38.624027781421503 }, { lng: -9.00937741651172, lat: 38.623946863229399 }, { lng: -9.00936486533765, lat: 38.6238499391036 }, { lng: -9.00938650793411, lat: 38.623759790603998 }, { lng: -9.00943017854188, lat: 38.623631458428598 }, { lng: -9.009471297312651, lat: 38.6235377355504 }, { lng: -9.009525653990289, lat: 38.623418961059102 }, { lng: -9.00956836387031, lat: 38.623333336218202 }, { lng: -9.00963371408643, lat: 38.623240513629 }, { lng: -9.009703492210731, lat: 38.623152430319003 }, { lng: -9.009761624976321, lat: 38.623089210101902 }, { lng: -9.00982619217163, lat: 38.623063863940303 }, { lng: -9.00991912663523, lat: 38.623019383644802 }, { lng: -9.01002690392642, lat: 38.622949936879102 }, { lng: -9.010107412590511, lat: 38.622885284042397 }, { lng: -9.0102759579711, lat: 38.622723677268802 }, { lng: -9.010384694900081, lat: 38.622610349025699 }, { lng: -9.010433582199591, lat: 38.622541973097903 }, { lng: -9.010465415672661, lat: 38.622487864147701 }, { lng: -9.0104975627005, lat: 38.6224028559526 }, { lng: -9.01056847785124, lat: 38.622163613067102 }, { lng: -9.01058886809113, lat: 38.622046805236899 }, { lng: -9.01060412650682, lat: 38.621951656233598 }, { lng: -9.010614598464841, lat: 38.621896986798497 }, { lng: -9.010646147147551, lat: 38.621743883597397 }, { lng: -9.01082071200784, lat: 38.621238303342899 }, { lng: -9.010925183171571, lat: 38.6209077347524 }, { lng: -9.01095447549203, lat: 38.620804822608399 }, { lng: -9.01095865597639, lat: 38.620686873373501 }, { lng: -9.01095234117461, lat: 38.620385602400198 }, { lng: -9.01094267592423, lat: 38.620280819689597 }, { lng: -9.01093508840049, lat: 38.620110804517402 }, { lng: -9.01084690245677, lat: 38.619724934662599 }, { lng: -9.01067518026643, lat: 38.619108184787301 }, { lng: -9.01061881895315, lat: 38.618826743872297 }, { lng: -9.010591711118749, lat: 38.618656875931002 }, { lng: -9.010544565295, lat: 38.618434460824901 }, { lng: -9.01046608520592, lat: 38.6181664302906 }, { lng: -9.0104074796107, lat: 38.617917976625897 }, { lng: -9.01038591445694, lat: 38.617750136210702 }, { lng: -9.0103817579532, lat: 38.617409485233203 }, { lng: -9.010389993342059, lat: 38.617171433764199 }, { lng: -9.010382644602259, lat: 38.617020781401997 }, { lng: -9.010379889754351, lat: 38.6165687760369 }, { lng: -9.010417068622679, lat: 38.616313120066998 }, { lng: -9.01042686733528, lat: 38.615977675554802 }, { lng: -9.010477137946401, lat: 38.615636973092499 }, { lng: -9.01052878523403, lat: 38.615315630409597 }, { lng: -9.010499231312091, lat: 38.615048314716098 }, { lng: -9.010476662600739, lat: 38.614788601718303 }, { lng: -9.01041243371921, lat: 38.614417772520198 }, { lng: -9.01035419084293, lat: 38.614076264831702 }, { lng: -9.01029596595153, lat: 38.613754663988402 }, { lng: -9.010272056630191, lat: 38.613601795372702 }, { lng: -9.010215498136301, lat: 38.6134077350683 }, { lng: -9.010129768874929, lat: 38.613090665068803 }, { lng: -9.00998924619144, lat: 38.612525923022403 }, { lng: -9.00992768593437, lat: 38.6122604683611 }, { lng: -9.00981671391666, lat: 38.611831165014898 }, { lng: -9.009835465068489, lat: 38.611721578598498 }, { lng: -9.01013580084688, lat: 38.611391337820599 }, { lng: -9.01065379455699, lat: 38.610815168444901 }, { lng: -9.010845234062661, lat: 38.610593573243499 }, { lng: -9.011196562294231, lat: 38.610181245364998 }, { lng: -9.01136726298313, lat: 38.6099820540813 }, { lng: -9.011584812819271, lat: 38.609708919902502 }, { lng: -9.011907511889509, lat: 38.609237442187798 }, { lng: -9.01214056222134, lat: 38.608889148400898 }, { lng: -9.01257433758404, lat: 38.608995964576103 }, { lng: -9.01290190382011, lat: 38.609054481696198 }, { lng: -9.013100726996671, lat: 38.609062442438898 }, { lng: -9.01330096149966, lat: 38.609091382946801 }, { lng: -9.01350255363306, lat: 38.609119140039297 }, { lng: -9.01378936955828, lat: 38.6091497685536 }, { lng: -9.01379720591766, lat: 38.609058368148197 }, { lng: -9.0137995023355, lat: 38.609002140201198 }, { lng: -9.01375665374843, lat: 38.6087752797241 }, { lng: -9.013649337663781, lat: 38.608298571412597 }, { lng: -9.01354186827033, lat: 38.607819342738999 }, { lng: -9.01347753643344, lat: 38.607553456620202 }, { lng: -9.01342615126608, lat: 38.607359992937802 }, { lng: -9.013361754526001, lat: 38.607144912128 }, { lng: -9.013308564350529, lat: 38.606973172432397 }, { lng: -9.013231292890911, lat: 38.606493709886699 }, { lng: -9.01322581660782, lat: 38.606364849335598 }, { lng: -9.013238771814731, lat: 38.606175849741 }, { lng: -9.01326079463754, lat: 38.6060992979072 }, { lng: -9.0133451097054, lat: 38.6059438131348 }, { lng: -9.012291016505509, lat: 38.605953369072502 }, { lng: -9.012205463672091, lat: 38.6059232977317 }, { lng: -9.01207803556891, lat: 38.605669507917099 }, { lng: -9.011988442419391, lat: 38.605496596094703 }, { lng: -9.01192784101957, lat: 38.605441022504102 }, { lng: -9.01173051991694, lat: 38.604925802667097 }, { lng: -9.011659481155361, lat: 38.604758248004899 }, { lng: -9.011471607725859, lat: 38.604273671736003 }, { lng: -9.01223323210017, lat: 38.604061931907196 }, { lng: -9.012107175563701, lat: 38.603732284190798 }, { lng: -9.01207869918359, lat: 38.603656555970304 }, { lng: -9.011976730339629, lat: 38.603409692914802 }, { lng: -9.01185513472937, lat: 38.603069114242999 }, { lng: -9.011749277402529, lat: 38.6027012108961 }, { lng: -9.01167984879018, lat: 38.602477699092901 }, { lng: -9.011902728978059, lat: 38.602445308680998 }, { lng: -9.012104770697981, lat: 38.602398566783798 }, { lng: -9.01224465326618, lat: 38.602346976746702 }, { lng: -9.012285576820419, lat: 38.602314151741901 }, { lng: -9.01246196895042, lat: 38.602047177494299 }, { lng: -9.01244605088295, lat: 38.601787590906397 }, { lng: -9.01244633834321, lat: 38.601623195762997 }, { lng: -9.012433472337291, lat: 38.6013215191469 }, { lng: -9.01244972941034, lat: 38.601214653328498 }, { lng: -9.011480900181271, lat: 38.601385976650199 }, { lng: -9.01111229728124, lat: 38.601460807933698 }, { lng: -9.01026476317389, lat: 38.601676522862697 }, { lng: -9.009647051168439, lat: 38.601836099476202 }, { lng: -9.00868707915077, lat: 38.602170377855799 }, { lng: -9.00708777781805, lat: 38.602710310052302 }, { lng: -9.006750221630719, lat: 38.602828412226302 }, { lng: -9.006443381719411, lat: 38.602961681790298 }, { lng: -9.006211723681419, lat: 38.603103035628898 }, { lng: -9.00576853541879, lat: 38.603437757021098 }, { lng: -9.005529046755241, lat: 38.603625021097599 }, { lng: -9.00536080490345, lat: 38.603724372951 }, { lng: -9.005244654240631, lat: 38.603773255628901 }, { lng: -9.00511172041467, lat: 38.603811360717899 }, { lng: -9.00455721055685, lat: 38.603902695681001 }, { lng: -9.004132786921611, lat: 38.603958194715801 }, { lng: -9.003694175743959, lat: 38.603998576725701 }, { lng: -9.002789525025911, lat: 38.604099090020703 }, { lng: -9.00221780069552, lat: 38.604153513922398 }, { lng: -9.00174596617601, lat: 38.604209362736 }, { lng: -9.001243911740691, lat: 38.604281823248201 }, { lng: -9.000907220923439, lat: 38.604349182792802 }, { lng: -9.000214136547481, lat: 38.604478639200899 }, { lng: -8.999873118271569, lat: 38.604539992392802 }, { lng: -8.999748159062269, lat: 38.604553981515799 }, { lng: -8.99945401961871, lat: 38.604580123011097 }, { lng: -8.999337437488331, lat: 38.604594140657298 }, { lng: -8.999229284620821, lat: 38.604612327818202 }, { lng: -8.998985320160241, lat: 38.604649084868299 }, { lng: -8.998713728299769, lat: 38.604707760788401 }, { lng: -8.99820251362501, lat: 38.604830361255203 }, { lng: -8.997990576031871, lat: 38.604876700126198 }, { lng: -8.99774936051905, lat: 38.604913256825803 }, { lng: -8.997005267774909, lat: 38.605125945984497 }, { lng: -8.99635748392727, lat: 38.6053772864202 }, { lng: -8.9958747344379, lat: 38.605548493531202 }, { lng: -8.99544730683691, lat: 38.605756668428 }, { lng: -8.99537514660282, lat: 38.605818365413299 }, { lng: -8.99503374737278, lat: 38.606049603441797 }, { lng: -8.99479644519565, lat: 38.606163769950598 }, { lng: -8.9945107253956, lat: 38.606223079760198 }, { lng: -8.994307036294909, lat: 38.606210799285499 }, { lng: -8.993929818904681, lat: 38.606174124661003 }, { lng: -8.99370087730008, lat: 38.6061717585822 }, { lng: -8.99316083623413, lat: 38.606189425943597 }, { lng: -8.992857387398629, lat: 38.606234989499498 }, { lng: -8.992444034281871, lat: 38.606334686689799 }, { lng: -8.992153546773549, lat: 38.606427534223897 }, { lng: -8.99188342179572, lat: 38.606533741099199 }, { lng: -8.991435812669231, lat: 38.606726290659402 }, { lng: -8.990960744254309, lat: 38.606917147212897 }, { lng: -8.990597965965129, lat: 38.607042047514199 }, { lng: -8.99005142526855, lat: 38.607160370845598 }, { lng: -8.98980835221518, lat: 38.6072153896855 }, { lng: -8.98903301639927, lat: 38.607305838242503 }, { lng: -8.987255957887941, lat: 38.6074488314813 }, { lng: -8.986883628075439, lat: 38.607475513054197 }, { lng: -8.984700038239209, lat: 38.6076470178904 }, { lng: -8.984594568067561, lat: 38.607649764507201 }, { lng: -8.98407770481054, lat: 38.607696769820798 }, { lng: -8.98355053047611, lat: 38.6077262846282 }, { lng: -8.98298315752616, lat: 38.607763922507402 }, { lng: -8.981984322596119, lat: 38.607857751794299 }, { lng: -8.980026996538159, lat: 38.608049139277298 }, { lng: -8.978076973080251, lat: 38.608208921838603 }, { lng: -8.977589962567819, lat: 38.608256940482697 }, { lng: -8.977989853673639, lat: 38.6093634880297 }, { lng: -8.97808837452615, lat: 38.609638962513301 }, { lng: -8.97839928656334, lat: 38.610461040664298 }, { lng: -8.97872081611424, lat: 38.611306647833203 }, { lng: -8.979026369096751, lat: 38.6121011987711 }, { lng: -8.97944074657528, lat: 38.613137550674402 }, { lng: -8.97956223906761, lat: 38.613432493464202 }, { lng: -8.979843432423269, lat: 38.614242983253902 }, { lng: -8.980201930232379, lat: 38.615212538424899 }, { lng: -8.98038398936168, lat: 38.615686661981997 }, { lng: -8.98053368068099, lat: 38.616083914583001 }, { lng: -8.98077234308138, lat: 38.6166547350713 }, { lng: -8.981035218383269, lat: 38.617351403191599 }, { lng: -8.981355469043249, lat: 38.618170705635102 }, { lng: -8.981416701758009, lat: 38.618367988185099 }, { lng: -8.98168660077701, lat: 38.619074780139997 }, { lng: -8.981932638874049, lat: 38.6197148186465 }, { lng: -8.98206759700556, lat: 38.620068126127201 }, { lng: -8.98238003700005, lat: 38.620836853641897 }, { lng: -8.982538941302851, lat: 38.621282590121702 }, { lng: -8.98296455168577, lat: 38.622435134429701 }, { lng: -8.98320550906646, lat: 38.623041426280203 }, { lng: -8.983433743421029, lat: 38.623649610746 }, { lng: -8.983456758022809, lat: 38.6237117796219 }, { lng: -8.983669657253699, lat: 38.624275216399603 }, { lng: -8.98384907421552, lat: 38.624745482076101 }, { lng: -8.983982325456401, lat: 38.625099157005003 }, { lng: -8.98410033742338, lat: 38.625406194112102 }, { lng: -8.98416383384885, lat: 38.625522562933597 }, { lng: -8.98403446016572, lat: 38.626127587764898 }, { lng: -8.983937867066659, lat: 38.626553019877498 }, { lng: -8.983734699021779, lat: 38.6270065249577 }, { lng: -8.98366136554262, lat: 38.627291620626998 }, { lng: -8.983609010156281, lat: 38.627477118742 }, { lng: -8.983510249979441, lat: 38.627738892479201 }, { lng: -8.98334494331781, lat: 38.628238959258603 }, { lng: -8.983286684213031, lat: 38.628352434360401 }, { lng: -8.983039439315281, lat: 38.629071185000299 }, { lng: -8.98292486101708, lat: 38.629452067465103 }, { lng: -8.98270617736647, lat: 38.630051791142698 }, { lng: -8.98246149759397, lat: 38.630764847572799 }, { lng: -8.982202457743931, lat: 38.631507102915897 }, { lng: -8.98206785795422, lat: 38.631886056964099 }, { lng: -8.98198534801128, lat: 38.632250940581002 }, { lng: -8.98198181895425, lat: 38.632379782028899 }, { lng: -8.98199369633201, lat: 38.6325394085708 }, { lng: -8.981975808144361, lat: 38.6327070881308 }, { lng: -8.9819374827725, lat: 38.633040663202998 }, { lng: -8.981914318661291, lat: 38.633393498362601 }, { lng: -8.98195118617812, lat: 38.633773280763101 }, { lng: -8.981948462255721, lat: 38.634174606803299 }, { lng: -8.98195173046846, lat: 38.634431760680101 }, { lng: -8.9819536216225, lat: 38.634796121794103 }, { lng: -8.981934720477319, lat: 38.634878056058398 }, { lng: -8.98157698775384, lat: 38.635278266659199 }, { lng: -8.981016055048419, lat: 38.635510332027202 }, { lng: -8.98048463298956, lat: 38.635722727077599 }, { lng: -8.980274824737419, lat: 38.635811804373802 }, { lng: -8.97976542046549, lat: 38.635973322039497 }, { lng: -8.97924076573544, lat: 38.6361369259714 }, { lng: -8.979168697456171, lat: 38.6361218640847 }, { lng: -8.97885892861286, lat: 38.635964303886396 }, { lng: -8.97815723155343, lat: 38.635604916866903 }, { lng: -8.977854885018459, lat: 38.635443425980597 }, { lng: -8.97752037180676, lat: 38.635299733174698 }, { lng: -8.97730310328649, lat: 38.635194196692296 }, { lng: -8.97703613434229, lat: 38.635071366966002 }, { lng: -8.976816410649549, lat: 38.634971612464199 }, { lng: -8.97588254661437, lat: 38.6346937912218 }, { lng: -8.97571794485199, lat: 38.634632642613397 }, { lng: -8.975401414130401, lat: 38.634533582636202 }, { lng: -8.97439163973724, lat: 38.634166755397402 }, { lng: -8.973050448610721, lat: 38.6336931264645 }, { lng: -8.972068237879171, lat: 38.633343647825598 }, { lng: -8.97067521330062, lat: 38.6328937797295 }, { lng: -8.96997730524706, lat: 38.632666917166198 }, { lng: -8.9692445649276, lat: 38.632426513354297 }, { lng: -8.96880592786203, lat: 38.632273815293502 }, { lng: -8.96786828348305, lat: 38.631931728859399 }, { lng: -8.96777105590157, lat: 38.631876030890901 }, { lng: -8.967192159102201, lat: 38.6314028314832 }, { lng: -8.966738847888641, lat: 38.631053399401601 }, { lng: -8.966357939069271, lat: 38.630748309378099 }, { lng: -8.965702012612519, lat: 38.630265921360497 }, { lng: -8.965347814505799, lat: 38.629905962239498 }, { lng: -8.965310343424539, lat: 38.629873078027003 }, { lng: -8.964479925688609, lat: 38.629117179288301 }, { lng: -8.96361230069189, lat: 38.628359560429402 }, { lng: -8.96339151570028, lat: 38.6281643947191 }, { lng: -8.96287545195525, lat: 38.627727567091398 }, { lng: -8.962541816178611, lat: 38.6274356394281 }, { lng: -8.961829754766439, lat: 38.626830850985897 }, { lng: -8.961323153078689, lat: 38.626376563640399 }, { lng: -8.960758234941739, lat: 38.625833057581197 }, { lng: -8.959879533193069, lat: 38.624964235631701 }, { lng: -8.959470109451569, lat: 38.624540418679302 }, { lng: -8.95870751756185, lat: 38.623639779527501 }, { lng: -8.958053824406949, lat: 38.622911769372998 }, { lng: -8.95769398172798, lat: 38.622473904920398 }, { lng: -8.957301520479589, lat: 38.622024653107403 }, { lng: -8.95706526457799, lat: 38.621769049451501 }, { lng: -8.95657754438764, lat: 38.6212230853275 }, { lng: -8.956285890117121, lat: 38.620892018757601 }, { lng: -8.956076985487149, lat: 38.620648023949101 }, { lng: -8.95571410341338, lat: 38.620182969062597 }, { lng: -8.955441797438191, lat: 38.619816633447201 }, { lng: -8.95522663599205, lat: 38.619436118617799 }, { lng: -8.95506262517269, lat: 38.6192015316389 }, { lng: -8.954962003306219, lat: 38.619087296467498 }, { lng: -8.954666600922961, lat: 38.618869216721698 }, { lng: -8.95441339756561, lat: 38.618656693496902 }, { lng: -8.954254827432459, lat: 38.618464853990702 }, { lng: -8.95410400246724, lat: 38.618298362858603 }, { lng: -8.9533836814196, lat: 38.618706805595501 }, { lng: -8.953009681178729, lat: 38.618986161406603 }, { lng: -8.952544720514579, lat: 38.619375147029203 }, { lng: -8.952301711811179, lat: 38.619612683466002 }, { lng: -8.95219902890026, lat: 38.619761498789202 }, { lng: -8.951939651255101, lat: 38.620084811915497 }, { lng: -8.951547473505521, lat: 38.620533732354602 }, { lng: -8.95179513433472, lat: 38.620693693003901 }, { lng: -8.95193800390536, lat: 38.6208173604035 }, { lng: -8.95202361732011, lat: 38.620923957105099 }, { lng: -8.95207056753507, lat: 38.621114509026299 }, { lng: -8.95205896536252, lat: 38.6211847644919 }, { lng: -8.952052324059901, lat: 38.621256873337401 }, { lng: -8.951878543909769, lat: 38.621474377527903 }, { lng: -8.95171021325131, lat: 38.6217367029275 }, { lng: -8.95165791379844, lat: 38.621943535215401 }, { lng: -8.951643348147339, lat: 38.622399625135799 }, { lng: -8.95160981827555, lat: 38.622943585079 }, { lng: -8.95156331668861, lat: 38.6232264954266 }, { lng: -8.951455431027661, lat: 38.623564329784102 }, { lng: -8.951312827097439, lat: 38.6241206764917 }, { lng: -8.95117407925591, lat: 38.624571600921101 }, { lng: -8.951128197659219, lat: 38.6246869573163 }, { lng: -8.951059677507841, lat: 38.624780941635002 }, { lng: -8.950715379161229, lat: 38.625272401200696 }, { lng: -8.95055531724903, lat: 38.625606728453 }, { lng: -8.9509613550411, lat: 38.625707117668099 }, { lng: -8.95138681463837, lat: 38.625787912982702 }, { lng: -8.951655703808401, lat: 38.625844403840297 }, { lng: -8.95223334637741, lat: 38.625988444774798 }, { lng: -8.95293026279422, lat: 38.626139398628602 }, { lng: -8.95292617705368, lat: 38.626203742567498 }, { lng: -8.95274700178002, lat: 38.626382278727498 }, { lng: -8.95260045789392, lat: 38.626572295715697 }, { lng: -8.952147227491629, lat: 38.627087945213198 }, { lng: -8.95160860014118, lat: 38.6277386798767 }, { lng: -8.95153974483393, lat: 38.627803477760999 }, { lng: -8.95112038766416, lat: 38.6282389815239 }, { lng: -8.950712370890241, lat: 38.628602343146902 }, { lng: -8.950422446567289, lat: 38.628888757090998 }, { lng: -8.94989307556752, lat: 38.629467263157103 }, { lng: -8.94913398463958, lat: 38.630376797178897 }, { lng: -8.948806100280461, lat: 38.630790215196399 }, { lng: -8.948367351773671, lat: 38.631514105825303 }, { lng: -8.947756321016641, lat: 38.632601856853903 }, { lng: -8.9477545486886, lat: 38.632658351895003 }, { lng: -8.947760239307691, lat: 38.632724519231999 }, { lng: -8.94789378179483, lat: 38.632895099311199 }, { lng: -8.948051799213941, lat: 38.633036237770199 }, { lng: -8.948394418377029, lat: 38.633242200281003 }, { lng: -8.948489768285571, lat: 38.633325309453703 }, { lng: -8.94850019740079, lat: 38.6333739724776 }, { lng: -8.94845443194748, lat: 38.633510673416197 }, { lng: -8.948215113403849, lat: 38.634079398331401 }, { lng: -8.94780994182879, lat: 38.634900610506399 }, { lng: -8.94728684185452, lat: 38.635835602812101 }, { lng: -8.94718924750295, lat: 38.635990136038302 }, { lng: -8.94681976300647, lat: 38.636688313902503 }, { lng: -8.94649428469417, lat: 38.6373180805681 }, { lng: -8.946155112348199, lat: 38.637844534652601 }, { lng: -8.94607809189977, lat: 38.6378178636119 }, { lng: -8.94491259684726, lat: 38.637311521811398 }, { lng: -8.94488541884499, lat: 38.637325310849498 }, { lng: -8.94551104903624, lat: 38.637948369387701 }, { lng: -8.946103532062001, lat: 38.6385132903875 }, { lng: -8.94639296635153, lat: 38.638848353062301 }, { lng: -8.94671800901957, lat: 38.6392650546575 }, { lng: -8.94764666541044, lat: 38.6405367346661 }, { lng: -8.94784363287175, lat: 38.640829565990202 }, { lng: -8.947880595018381, lat: 38.641020365969297 }, { lng: -8.947883398910889, lat: 38.641226810402003 }, { lng: -8.94790046108464, lat: 38.641850228935397 }, { lng: -8.947867310284661, lat: 38.642208890461198 }, { lng: -8.947841826845689, lat: 38.642585066159803 }, { lng: -8.947862906251469, lat: 38.642701845421698 }, { lng: -8.9479446347438, lat: 38.643122127501201 }, { lng: -8.948001484768531, lat: 38.6434460231565 }, { lng: -8.94805500980757, lat: 38.643729128024901 }, { lng: -8.94814184379001, lat: 38.644053262392703 }, { lng: -8.94821038189208, lat: 38.644303569460497 }, { lng: -8.948232014706569, lat: 38.644478625364698 }, { lng: -8.948277797411651, lat: 38.644646665019401 }, { lng: -8.94833782441996, lat: 38.644733897320798 }, { lng: -8.94840260352429, lat: 38.644845055311002 }, { lng: -8.948491568615511, lat: 38.644971624190298 }, { lng: -8.948854672335489, lat: 38.645387962978504 }, { lng: -8.949152987092971, lat: 38.645793764496702 }, { lng: -8.94937524080617, lat: 38.646126948434002 }, { lng: -8.94970134878556, lat: 38.6465819189036 }, { lng: -8.949846452130039, lat: 38.646756109752801 }, { lng: -8.95015384898524, lat: 38.647080864200198 }, { lng: -8.950443074499351, lat: 38.647352861858899 }, { lng: -8.95100245829698, lat: 38.648006891521703 }, { lng: -8.951167622118991, lat: 38.648186891150402 }, { lng: -8.951530548827479, lat: 38.648564664282098 }, { lng: -8.951703587016549, lat: 38.648770279292997 }, { lng: -8.95193276735648, lat: 38.649074042371403 }, { lng: -8.952017283145, lat: 38.649223075127999 }, { lng: -8.952117260547819, lat: 38.649407490540497 }, { lng: -8.9522019113335, lat: 38.649568411084203 }, { lng: -8.952302178290079, lat: 38.649778672108702 }, { lng: -8.952409849993201, lat: 38.649972853982803 }, { lng: -8.95254124486457, lat: 38.650273250592001 }, { lng: -8.95268546847374, lat: 38.650611032600096 }, { lng: -8.95280468297072, lat: 38.650931150041004 }, { lng: -8.95290276499952, lat: 38.651180793841903 }, { lng: -8.95296993584201, lat: 38.6513496733049 }, { lng: -8.953026666706521, lat: 38.6514890793771 }, { lng: -8.953098380938551, lat: 38.651632522303899 }, { lng: -8.95322425279922, lat: 38.651891701522999 }, { lng: -8.953286447177049, lat: 38.652056921452697 }, { lng: -8.953392798599801, lat: 38.652245795909501 }, { lng: -8.95350881014053, lat: 38.652476034296001 }, { lng: -8.95367234174045, lat: 38.652773505253201 }, { lng: -8.95378306713854, lat: 38.6529528865494 }, { lng: -8.953872901252289, lat: 38.653144217614198 }, { lng: -8.95393020951431, lat: 38.653243440387499 }, { lng: -8.95399802736608, lat: 38.6533673643087 }, { lng: -8.95407578803721, lat: 38.653557607976197 }, { lng: -8.95417639179054, lat: 38.653776160388503 }, { lng: -8.954249226020231, lat: 38.653936799211003 }, { lng: -8.95440451986379, lat: 38.654306655464602 }, { lng: -8.95445866016628, lat: 38.654420050090302 }, { lng: -8.95454118240399, lat: 38.654644669038902 }, { lng: -8.954637073315, lat: 38.654832443760498 }, { lng: -8.954758779235799, lat: 38.6551681254006 }, { lng: -8.95480831819326, lat: 38.655270920828698 }, { lng: -8.95490192164017, lat: 38.655399525590198 }, { lng: -8.95511745677501, lat: 38.655621949284203 }, { lng: -8.955247257077881, lat: 38.655751382151699 }, { lng: -8.955322253144461, lat: 38.6558397620501 }, { lng: -8.95545314691752, lat: 38.656043860362999 }, { lng: -8.95570798172438, lat: 38.656397616453297 }, { lng: -8.95576298989379, lat: 38.6564565000428 }, { lng: -8.955819033492981, lat: 38.656464389702698 }, { lng: -8.956039447660221, lat: 38.656450947652203 }, { lng: -8.956402193988369, lat: 38.656456591485203 }, { lng: -8.95662379004874, lat: 38.656475746552502 }, { lng: -8.95693837506631, lat: 38.656509020456902 }, { lng: -8.95762573500966, lat: 38.656621362489197 }, { lng: -8.958329412661721, lat: 38.656713677503099 }, { lng: -8.95864109556477, lat: 38.656754084573699 }, { lng: -8.95889685058965, lat: 38.656786596434699 }, { lng: -8.95929593485168, lat: 38.656805126529299 }, { lng: -8.959755538159669, lat: 38.656822139403403 }, { lng: -8.960039562290261, lat: 38.656824906093497 }, { lng: -8.96027668927746, lat: 38.6568161085791 }, { lng: -8.96072928922643, lat: 38.656762908671404 }, { lng: -8.961059719569869, lat: 38.656706066894102 }, { lng: -8.96140325051128, lat: 38.656619494851498 }, { lng: -8.96173187054888, lat: 38.656544830712498 }, { lng: -8.962048728304399, lat: 38.656496283244898 }, { lng: -8.962796760076049, lat: 38.656370078769797 }, { lng: -8.963405982802779, lat: 38.656251889319698 }, { lng: -8.96382223178883, lat: 38.656184972071003 }, { lng: -8.964778139782309, lat: 38.656005128000601 }, { lng: -8.96520354070263, lat: 38.655935709493399 }, { lng: -8.96572763137069, lat: 38.655777845652501 }, { lng: -8.9661221032875, lat: 38.655656485416202 }, { lng: -8.96644001789447, lat: 38.655571253883899 }, { lng: -8.96653788936627, lat: 38.655540922722402 }, { lng: -8.96682666070406, lat: 38.655428689800203 }, { lng: -8.96719158424265, lat: 38.655226920613899 }, { lng: -8.967511351879571, lat: 38.655053935224402 }, { lng: -8.96784152478212, lat: 38.654857182572798 }, { lng: -8.96815506542603, lat: 38.6546722564213 }, { lng: -8.968358972685079, lat: 38.654543965992801 }, { lng: -8.96881940717039, lat: 38.654247912193497 }, { lng: -8.96941066135998, lat: 38.653901107600198 }, { lng: -8.969410487927901, lat: 38.654004156709497 }, { lng: -8.969423679907081, lat: 38.654170080302002 }, { lng: -8.969427766840241, lat: 38.654333548527902 }, { lng: -8.96942407281194, lat: 38.6546183165486 }, { lng: -8.969437320090369, lat: 38.654897653170202 }, { lng: -8.96945868730907, lat: 38.655104684272999 }, { lng: -8.969715721093539, lat: 38.655158244035697 }, { lng: -8.9700546209642, lat: 38.655227786044598 }, { lng: -8.97074382596505, lat: 38.655379224679301 }, { lng: -8.97105583638562, lat: 38.655448152809399 }, { lng: -8.972014982348259, lat: 38.655636471019598 }, { lng: -8.97262541212304, lat: 38.6557605375477 }, { lng: -8.9726187524008, lat: 38.655868592106302 }, { lng: -8.97260229111556, lat: 38.655983743302997 }, { lng: -8.97258398306721, lat: 38.6561473666602 }, { lng: -8.972550156115419, lat: 38.656231117833599 }, { lng: -8.97251877705056, lat: 38.6564167263884 }, { lng: -8.972449511457111, lat: 38.656820421903099 }, { lng: -8.97241089058749, lat: 38.657064186220502 }, { lng: -8.972353514522281, lat: 38.657335199369101 }, { lng: -8.9723149130532, lat: 38.657580675029799 }, { lng: -8.97225846015861, lat: 38.6578323132427 }, { lng: -8.972209621860401, lat: 38.6582544203998 }, { lng: -8.972189659037531, lat: 38.65836446382 }, { lng: -8.9721546889122, lat: 38.658636303370798 }, { lng: -8.97214049096957, lat: 38.658758466312001 }, { lng: -8.97212298795316, lat: 38.6588922688575 }, { lng: -8.972117189172961, lat: 38.659064546468301 }, { lng: -8.97211624516784, lat: 38.659180572617998 }, { lng: -8.972097711942499, lat: 38.6594134748591 }, { lng: -8.97209519420775, lat: 38.6597684088661 }, { lng: -8.9720871715879, lat: 38.659937182951197 }, { lng: -8.972065164810919, lat: 38.660069130578101 }, { lng: -8.972087248600269, lat: 38.660228950888097 }, { lng: -8.972085364459749, lat: 38.6603528270794 }, { lng: -8.972065469731991, lat: 38.660675458445198 }, { lng: -8.97206506091092, lat: 38.660837064225397 }, { lng: -8.972050872906181, lat: 38.660960123343997 }, { lng: -8.97204133825614, lat: 38.661107832975503 }, { lng: -8.972027859627991, lat: 38.661428973383103 }, { lng: -8.97202401862369, lat: 38.661572232718697 }, { lng: -8.9720255793689, lat: 38.661705808376297 }, { lng: -8.97208100945091, lat: 38.662044831845101 }, { lng: -8.97207615012908, lat: 38.662238267965101 }, { lng: -8.97208335073452, lat: 38.6624023422793 }, { lng: -8.97208005079611, lat: 38.662572074202799 }, { lng: -8.97208648835541, lat: 38.662670848248098 }, { lng: -8.97214114151256, lat: 38.662815302212699 }, { lng: -8.972162150596811, lat: 38.662941807526103 }, { lng: -8.972162282939809, lat: 38.663100435801802 }, { lng: -8.97215634688205, lat: 38.663202177572302 }, { lng: -8.97212919298449, lat: 38.6634639645915 }, { lng: -8.97210569314945, lat: 38.663743921660704 }, { lng: -8.97199175118153, lat: 38.663854638140798 }, { lng: -8.97196933946095, lat: 38.663903535177198 }, { lng: -8.972364189258959, lat: 38.664145533557999 }, { lng: -8.972441035829309, lat: 38.664193716622002 }, { lng: -8.972498394975609, lat: 38.664244828382898 }, { lng: -8.97267528267264, lat: 38.664368768102797 }, { lng: -8.972787994951981, lat: 38.664447227193797 }, { lng: -8.972879418588359, lat: 38.664532866209498 }, { lng: -8.97305017218758, lat: 38.664701350993099 }, { lng: -8.97320852854936, lat: 38.664900640234599 }, { lng: -8.973397933874329, lat: 38.665170689670099 }, { lng: -8.973464835137721, lat: 38.665281636858602 }, { lng: -8.97349215757643, lat: 38.665338462438797 }, { lng: -8.973516113201089, lat: 38.665412061781403 }, { lng: -8.97371446203409, lat: 38.6656999706357 }, { lng: -8.973842187152529, lat: 38.6658534479552 }, { lng: -8.974140557367591, lat: 38.6661854052713 }, { lng: -8.97433813097831, lat: 38.666396843817203 }, { lng: -8.974465758085399, lat: 38.6665422156861 }, { lng: -8.974342839340469, lat: 38.666641916374701 }, { lng: -8.97437528220461, lat: 38.666694560297202 }, { lng: -8.97443381124369, lat: 38.666845741222701 }, { lng: -8.974500215560679, lat: 38.6670609181174 }, { lng: -8.974548658938231, lat: 38.667252706860502 }, { lng: -8.974595611445601, lat: 38.667475045399001 }, { lng: -8.97461039345704, lat: 38.667530519625103 }, { lng: -8.97469049852414, lat: 38.667708303575203 }, { lng: -8.97477610992453, lat: 38.667895500887397 }, { lng: -8.974827716067081, lat: 38.668063487271098 }, { lng: -8.974765044430381, lat: 38.668166902099202 }, { lng: -8.974727514705769, lat: 38.6682883304386 }, { lng: -8.974711289525249, lat: 38.668413659087697 }, { lng: -8.974705067152779, lat: 38.668490269584197 }, { lng: -8.97471149306285, lat: 38.668577868067302 }, { lng: -8.974780044054031, lat: 38.668838881155899 }, { lng: -8.97486406668045, lat: 38.669037348955499 }, { lng: -8.975000718039331, lat: 38.669343987553198 }, { lng: -8.97511031053495, lat: 38.669615868648101 }, { lng: -8.975202873757331, lat: 38.669787974789401 }, { lng: -8.97535501986834, lat: 38.670054056128599 }, { lng: -8.97549225893694, lat: 38.670263224586499 }, { lng: -8.975626505975161, lat: 38.670521053372802 }, { lng: -8.97572230192651, lat: 38.670674758464699 }, { lng: -8.97575409907693, lat: 38.670819199498297 }, { lng: -8.975749908149609, lat: 38.670922187152101 }, { lng: -8.975663941962541, lat: 38.671155304137997 }, { lng: -8.97557140179484, lat: 38.671455310804397 }, { lng: -8.975468651523229, lat: 38.671776013039299 }, { lng: -8.975405751722199, lat: 38.672007524189702 }, { lng: -8.97538029768339, lat: 38.672276411150897 }, { lng: -8.975391342203601, lat: 38.672610261589597 }, { lng: -8.9754209646088, lat: 38.672863263444903 }, { lng: -8.975526456245481, lat: 38.673235432106303 }, { lng: -8.975613037719469, lat: 38.6735243197 }, { lng: -8.9756986190344, lat: 38.6738645674602 }, { lng: -8.97575963605491, lat: 38.674089688299397 }, { lng: -8.97584644951338, lat: 38.6743784893238 }, { lng: -8.97593958377859, lat: 38.674754889340797 }, { lng: -8.97604592024058, lat: 38.675061834902301 }, { lng: -8.976152884807981, lat: 38.675559294035502 }, { lng: -8.97620864100783, lat: 38.675629875451399 }, { lng: -8.97625024483186, lat: 38.675660018191998 }, { lng: -8.9763017068774, lat: 38.675697393560597 }, { lng: -8.97627364396269, lat: 38.675871536593696 }, { lng: -8.97625576463887, lat: 38.676012189982501 }, { lng: -8.97625878308239, lat: 38.676122157262398 }, { lng: -8.97630122286095, lat: 38.676272102653897 }, { lng: -8.976374649589721, lat: 38.676477497874799 }, { lng: -8.97638966428131, lat: 38.676552515739701 }, { lng: -8.97637308602944, lat: 38.676656947441202 }, { lng: -8.97639305935734, lat: 38.676694363334498 }, { lng: -8.97642902485947, lat: 38.676733108797201 }, { lng: -8.976596399163601, lat: 38.676787571433799 }, { lng: -8.97663763233693, lat: 38.67682483395 }, { lng: -8.97666291410845, lat: 38.6768637482785 }, { lng: -8.976690259814539, lat: 38.676931740968101 }, { lng: -8.97669275058068, lat: 38.676987393565902 }, { lng: -8.976594591101181, lat: 38.6770439504824 }, { lng: -8.976502995373609, lat: 38.6771213604273 }, { lng: -8.97644582343465, lat: 38.677204645738001 }, { lng: -8.976433754128941, lat: 38.677302198815703 }, { lng: -8.976439993698961, lat: 38.677382957703998 }, { lng: -8.97645772268481, lat: 38.6775423594651 }, { lng: -8.976421772860609, lat: 38.677631800049397 }, { lng: -8.976304549998741, lat: 38.6777776737298 }, { lng: -8.97628178518406, lat: 38.677864944655802 }, { lng: -8.976309187145, lat: 38.677947620114303 }, { lng: -8.97649463970142, lat: 38.678209493140898 }, { lng: -8.97651683041774, lat: 38.678298422569497 }, { lng: -8.9765232113567, lat: 38.678391698884496 }, { lng: -8.976473992567779, lat: 38.678477001389098 }, { lng: -8.97624430054446, lat: 38.678723222962702 }, { lng: -8.97617782941067, lat: 38.678924764169999 }, { lng: -8.97610306377147, lat: 38.679084924567 }, { lng: -8.97605920258785, lat: 38.679176490292299 }, { lng: -8.97605993278936, lat: 38.679238639556203 }, { lng: -8.97609546040113, lat: 38.6793379222376 }, { lng: -8.976096458006589, lat: 38.6794228625972 }, { lng: -8.97609011119928, lat: 38.679557668513198 }, { lng: -8.97609113420588, lat: 38.679644676030001 }, { lng: -8.976129404485899, lat: 38.679752224511802 }, { lng: -8.97620212447824, lat: 38.679867723744003 }, { lng: -8.976319238376719, lat: 38.679937409589797 }, { lng: -8.976299194731929, lat: 38.680030696251599 }, { lng: -8.976289861659749, lat: 38.680136428653199 }, { lng: -8.976332085895891, lat: 38.6803558246948 }, { lng: -8.976440253162821, lat: 38.680338473562003 }, { lng: -8.97655918546215, lat: 38.680337614063099 }, { lng: -8.97660822522564, lat: 38.680344554173402 }];

	var cascais = exports.cascais = [{ lng: -9.440569490923581, lat: 38.768787131265803 }, { lng: -9.440599610674591, lat: 38.768792289802697 }, { lng: -9.440677462508649, lat: 38.768815105091697 }, { lng: -9.44080227755401, lat: 38.768883156998399 }, { lng: -9.440899237311889, lat: 38.7689570124436 }, { lng: -9.440950406135849, lat: 38.768992740404599 }, { lng: -9.44109209487625, lat: 38.768983225179497 }, { lng: -9.441106905022719, lat: 38.768962613962699 }, { lng: -9.441176225239129, lat: 38.768871130619502 }, { lng: -9.44132667101421, lat: 38.768755047278397 }, { lng: -9.4415756839864, lat: 38.7685489596279 }, { lng: -9.441684436207611, lat: 38.768443520352697 }, { lng: -9.44183190561418, lat: 38.768334592000897 }, { lng: -9.441950801830229, lat: 38.768255160907998 }, { lng: -9.442024403301691, lat: 38.768228303667001 }, { lng: -9.44222427034169, lat: 38.768147160042403 }, { lng: -9.44245547277978, lat: 38.768037195566102 }, { lng: -9.44259736567385, lat: 38.767982009517702 }, { lng: -9.44287205165914, lat: 38.767896779120697 }, { lng: -9.44297027732938, lat: 38.767863342676002 }, { lng: -9.443111959679481, lat: 38.767790772800304 }, { lng: -9.44319039207979, lat: 38.7677322467053 }, { lng: -9.443218473799041, lat: 38.767682297313499 }, { lng: -9.44323961543207, lat: 38.767605497507098 }, { lng: -9.443249143365509, lat: 38.767478383549097 }, { lng: -9.443272057882011, lat: 38.767435609878802 }, { lng: -9.443371554115931, lat: 38.767358651252501 }, { lng: -9.44355003925004, lat: 38.767360609613803 }, { lng: -9.443956002683541, lat: 38.767394517115498 }, { lng: -9.444916577745751, lat: 38.767456328453001 }, { lng: -9.44578798496587, lat: 38.767511746413298 }, { lng: -9.44619849277495, lat: 38.767542710828501 }, { lng: -9.446661437524829, lat: 38.7675656945583 }, { lng: -9.447128463745861, lat: 38.767591696742599 }, { lng: -9.44753891786995, lat: 38.767619681835001 }, { lng: -9.44786645149378, lat: 38.7676367111182 }, { lng: -9.44829328877424, lat: 38.767673518625799 }, { lng: -9.44939104493827, lat: 38.767736723433003 }, { lng: -9.45060220421637, lat: 38.767816466349103 }, { lng: -9.4523027917103, lat: 38.767932196711001 }, { lng: -9.452614186267351, lat: 38.767953899550903 }, { lng: -9.453192642910819, lat: 38.767988976108597 }, { lng: -9.453827429637739, lat: 38.768027735914202 }, { lng: -9.45408212452506, lat: 38.7680381829175 }, { lng: -9.45410772765371, lat: 38.7680038475091 }, { lng: -9.45449408407463, lat: 38.768035051235699 }, { lng: -9.455179541055911, lat: 38.768076205018801 }, { lng: -9.455674839037821, lat: 38.768106175873498 }, { lng: -9.456171952517019, lat: 38.768122791039197 }, { lng: -9.45675619582785, lat: 38.768153188740399 }, { lng: -9.45740911420447, lat: 38.768182805268097 }, { lng: -9.458093708511401, lat: 38.768220705371398 }, { lng: -9.458609761568439, lat: 38.768209713246797 }, { lng: -9.459179669223429, lat: 38.768205496647703 }, { lng: -9.45914093974619, lat: 38.767946966262102 }, { lng: -9.45913591364393, lat: 38.767880820245502 }, { lng: -9.459131268439149, lat: 38.767847365639298 }, { lng: -9.459163025472931, lat: 38.767797914837701 }, { lng: -9.45961881248199, lat: 38.767626908614503 }, { lng: -9.459946180301261, lat: 38.767653544004197 }, { lng: -9.46040046495378, lat: 38.767699449039597 }, { lng: -9.46109798914881, lat: 38.7677645713541 }, { lng: -9.46162592222079, lat: 38.768183177312402 }, { lng: -9.46198072794621, lat: 38.768231294290302 }, { lng: -9.462024705832359, lat: 38.768226561513202 }, { lng: -9.46287394065455, lat: 38.768270123916203 }, { lng: -9.463164775447551, lat: 38.768243934770197 }, { lng: -9.4635889489665, lat: 38.768198387331601 }, { lng: -9.464265568692671, lat: 38.768129151821199 }, { lng: -9.464668516510219, lat: 38.768087083184 }, { lng: -9.46498762539713, lat: 38.768053178409303 }, { lng: -9.46549409799213, lat: 38.768003624357902 }, { lng: -9.465686962236401, lat: 38.767980524909099 }, { lng: -9.466289598798051, lat: 38.7679110458323 }, { lng: -9.466675691336899, lat: 38.767878529560299 }, { lng: -9.467042955005789, lat: 38.767835783560898 }, { lng: -9.467258542767439, lat: 38.767815572080501 }, { lng: -9.46758088982696, lat: 38.767795228311897 }, { lng: -9.46782636063679, lat: 38.767767472067199 }, { lng: -9.467966774860489, lat: 38.767751275027798 }, { lng: -9.46811014210857, lat: 38.767745488371403 }, { lng: -9.468328438679791, lat: 38.7677168741318 }, { lng: -9.46849020530272, lat: 38.767698358944401 }, { lng: -9.468655827633521, lat: 38.767688989899099 }, { lng: -9.46894163775951, lat: 38.767658967859902 }, { lng: -9.469335290634101, lat: 38.767575283421401 }, { lng: -9.469564489528921, lat: 38.767544916344796 }, { lng: -9.470028694546579, lat: 38.7674319632373 }, { lng: -9.470671804023009, lat: 38.767263273714498 }, { lng: -9.47103370353954, lat: 38.767136802527801 }, { lng: -9.47125276654678, lat: 38.767093581789702 }, { lng: -9.47213259360394, lat: 38.766989723873401 }, { lng: -9.473077457574879, lat: 38.766807649357098 }, { lng: -9.47332726444164, lat: 38.766741191164201 }, { lng: -9.47357338815779, lat: 38.7667548493326 }, { lng: -9.473593696763761, lat: 38.766727325221296 }, { lng: -9.475156493315669, lat: 38.765894278908597 }, { lng: -9.47522646296045, lat: 38.765839879357401 }, { lng: -9.475380277854811, lat: 38.765771998899702 }, { lng: -9.47644609593118, lat: 38.764679742592698 }, { lng: -9.476938153815491, lat: 38.764182630957499 }, { lng: -9.477724150097581, lat: 38.763385330467202 }, { lng: -9.481212065498561, lat: 38.759757152557 }, { lng: -9.48172295946044, lat: 38.7592682688338 }, { lng: -9.48219087171031, lat: 38.758830957452197 }, { lng: -9.482930251586071, lat: 38.758142161906498 }, { lng: -9.483516439707859, lat: 38.7576027707075 }, { lng: -9.48377748628009, lat: 38.757347903817603 }, { lng: -9.483694749248359, lat: 38.757340480259899 }, { lng: -9.483658233038369, lat: 38.7573440585169 }, { lng: -9.48358071917662, lat: 38.757344955170801 }, { lng: -9.4834866065006, lat: 38.757380899308401 }, { lng: -9.4834355063562, lat: 38.757416260819497 }, { lng: -9.483404020058639, lat: 38.7574609437237 }, { lng: -9.483380742243151, lat: 38.757483369526099 }, { lng: -9.483296303208389, lat: 38.757574512793397 }, { lng: -9.48327149075754, lat: 38.757625329283698 }, { lng: -9.483276462456161, lat: 38.757663283836898 }, { lng: -9.483300544707699, lat: 38.757683541092 }, { lng: -9.483311833020039, lat: 38.757708723777597 }, { lng: -9.483318988863941, lat: 38.757746652193099 }, { lng: -9.48331075196379, lat: 38.757767283741302 }, { lng: -9.48328711604259, lat: 38.757770713071203 }, { lng: -9.48324155708344, lat: 38.7577522334199 }, { lng: -9.48312169524983, lat: 38.757679307361201 }, { lng: -9.483084616290091, lat: 38.757659195697101 }, { lng: -9.483005328477191, lat: 38.757682273815099 }, { lng: -9.48284300828108, lat: 38.757755306722402 }, { lng: -9.482814094664709, lat: 38.757820495238803 }, { lng: -9.482778383366041, lat: 38.757866757158297 }, { lng: -9.48274234835063, lat: 38.757901943480697 }, { lng: -9.48270155682598, lat: 38.757910342129797 }, { lng: -9.48266504133298, lat: 38.7579139155661 }, { lng: -9.48259998094589, lat: 38.757892510912598 }, { lng: -9.482528400715649, lat: 38.757866495762102 }, { lng: -9.4824355149829, lat: 38.757851714009099 }, { lng: -9.482215449461609, lat: 38.757833720984102 }, { lng: -9.482178281963, lat: 38.757808836936299 }, { lng: -9.482130272587099, lat: 38.757782458465002 }, { lng: -9.482067465680281, lat: 38.757764269328803 }, { lng: -9.48203472709811, lat: 38.757742490368997 }, { lng: -9.481989139677429, lat: 38.757722481068001 }, { lng: -9.481967546571029, lat: 38.757717953575501 }, { lng: -9.481962907047089, lat: 38.757703778748002 }, { lng: -9.481992735381411, lat: 38.757681272214199 }, { lng: -9.482022543278241, lat: 38.757663547133298 }, { lng: -9.482066756979449, lat: 38.757604483907002 }, { lng: -9.482083321981429, lat: 38.757567906572199 }, { lng: -9.48208698003862, lat: 38.757536245032099 }, { lng: -9.48213080596652, lat: 38.757456654374401 }, { lng: -9.48214058329191, lat: 38.757407536661098 }, { lng: -9.48214747818399, lat: 38.757315674310597 }, { lng: -9.482137900303529, lat: 38.757265160457202 }, { lng: -9.4821139965347, lat: 38.757254357958601 }, { lng: -9.48207092190944, lat: 38.757251704314903 }, { lng: -9.48202179949725, lat: 38.757276049529899 }, { lng: -9.481996162166331, lat: 38.757288959660897 }, { lng: -9.48198012725932, lat: 38.757353999330903 }, { lng: -9.4819763198483, lat: 38.757377729614802 }, { lng: -9.481976976000571, lat: 38.757412583186898 }, { lng: -9.48196235723872, lat: 38.757436439154802 }, { lng: -9.481936715784791, lat: 38.757449439396296 }, { lng: -9.481904080236211, lat: 38.757445040239404 }, { lng: -9.48187202421799, lat: 38.7574533377785 }, { lng: -9.481846705690909, lat: 38.757477321722298 }, { lng: -9.481834604726, lat: 38.757524931336398 }, { lng: -9.4818376528768, lat: 38.757570744752201 }, { lng: -9.4818380710204, lat: 38.757592896777297 }, { lng: -9.48181455940758, lat: 38.757602625178599 }, { lng: -9.481773435035629, lat: 38.757593643611898 }, { lng: -9.48171047227957, lat: 38.757567527606 }, { lng: -9.481641706047951, lat: 38.757568684134199 }, { lng: -9.48156812559499, lat: 38.757589349846697 }, { lng: -9.48153993578344, lat: 38.757607418247403 }, { lng: -9.48150291543034, lat: 38.757602620994199 }, { lng: -9.48147979060683, lat: 38.757584062858101 }, { lng: -9.481478748878089, lat: 38.757528769221103 }, { lng: -9.481470945066819, lat: 38.757493278406997 }, { lng: -9.481450656067929, lat: 38.757472705877497 }, { lng: -9.481429362597749, lat: 38.7574718688372 }, { lng: -9.48140233071722, lat: 38.757472180709101 }, { lng: -9.48137934329667, lat: 38.757460920712198 }, { lng: -9.481363366270759, lat: 38.757443357395601 }, { lng: -9.48136303246298, lat: 38.757425618109998 }, { lng: -9.48137839992248, lat: 38.757410849435303 }, { lng: -9.48142063580222, lat: 38.757387390119703 }, { lng: -9.48145254907937, lat: 38.757347298484397 }, { lng: -9.48148641803958, lat: 38.7572581839256 }, { lng: -9.481507438439801, lat: 38.7572380346367 }, { lng: -9.481524379148601, lat: 38.757233696587001 }, { lng: -9.48154859141802, lat: 38.757236568073601 }, { lng: -9.481568505588109, lat: 38.757231113898101 }, { lng: -9.481587930253349, lat: 38.7572057631128 }, { lng: -9.481620794112599, lat: 38.757142778499897 }, { lng: -9.481656847902689, lat: 38.757090121193301 }, { lng: -9.481744448247539, lat: 38.756977323512501 }, { lng: -9.48178853924829, lat: 38.756899527830399 }, { lng: -9.48181277746998, lat: 38.756836557132701 }, { lng: -9.481825385805291, lat: 38.756748680465101 }, { lng: -9.481821295661691, lat: 38.756684054118999 }, { lng: -9.48182013329617, lat: 38.756622363784203 }, { lng: -9.481814063120421, lat: 38.7565994663005 }, { lng: -9.481798145500351, lat: 38.756585054108399 }, { lng: -9.48177671298394, lat: 38.756583233304603 }, { lng: -9.481752539847029, lat: 38.756582429553298 }, { lng: -9.481750948999739, lat: 38.756571007379499 }, { lng: -9.48176674644626, lat: 38.7565060614494 }, { lng: -9.481775791717199, lat: 38.756461009222001 }, { lng: -9.48178063891458, lat: 38.756412944663502 }, { lng: -9.48177006326525, lat: 38.756382802126701 }, { lng: -9.481741183313069, lat: 38.756358003340999 }, { lng: -9.48169961686602, lat: 38.756343892520299 }, { lng: -9.481655605991, lat: 38.7563464739222 }, { lng: -9.481637188405241, lat: 38.756351911743401 }, { lng: -9.48159838126071, lat: 38.756325244901802 }, { lng: -9.48163778128562, lat: 38.7563038917759 }, { lng: -9.4816543471884, lat: 38.756279651271797 }, { lng: -9.481649585164011, lat: 38.756258897800898 }, { lng: -9.48161507221563, lat: 38.756240471993699 }, { lng: -9.48155804499145, lat: 38.756235906506298 }, { lng: -9.481525437243461, lat: 38.756239433592697 }, { lng: -9.48149181016168, lat: 38.756268018919997 }, { lng: -9.48147256318977, lat: 38.756302740033199 }, { lng: -9.481457141200041, lat: 38.756314353092797 }, { lng: -9.481440039077491, lat: 38.756310407818198 }, { lng: -9.48143921268146, lat: 38.7562665531186 }, { lng: -9.48141610866792, lat: 38.756249076533798 }, { lng: -9.481345028575721, lat: 38.7562498974698 }, { lng: -9.48119544950422, lat: 38.7563153066124 }, { lng: -9.481120120677691, lat: 38.756401838551398 }, { lng: -9.48109576887188, lat: 38.756471026557001 }, { lng: -9.48110199336567, lat: 38.756496085921903 }, { lng: -9.481085203430601, lat: 38.756508797422804 }, { lng: -9.48106807108422, lat: 38.7565089950307 }, { lng: -9.481055143658059, lat: 38.7565007688845 }, { lng: -9.481057431673911, lat: 38.756469394299003 }, { lng: -9.48105904890938, lat: 38.756408845578399 }, { lng: -9.481079242977909, lat: 38.756344839859302 }, { lng: -9.48112359564827, lat: 38.756293163395597 }, { lng: -9.48122161309943, lat: 38.756195925438703 }, { lng: -9.48127033414702, lat: 38.7561379832947 }, { lng: -9.481292042500501, lat: 38.756081348991003 }, { lng: -9.481312180536509, lat: 38.756020494729597 }, { lng: -9.48131408991159, lat: 38.755969308719301 }, { lng: -9.48130032331717, lat: 38.755916234506302 }, { lng: -9.48128842308026, lat: 38.755889167979703 }, { lng: -9.481255313179959, lat: 38.7558718067881 }, { lng: -9.48122259270848, lat: 38.755869028878998 }, { lng: -9.481181636067131, lat: 38.755887248967902 }, { lng: -9.48111625119917, lat: 38.755891155821701 }, { lng: -9.48103975847731, lat: 38.755903569611498 }, { lng: -9.4809945648864, lat: 38.7559228257347 }, { lng: -9.48095909114566, lat: 38.755926385717103 }, { lng: -9.48088334433592, lat: 38.755905374461598 }, { lng: -9.48079921001572, lat: 38.7559031902531 }, { lng: -9.480722698767551, lat: 38.755920739273797 }, { lng: -9.480671040303349, lat: 38.7559694336476 }, { lng: -9.48065027989032, lat: 38.756003094772701 }, { lng: -9.480625041870869, lat: 38.756019059876699 }, { lng: -9.48061590444636, lat: 38.755991960523701 }, { lng: -9.480599617169871, lat: 38.755970167107201 }, { lng: -9.48055525427014, lat: 38.755954019076299 }, { lng: -9.480510021511529, lat: 38.755971201017601 }, { lng: -9.480378997656921, lat: 38.756111613032303 }, { lng: -9.48033640179894, lat: 38.756189386459397 }, { lng: -9.480347061102769, lat: 38.756230068843003 }, { lng: -9.48034888704985, lat: 38.756254007069998 }, { lng: -9.48030542761556, lat: 38.7562858562587 }, { lng: -9.48026602604002, lat: 38.756307208955597 }, { lng: -9.48022197731134, lat: 38.756307717608401 }, { lng: -9.48013391992029, lat: 38.756317107853803 }, { lng: -9.480055616218451, lat: 38.756392142793203 }, { lng: -9.48005919637583, lat: 38.756429664962802 }, { lng: -9.480086620577801, lat: 38.7564502428773 }, { lng: -9.480112342368789, lat: 38.756454183580502 }, { lng: -9.480146266526919, lat: 38.756447485456597 }, { lng: -9.480168807166439, lat: 38.7564347024 }, { lng: -9.4801787552228, lat: 38.756431436880803 }, { lng: -9.48018588257745, lat: 38.756431354727098 }, { lng: -9.480190274099069, lat: 38.756438602954198 }, { lng: -9.480179324097669, lat: 38.756461695810103 }, { lng: -9.480028841513519, lat: 38.756705731590998 }, { lng: -9.47999944579724, lat: 38.756726968878098 }, { lng: -9.47996812901707, lat: 38.756725261658197 }, { lng: -9.479884882429079, lat: 38.7566907320384 }, { lng: -9.479834803935679, lat: 38.756670411535303 }, { lng: -9.47981742816334, lat: 38.756658088519401 }, { lng: -9.479812878235419, lat: 38.756642472255599 }, { lng: -9.47984798680754, lat: 38.7566190947351 }, { lng: -9.479892937236601, lat: 38.756587229434203 }, { lng: -9.47992639437753, lat: 38.756549193962002 }, { lng: -9.47992278826877, lat: 38.756510593879803 }, { lng: -9.479906695013799, lat: 38.756486816463202 }, { lng: -9.47987665286028, lat: 38.756479779152798 }, { lng: -9.47983841386454, lat: 38.756483370663197 }, { lng: -9.47979619948639, lat: 38.756507912774801 }, { lng: -9.4797750196172, lat: 38.756519591963297 }, { lng: -9.47975368928981, lat: 38.756516777875198 }, { lng: -9.47974894473834, lat: 38.756496925782002 }, { lng: -9.479739800122569, lat: 38.756463614812702 }, { lng: -9.479706295890081, lat: 38.756419144893997 }, { lng: -9.479688585128081, lat: 38.756388992499602 }, { lng: -9.47968165240167, lat: 38.756320160746199 }, { lng: -9.479645255014651, lat: 38.756274646836602 }, { lng: -9.479577407552741, lat: 38.756221113707397 }, { lng: -9.479525837760869, lat: 38.756200810249403 }, { lng: -9.47947816797911, lat: 38.756168028667098 }, { lng: -9.479441789328501, lat: 38.756123500806503 }, { lng: -9.47943946668169, lat: 38.756079662419801 }, { lng: -9.47947111194018, lat: 38.755945627076301 }, { lng: -9.479474698380169, lat: 38.755910095867897 }, { lng: -9.4794571690352, lat: 38.755883096702199 }, { lng: -9.4794140837373, lat: 38.755861703712597 }, { lng: -9.47938848075591, lat: 38.755864073101002 }, { lng: -9.47935955546226, lat: 38.7559103404963 }, { lng: -9.47932568786975, lat: 38.756005760666397 }, { lng: -9.47930750364959, lat: 38.756017501644401 }, { lng: -9.479297516202431, lat: 38.756018608424696 }, { lng: -9.47929172373733, lat: 38.7560103854657 }, { lng: -9.479307876441821, lat: 38.755964174238997 }, { lng: -9.47932431457629, lat: 38.755932727660401 }, { lng: -9.47934915694155, lat: 38.755889567183701 }, { lng: -9.47934972760134, lat: 38.755846772771498 }, { lng: -9.479338933057729, lat: 38.755798797504397 }, { lng: -9.479324003800849, lat: 38.755763480485797 }, { lng: -9.47929942093007, lat: 38.755740790706803 }, { lng: -9.479260695185429, lat: 38.755724577246802 }, { lng: -9.479221136200691, lat: 38.755737551648203 }, { lng: -9.47919587990804, lat: 38.755758741056397 }, { lng: -9.479158310693901, lat: 38.755804030656499 }, { lng: -9.479140539837431, lat: 38.755837652581803 }, { lng: -9.47914260801338, lat: 38.755874201365799 }, { lng: -9.47911914461706, lat: 38.755911043308799 }, { lng: -9.479092938282699, lat: 38.7559552111817 }, { lng: -9.47907331405856, lat: 38.7559700294862 }, { lng: -9.479047293007831, lat: 38.755950512476701 }, { lng: -9.47903275519581, lat: 38.755929782302999 }, { lng: -9.47901564098909, lat: 38.755931061211299 }, { lng: -9.47894542495696, lat: 38.755977809427698 }, { lng: -9.478837090090551, lat: 38.756040667045198 }, { lng: -9.478745464646821, lat: 38.756086579858099 }, { lng: -9.47868016702828, lat: 38.756094721514501 }, { lng: -9.47858168764472, lat: 38.756075949463401 }, { lng: -9.47850275378298, lat: 38.756038218340201 }, { lng: -9.47848362508817, lat: 38.756006098610101 }, { lng: -9.478488472802409, lat: 38.755957944989603 }, { lng: -9.47852441494649, lat: 38.755905375486101 }, { lng: -9.478632964178679, lat: 38.755774596678101 }, { lng: -9.478669159848989, lat: 38.755735538294502 }, { lng: -9.47868966464735, lat: 38.755688280801898 }, { lng: -9.478694595062249, lat: 38.755650665096603 }, { lng: -9.47870626391459, lat: 38.755512626378099 }, { lng: -9.478703020052221, lat: 38.755492848835601 }, { lng: -9.47868572084252, lat: 38.755478451217698 }, { lng: -9.47863201892744, lat: 38.755497898971697 }, { lng: -9.47849478905672, lat: 38.755541182174603 }, { lng: -9.47846394286486, lat: 38.755564509323698 }, { lng: -9.47844344790677, lat: 38.7556065377604 }, { lng: -9.478426766126001, lat: 38.755630783655398 }, { lng: -9.478408458772529, lat: 38.755636214295102 }, { lng: -9.478391265172011, lat: 38.755633261360003 }, { lng: -9.478388266471001, lat: 38.755620778033602 }, { lng: -9.478381953534001, lat: 38.755590585206903 }, { lng: -9.478386853539311, lat: 38.755545581839399 }, { lng: -9.4783973412555, lat: 38.7555036632032 }, { lng: -9.47840825852723, lat: 38.755478497337997 }, { lng: -9.47843059907613, lat: 38.755455362695699 }, { lng: -9.478510800636929, lat: 38.755407418020198 }, { lng: -9.478657521407939, lat: 38.755343036045602 }, { lng: -9.47872091523122, lat: 38.7553068162537 }, { lng: -9.47878514507506, lat: 38.755247613848603 }, { lng: -9.478854824425669, lat: 38.755166196295498 }, { lng: -9.478905597600599, lat: 38.755076883281497 }, { lng: -9.47893521397175, lat: 38.754987728310802 }, { lng: -9.47895440554249, lat: 38.754949948362899 }, { lng: -9.478970833871671, lat: 38.754918411866399 }, { lng: -9.47897459756998, lat: 38.754892245616197 }, { lng: -9.478945786788939, lat: 38.754797548240802 }, { lng: -9.478936447713661, lat: 38.754753789731303 }, { lng: -9.47894261991039, lat: 38.754702554649 }, { lng: -9.4789433522362, lat: 38.7546680480514 }, { lng: -9.478941578622409, lat: 38.754647174472801 }, { lng: -9.478908644062381, lat: 38.754632963242102 }, { lng: -9.47887856428728, lat: 38.754623937224899 }, { lng: -9.47886395072786, lat: 38.754605281442899 }, { lng: -9.478873603137311, lat: 38.754586345333898 }, { lng: -9.47890033159312, lat: 38.754570363442397 }, { lng: -9.47894997652083, lat: 38.754561506570397 }, { lng: -9.478983801801601, lat: 38.754549585524103 }, { lng: -9.478991782462749, lat: 38.754527512398298 }, { lng: -9.478980164862641, lat: 38.754515128341602 }, { lng: -9.478861281771421, lat: 38.754469477732698 }, { lng: -9.47883411405261, lat: 38.754462497122397 }, { lng: -9.47882442053821, lat: 38.754473057544601 }, { lng: -9.47881756735686, lat: 38.754487728751499 }, { lng: -9.47876821960411, lat: 38.754512347228101 }, { lng: -9.4786783836769, lat: 38.754574003564301 }, { lng: -9.478575331480339, lat: 38.7546911185838 }, { lng: -9.47852852083056, lat: 38.754777230484898 }, { lng: -9.478423116390511, lat: 38.755002101410199 }, { lng: -9.478389585422811, lat: 38.755035903744997 }, { lng: -9.47833603307979, lat: 38.755136774639702 }, { lng: -9.47828396326023, lat: 38.755243030295901 }, { lng: -9.478264497482421, lat: 38.755266226401901 }, { lng: -9.478246081032131, lat: 38.755271662775499 }, { lng: -9.478235308620469, lat: 38.755231072463701 }, { lng: -9.478270025557469, lat: 38.755107179735298 }, { lng: -9.478389384184821, lat: 38.754871879669899 }, { lng: -9.478441568395819, lat: 38.754772106308799 }, { lng: -9.478466119975829, lat: 38.754719576961897 }, { lng: -9.478476389539299, lat: 38.754659920378401 }, { lng: -9.47847006637997, lat: 38.754623420555198 }, { lng: -9.47843833160068, lat: 38.7545998274868 }, { lng: -9.47838690027911, lat: 38.754586819865899 }, { lng: -9.478301620780339, lat: 38.754590953243202 }, { lng: -9.47822661103957, lat: 38.754614789558197 }, { lng: -9.47818456479693, lat: 38.754648689843101 }, { lng: -9.47815522793746, lat: 38.754672986772803 }, { lng: -9.47809424202714, lat: 38.7546841383502 }, { lng: -9.47804162874497, lat: 38.754687894693603 }, { lng: -9.47799356173296, lat: 38.754700971994197 }, { lng: -9.47793258916942, lat: 38.7547132051454 }, { lng: -9.477895942365979, lat: 38.754728220034998 }, { lng: -9.47784381916772, lat: 38.754758093560902 }, { lng: -9.477800731261841, lat: 38.754809753347999 }, { lng: -9.47777318778104, lat: 38.754856005363898 }, { lng: -9.47774513725906, lat: 38.754881369202401 }, { lng: -9.47771830234233, lat: 38.754892126753198 }, { lng: -9.47766432793391, lat: 38.754896982200897 }, { lng: -9.47752962639878, lat: 38.754927720938099 }, { lng: -9.47746148690937, lat: 38.754937872667597 }, { lng: -9.47736641400294, lat: 38.754947343321902 }, { lng: -9.477300879526689, lat: 38.754942873599603 }, { lng: -9.47725263567949, lat: 38.754952795470501 }, { lng: -9.477201493648259, lat: 38.754955458108597 }, { lng: -9.47716581729782, lat: 38.754948569562899 }, { lng: -9.477142637085191, lat: 38.754926952207001 }, { lng: -9.47708212273325, lat: 38.754883778464198 }, { lng: -9.477029193996749, lat: 38.754870787465997 }, { lng: -9.47699211509279, lat: 38.754862838588302 }, { lng: -9.47686960927944, lat: 38.754856950180802 }, { lng: -9.476743257029799, lat: 38.7548667844787 }, { lng: -9.47665794874001, lat: 38.754857135376298 }, { lng: -9.47652007707611, lat: 38.754823051141599 }, { lng: -9.476415149967179, lat: 38.754797958674899 }, { lng: -9.47634288699637, lat: 38.754759968339002 }, { lng: -9.47633662065291, lat: 38.754726442047499 }, { lng: -9.476366030920159, lat: 38.7546199918947 }, { lng: -9.47639724743196, lat: 38.754530370572297 }, { lng: -9.476416848378079, lat: 38.754508164954203 }, { lng: -9.4764522973865, lat: 38.754490915099304 }, { lng: -9.47651767171623, lat: 38.754468091438703 }, { lng: -9.476555941940081, lat: 38.754447744740098 }, { lng: -9.47656261492455, lat: 38.754423437611798 }, { lng: -9.47658530267597, lat: 38.754412732503503 }, { lng: -9.47666351910947, lat: 38.754387686685597 }, { lng: -9.47670186585748, lat: 38.754371487055401 }, { lng: -9.47675003080923, lat: 38.7543084179297 }, { lng: -9.47678569088364, lat: 38.754277833411997 }, { lng: -9.476794574775161, lat: 38.754242240461203 }, { lng: -9.476779335658721, lat: 38.754196386878398 }, { lng: -9.476782330325531, lat: 38.754098800233898 }, { lng: -9.476795508089539, lat: 38.754034785802901 }, { lng: -9.476821277693061, lat: 38.753991887213502 }, { lng: -9.47689025545149, lat: 38.753934342688197 }, { lng: -9.47708395184983, lat: 38.753829336959399 }, { lng: -9.477093117245429, lat: 38.753802569087902 }, { lng: -9.477164371831099, lat: 38.7537378867247 }, { lng: -9.4772233527053, lat: 38.753662804794601 }, { lng: -9.47725153710345, lat: 38.753619878337801 }, { lng: -9.47725315609998, lat: 38.753577342983498 }, { lng: -9.477251224720749, lat: 38.753474499398401 }, { lng: -9.477279037184379, lat: 38.753412117210097 }, { lng: -9.47733568978366, lat: 38.753347602684499 }, { lng: -9.47736159104924, lat: 38.753311813954397 }, { lng: -9.47732942511024, lat: 38.753271378633301 }, { lng: -9.47728996555049, lat: 38.753222204253902 }, { lng: -9.47727672584589, lat: 38.753160295119201 }, { lng: -9.47726656794676, lat: 38.753133835947999 }, { lng: -9.477193949322981, lat: 38.753125758120397 }, { lng: -9.47713108919555, lat: 38.753122968976498 }, { lng: -9.47706862876864, lat: 38.753141430418601 }, { lng: -9.476975201253619, lat: 38.753183310055199 }, { lng: -9.476850710864181, lat: 38.753243200755101 }, { lng: -9.47672424959663, lat: 38.753351489257597 }, { lng: -9.4766965980926, lat: 38.753404320518101 }, { lng: -9.47666168095669, lat: 38.753449845469902 }, { lng: -9.47664206179458, lat: 38.753471060504801 }, { lng: -9.47648570056327, lat: 38.753524380453101 }, { lng: -9.476436082689199, lat: 38.753546932010103 }, { lng: -9.476400272740459, lat: 38.753545270964899 }, { lng: -9.47637010428573, lat: 38.753537241554199 }, { lng: -9.476333683277691, lat: 38.753502980927301 }, { lng: -9.476311586209119, lat: 38.753465404806498 }, { lng: -9.47628680801893, lat: 38.753438399279403 }, { lng: -9.47625369494927, lat: 38.753427249221403 }, { lng: -9.47620063607712, lat: 38.753425784547503 }, { lng: -9.47617052516561, lat: 38.753420821508698 }, { lng: -9.47618135296789, lat: 38.753385025206398 }, { lng: -9.47618480033678, lat: 38.753341930195504 }, { lng: -9.47618562647393, lat: 38.753306158755699 }, { lng: -9.476167493168139, lat: 38.753259170057703 }, { lng: -9.476147067061561, lat: 38.753237334385801 }, { lng: -9.476123898094601, lat: 38.753222469679599 }, { lng: -9.47607532587204, lat: 38.753220955190699 }, { lng: -9.47604127155109, lat: 38.753239185145098 }, { lng: -9.47601058084677, lat: 38.753277368793 }, { lng: -9.47598852292907, lat: 38.753321669379297 }, { lng: -9.475993546037611, lat: 38.753362592607601 }, { lng: -9.47599419579435, lat: 38.753397265275801 }, { lng: -9.475936016793639, lat: 38.753496657882899 }, { lng: -9.475914424395199, lat: 38.753566175266499 }, { lng: -9.47589928060968, lat: 38.753672457806502 }, { lng: -9.475870167788999, lat: 38.753721071194001 }, { lng: -9.475847696727341, lat: 38.753743396171103 }, { lng: -9.475792248162071, lat: 38.753761872754801 }, { lng: -9.47573361954902, lat: 38.753763623616202 }, { lng: -9.47567480697084, lat: 38.753755923993602 }, { lng: -9.475641893431989, lat: 38.7537489185666 }, { lng: -9.47561695868697, lat: 38.753719750171499 }, { lng: -9.475596671007381, lat: 38.753705301743103 }, { lng: -9.47554672029368, lat: 38.753710108186397 }, { lng: -9.47548601473491, lat: 38.753748547286897 }, { lng: -9.475450796307459, lat: 38.753778406633003 }, { lng: -9.47542665064992, lat: 38.7537912981959 }, { lng: -9.47536661943248, lat: 38.7537919885756 }, { lng: -9.47525175733667, lat: 38.753776461719397 }, { lng: -9.475164148805071, lat: 38.7537544101545 }, { lng: -9.475114810731331, lat: 38.753718223928303 }, { lng: -9.475025074201771, lat: 38.7536625100959 }, { lng: -9.474954563973659, lat: 38.753638098421703 }, { lng: -9.474891065747819, lat: 38.753607394563304 }, { lng: -9.47488208714906, lat: 38.753588582600301 }, { lng: -9.474874420760621, lat: 38.753560292193299 }, { lng: -9.47488405341452, lat: 38.7535401901483 }, { lng: -9.47491102171502, lat: 38.753530416245198 }, { lng: -9.474938001577771, lat: 38.753515424104201 }, { lng: -9.47496754786502, lat: 38.753489868109298 }, { lng: -9.47499498479622, lat: 38.753425508192599 }, { lng: -9.47498578035049, lat: 38.753388861091999 }, { lng: -9.474957150393161, lat: 38.753321994962199 }, { lng: -9.474942437439831, lat: 38.753298023536601 }, { lng: -9.47491783327491, lat: 38.753274076497199 }, { lng: -9.47482947504005, lat: 38.753291937825402 }, { lng: -9.474757411398381, lat: 38.753337889569501 }, { lng: -9.47470676948288, lat: 38.753385765292101 }, { lng: -9.474667519391151, lat: 38.753427197703999 }, { lng: -9.474622391129531, lat: 38.753462304886902 }, { lng: -9.474602634742309, lat: 38.753476222304798 }, { lng: -9.47457407802646, lat: 38.753480784560097 }, { lng: -9.474440678178571, lat: 38.753458085255303 }, { lng: -9.474113136352869, lat: 38.753461847638903 }, { lng: -9.474051666880589, lat: 38.753459493964399 }, { lng: -9.47402972376735, lat: 38.7534365971159 }, { lng: -9.474027869518331, lat: 38.753411397125902 }, { lng: -9.47404018543723, lat: 38.753380808346101 }, { lng: -9.474056865468061, lat: 38.753356477510401 }, { lng: -9.474110504872421, lat: 38.753241377320997 }, { lng: -9.474170006679429, lat: 38.753132512450499 }, { lng: -9.474290133608269, lat: 38.752980977350703 }, { lng: -9.474347273981619, lat: 38.752899436104002 }, { lng: -9.474377078135969, lat: 38.752813969582903 }, { lng: -9.47442369661843, lat: 38.752705342511497 }, { lng: -9.474430127187119, lat: 38.7525939357296 }, { lng: -9.47442885022312, lat: 38.752531980830298 }, { lng: -9.47441267113774, lat: 38.752491179253198 }, { lng: -9.474381906577319, lat: 38.752451634083599 }, { lng: -9.474337081395319, lat: 38.752435302507202 }, { lng: -9.474285892552979, lat: 38.752447421471203 }, { lng: -9.474226721221999, lat: 38.752494307654601 }, { lng: -9.47418563922276, lat: 38.752517933097202 }, { lng: -9.47416409586876, lat: 38.752516015776997 }, { lng: -9.47416376221619, lat: 38.752498186367298 }, { lng: -9.474181547821569, lat: 38.752452852425101 }, { lng: -9.474202721868989, lat: 38.752361275134 }, { lng: -9.47419391784068, lat: 38.752272109981902 }, { lng: -9.47415576798184, lat: 38.752218952544503 }, { lng: -9.474097493222679, lat: 38.752166026910899 }, { lng: -9.474031123814109, lat: 38.7521353555112 }, { lng: -9.47394078821738, lat: 38.752115222289 }, { lng: -9.47386927501416, lat: 38.752110819213598 }, { lng: -9.47376346918654, lat: 38.752112033883598 }, { lng: -9.47368941846921, lat: 38.752131800165799 }, { lng: -9.473569583091781, lat: 38.752145788924501 }, { lng: -9.473451036329971, lat: 38.752154443796002 }, { lng: -9.47337497486583, lat: 38.752140634603201 }, { lng: -9.47331634760774, lat: 38.752068887640299 }, { lng: -9.473188664264381, lat: 38.751970642165702 }, { lng: -9.473101535691271, lat: 38.751826707127499 }, { lng: -9.47308773058956, lat: 38.751771201157602 }, { lng: -9.4731071474008, lat: 38.7516594644732 }, { lng: -9.473142587503411, lat: 38.751487913764898 }, { lng: -9.473185273787999, lat: 38.7514023952983 }, { lng: -9.47327309852886, lat: 38.751356168304497 }, { lng: -9.473433634084421, lat: 38.751298657682099 }, { lng: -9.473471783992389, lat: 38.751271919775299 }, { lng: -9.473529769491581, lat: 38.7512355828556 }, { lng: -9.47363316967802, lat: 38.751179809052502 }, { lng: -9.473662419517551, lat: 38.751138491683101 }, { lng: -9.47368761232975, lat: 38.7511077561294 }, { lng: -9.473723021580399, lat: 38.751088434006697 }, { lng: -9.47380580186276, lat: 38.751080099994098 }, { lng: -9.473825657078921, lat: 38.7510714915541 }, { lng: -9.473845216368201, lat: 38.751047126811898 }, { lng: -9.473867786130549, lat: 38.751030026387099 }, { lng: -9.473936327040329, lat: 38.751022932043703 }, { lng: -9.47403511435382, lat: 38.751028104874202 }, { lng: -9.47420276570155, lat: 38.751043020919901 }, { lng: -9.47432865301468, lat: 38.751045807178798 }, { lng: -9.47438975080026, lat: 38.751021958282301 }, { lng: -9.47442478616345, lat: 38.750982733447799 }, { lng: -9.47442272596648, lat: 38.7509523096099 }, { lng: -9.474392653586801, lat: 38.750790158571498 }, { lng: -9.474273105523929, lat: 38.750708486750597 }, { lng: -9.47395220945187, lat: 38.750636414833103 }, { lng: -9.473795884810819, lat: 38.750605695266202 }, { lng: -9.4736933446323, lat: 38.750553905913499 }, { lng: -9.473620162108331, lat: 38.750497009320704 }, { lng: -9.47358048934869, lat: 38.750479450056702 }, { lng: -9.47349543394666, lat: 38.750488801735699 }, { lng: -9.4734614290698, lat: 38.750509642578699 }, { lng: -9.47342637423729, lat: 38.750560574529203 }, { lng: -9.473397135535929, lat: 38.7505777567536 }, { lng: -9.473359596555341, lat: 38.750581786679199 }, { lng: -9.47331997511472, lat: 38.750566663293903 }, { lng: -9.473245425144929, lat: 38.750522928736999 }, { lng: -9.473160155311231, lat: 38.750428786212602 }, { lng: -9.473067737809229, lat: 38.750309601574401 }, { lng: -9.472986747004301, lat: 38.750271974883802 }, { lng: -9.47286975590999, lat: 38.750246836416302 }, { lng: -9.47282098554761, lat: 38.750265501657502 }, { lng: -9.47279557511054, lat: 38.750309029415099 }, { lng: -9.472778373582839, lat: 38.750354985199699 }, { lng: -9.472762360118191, lat: 38.750372010264897 }, { lng: -9.47273953953278, lat: 38.7503819108763 }, { lng: -9.47270669844859, lat: 38.750378683365199 }, { lng: -9.472569750351489, lat: 38.7503261209119 }, { lng: -9.47230782513321, lat: 38.7502581453113 }, { lng: -9.472089069363649, lat: 38.750210123602997 }, { lng: -9.47200523763947, lat: 38.750199015625498 }, { lng: -9.471983645055539, lat: 38.750182416071901 }, { lng: -9.47195392436508, lat: 38.750081693060203 }, { lng: -9.471919011983619, lat: 38.749967700062399 }, { lng: -9.47189277403462, lat: 38.7497947826431 }, { lng: -9.471917710495561, lat: 38.749725861770997 }, { lng: -9.47196041347356, lat: 38.749641149714002 }, { lng: -9.472015241274629, lat: 38.749589990773202 }, { lng: -9.47202400989357, lat: 38.749535751929798 }, { lng: -9.472032616983149, lat: 38.749467018101299 }, { lng: -9.472041064112361, lat: 38.749395941425199 }, { lng: -9.472114385329601, lat: 38.749281965934699 }, { lng: -9.472313101564129, lat: 38.749125661808797 }, { lng: -9.4723853148797, lat: 38.7490442144856 }, { lng: -9.472422235948629, lat: 38.748915072757498 }, { lng: -9.472437077833501, lat: 38.748835365546299 }, { lng: -9.472384601672671, lat: 38.7486555464072 }, { lng: -9.472355350039519, lat: 38.748586074479803 }, { lng: -9.4722232752365, lat: 38.748443288729497 }, { lng: -9.472098610717859, lat: 38.748352028793001 }, { lng: -9.472029230914339, lat: 38.748320309785299 }, { lng: -9.47196860497332, lat: 38.748319831512703 }, { lng: -9.471891711158509, lat: 38.748329088516797 }, { lng: -9.471860477705169, lat: 38.748325847749797 }, { lng: -9.47181097346448, lat: 38.748304797441897 }, { lng: -9.47176604337632, lat: 38.748270360765297 }, { lng: -9.471738859036829, lat: 38.748218970280199 }, { lng: -9.47171958679405, lat: 38.748148030040802 }, { lng: -9.471807966504761, lat: 38.748058020830797 }, { lng: -9.47188604114231, lat: 38.748025783668801 }, { lng: -9.47200201557234, lat: 38.748008780116102 }, { lng: -9.472207031508869, lat: 38.748017326015997 }, { lng: -9.472425018926399, lat: 38.748018430355202 }, { lng: -9.47260336506057, lat: 38.748003141698902 }, { lng: -9.47284419989599, lat: 38.747995516254001 }, { lng: -9.47300182764811, lat: 38.7480165894763 }, { lng: -9.47313294977752, lat: 38.748016342735099 }, { lng: -9.47318185329406, lat: 38.748004884625203 }, { lng: -9.473245456406611, lat: 38.747986140136099 }, { lng: -9.473263167159089, lat: 38.747967831773401 }, { lng: -9.47327408292559, lat: 38.747942484416797 }, { lng: -9.473270253850799, lat: 38.747910008173498 }, { lng: -9.47321118192119, lat: 38.747820432931299 }, { lng: -9.47317327601535, lat: 38.747718631258202 }, { lng: -9.473124813184389, lat: 38.7476673940917 }, { lng: -9.473077228159489, lat: 38.747663168333702 }, { lng: -9.47293145287283, lat: 38.747667181526403 }, { lng: -9.472881584102581, lat: 38.747632898272997 }, { lng: -9.472779792340971, lat: 38.747620823016803 }, { lng: -9.47260447561227, lat: 38.747533749031199 }, { lng: -9.47250339545664, lat: 38.747479602566401 }, { lng: -9.472370362057999, lat: 38.747377632381003 }, { lng: -9.47230440887134, lat: 38.747350735665599 }, { lng: -9.472346602892181, lat: 38.74733097411 }, { lng: -9.472375769886391, lat: 38.747316227723701 }, { lng: -9.47236706250869, lat: 38.747287412188001 }, { lng: -9.472348429598361, lat: 38.747250337816602 }, { lng: -9.47231998789972, lat: 38.7472241795572 }, { lng: -9.47228197838845, lat: 38.7472029968282 }, { lng: -9.47221927072431, lat: 38.747183269860102 }, { lng: -9.47227477182612, lat: 38.747168132595903 }, { lng: -9.472300878146459, lat: 38.747161889346998 }, { lng: -9.47229870452726, lat: 38.747137773871103 }, { lng: -9.47226239073912, lat: 38.747121343934303 }, { lng: -9.472107916746291, lat: 38.747096635027603 }, { lng: -9.47205491905633, lat: 38.747067157687802 }, { lng: -9.47197517954327, lat: 38.7470103297142 }, { lng: -9.47192079396893, lat: 38.746992939303603 }, { lng: -9.471883965774371, lat: 38.746954810413499 }, { lng: -9.471850654174579, lat: 38.746926366742898 }, { lng: -9.471765554425611, lat: 38.746927342378299 }, { lng: -9.471726198134871, lat: 38.7469265356834 }, { lng: -9.471709551527541, lat: 38.746915914511803 }, { lng: -9.471725569109971, lat: 38.746892854441498 }, { lng: -9.47176639626788, lat: 38.746886441808101 }, { lng: -9.47184169870099, lat: 38.746884315528 }, { lng: -9.47190275176599, lat: 38.746907664697503 }, { lng: -9.47195065253058, lat: 38.746928824322403 }, { lng: -9.471994812932721, lat: 38.746922282449198 }, { lng: -9.47200760818934, lat: 38.746905294350498 }, { lng: -9.47200724817367, lat: 38.746886021297598 }, { lng: -9.47194793780494, lat: 38.746869944777501 }, { lng: -9.471888676481379, lat: 38.7468561231697 }, { lng: -9.47184576264479, lat: 38.746837337549699 }, { lng: -9.471848473204719, lat: 38.746809658556202 }, { lng: -9.47193457487271, lat: 38.7467702071052 }, { lng: -9.472050160807241, lat: 38.7467267274045 }, { lng: -9.472105506223301, lat: 38.746709245523803 }, { lng: -9.47213771753516, lat: 38.746678791985701 }, { lng: -9.472125138226071, lat: 38.746615164054703 }, { lng: -9.47210437166655, lat: 38.7465564003476 }, { lng: -9.472100205733231, lat: 38.7465119541029 }, { lng: -9.472066961535051, lat: 38.746487111860802 }, { lng: -9.472019129509221, lat: 38.746469556337097 }, { lng: -9.47194684385825, lat: 38.7464607462651 }, { lng: -9.471859934040809, lat: 38.746456970470398 }, { lng: -9.47181205828519, lat: 38.7464370697815 }, { lng: -9.47176344030316, lat: 38.746377548608301 }, { lng: -9.47174433293354, lat: 38.7463211978827 }, { lng: -9.471746651917959, lat: 38.746272981526502 }, { lng: -9.471775125782431, lat: 38.746214917539703 }, { lng: -9.47186547598581, lat: 38.7461380395129 }, { lng: -9.47200634047403, lat: 38.746049860999001 }, { lng: -9.472192322743361, lat: 38.746006746593601 }, { lng: -9.47249871792091, lat: 38.745999629105398 }, { lng: -9.47257746872617, lat: 38.746003588011398 }, { lng: -9.472688378647319, lat: 38.745980606739103 }, { lng: -9.47276163975175, lat: 38.745955716726399 }, { lng: -9.472790696742241, lat: 38.745928903106901 }, { lng: -9.472837177556819, lat: 38.745874236404603 }, { lng: -9.47284603257734, lat: 38.745818827295999 }, { lng: -9.472825334191731, lat: 38.745763667774497 }, { lng: -9.47278179482837, lat: 38.7457172372103 }, { lng: -9.47271543402587, lat: 38.745674671246299 }, { lng: -9.47267516355288, lat: 38.745624602833502 }, { lng: -9.47267464403925, lat: 38.745596865357903 }, { lng: -9.47267072854372, lat: 38.745559618740899 }, { lng: -9.47263519299656, lat: 38.745504719310098 }, { lng: -9.472573689905101, lat: 38.745457235281698 }, { lng: -9.472491678318329, lat: 38.745450969056499 }, { lng: -9.472438906042941, lat: 38.745433559487097 }, { lng: -9.47230504655287, lat: 38.745287098349898 }, { lng: -9.472277471386841, lat: 38.745215175993103 }, { lng: -9.47227476171607, lat: 38.745156206306703 }, { lng: -9.47228130729162, lat: 38.745063538500901 }, { lng: -9.47226575848558, lat: 38.745019125392702 }, { lng: -9.47225698080598, lat: 38.744992746298898 }, { lng: -9.472266621872921, lat: 38.744979392848201 }, { lng: -9.47228946674683, lat: 38.744976790017098 }, { lng: -9.472332352493281, lat: 38.744988277843802 }, { lng: -9.472449081812369, lat: 38.745012251639999 }, { lng: -9.47252136489994, lat: 38.745021061441598 }, { lng: -9.472578386111669, lat: 38.745001129883903 }, { lng: -9.47263470841045, lat: 38.744949954412498 }, { lng: -9.472658579046101, lat: 38.744910042850996 }, { lng: -9.472646580215789, lat: 38.744883699803999 }, { lng: -9.47260052066855, lat: 38.744874589543599 }, { lng: -9.4725906115331, lat: 38.744867499723703 }, { lng: -9.47262783040232, lat: 38.744840588098903 }, { lng: -9.47264337720261, lat: 38.744798345288203 }, { lng: -9.472636148829629, lat: 38.744762308523498 }, { lng: -9.472606323547231, lat: 38.744742200371597 }, { lng: -9.472568423045351, lat: 38.744733001093202 }, { lng: -9.47253274668693, lat: 38.744750252377301 }, { lng: -9.47249055833233, lat: 38.744775958955103 }, { lng: -9.472471031628301, lat: 38.744783475283 }, { lng: -9.47232304311105, lat: 38.7447550883548 }, { lng: -9.472266938304299, lat: 38.744731592614002 }, { lng: -9.47224831654772, lat: 38.744701539509997 }, { lng: -9.47224607972141, lat: 38.744667877582401 }, { lng: -9.472266990827929, lat: 38.744648456286903 }, { lng: -9.472339716349101, lat: 38.744594655551097 }, { lng: -9.472371496916139, lat: 38.744541324851497 }, { lng: -9.472383864267799, lat: 38.7445014604832 }, { lng: -9.47239974076232, lat: 38.744477229142397 }, { lng: -9.472442222373861, lat: 38.744467102400101 }, { lng: -9.47248906267286, lat: 38.744431709792998 }, { lng: -9.47252411520777, lat: 38.744380772709803 }, { lng: -9.47254976951495, lat: 38.744350394196999 }, { lng: -9.47262781901939, lat: 38.744316982243603 }, { lng: -9.47266032066713, lat: 38.744302194867103 }, { lng: -9.47267794618906, lat: 38.744285150430699 }, { lng: -9.47267590532997, lat: 38.744262292692902 }, { lng: -9.47264758095951, lat: 38.744236137652798 }, { lng: -9.472624222040499, lat: 38.744217127281303 }, { lng: -9.472615453479699, lat: 38.744184713008401 }, { lng: -9.472628090394791, lat: 38.744159345973301 }, { lng: -9.47265728244116, lat: 38.744139733319997 }, { lng: -9.47269477258067, lat: 38.744133267638801 }, { lng: -9.472721349011939, lat: 38.744152241118698 }, { lng: -9.472744595139851, lat: 38.744165215864101 }, { lng: -9.47277900122158, lat: 38.744165989790297 }, { lng: -9.472831458458179, lat: 38.744166650474902 }, { lng: -9.472898409985049, lat: 38.7441549865163 }, { lng: -9.472945840039699, lat: 38.744144892943503 }, { lng: -9.473011027281339, lat: 38.744124867565297 }, { lng: -9.473053391316039, lat: 38.744114742850797 }, { lng: -9.473109144723111, lat: 38.744112930865398 }, { lng: -9.473163054211451, lat: 38.744105018423603 }, { lng: -9.4731968703863, lat: 38.744074546190603 }, { lng: -9.473256526233619, lat: 38.744023326793297 }, { lng: -9.473309335031299, lat: 38.7439566072185 }, { lng: -9.4733048764899, lat: 38.743890448813097 }, { lng: -9.47331860683467, lat: 38.743837331134401 }, { lng: -9.473293320876399, lat: 38.743801501465498 }, { lng: -9.4732123413233, lat: 38.743757931495502 }, { lng: -9.47312636331861, lat: 38.743717936247499 }, { lng: -9.47309357071784, lat: 38.743717139420198 }, { lng: -9.47299135702038, lat: 38.7436821934172 }, { lng: -9.472930083696401, lat: 38.743646868093798 }, { lng: -9.47289053165964, lat: 38.743635245883802 }, { lng: -9.472836574314099, lat: 38.7436406420208 }, { lng: -9.472795795061479, lat: 38.743649575699997 }, { lng: -9.472772684901569, lat: 38.743643806392903 }, { lng: -9.47271168094975, lat: 38.743622888240701 }, { lng: -9.47266731673478, lat: 38.743618534403502 }, { lng: -9.472596605777911, lat: 38.743601331388 }, { lng: -9.472569841484161, lat: 38.743572721886601 }, { lng: -9.47256440555616, lat: 38.743546303611097 }, { lng: -9.472564067876, lat: 38.743528293161297 }, { lng: -9.47258192203936, lat: 38.743517276713099 }, { lng: -9.47260643502422, lat: 38.7435121334752 }, { lng: -9.472619115550049, lat: 38.7434891061163 }, { lng: -9.472617924145389, lat: 38.743425346790403 }, { lng: -9.47263210591594, lat: 38.7433963644079 }, { lng: -9.472633268714519, lat: 38.743372296257803 }, { lng: -9.47261668789251, lat: 38.743359248701402 }, { lng: -9.47259047078208, lat: 38.743359549163102 }, { lng: -9.4725711901834, lat: 38.743380215599302 }, { lng: -9.472556712298781, lat: 38.743399568629599 }, { lng: -9.472519295600661, lat: 38.743409637368302 }, { lng: -9.472473388253331, lat: 38.743408990657599 }, { lng: -9.47243853161908, lat: 38.743396148000599 }, { lng: -9.4723305883224, lat: 38.743313168229001 }, { lng: -9.472301719791, lat: 38.7432641372991 }, { lng: -9.47229923679318, lat: 38.743217234294903 }, { lng: -9.47230010362963, lat: 38.743183535897899 }, { lng: -9.4722865689066, lat: 38.743148835125197 }, { lng: -9.472262785491649, lat: 38.743100919611202 }, { lng: -9.47226814770606, lat: 38.743037079782297 }, { lng: -9.472265792462739, lat: 38.742997383202301 }, { lng: -9.47225344381671, lat: 38.7429518569989 }, { lng: -9.472220132381921, lat: 38.742923327830098 }, { lng: -9.4722031916217, lat: 38.742891001742997 }, { lng: -9.4722127544795, lat: 38.742793431625202 }, { lng: -9.4722118342735, lat: 38.742744169631798 }, { lng: -9.472221295141409, lat: 38.742721184605799 }, { lng: -9.47223764456745, lat: 38.7427221646725 }, { lng: -9.47224946179262, lat: 38.742738876214197 }, { lng: -9.472277336265041, lat: 38.742740987995198 }, { lng: -9.47230650602334, lat: 38.742720207396403 }, { lng: -9.47231108600854, lat: 38.742700877729497 }, { lng: -9.47228750510504, lat: 38.742669890602798 }, { lng: -9.472264397561229, lat: 38.742658085161402 }, { lng: -9.472244353378199, lat: 38.7426378702406 }, { lng: -9.472230569807911, lat: 38.742601908540699 }, { lng: -9.47220237734911, lat: 38.742588989455498 }, { lng: -9.4721806979587, lat: 38.742567619566003 }, { lng: -9.472174769932201, lat: 38.7425086867229 }, { lng: -9.47220757941956, lat: 38.7424240923567 }, { lng: -9.472234636538079, lat: 38.742382885998097 }, { lng: -9.4722748768811, lat: 38.7423451379358 }, { lng: -9.47231064467775, lat: 38.742326622816101 }, { lng: -9.472341760518161, lat: 38.742329863929299 }, { lng: -9.472366775163231, lat: 38.742351286550097 }, { lng: -9.47238217090403, lat: 38.742387228861297 }, { lng: -9.47239897297197, lat: 38.742406223447297 }, { lng: -9.472426930791279, lat: 38.7424131109752 }, { lng: -9.472453064065659, lat: 38.742408033875599 }, { lng: -9.47246256798222, lat: 38.742393515491599 }, { lng: -9.472506659379031, lat: 38.742383370283498 }, { lng: -9.47253936328722, lat: 38.742379391559503 }, { lng: -9.47257175143192, lat: 38.742358574912998 }, { lng: -9.472590961590059, lat: 38.7423342143599 }, { lng: -9.472596863671679, lat: 38.742299285460099 }, { lng: -9.472572992351671, lat: 38.742246598776703 }, { lng: -9.47257084574704, lat: 38.742217706239899 }, { lng: -9.47258314413328, lat: 38.742174237782699 }, { lng: -9.472582153654599, lat: 38.742121288877598 }, { lng: -9.472538951405131, lat: 38.742086922715998 }, { lng: -9.47244946964655, lat: 38.742037419927698 }, { lng: -9.47241139389612, lat: 38.742012543942799 }, { lng: -9.472350255106919, lat: 38.741984327362502 }, { lng: -9.47232707875982, lat: 38.741975045751502 }, { lng: -9.472281602842971, lat: 38.741929718058202 }, { lng: -9.472186994742289, lat: 38.741840102549297 }, { lng: -9.47198507186866, lat: 38.741559039855602 }, { lng: -9.471971616956321, lat: 38.741497671079898 }, { lng: -9.47200549395332, lat: 38.7414334190345 }, { lng: -9.472053342889859, lat: 38.741378102810799 }, { lng: -9.472102417922621, lat: 38.741314849424199 }, { lng: -9.472165823264399, lat: 38.741187478683102 }, { lng: -9.47220377017377, lat: 38.741100746488897 }, { lng: -9.472290413252029, lat: 38.7410046369939 }, { lng: -9.472382268048349, lat: 38.740940887921802 }, { lng: -9.472432265094, lat: 38.740926896381403 }, { lng: -9.4725661874962, lat: 38.740910768473498 }, { lng: -9.472682894943221, lat: 38.740872495228203 }, { lng: -9.472757865100711, lat: 38.740883886327502 }, { lng: -9.473100828092401, lat: 38.741043439494 }, { lng: -9.473265545693939, lat: 38.741124418300302 }, { lng: -9.47333443705446, lat: 38.741142724512102 }, { lng: -9.4733803028452, lat: 38.7411354428694 }, { lng: -9.47339983000006, lat: 38.7411217949047 }, { lng: -9.47340544519726, lat: 38.741095969641599 }, { lng: -9.47338336359962, lat: 38.741059293440799 }, { lng: -9.473321497589369, lat: 38.741010732097799 }, { lng: -9.473269322901411, lat: 38.740994484306597 }, { lng: -9.473250664998091, lat: 38.740974524785898 }, { lng: -9.473233079783711, lat: 38.7409322095777 }, { lng: -9.473215400304751, lat: 38.740878635930301 }, { lng: -9.47316067900635, lat: 38.740812160207902 }, { lng: -9.47310362159476, lat: 38.740774712154497 }, { lng: -9.472977644209349, lat: 38.740723552798997 }, { lng: -9.47292965142362, lat: 38.740684828855898 }, { lng: -9.4729071585838, lat: 38.740625819291999 }, { lng: -9.47291559905438, lat: 38.740585369328599 }, { lng: -9.4729666422636, lat: 38.740541094580401 }, { lng: -9.47305886117832, lat: 38.740503106185102 }, { lng: -9.47315011876322, lat: 38.7404874685229 }, { lng: -9.473226397666259, lat: 38.7404888431656 }, { lng: -9.47337970034755, lat: 38.740537527095299 }, { lng: -9.47343927245011, lat: 38.740543507804603 }, { lng: -9.473500327512189, lat: 38.740542806743399 }, { lng: -9.47355351635998, lat: 38.740533281928897 }, { lng: -9.47365882912816, lat: 38.7405128860932 }, { lng: -9.47371163899841, lat: 38.740483096621098 }, { lng: -9.47372512081389, lat: 38.740466186024101 }, { lng: -9.473748577032859, lat: 38.740416645334598 }, { lng: -9.47375940384091, lat: 38.740343738729003 }, { lng: -9.473751125380261, lat: 38.740306903367397 }, { lng: -9.473735328533779, lat: 38.740280151791403 }, { lng: -9.47370719821992, lat: 38.740245795126697 }, { lng: -9.473682548125179, lat: 38.740231486418999 }, { lng: -9.47361968785501, lat: 38.740209870295097 }, { lng: -9.473590149897261, lat: 38.740179943476498 }, { lng: -9.47356848721571, lat: 38.740165600482598 }, { lng: -9.47355167656219, lat: 38.740164711459897 }, { lng: -9.473544381548489, lat: 38.740180469271202 }, { lng: -9.47353548618841, lat: 38.740190662515801 }, { lng: -9.47351410201045, lat: 38.7401909077523 }, { lng: -9.473504816528401, lat: 38.740186509530197 }, { lng: -9.47347962146377, lat: 38.740143109732003 }, { lng: -9.47346481057019, lat: 38.740082839385899 }, { lng: -9.473477527554641, lat: 38.740031171798002 }, { lng: -9.473528379164019, lat: 38.739976811374703 }, { lng: -9.47356575296217, lat: 38.739939453342302 }, { lng: -9.47358347728872, lat: 38.7399034015653 }, { lng: -9.473597564190371, lat: 38.739832616704597 }, { lng: -9.473596433222159, lat: 38.739772189480497 }, { lng: -9.4736010649292, lat: 38.739693771912101 }, { lng: -9.47358202318433, lat: 38.739653637981498 }, { lng: -9.47355037046573, lat: 38.739596892708597 }, { lng: -9.473485098465479, lat: 38.739526032508898 }, { lng: -9.47339974493169, lat: 38.739445224842797 }, { lng: -9.473365369794161, lat: 38.739403103071602 }, { lng: -9.47333116460362, lat: 38.739345214212001 }, { lng: -9.47333642999685, lat: 38.739282100526403 }, { lng: -9.473335540003539, lat: 38.739234551420502 }, { lng: -9.47332871803142, lat: 38.739214456187298 }, { lng: -9.473307096557891, lat: 38.739183717906101 }, { lng: -9.47326273655707, lat: 38.7391485563777 }, { lng: -9.47323141042755, lat: 38.739121625177901 }, { lng: -9.47323078753679, lat: 38.7390883005368 }, { lng: -9.47322852845277, lat: 38.739053828168998 }, { lng: -9.473244168653711, lat: 38.739022754523198 }, { lng: -9.473244996139769, lat: 38.738981128947401 }, { lng: -9.47323142659387, lat: 38.738950389306602 }, { lng: -9.4731986701696, lat: 38.738926982962198 }, { lng: -9.47317559797257, lat: 38.738904642874303 }, { lng: -9.47316063741294, lat: 38.738885809226403 }, { lng: -9.473160236726221, lat: 38.738864371189003 }, { lng: -9.47317621014548, lat: 38.738851126109701 }, { lng: -9.473208472631439, lat: 38.738848416036099 }, { lng: -9.473239554635359, lat: 38.738862293502997 }, { lng: -9.47328984410272, lat: 38.738870000298903 }, { lng: -9.473297782426, lat: 38.738858021025599 }, { lng: -9.473310355597871, lat: 38.738841301945001 }, { lng: -9.473325164484759, lat: 38.738766190574701 }, { lng: -9.47330671661328, lat: 38.738733071218199 }, { lng: -9.473265666873891, lat: 38.738702647569099 }, { lng: -9.4732181503538, lat: 38.738671125257603 }, { lng: -9.473193666386081, lat: 38.738659516819297 }, { lng: -9.47318358128194, lat: 38.738642968355101 }, { lng: -9.47319322208021, lat: 38.738635745407898 }, { lng: -9.47322909181614, lat: 38.738647222403102 }, { lng: -9.47327128732945, lat: 38.738652682730702 }, { lng: -9.473274126953291, lat: 38.7386323803319 }, { lng: -9.473239227455149, lat: 38.738586484030499 }, { lng: -9.473246830097709, lat: 38.7385566699244 }, { lng: -9.47327398505991, lat: 38.738538525293201 }, { lng: -9.47325428215064, lat: 38.738524521869302 }, { lng: -9.473229865491501, lat: 38.738516512110102 }, { lng: -9.47321962555748, lat: 38.738491679316702 }, { lng: -9.4732289537612, lat: 38.738467794958197 }, { lng: -9.473215650228269, lat: 38.738451281595196 }, { lng: -9.47318819200494, lat: 38.738452769201302 }, { lng: -9.473166815391661, lat: 38.738435177400802 }, { lng: -9.47318084224451, lat: 38.738404121357 }, { lng: -9.47316973438806, lat: 38.738332911081699 }, { lng: -9.4730151262525, lat: 38.738115889419099 }, { lng: -9.47290444977404, lat: 38.737997089270699 }, { lng: -9.47283706155407, lat: 38.737947961294303 }, { lng: -9.47279730747533, lat: 38.737900857627103 }, { lng: -9.47278327778117, lat: 38.737839313542601 }, { lng: -9.472751440929789, lat: 38.737785006698601 }, { lng: -9.47268549647819, lat: 38.737721357115497 }, { lng: -9.47265084402993, lat: 38.737682483737501 }, { lng: -9.472641240067061, lat: 38.737605306631998 }, { lng: -9.472648017977839, lat: 38.737537495263801 }, { lng: -9.47262699488256, lat: 38.737440184581601 }, { lng: -9.472605108957101, lat: 38.737395306324103 }, { lng: -9.472588553995649, lat: 38.7372911004381 }, { lng: -9.47258205453474, lat: 38.737201997687301 }, { lng: -9.472561336145899, lat: 38.737133238549902 }, { lng: -9.47244958378702, lat: 38.737048947648603 }, { lng: -9.4723936242649, lat: 38.736996085395297 }, { lng: -9.47233953179126, lat: 38.736963379691701 }, { lng: -9.472336135143861, lat: 38.736953870532197 }, { lng: -9.47236370266868, lat: 38.736958326005599 }, { lng: -9.472428797119569, lat: 38.736976585318601 }, { lng: -9.47249551962569, lat: 38.736990140175202 }, { lng: -9.4725375151174, lat: 38.7369848867027 }, { lng: -9.472527452296561, lat: 38.736969509810798 }, { lng: -9.472443631255009, lat: 38.736902732109201 }, { lng: -9.472347548509511, lat: 38.736869334757799 }, { lng: -9.472194075266881, lat: 38.7368045295051 }, { lng: -9.472146439290739, lat: 38.7367789567381 }, { lng: -9.47212319092406, lat: 38.736747065864698 }, { lng: -9.472122912393029, lat: 38.736719772362299 }, { lng: -9.47218256666685, lat: 38.736705942335902 }, { lng: -9.47223281311808, lat: 38.736711309912899 }, { lng: -9.47226785291199, lat: 38.736678840435303 }, { lng: -9.4722991917623, lat: 38.736620200273798 }, { lng: -9.47251441123738, lat: 38.736271935283 }, { lng: -9.472677221908651, lat: 38.736060820664498 }, { lng: -9.472945094635749, lat: 38.735668890493798 }, { lng: -9.473039508959131, lat: 38.735434782838901 }, { lng: -9.4730681957731, lat: 38.7351918805279 }, { lng: -9.473146980075001, lat: 38.734903183807198 }, { lng: -9.47322449145738, lat: 38.734552621951899 }, { lng: -9.47327507603972, lat: 38.734311990635199 }, { lng: -9.4734067072151, lat: 38.734081960648901 }, { lng: -9.473453245626979, lat: 38.733969639694301 }, { lng: -9.473467077968071, lat: 38.733848242969003 }, { lng: -9.473465743606861, lat: 38.733776915188201 }, { lng: -9.47350278164568, lat: 38.733678938799898 }, { lng: -9.47361367348744, lat: 38.733551559474499 }, { lng: -9.4736315006495, lat: 38.733465783498403 }, { lng: -9.47363711999491, lat: 38.733415727640001 }, { lng: -9.473665008727179, lat: 38.733351186136801 }, { lng: -9.473737019250059, lat: 38.733217227558903 }, { lng: -9.473776876869019, lat: 38.733097866166403 }, { lng: -9.47389634498265, lat: 38.732906259319698 }, { lng: -9.473949460487651, lat: 38.732800980537199 }, { lng: -9.474156770440979, lat: 38.732406139158599 }, { lng: -9.47422927097595, lat: 38.732199844315701 }, { lng: -9.474411176372129, lat: 38.731830430623397 }, { lng: -9.474782827474019, lat: 38.731135282226298 }, { lng: -9.474850665234429, lat: 38.731024070956799 }, { lng: -9.47503784951625, lat: 38.730562081928497 }, { lng: -9.4750876344077, lat: 38.7304202734827 }, { lng: -9.475089853248781, lat: 38.730348276165302 }, { lng: -9.47513041611127, lat: 38.7302733164898 }, { lng: -9.4752463680252, lat: 38.730115346148203 }, { lng: -9.47528648599242, lat: 38.730022466346597 }, { lng: -9.47528566856908, lat: 38.729978786936101 }, { lng: -9.47526135101478, lat: 38.729951593790901 }, { lng: -9.47524338483624, lat: 38.7299379283318 }, { lng: -9.47523828803879, lat: 38.729917270209299 }, { lng: -9.475246191181579, lat: 38.729897272608198 }, { lng: -9.475257705763029, lat: 38.729885970939002 }, { lng: -9.475413190753621, lat: 38.729831398146402 }, { lng: -9.475475249214311, lat: 38.729816904719002 }, { lng: -9.475587490063511, lat: 38.729780214822902 }, { lng: -9.475613013282, lat: 38.7297617253802 }, { lng: -9.47562425247037, lat: 38.729735654328302 }, { lng: -9.475623929342911, lat: 38.729718453470099 }, { lng: -9.47564255690251, lat: 38.729706079230098 }, { lng: -9.47566963044004, lat: 38.729702345379799 }, { lng: -9.475698898687259, lat: 38.729693360990197 }, { lng: -9.475716164310221, lat: 38.729675868033603 }, { lng: -9.47572178934659, lat: 38.729656797329497 }, { lng: -9.475722519285281, lat: 38.7296343608526 }, { lng: -9.475710366261779, lat: 38.729611981371697 }, { lng: -9.47568720707898, lat: 38.729572523733701 }, { lng: -9.475695821982629, lat: 38.729529188170197 }, { lng: -9.47568605790631, lat: 38.729511195885799 }, { lng: -9.475656234420009, lat: 38.729490821781098 }, { lng: -9.47564087764987, lat: 38.729487484283503 }, { lng: -9.475605810925961, lat: 38.729493922141003 }, { lng: -9.475584540326439, lat: 38.729494166431898 }, { lng: -9.47554102107804, lat: 38.729491244236399 }, { lng: -9.475506840926689, lat: 38.729495960433198 }, { lng: -9.47547645390936, lat: 38.729506669071803 }, { lng: -9.47544000956078, lat: 38.729507087589099 }, { lng: -9.47542691763309, lat: 38.7294959783951 }, { lng: -9.475422986206141, lat: 38.729476206758903 }, { lng: -9.47542386233914, lat: 38.729461515164203 }, { lng: -9.47541535555848, lat: 38.729443417441402 }, { lng: -9.475395027186231, lat: 38.729426356231002 }, { lng: -9.475377094825699, lat: 38.729414491928097 }, { lng: -9.47536611541577, lat: 38.729393000596602 }, { lng: -9.47537166753458, lat: 38.729376542957702 }, { lng: -9.4754339241089, lat: 38.729360243951497 }, { lng: -9.475459691638591, lat: 38.7293548136984 }, { lng: -9.475479451624, lat: 38.729347650904302 }, { lng: -9.47549341477211, lat: 38.729338032541897 }, { lng: -9.47549427286766, lat: 38.729322439489998 }, { lng: -9.47547242001335, lat: 38.729285488940398 }, { lng: -9.475460258858011, lat: 38.729262298838201 }, { lng: -9.47544910360353, lat: 38.7292313506223 }, { lng: -9.47546267633137, lat: 38.729200934528997 }, { lng: -9.47547879220285, lat: 38.729183454809998 }, { lng: -9.4755207144461, lat: 38.729162255825898 }, { lng: -9.475643981354199, lat: 38.729149664368798 }, { lng: -9.47586307203721, lat: 38.729102203378197 }, { lng: -9.475981248487169, lat: 38.729069677609303 }, { lng: -9.476257541967749, lat: 38.729000024174397 }, { lng: -9.476536078458921, lat: 38.728927732097901 }, { lng: -9.47671875348829, lat: 38.728882394970803 }, { lng: -9.476830714903249, lat: 38.728831024666199 }, { lng: -9.476907561475141, lat: 38.728796089719999 }, { lng: -9.4769249933266, lat: 38.728781296963 }, { lng: -9.476945658349729, lat: 38.7287672786209 }, { lng: -9.47698309453901, lat: 38.728758381963601 }, { lng: -9.47703829573117, lat: 38.728746214851299 }, { lng: -9.47709659911505, lat: 38.728740229110102 }, { lng: -9.47711325573902, lat: 38.7287331008217 }, { lng: -9.47712556792044, lat: 38.728721432195897 }, { lng: -9.47713154900136, lat: 38.728709112150497 }, { lng: -9.477130240929689, lat: 38.728694536634499 }, { lng: -9.477102760587981, lat: 38.728676475236398 }, { lng: -9.47708691456798, lat: 38.728665125863003 }, { lng: -9.47707834518612, lat: 38.728656039311502 }, { lng: -9.477078043155959, lat: 38.728639920930902 }, { lng: -9.47707863117072, lat: 38.728616131328998 }, { lng: -9.47707002483604, lat: 38.728604704119 }, { lng: -9.47701981019223, lat: 38.728600686657401 }, { lng: -9.4769998933471, lat: 38.728593260056698 }, { lng: -9.476982876147041, lat: 38.728581204424202 }, { lng: -9.47697635172206, lat: 38.728564342389497 }, { lng: -9.476949079211071, lat: 38.728557000345198 }, { lng: -9.47694472591064, lat: 38.728551740395403 }, { lng: -9.47694347633216, lat: 38.728540223194898 }, { lng: -9.47695157820784, lat: 38.7285247279084 }, { lng: -9.47694626235689, lat: 38.728517132537199 }, { lng: -9.47693042448746, lat: 38.728512720723799 }, { lng: -9.47691679850244, lat: 38.728509812074698 }, { lng: -9.476905161696539, lat: 38.728502289368102 }, { lng: -9.476903882325811, lat: 38.728489243014103 }, { lng: -9.476923498503041, lat: 38.728474425145997 }, { lng: -9.477026348683181, lat: 38.728446399081697 }, { lng: -9.477045923836981, lat: 38.728429332459903 }, { lng: -9.477048523950319, lat: 38.728402458931498 }, { lng: -9.477011890326301, lat: 38.7283990050298 }, { lng: -9.4769889406301, lat: 38.728401614465298 }, { lng: -9.47696192634435, lat: 38.728408051126799 }, { lng: -9.476937015565801, lat: 38.728416712804403 }, { lng: -9.47692548119476, lat: 38.728414595300698 }, { lng: -9.47692329589789, lat: 38.728408496136502 }, { lng: -9.47692316597589, lat: 38.728401561755902 }, { lng: -9.476944004081369, lat: 38.728396725602501 }, { lng: -9.47696166818027, lat: 38.728394272422697 }, { lng: -9.476978101630619, lat: 38.728381742142098 }, { lng: -9.476977915969769, lat: 38.728371833182599 }, { lng: -9.476956932975, lat: 38.728362798358603 }, { lng: -9.47693807820292, lat: 38.728363015120202 }, { lng: -9.47692425842348, lat: 38.728349393224399 }, { lng: -9.476896217708379, lat: 38.728356651456401 }, { lng: -9.47688268356924, lat: 38.728358336538697 }, { lng: -9.47684640984165, lat: 38.728318849733299 }, { lng: -9.47683659097642, lat: 38.728298245959799 }, { lng: -9.47684570351176, lat: 38.728281209566703 }, { lng: -9.47687895490081, lat: 38.728270104638803 }, { lng: -9.476980964343269, lat: 38.728252089450699 }, { lng: -9.476977958010471, lat: 38.728153132872301 }, { lng: -9.47695503628117, lat: 38.728040619072999 }, { lng: -9.47691901966588, lat: 38.728014910103703 }, { lng: -9.47677633243344, lat: 38.727978993053199 }, { lng: -9.476659928765089, lat: 38.727958895585601 }, { lng: -9.476570696413759, lat: 38.727934609738398 }, { lng: -9.476550174724879, lat: 38.727894939993199 }, { lng: -9.476537819572821, lat: 38.727849057504599 }, { lng: -9.47654566188478, lat: 38.727825904238301 }, { lng: -9.47656621199393, lat: 38.727805761193899 }, { lng: -9.476575226128229, lat: 38.727783409648197 }, { lng: -9.47657921685348, lat: 38.727714186084199 }, { lng: -9.4765740589364, lat: 38.727665964467299 }, { lng: -9.47656409544312, lat: 38.727631490579398 }, { lng: -9.476555318895739, lat: 38.727610964875701 }, { lng: -9.47652778181906, lat: 38.727589844095597 }, { lng: -9.47647656761418, lat: 38.727587368279202 }, { lng: -9.476431702756679, lat: 38.727592479563398 }, { lng: -9.476379218795881, lat: 38.727577771521801 }, { lng: -9.4762967035354, lat: 38.727580251009897 }, { lng: -9.476253549141211, lat: 38.727560030228503 }, { lng: -9.476236849143829, lat: 38.727558691720098 }, { lng: -9.476224558293341, lat: 38.7275718039322 }, { lng: -9.476204729159541, lat: 38.727575182639001 }, { lng: -9.476194255444071, lat: 38.727574492294302 }, { lng: -9.476181288956999, lat: 38.727551584444697 }, { lng: -9.47616816204763, lat: 38.727464899907098 }, { lng: -9.476144522517689, lat: 38.7273692411461 }, { lng: -9.47611694880227, lat: 38.727241564015301 }, { lng: -9.476116847527051, lat: 38.727180943820798 }, { lng: -9.47614896713177, lat: 38.727109230746002 }, { lng: -9.47619617137137, lat: 38.727063382703001 }, { lng: -9.47629137766245, lat: 38.727020133945501 }, { lng: -9.47652040643751, lat: 38.726975345416797 }, { lng: -9.47655039328051, lat: 38.726961938819997 }, { lng: -9.47656140297611, lat: 38.726935688354402 }, { lng: -9.47653311819583, lat: 38.7269298882374 }, { lng: -9.476444340520899, lat: 38.726929379003998 }, { lng: -9.476404333244741, lat: 38.726911463190802 }, { lng: -9.47637885529022, lat: 38.726889508021699 }, { lng: -9.47634429185142, lat: 38.726886030115402 }, { lng: -9.476309857205999, lat: 38.726889491099001 }, { lng: -9.47629308481469, lat: 38.726884278346198 }, { lng: -9.476290844616701, lat: 38.726875119005697 }, { lng: -9.476304240776599, lat: 38.726865772786503 }, { lng: -9.476324861282331, lat: 38.726855540071 }, { lng: -9.47636976835506, lat: 38.726852768527799 }, { lng: -9.476396802590809, lat: 38.726847056890101 }, { lng: -9.476408037687239, lat: 38.7268331470056 }, { lng: -9.47643166010725, lat: 38.726811346402897 }, { lng: -9.47646373835885, lat: 38.726798726481 }, { lng: -9.4765649647833, lat: 38.7267883717453 }, { lng: -9.476601235714369, lat: 38.726778768896402 }, { lng: -9.476636646495169, lat: 38.726772234914101 }, { lng: -9.47665861840041, lat: 38.726772702085903 }, { lng: -9.476675131009531, lat: 38.726764046019802 }, { lng: -9.47669181069031, lat: 38.726758538900498 }, { lng: -9.47668431067431, lat: 38.726750969519898 }, { lng: -9.47663391705807, lat: 38.726736958171301 }, { lng: -9.47649315729849, lat: 38.726693357606003 }, { lng: -9.47631684338501, lat: 38.726703766236 }, { lng: -9.4762895635857, lat: 38.726696423213497 }, { lng: -9.476277941784311, lat: 38.726689620877998 }, { lng: -9.476285900733529, lat: 38.7266665572619 }, { lng: -9.476300001092531, lat: 38.726639552496799 }, { lng: -9.47632961511837, lat: 38.726606242473203 }, { lng: -9.47634084076179, lat: 38.726591522016498 }, { lng: -9.476351190207581, lat: 38.726585276999799 }, { lng: -9.47638979648883, lat: 38.726584023577701 }, { lng: -9.476401195343, lat: 38.726578491611697 }, { lng: -9.47641046213155, lat: 38.7265700044208 }, { lng: -9.4763998738776, lat: 38.726563190220098 }, { lng: -9.47639251839999, lat: 38.726563274745601 }, { lng: -9.476392403699681, lat: 38.726557149973203 }, { lng: -9.476397561190311, lat: 38.726550160233899 }, { lng: -9.476405749191731, lat: 38.726545470447199 }, { lng: -9.476430757667909, lat: 38.726542117760303 }, { lng: -9.47644006781305, lat: 38.726535884679201 }, { lng: -9.47645527249694, lat: 38.726512652211497 }, { lng: -9.476460615640359, lat: 38.726460439321002 }, { lng: -9.4764723147641, lat: 38.726415805369697 }, { lng: -9.4764906240047, lat: 38.726392627295503 }, { lng: -9.47657043714408, lat: 38.726356400114099 }, { lng: -9.476633578338021, lat: 38.726271269300703 }, { lng: -9.47668562581717, lat: 38.726177085385402 }, { lng: -9.476725545636359, lat: 38.726079975548402 }, { lng: -9.47675842612991, lat: 38.726048877976702 }, { lng: -9.4768320023252, lat: 38.725962102116704 }, { lng: -9.476884482736351, lat: 38.725866378233903 }, { lng: -9.476911930604331, lat: 38.725772652649603 }, { lng: -9.47691123945456, lat: 38.725735821178702 }, { lng: -9.476897815313951, lat: 38.725688416099501 }, { lng: -9.47687599996998, lat: 38.725641106579197 }, { lng: -9.47688356230474, lat: 38.725596519237001 }, { lng: -9.476905575976661, lat: 38.725544115582899 }, { lng: -9.476970525899929, lat: 38.725438970448202 }, { lng: -9.47699651059609, lat: 38.7253773306361 }, { lng: -9.477007857650239, lat: 38.725314237728298 }, { lng: -9.477002627314491, lat: 38.7252560166704 }, { lng: -9.47702872088832, lat: 38.725200499888103 }, { lng: -9.477090575532969, lat: 38.725156824131503 }, { lng: -9.477129774743389, lat: 38.725131778996598 }, { lng: -9.477135032240399, lat: 38.724970756639998 }, { lng: -9.47711996900391, lat: 38.724946337189998 }, { lng: -9.4771254329253, lat: 38.72490636965 }, { lng: -9.47717862668085, lat: 38.724842885654297 }, { lng: -9.4772209919849, lat: 38.724765654388797 }, { lng: -9.47722892122575, lat: 38.724740970572803 }, { lng: -9.477213803506009, lat: 38.7247135810426 }, { lng: -9.47718092615693, lat: 38.7246341559391 }, { lng: -9.477184227736441, lat: 38.724589618463099 }, { lng: -9.477202448716049, lat: 38.724555629426497 }, { lng: -9.477264496638361, lat: 38.724522671340701 }, { lng: -9.477301314078639, lat: 38.724480812862701 }, { lng: -9.477319045914619, lat: 38.724426922560802 }, { lng: -9.47732685918352, lat: 38.724396114879603 }, { lng: -9.477390868880519, lat: 38.724357098152197 }, { lng: -9.477446246291301, lat: 38.724293589822402 }, { lng: -9.47749700078268, lat: 38.724216256570898 }, { lng: -9.477527177784051, lat: 38.724157541839801 }, { lng: -9.47755827018146, lat: 38.724141782088601 }, { lng: -9.47760583274821, lat: 38.724115202085997 }, { lng: -9.477615749492051, lat: 38.724092030283799 }, { lng: -9.47763557914668, lat: 38.724033520108897 }, { lng: -9.477653194425841, lat: 38.723967295139602 }, { lng: -9.477687854630849, lat: 38.723926991749103 }, { lng: -9.47770820240404, lat: 38.723896129040099 }, { lng: -9.477763982232499, lat: 38.7237496547123 }, { lng: -9.47780536009623, lat: 38.723626314595698 }, { lng: -9.47784160504812, lat: 38.7235968948699 }, { lng: -9.47785133993975, lat: 38.723558141029201 }, { lng: -9.477863907576859, lat: 38.723523226081802 }, { lng: -9.477887333260959, lat: 38.723515301005897 }, { lng: -9.47792973570234, lat: 38.723532197035603 }, { lng: -9.477985059021471, lat: 38.723539217052704 }, { lng: -9.478016454653559, lat: 38.723527323371698 }, { lng: -9.47804234380823, lat: 38.723503785813001 }, { lng: -9.478042055107441, lat: 38.723488386979398 }, { lng: -9.47806319402784, lat: 38.723499675341799 }, { lng: -9.478084812572311, lat: 38.723530411971197 }, { lng: -9.478150928859121, lat: 38.723548923974697 }, { lng: -9.47818478162894, lat: 38.723533040418303 }, { lng: -9.47836890458527, lat: 38.723534795837601 }, { lng: -9.47865814352266, lat: 38.723531464180397 }, { lng: -9.47878624461725, lat: 38.723495217418801 }, { lng: -9.478858803242179, lat: 38.723440338118699 }, { lng: -9.478894947484109, lat: 38.723399387654297 }, { lng: -9.478917934278099, lat: 38.723368137652002 }, { lng: -9.478949184390791, lat: 38.723348499731898 }, { lng: -9.47900164495425, lat: 38.723344019752801 }, { lng: -9.47903879773917, lat: 38.723362959302399 }, { lng: -9.479078881264289, lat: 38.723397268149803 }, { lng: -9.479107887749979, lat: 38.723398821259501 }, { lng: -9.479146990708321, lat: 38.723380990774103 }, { lng: -9.47929725152922, lat: 38.723263330404002 }, { lng: -9.47933646524816, lat: 38.723251347237003 }, { lng: -9.47937060714748, lat: 38.723250953140301 }, { lng: -9.479434155567411, lat: 38.7232733690755 }, { lng: -9.47945243870732, lat: 38.723267395418802 }, { lng: -9.47949686391761, lat: 38.723251390617797 }, { lng: -9.479559805071011, lat: 38.723235262605897 }, { lng: -9.47959365623818, lat: 38.7232193795627 }, { lng: -9.479637285211741, lat: 38.723160957922801 }, { lng: -9.47972031942099, lat: 38.723094335773297 }, { lng: -9.479784796925721, lat: 38.723031797022998 }, { lng: -9.47980721015286, lat: 38.722963895085002 }, { lng: -9.479795913066431, lat: 38.722919615791803 }, { lng: -9.479747642617969, lat: 38.722871892751201 }, { lng: -9.47967880463583, lat: 38.722849446938298 }, { lng: -9.479578511437779, lat: 38.722829438761899 }, { lng: -9.47948705686507, lat: 38.722857511439003 }, { lng: -9.479399112155861, lat: 38.722931937445502 }, { lng: -9.479393020550839, lat: 38.7228894906644 }, { lng: -9.479384258683011, lat: 38.722845187536002 }, { lng: -9.479312348072529, lat: 38.722793860582897 }, { lng: -9.479028099306669, lat: 38.722646441347401 }, { lng: -9.479027519827181, lat: 38.7226155545317 }, { lng: -9.479003188406461, lat: 38.722581063398302 }, { lng: -9.478949851363691, lat: 38.722539161439897 }, { lng: -9.47884650969398, lat: 38.722497836027003 }, { lng: -9.478792889683881, lat: 38.7224405341953 }, { lng: -9.478746651132131, lat: 38.722359908567903 }, { lng: -9.478740641261171, lat: 38.7223214277682 }, { lng: -9.478745418557789, lat: 38.722294257989098 }, { lng: -9.47878183918459, lat: 38.722274565998603 }, { lng: -9.478838977871449, lat: 38.722237243547497 }, { lng: -9.478922112986981, lat: 38.722176383881397 }, { lng: -9.47894543349129, lat: 38.722156752581299 }, { lng: -9.47900296389798, lat: 38.7221406871653 }, { lng: -9.47918437111432, lat: 38.722138596604601 }, { lng: -9.47923107238149, lat: 38.722109050639901 }, { lng: -9.47926717236605, lat: 38.722071976552698 }, { lng: -9.479271516320569, lat: 38.722021663018303 }, { lng: -9.47925236382107, lat: 38.721981351009703 }, { lng: -9.479240955110789, lat: 38.721931217974301 }, { lng: -9.47925033316818, lat: 38.721873191779999 }, { lng: -9.47924138493917, lat: 38.721819250805602 }, { lng: -9.479208321188739, lat: 38.721736491959099 }, { lng: -9.47910150817372, lat: 38.721650800884603 }, { lng: -9.479010592018531, lat: 38.721566905661 }, { lng: -9.47895385380197, lat: 38.721484509385 }, { lng: -9.47887295981411, lat: 38.721377258959897 }, { lng: -9.478861153531559, lat: 38.721311734602899 }, { lng: -9.478840006970611, lat: 38.721165155349802 }, { lng: -9.47889228652032, lat: 38.721010068905798 }, { lng: -9.47895811024172, lat: 38.720872125672699 }, { lng: -9.479043259683991, lat: 38.720789895525201 }, { lng: -9.47908199850921, lat: 38.720752791108303 }, { lng: -9.47908109178039, lat: 38.720704521507997 }, { lng: -9.47902388281714, lat: 38.720596998458497 }, { lng: -9.478989340689459, lat: 38.720435080306103 }, { lng: -9.479069967517651, lat: 38.720252648086102 }, { lng: -9.479266850047519, lat: 38.7199548395104 }, { lng: -9.479373694339669, lat: 38.7197603970355 }, { lng: -9.479444146692719, lat: 38.719734544420099 }, { lng: -9.47950193256259, lat: 38.719731894503603 }, { lng: -9.4795705483504, lat: 38.719742725858602 }, { lng: -9.479683363973949, lat: 38.7197317864103 }, { lng: -9.47980621336718, lat: 38.719691728467197 }, { lng: -9.479833616426101, lat: 38.719614125432301 }, { lng: -9.479825862776959, lat: 38.719482883374198 }, { lng: -9.47982955267411, lat: 38.719397812351403 }, { lng: -9.479883968550199, lat: 38.719356651075699 }, { lng: -9.479970103585281, lat: 38.719320887416103 }, { lng: -9.480006129072979, lat: 38.719279937966398 }, { lng: -9.48001484387353, lat: 38.7191870579666 }, { lng: -9.47999797624875, lat: 38.719127446086603 }, { lng: -9.479946960046901, lat: 38.719068132161098 }, { lng: -9.47994857715889, lat: 38.719019833480203 }, { lng: -9.479965493278909, lat: 38.718934604660099 }, { lng: -9.479991012220459, lat: 38.718897652250597 }, { lng: -9.48006154120942, lat: 38.7188698140002 }, { lng: -9.48011382165517, lat: 38.718855611867902 }, { lng: -9.48017185747938, lat: 38.718866559380103 }, { lng: -9.480229536730549, lat: 38.718858147248604 }, { lng: -9.48026154554057, lat: 38.718879039119201 }, { lng: -9.480324866019419, lat: 38.718895694147797 }, { lng: -9.480406151037389, lat: 38.718883224872997 }, { lng: -9.48044250077548, lat: 38.7188595671212 }, { lng: -9.480457379290341, lat: 38.718807239601901 }, { lng: -9.480445464906129, lat: 38.718735948137599 }, { lng: -9.480473599162959, lat: 38.718691214406597 }, { lng: -9.48051497718045, lat: 38.718653988118298 }, { lng: -9.480572799368209, lat: 38.718653320741403 }, { lng: -9.480601950659331, lat: 38.718662623799602 }, { lng: -9.48063377839097, lat: 38.718673873175803 }, { lng: -9.480675887663979, lat: 38.718675280276699 }, { lng: -9.480704270497171, lat: 38.7186499118528 }, { lng: -9.480716974765709, lat: 38.718628509172603 }, { lng: -9.4807377939578, lat: 38.718616647514501 }, { lng: -9.480769730015069, lat: 38.718633664097702 }, { lng: -9.48079340560159, lat: 38.718633391157503 }, { lng: -9.480814189309349, lat: 38.718619640992898 }, { lng: -9.48084727682251, lat: 38.718563232915201 }, { lng: -9.480894090791191, lat: 38.718539539054099 }, { lng: -9.480957448763739, lat: 38.718552322726602 }, { lng: -9.481009919872729, lat: 38.718541987679103 }, { lng: -9.48106410808529, lat: 38.7184892068246 }, { lng: -9.48116059729027, lat: 38.718447558912501 }, { lng: -9.481220333871461, lat: 38.718408228166702 }, { lng: -9.48125867780203, lat: 38.718349866850701 }, { lng: -9.48130671657812, lat: 38.718245005268102 }, { lng: -9.48103266738176, lat: 38.718217273797698 }, { lng: -9.4810113097057, lat: 38.718194281247897 }, { lng: -9.48100562261329, lat: 38.718173086087802 }, { lng: -9.481036653618039, lat: 38.718147687049203 }, { lng: -9.481089044231769, lat: 38.718133573289599 }, { lng: -9.48114961697542, lat: 38.7181386370018 }, { lng: -9.48116264759642, lat: 38.7181346161561 }, { lng: -9.481162392579289, lat: 38.718121104033301 }, { lng: -9.48114638815985, lat: 38.718107778928797 }, { lng: -9.48110927388575, lat: 38.718096585245199 }, { lng: -9.480982228763761, lat: 38.718047883892503 }, { lng: -9.48096362056898, lat: 38.7180364767855 }, { lng: -9.48096596772281, lat: 38.718020956581199 }, { lng: -9.481026111364431, lat: 38.7180028783715 }, { lng: -9.481169624295999, lat: 38.717949065683598 }, { lng: -9.481219006426629, lat: 38.717915708406501 }, { lng: -9.481260317109779, lat: 38.7178746976209 }, { lng: -9.481314910403, lat: 38.717843082635198 }, { lng: -9.48138572920047, lat: 38.7178365009826 }, { lng: -9.481408789690709, lat: 38.717803448102501 }, { lng: -9.481462475761621, lat: 38.717723562557801 }, { lng: -9.48153213549678, lat: 38.717649255826899 }, { lng: -9.481518481227351, lat: 38.717626264587501 }, { lng: -9.481497379113421, lat: 38.717616869813298 }, { lng: -9.4814944778905, lat: 38.717603389113499 }, { lng: -9.481522895573139, lat: 38.717579912594402 }, { lng: -9.48158563386715, lat: 38.717559824290902 }, { lng: -9.481638751401491, lat: 38.717590105968 }, { lng: -9.48167792446305, lat: 38.717576144417897 }, { lng: -9.48168549495006, lat: 38.717556778932398 }, { lng: -9.48167661658467, lat: 38.717506618716897 }, { lng: -9.48151465488942, lat: 38.717282489764997 }, { lng: -9.481420955716009, lat: 38.717190881868902 }, { lng: -9.48138355175276, lat: 38.717158435376497 }, { lng: -9.48137790305397, lat: 38.717139223270998 }, { lng: -9.48144684436441, lat: 38.717167434536698 }, { lng: -9.481486994180351, lat: 38.717205521449202 }, { lng: -9.481537756335641, lat: 38.717251322585703 }, { lng: -9.48158138393552, lat: 38.717333869799397 }, { lng: -9.481635736416949, lat: 38.7174298083427 }, { lng: -9.481702649659249, lat: 38.7174909153333 }, { lng: -9.48175388938032, lat: 38.717555989015104 }, { lng: -9.481822386616649, lat: 38.717566724048702 }, { lng: -9.481943057264431, lat: 38.717551821231098 }, { lng: -9.48197133696433, lat: 38.717514836536502 }, { lng: -9.48200438579377, lat: 38.7174564450942 }, { lng: -9.48214253834211, lat: 38.7173930548946 }, { lng: -9.4821962605777, lat: 38.717315152079898 }, { lng: -9.48226826971314, lat: 38.717231269700498 }, { lng: -9.48228347456943, lat: 38.717196323826997 }, { lng: -9.48227691686499, lat: 38.717128842203103 }, { lng: -9.48225718272891, lat: 38.717057551085098 }, { lng: -9.48226669536294, lat: 38.717007267839499 }, { lng: -9.482231247020909, lat: 38.716938141553001 }, { lng: -9.482240764880419, lat: 38.716887769072599 }, { lng: -9.482263569551471, lat: 38.716841208414301 }, { lng: -9.48226248074193, lat: 38.716783300945103 }, { lng: -9.48223793139779, lat: 38.716737192206701 }, { lng: -9.482130685397539, lat: 38.7166225078007 }, { lng: -9.482048097912619, lat: 38.716565542570002 }, { lng: -9.482024015378631, lat: 38.716544559718301 }, { lng: -9.482052833228, lat: 38.716542339190099 }, { lng: -9.48210628293366, lat: 38.716584143008802 }, { lng: -9.48214618053005, lat: 38.716608813924701 }, { lng: -9.482207334593969, lat: 38.716644861180697 }, { lng: -9.48223390297828, lat: 38.716663827319003 }, { lng: -9.482249588310671, lat: 38.716654012627203 }, { lng: -9.482251674595179, lat: 38.716630749735202 }, { lng: -9.48222390503909, lat: 38.716548019756097 }, { lng: -9.482191099222581, lat: 38.716484710715598 }, { lng: -9.48214305619136, lat: 38.716442754466598 }, { lng: -9.4820523178496, lat: 38.716374260734099 }, { lng: -9.48198859080839, lat: 38.716342118169401 }, { lng: -9.48196722849689, lat: 38.716324980806696 }, { lng: -9.48196697459576, lat: 38.716311474074303 }, { lng: -9.482016906761491, lat: 38.7163070264479 }, { lng: -9.48205937858701, lat: 38.716327791703897 }, { lng: -9.482091416167879, lat: 38.716356423921397 }, { lng: -9.482134360524171, lat: 38.7164023204232 }, { lng: -9.482185235756729, lat: 38.7164480299041 }, { lng: -9.482233133298349, lat: 38.716482246647097 }, { lng: -9.482292584266681, lat: 38.716568481575202 }, { lng: -9.48236482508325, lat: 38.716631420116698 }, { lng: -9.482415331688619, lat: 38.716663624087701 }, { lng: -9.48244451276654, lat: 38.716674908930898 }, { lng: -9.482575936902601, lat: 38.716675374489803 }, { lng: -9.48265982494995, lat: 38.716660799153502 }, { lng: -9.48275112585341, lat: 38.716624979226602 }, { lng: -9.482800259070689, lat: 38.716578109093497 }, { lng: -9.48283377945242, lat: 38.7165448441907 }, { lng: -9.482832929036631, lat: 38.716359479450297 }, { lng: -9.48280297120451, lat: 38.716166615017499 }, { lng: -9.482810213166839, lat: 38.716129868501703 }, { lng: -9.482846417882101, lat: 38.716098555184303 }, { lng: -9.48288305100195, lat: 38.716090384747801 }, { lng: -9.48290687946483, lat: 38.716097856191702 }, { lng: -9.48291263688453, lat: 38.716122830959101 }, { lng: -9.4829161209499, lat: 38.716167284878502 }, { lng: -9.48294566368012, lat: 38.716203607567302 }, { lng: -9.482967712764591, lat: 38.716257486196596 }, { lng: -9.48299777141858, lat: 38.716315057345 }, { lng: -9.48299625885501, lat: 38.716374976527298 }, { lng: -9.48299727533934, lat: 38.716429008836798 }, { lng: -9.483037136987431, lat: 38.716451696380098 }, { lng: -9.483071603781831, lat: 38.716468684020001 }, { lng: -9.48311896266013, lat: 38.7164681362216 }, { lng: -9.483152701452349, lat: 38.716446490364497 }, { lng: -9.48317832744322, lat: 38.716415299113002 }, { lng: -9.483225001981729, lat: 38.7163723331849 }, { lng: -9.483323979419019, lat: 38.716322909091097 }, { lng: -9.483399645699549, lat: 38.716293027822502 }, { lng: -9.483432990817651, lat: 38.716244361706799 }, { lng: -9.483463471603301, lat: 38.716189875502302 }, { lng: -9.48346552837725, lat: 38.716158956435301 }, { lng: -9.483431134483279, lat: 38.716145839552603 }, { lng: -9.4833810568785, lat: 38.716142547394199 }, { lng: -9.48337016452917, lat: 38.716119524466301 }, { lng: -9.483414622152219, lat: 38.716111265289598 }, { lng: -9.48343811667691, lat: 38.716101354833199 }, { lng: -9.48343771550293, lat: 38.716080097830101 }, { lng: -9.48345075318373, lat: 38.716070308155999 }, { lng: -9.4834821353928, lat: 38.716064092491997 }, { lng: -9.483492527988441, lat: 38.716060191937302 }, { lng: -9.48349473570261, lat: 38.716036927620898 }, { lng: -9.48345222792641, lat: 38.716014264491598 }, { lng: -9.48345193644732, lat: 38.715998775615702 }, { lng: -9.48348314491489, lat: 38.715977158891299 }, { lng: -9.48351721322808, lat: 38.715972979443997 }, { lng: -9.48354133036765, lat: 38.715995849590101 }, { lng: -9.483565079120391, lat: 38.715999450336199 }, { lng: -9.48358611575401, lat: 38.715999207320699 }, { lng: -9.48360377689287, lat: 38.715960362315499 }, { lng: -9.483591712950631, lat: 38.715881321808403 }, { lng: -9.483591421425871, lat: 38.715865832032399 }, { lng: -9.48363168299988, lat: 38.7159097754923 }, { lng: -9.483637443515221, lat: 38.715934841164703 }, { lng: -9.48366119906404, lat: 38.715938437308999 }, { lng: -9.48368168761492, lat: 38.715909197804102 }, { lng: -9.483643920593719, lat: 38.715857478971301 }, { lng: -9.48360086613568, lat: 38.7158058266117 }, { lng: -9.48355495659828, lat: 38.715742669328399 }, { lng: -9.48350338730177, lat: 38.715660219981103 }, { lng: -9.483508199738649, lat: 38.715635033069397 }, { lng: -9.48353558374356, lat: 38.7156907424745 }, { lng: -9.48358182254103, lat: 38.715771275306899 }, { lng: -9.483622085664701, lat: 38.715815304325801 }, { lng: -9.483656114992041, lat: 38.715809058035099 }, { lng: -9.483697241693131, lat: 38.715758409438799 }, { lng: -9.483753897547061, lat: 38.715695965157899 }, { lng: -9.483824452174501, lat: 38.715675779949997 }, { lng: -9.48387108100477, lat: 38.715636600204199 }, { lng: -9.4839475004303, lat: 38.715506368354198 }, { lng: -9.484001147525539, lat: 38.715424589587599 }, { lng: -9.484071417240861, lat: 38.715383243168603 }, { lng: -9.48411865813744, lat: 38.715382696333002 }, { lng: -9.484058996919771, lat: 38.715425813594202 }, { lng: -9.48406997673068, lat: 38.715446942042597 }, { lng: -9.48411425196365, lat: 38.715423281642103 }, { lng: -9.48412970922309, lat: 38.715407609864002 }, { lng: -9.484177024161699, lat: 38.7154109336335 }, { lng: -9.48420617339753, lat: 38.715420234925801 }, { lng: -9.484232460643859, lat: 38.715418038606202 }, { lng: -9.48424498186448, lat: 38.715386999480501 }, { lng: -9.48428371626281, lat: 38.715349893393999 }, { lng: -9.484280268610419, lat: 38.715307415370503 }, { lng: -9.48422936883088, lat: 38.715253956004403 }, { lng: -9.484252599884821, lat: 38.715236301858297 }, { lng: -9.484254591501911, lat: 38.715201513844903 }, { lng: -9.484245681952791, lat: 38.715143607603302 }, { lng: -9.48425549096765, lat: 38.715108722933003 }, { lng: -9.48413995805657, lat: 38.715115913144103 }, { lng: -9.48406515698996, lat: 38.715051028093797 }, { lng: -9.48401189545433, lat: 38.7150188512555 }, { lng: -9.483977393634611, lat: 38.7149999771895 }, { lng: -9.48400639804127, lat: 38.715001534535197 }, { lng: -9.484008308674539, lat: 38.7149628660666 }, { lng: -9.48404197469193, lat: 38.714937344806103 }, { lng: -9.48408852647044, lat: 38.7149001493461 }, { lng: -9.484281602528659, lat: 38.714816757279401 }, { lng: -9.484278556333591, lat: 38.714795537152703 }, { lng: -9.484262304583829, lat: 38.714768700258297 }, { lng: -9.4843350305204, lat: 38.714723450205099 }, { lng: -9.4843617996776, lat: 38.714887349217697 }, { lng: -9.4844993411887, lat: 38.714932054121597 }, { lng: -9.48442069544164, lat: 38.714803617083 }, { lng: -9.4845151892427, lat: 38.714796669810298 }, { lng: -9.484592121077389, lat: 38.714712371489 }, { lng: -9.48464771049329, lat: 38.714599493602002 }, { lng: -9.48460721396798, lat: 38.7145005192029 }, { lng: -9.484685342260979, lat: 38.714400351734 }, { lng: -9.48473539730216, lat: 38.714274385727201 }, { lng: -9.4847448058901, lat: 38.7141879846262 }, { lng: -9.484816238850939, lat: 38.7140315967075 }, { lng: -9.4848296978683, lat: 38.7138673227238 }, { lng: -9.48476636688123, lat: 38.713868054974697 }, { lng: -9.48476201758041, lat: 38.713783881990899 }, { lng: -9.48469796001705, lat: 38.713752198690102 }, { lng: -9.484697228967949, lat: 38.713713384196801 }, { lng: -9.48482393107076, lat: 38.7137075947036 }, { lng: -9.484841574511959, lat: 38.713625331964998 }, { lng: -9.48489065865683, lat: 38.713594406851001 }, { lng: -9.48488194004762, lat: 38.713570821163799 }, { lng: -9.484757605754281, lat: 38.713257085800898 }, { lng: -9.48484289500097, lat: 38.713256098764603 }, { lng: -9.48491089274715, lat: 38.713350250382497 }, { lng: -9.48494347315949, lat: 38.713468681768497 }, { lng: -9.48501536214251, lat: 38.713476496896099 }, { lng: -9.48508039503059, lat: 38.713419537131898 }, { lng: -9.48514603749898, lat: 38.713394998701098 }, { lng: -9.48519062494581, lat: 38.713418260506799 }, { lng: -9.48523447717889, lat: 38.713402622280697 }, { lng: -9.485234110614339, lat: 38.7133831673071 }, { lng: -9.48517870114426, lat: 38.713377417235002 }, { lng: -9.48520798977413, lat: 38.713320869893998 }, { lng: -9.485212850588621, lat: 38.713057384217102 }, { lng: -9.485162480395591, lat: 38.713090259181399 }, { lng: -9.485080060284041, lat: 38.713121478954797 }, { lng: -9.484983743542941, lat: 38.713122593683501 }, { lng: -9.4849652785831, lat: 38.713161720231803 }, { lng: -9.484931971382739, lat: 38.713151299809503 }, { lng: -9.48483578876179, lat: 38.7131718666758 }, { lng: -9.484747295526491, lat: 38.713149113270397 }, { lng: -9.48474558802406, lat: 38.713058517006303 }, { lng: -9.48470396076682, lat: 38.7130460272748 }, { lng: -9.484672517802769, lat: 38.7129880194545 }, { lng: -9.48462731705772, lat: 38.712925942487097 }, { lng: -9.4846344563034, lat: 38.712871902355801 }, { lng: -9.48471920558692, lat: 38.712829939571797 }, { lng: -9.484709987091961, lat: 38.712780231170697 }, { lng: -9.484669738644801, lat: 38.712694314075002 }, { lng: -9.48476239977534, lat: 38.7126392887808 }, { lng: -9.484739713570111, lat: 38.712600729022199 }, { lng: -9.4847577523516, lat: 38.712386678053299 }, { lng: -9.48481893583582, lat: 38.7124183089946 }, { lng: -9.484859952010851, lat: 38.7123983746269 }, { lng: -9.48488806743746, lat: 38.712426156090501 }, { lng: -9.48504916823326, lat: 38.712348806410397 }, { lng: -9.485041979376311, lat: 38.712260256112003 }, { lng: -9.484964687253211, lat: 38.712246106240897 }, { lng: -9.48496342402427, lat: 38.712179106664998 }, { lng: -9.484931985812141, lat: 38.712121279903997 }, { lng: -9.48501311464282, lat: 38.712033958435001 }, { lng: -9.485103872644659, lat: 38.712030657866897 }, { lng: -9.48522111620713, lat: 38.7119622859313 }, { lng: -9.48527978344412, lat: 38.7120070032203 }, { lng: -9.485346724511141, lat: 38.712045232051203 }, { lng: -9.485520247778471, lat: 38.712041058471598 }, { lng: -9.485599549523689, lat: 38.712003300688103 }, { lng: -9.485635870617999, lat: 38.712033237151097 }, { lng: -9.485668646174609, lat: 38.712015471398999 }, { lng: -9.48570224102623, lat: 38.712041115712701 }, { lng: -9.485726410306009, lat: 38.712006155738798 }, { lng: -9.48581758469062, lat: 38.712024644698303 }, { lng: -9.485877579537609, lat: 38.7119871101226 }, { lng: -9.48584913750816, lat: 38.7119421343779 }, { lng: -9.48584860953326, lat: 38.711914124007002 }, { lng: -9.485842235729571, lat: 38.711868802827702 }, { lng: -9.48587168218083, lat: 38.711820991804899 }, { lng: -9.4858404029389, lat: 38.711771628834803 }, { lng: -9.48585690182651, lat: 38.711762789683902 }, { lng: -9.485878006385709, lat: 38.7117172406222 }, { lng: -9.48592415988327, lat: 38.711671395394397 }, { lng: -9.48595629008806, lat: 38.711625627754898 }, { lng: -9.48595291686582, lat: 38.711593236561903 }, { lng: -9.485939277302281, lat: 38.711455218007004 }, { lng: -9.48598751116034, lat: 38.711385571196097 }, { lng: -9.48596783798666, lat: 38.711366345944199 }, { lng: -9.48594588435718, lat: 38.711366599991102 }, { lng: -9.48592340837163, lat: 38.711345241727201 }, { lng: -9.485934157409741, lat: 38.711329981793902 }, { lng: -9.48596186653648, lat: 38.711336149354302 }, { lng: -9.48598410415949, lat: 38.711351022161601 }, { lng: -9.486022560003351, lat: 38.711341928895003 }, { lng: -9.486022195051721, lat: 38.711322569380997 }, { lng: -9.485978857974089, lat: 38.711219394683603 }, { lng: -9.48598911691353, lat: 38.711178198394499 }, { lng: -9.48606554177552, lat: 38.711134076358597 }, { lng: -9.48605978637665, lat: 38.7111276601618 }, { lng: -9.486095081229299, lat: 38.711097076078801 }, { lng: -9.4861357556158, lat: 38.711053277660397 }, { lng: -9.48612549406054, lat: 38.710954133956498 }, { lng: -9.4860455689526, lat: 38.710952894395597 }, { lng: -9.48603384269553, lat: 38.710916372579703 }, { lng: -9.485989460243591, lat: 38.710903916080603 }, { lng: -9.485909249640001, lat: 38.710881062277799 }, { lng: -9.485763294225031, lat: 38.710895723026603 }, { lng: -9.48576568275624, lat: 38.710876241574901 }, { lng: -9.485839342597931, lat: 38.7108320616016 }, { lng: -9.485822112320379, lat: 38.710802085352299 }, { lng: -9.485845504416551, lat: 38.710719755919001 }, { lng: -9.48580375778365, lat: 38.7107008698163 }, { lng: -9.485775322681921, lat: 38.710655803884002 }, { lng: -9.48577677478883, lat: 38.710586699326498 }, { lng: -9.485849108106271, lat: 38.710477950762197 }, { lng: -9.48586642147079, lat: 38.710512338894702 }, { lng: -9.485891135677001, lat: 38.710512052920798 }, { lng: -9.48593474146373, lat: 38.710483441772404 }, { lng: -9.485976408554629, lat: 38.710504577959703 }, { lng: -9.48600659178412, lat: 38.710495580430901 }, { lng: -9.486027886012041, lat: 38.710454261834599 }, { lng: -9.486077301389271, lat: 38.710447207160399 }, { lng: -9.48611134205512, lat: 38.710496531816602 }, { lng: -9.48615831522385, lat: 38.710500310946102 }, { lng: -9.48622618804044, lat: 38.710447641342697 }, { lng: -9.48625177724379, lat: 38.7103415080093 }, { lng: -9.4862866645105, lat: 38.7102957939356 }, { lng: -9.48628044620914, lat: 38.7102526283009 }, { lng: -9.486294371865499, lat: 38.710265438128197 }, { lng: -9.48630831680118, lat: 38.710267441255603 }, { lng: -9.486383093085429, lat: 38.710288192257202 }, { lng: -9.486426705914729, lat: 38.710266069053397 }, { lng: -9.48641340004724, lat: 38.710292166005701 }, { lng: -9.486462970897611, lat: 38.710287267601899 }, { lng: -9.486534122021361, lat: 38.710256177323402 }, { lng: -9.48653059248506, lat: 38.710215140609201 }, { lng: -9.48645809706928, lat: 38.710174999557701 }, { lng: -9.4864223958166, lat: 38.710184060177497 }, { lng: -9.4863890416331, lat: 38.710164987955402 }, { lng: -9.486337447610429, lat: 38.710208731806901 }, { lng: -9.48631505508459, lat: 38.710191786393999 }, { lng: -9.48637484492453, lat: 38.710143533934897 }, { lng: -9.48634380668971, lat: 38.710107235688596 }, { lng: -9.48625894624036, lat: 38.710142717224002 }, { lng: -9.48621277515003, lat: 38.710175676450199 }, { lng: -9.486277242923959, lat: 38.710228887890104 }, { lng: -9.48627748742728, lat: 38.710241856072798 }, { lng: -9.48624961686845, lat: 38.7102270440109 }, { lng: -9.48619209297898, lat: 38.710249328154902 }, { lng: -9.48614210626865, lat: 38.710226130097801 }, { lng: -9.48593929844032, lat: 38.710139931930101 }, { lng: -9.4859007187427, lat: 38.710142542894999 }, { lng: -9.48587284829817, lat: 38.710127730740901 }, { lng: -9.485917981903979, lat: 38.709887608641402 }, { lng: -9.48595611945364, lat: 38.709867708102898 }, { lng: -9.48600341928708, lat: 38.709888778202803 }, { lng: -9.486025487402181, lat: 38.7098885228231 }, { lng: -9.486091857491189, lat: 38.7099027083378 }, { lng: -9.48616605897303, lat: 38.709886895082498 }, { lng: -9.48625263110867, lat: 38.709808066113702 }, { lng: -9.48625210313541, lat: 38.709780062041297 }, { lng: -9.48627416383543, lat: 38.709773317590702 }, { lng: -9.48629420291353, lat: 38.70981190861 }, { lng: -9.486370960093099, lat: 38.709791655499103 }, { lng: -9.486274358374249, lat: 38.709643695277101 }, { lng: -9.48633492327277, lat: 38.709636511445801 }, { lng: -9.48638092358344, lat: 38.709588418595999 }, { lng: -9.4864167472196, lat: 38.709592326686398 }, { lng: -9.48646194287789, lat: 38.709648010329403 }, { lng: -9.48650320895729, lat: 38.709647532619897 }, { lng: -9.48653882035639, lat: 38.7096341484447 }, { lng: -9.48654952208898, lat: 38.709610242559002 }, { lng: -9.486507381496761, lat: 38.709576231114902 }, { lng: -9.486511748901259, lat: 38.709509167253302 }, { lng: -9.486472479540939, lat: 38.709475123457302 }, { lng: -9.486488662526179, lat: 38.709455476895002 }, { lng: -9.48654030400148, lat: 38.709420378868103 }, { lng: -9.48655365164503, lat: 38.709396446854001 }, { lng: -9.486512062524231, lat: 38.7093797246118 }, { lng: -9.486505940374929, lat: 38.709353853456399 }, { lng: -9.48654451118834, lat: 38.709344759592298 }, { lng: -9.48651855316742, lat: 38.709291012406197 }, { lng: -9.48655432741857, lat: 38.709286273684299 }, { lng: -9.486542553693591, lat: 38.709241014138698 }, { lng: -9.48644650081018, lat: 38.709268159991602 }, { lng: -9.4863994301869, lat: 38.709113143670699 }, { lng: -9.486368872336399, lat: 38.709096202704501 }, { lng: -9.486302914394759, lat: 38.709109938084801 }, { lng: -9.48629719372987, lat: 38.709099197823001 }, { lng: -9.48636035582556, lat: 38.709083330270303 }, { lng: -9.486356942439871, lat: 38.709048871384702 }, { lng: -9.48641986848175, lat: 38.709026523727303 }, { lng: -9.486373853123791, lat: 38.708921305673897 }, { lng: -9.486256084753229, lat: 38.708961583670202 }, { lng: -9.48627174535034, lat: 38.708920329327597 }, { lng: -9.486263146232769, lat: 38.708903134170001 }, { lng: -9.486234541689241, lat: 38.708849422050299 }, { lng: -9.486185456255431, lat: 38.708873858631598 }, { lng: -9.486140141066979, lat: 38.708952119105398 }, { lng: -9.48604551033907, lat: 38.709054637693399 }, { lng: -9.486001571056461, lat: 38.709059470746503 }, { lng: -9.485977393805641, lat: 38.709094255229701 }, { lng: -9.485921335246729, lat: 38.709047429105397 }, { lng: -9.48594858621313, lat: 38.709029824485597 }, { lng: -9.485986269579451, lat: 38.708979753566403 }, { lng: -9.485979625434391, lat: 38.708925871927597 }, { lng: -9.4859747366754, lat: 38.708807030222701 }, { lng: -9.486080203494939, lat: 38.7087000626139 }, { lng: -9.48609708139924, lat: 38.708717161976303 }, { lng: -9.48616462605392, lat: 38.708647291590196 }, { lng: -9.486100764268469, lat: 38.708619925007902 }, { lng: -9.486089274946989, lat: 38.708589792268 }, { lng: -9.486094432483879, lat: 38.708576761563997 }, { lng: -9.486230714295941, lat: 38.708646525797498 }, { lng: -9.486272155855771, lat: 38.708637397897398 }, { lng: -9.486271544601239, lat: 38.708604975630401 }, { lng: -9.486217793769899, lat: 38.708534441820298 }, { lng: -9.48623061079952, lat: 38.708488891315397 }, { lng: -9.48616755481623, lat: 38.708357843690102 }, { lng: -9.486207631780941, lat: 38.708288291172003 }, { lng: -9.486187837489441, lat: 38.708269061939497 }, { lng: -9.48606645273671, lat: 38.708257586705002 }, { lng: -9.48606341259546, lat: 38.7082424917363 }, { lng: -9.486184790520451, lat: 38.708247568918999 }, { lng: -9.486236995094229, lat: 38.708236157330496 }, { lng: -9.48622409364333, lat: 38.708143435971699 }, { lng: -9.486196175962879, lat: 38.708119981590997 }, { lng: -9.486139703817299, lat: 38.708051547388997 }, { lng: -9.48612347120501, lat: 38.7080624516543 }, { lng: -9.486076296529699, lat: 38.708047958428303 }, { lng: -9.48602141223574, lat: 38.708063633650298 }, { lng: -9.48605065229564, lat: 38.708005019373999 }, { lng: -9.486020190612191, lat: 38.707998883676197 }, { lng: -9.486048370251289, lat: 38.707884073927303 }, { lng: -9.486020339391191, lat: 38.7078607054843 }, { lng: -9.48596792533522, lat: 38.707854830113099 }, { lng: -9.485861191644229, lat: 38.707894889039899 }, { lng: -9.48583977588431, lat: 38.707929726218197 }, { lng: -9.485752808682269, lat: 38.707999821141499 }, { lng: -9.48572592469465, lat: 38.708036881600599 }, { lng: -9.4856587036944, lat: 38.708124042685199 }, { lng: -9.48559425287727, lat: 38.708217659895098 }, { lng: -9.485432464274259, lat: 38.708118015218503 }, { lng: -9.48546507750947, lat: 38.708091786010201 }, { lng: -9.485465069643499, lat: 38.707944871303198 }, { lng: -9.485530050469251, lat: 38.707879264529197 }, { lng: -9.48552034865275, lat: 38.707803895339502 }, { lng: -9.48556837086916, lat: 38.707716957331002 }, { lng: -9.485496601835591, lat: 38.707568709112302 }, { lng: -9.4853839052642, lat: 38.707585149157403 }, { lng: -9.48535007178825, lat: 38.707546719315303 }, { lng: -9.48517032199018, lat: 38.707658869955303 }, { lng: -9.485155918235691, lat: 38.707620213550697 }, { lng: -9.48509851595951, lat: 38.707648984860803 }, { lng: -9.48513272298382, lat: 38.707713353395299 }, { lng: -9.48499483607255, lat: 38.707710625148799 }, { lng: -9.484735362905511, lat: 38.707545186655302 }, { lng: -9.484803790903779, lat: 38.7075162880463 }, { lng: -9.484789633664731, lat: 38.707496997900201 }, { lng: -9.484712391728751, lat: 38.707491402706196 }, { lng: -9.48464427191732, lat: 38.707384281236202 }, { lng: -9.484695177538031, lat: 38.707310194789599 }, { lng: -9.48472415373751, lat: 38.707389844154697 }, { lng: -9.484765289277339, lat: 38.707376397555798 }, { lng: -9.48474340446929, lat: 38.7072339693459 }, { lng: -9.484775942238389, lat: 38.707209905738701 }, { lng: -9.48477212471227, lat: 38.707147345783 }, { lng: -9.48472989528411, lat: 38.707108920946297 }, { lng: -9.48472449603643, lat: 38.706968647726498 }, { lng: -9.48479811640442, lat: 38.706922485374498 }, { lng: -9.484796080200621, lat: 38.706814417070198 }, { lng: -9.484716170362789, lat: 38.706819664605703 }, { lng: -9.484494882606, lat: 38.706923834437497 }, { lng: -9.484384328225531, lat: 38.706901240206598 }, { lng: -9.484427654869449, lat: 38.7068639899964 }, { lng: -9.484418970763359, lat: 38.706836075665997 }, { lng: -9.48433901448324, lat: 38.706839164346 }, { lng: -9.484312447040081, lat: 38.706893423648303 }, { lng: -9.48424734682273, lat: 38.706952640206303 }, { lng: -9.48421447699571, lat: 38.706953020076902 }, { lng: -9.4842215381953, lat: 38.7068944751936 }, { lng: -9.48419114570002, lat: 38.706886179980202 }, { lng: -9.48417203938472, lat: 38.706756871610402 }, { lng: -9.483885266447709, lat: 38.706600393998301 }, { lng: -9.483761630388839, lat: 38.706627766251003 }, { lng: -9.48370997668696, lat: 38.706656378591902 }, { lng: -9.483679354821399, lat: 38.7066416886572 }, { lng: -9.48361323475252, lat: 38.706646777037399 }, { lng: -9.48355647784684, lat: 38.706703550342901 }, { lng: -9.48349578615912, lat: 38.706697768568901 }, { lng: -9.48340455340948, lat: 38.706681528520399 }, { lng: -9.483337294283491, lat: 38.7066261885332 }, { lng: -9.483292021675441, lat: 38.706566180840298 }, { lng: -9.483305405874781, lat: 38.706544588949399 }, { lng: -9.48334675153799, lat: 38.706548435121299 }, { lng: -9.483496302044649, lat: 38.7064321259531 }, { lng: -9.483571517142879, lat: 38.706336226391898 }, { lng: -9.483621489871631, lat: 38.706206119051402 }, { lng: -9.483587082268089, lat: 38.706130854900202 }, { lng: -9.48362477065575, lat: 38.706087272874903 }, { lng: -9.483591018452451, lat: 38.706053074262201 }, { lng: -9.483540915170121, lat: 38.706023478260498 }, { lng: -9.483436009909861, lat: 38.706013878967497 }, { lng: -9.483369932253799, lat: 38.706021131256797 }, { lng: -9.483277237815731, lat: 38.706073996706699 }, { lng: -9.483250622249029, lat: 38.706119614388101 }, { lng: -9.483200971556419, lat: 38.706120188662098 }, { lng: -9.483202955736431, lat: 38.7060791782107 }, { lng: -9.483287458754679, lat: 38.706030731995398 }, { lng: -9.48327585612075, lat: 38.706000600264403 }, { lng: -9.48321228124134, lat: 38.705988364321101 }, { lng: -9.48316003947035, lat: 38.705997615849199 }, { lng: -9.483124461731871, lat: 38.706013156840797 }, { lng: -9.483115904430409, lat: 38.705998125493402 }, { lng: -9.483079467309951, lat: 38.705961797697697 }, { lng: -9.4830464075207, lat: 38.705964339466398 }, { lng: -9.483002429293929, lat: 38.705967012697599 }, { lng: -9.483004704951281, lat: 38.705941129043197 }, { lng: -9.482880284802331, lat: 38.705920953490498 }, { lng: -9.482708851636589, lat: 38.705894828700103 }, { lng: -9.48262938493208, lat: 38.705917364389698 }, { lng: -9.482621918528251, lat: 38.705960597251298 }, { lng: -9.482602775939741, lat: 38.705969465562603 }, { lng: -9.48254987762955, lat: 38.705944225070397 }, { lng: -9.482532548483579, lat: 38.705896865559403 }, { lng: -9.482463829676879, lat: 38.705904146920403 }, { lng: -9.48238136421932, lat: 38.7059202297376 }, { lng: -9.482273210496929, lat: 38.705884815812901 }, { lng: -9.48222002798588, lat: 38.705837960972403 }, { lng: -9.48230185037337, lat: 38.705793783600697 }, { lng: -9.482359405392041, lat: 38.705724840445299 }, { lng: -9.48239185391509, lat: 38.705628626287499 }, { lng: -9.48238987949132, lat: 38.705523708060497 }, { lng: -9.482418010647869, lat: 38.705503293618101 }, { lng: -9.482408628987489, lat: 38.7054632313423 }, { lng: -9.482384911709881, lat: 38.705412250588999 }, { lng: -9.48237590520975, lat: 38.705385601787498 }, { lng: -9.48239007085675, lat: 38.705380933573899 }, { lng: -9.48242466755153, lat: 38.7054051269985 }, { lng: -9.48249195844766, lat: 38.705346249164698 }, { lng: -9.482579092846811, lat: 38.705284983113998 }, { lng: -9.48257833656915, lat: 38.705244814986401 }, { lng: -9.482534780989919, lat: 38.705202988032099 }, { lng: -9.482509314395751, lat: 38.7052055320815 }, { lng: -9.48235980587409, lat: 38.705287515837703 }, { lng: -9.482277076779299, lat: 38.7052773028621 }, { lng: -9.482203439899161, lat: 38.7052982414844 }, { lng: -9.482179838280461, lat: 38.705253832240501 }, { lng: -9.48213133747331, lat: 38.705254392787701 }, { lng: -9.48214482553267, lat: 38.705207491908901 }, { lng: -9.482082115613361, lat: 38.705210466503999 }, { lng: -9.482017184363571, lat: 38.705235627336101 }, { lng: -9.48196825523938, lat: 38.705207275470997 }, { lng: -9.48182683021937, lat: 38.705266828095397 }, { lng: -9.481734870894091, lat: 38.705212226083901 }, { lng: -9.48167436594613, lat: 38.705179411917399 }, { lng: -9.48167344275144, lat: 38.705130331726103 }, { lng: -9.48163367675005, lat: 38.705130791311902 }, { lng: -9.481600756712981, lat: 38.7050553283336 }, { lng: -9.48156640064599, lat: 38.705037801156202 }, { lng: -9.48143960136864, lat: 38.705110693407903 }, { lng: -9.48145884419246, lat: 38.705376018169602 }, { lng: -9.481407465396851, lat: 38.705376610707802 }, { lng: -9.481398418072761, lat: 38.705347707682201 }, { lng: -9.48133873567517, lat: 38.705352810604197 }, { lng: -9.481348002369479, lat: 38.7053929661745 }, { lng: -9.481254230574759, lat: 38.705400807762302 }, { lng: -9.48120261364954, lat: 38.705229448546902 }, { lng: -9.481160274173931, lat: 38.705252274839303 }, { lng: -9.48109100069885, lat: 38.705199568973903 }, { lng: -9.481042975808069, lat: 38.705066180586797 }, { lng: -9.480847417718619, lat: 38.704961336712998 }, { lng: -9.48069839782867, lat: 38.704916214641102 }, { lng: -9.48063689403673, lat: 38.704977184788703 }, { lng: -9.480612436081771, lat: 38.7050398906702 }, { lng: -9.48047710514451, lat: 38.704958944711201 }, { lng: -9.480409015094789, lat: 38.704975313549497 }, { lng: -9.48024232253854, lat: 38.705042000363797 }, { lng: -9.479957607232841, lat: 38.705049693507704 }, { lng: -9.479723650385431, lat: 38.705030052180099 }, { lng: -9.47965278578164, lat: 38.704892517018003 }, { lng: -9.47970485867822, lat: 38.704775986860597 }, { lng: -9.4796549650691, lat: 38.704696214082702 }, { lng: -9.479709423283319, lat: 38.704566148558698 }, { lng: -9.48002905590017, lat: 38.704453107307302 }, { lng: -9.480266363368001, lat: 38.704198158616698 }, { lng: -9.4802391083035, lat: 38.704118125224099 }, { lng: -9.480450968703421, lat: 38.7040265098425 }, { lng: -9.480384456997561, lat: 38.703973681632903 }, { lng: -9.480252261017799, lat: 38.704053298661997 }, { lng: -9.47995229259168, lat: 38.7040076674148 }, { lng: -9.479637991551609, lat: 38.7040983035415 }, { lng: -9.479575296004031, lat: 38.7039428354447 }, { lng: -9.479460067296991, lat: 38.703872825360001 }, { lng: -9.479518649407259, lat: 38.703809544772803 }, { lng: -9.479491979462439, lat: 38.703754098077802 }, { lng: -9.479531213320101, lat: 38.7035661967913 }, { lng: -9.479656931487691, lat: 38.703435399775699 }, { lng: -9.47945246754465, lat: 38.703314982735101 }, { lng: -9.479227678618249, lat: 38.703324236771302 }, { lng: -9.479179891113651, lat: 38.703362710136297 }, { lng: -9.479086195491019, lat: 38.703368294476 }, { lng: -9.47895025711011, lat: 38.703260509949402 }, { lng: -9.47893370464549, lat: 38.703285197731397 }, { lng: -9.478734924605901, lat: 38.703167058688202 }, { lng: -9.47867297145765, lat: 38.703210199618802 }, { lng: -9.478553233866251, lat: 38.703200409006001 }, { lng: -9.478497773341481, lat: 38.703136283021202 }, { lng: -9.478537391765199, lat: 38.7031157391161 }, { lng: -9.47849084341938, lat: 38.703067184804098 }, { lng: -9.47844865951132, lat: 38.703085594573501 }, { lng: -9.47832627081382, lat: 38.702946396792598 }, { lng: -9.47851031042987, lat: 38.702879422111202 }, { lng: -9.478486731694691, lat: 38.7028417720731 }, { lng: -9.47839152298636, lat: 38.702784859168197 }, { lng: -9.47828431273949, lat: 38.702676743279603 }, { lng: -9.478225385321529, lat: 38.702574731169697 }, { lng: -9.478234407048751, lat: 38.702443028983303 }, { lng: -9.47819269184939, lat: 38.702345328059302 }, { lng: -9.47797969892753, lat: 38.702229419363398 }, { lng: -9.477861502447229, lat: 38.702148267783002 }, { lng: -9.477860751864361, lat: 38.702108196804403 }, { lng: -9.477771736333899, lat: 38.702069044622299 }, { lng: -9.47771730285641, lat: 38.702047333443801 }, { lng: -9.47772813848221, lat: 38.702018200536799 }, { lng: -9.477468538557209, lat: 38.701838155450403 }, { lng: -9.477408284049339, lat: 38.701818765677501 }, { lng: -9.477357574752849, lat: 38.7018483507075 }, { lng: -9.477306038358609, lat: 38.701840025648004 }, { lng: -9.47726968791912, lat: 38.701869450958498 }, { lng: -9.477198259553729, lat: 38.701854689770798 }, { lng: -9.47716741095574, lat: 38.701730019785202 }, { lng: -9.477107236238609, lat: 38.701708374319097 }, { lng: -9.477069026712391, lat: 38.701650894243201 }, { lng: -9.47697279433048, lat: 38.701674249340897 }, { lng: -9.476905833045571, lat: 38.701750862653299 }, { lng: -9.47686599600228, lat: 38.7017535706362 }, { lng: -9.47685820343923, lat: 38.701791581579002 }, { lng: -9.47686196921083, lat: 38.701845134821298 }, { lng: -9.47699268739709, lat: 38.701975323560397 }, { lng: -9.476993649399709, lat: 38.702026653503999 }, { lng: -9.476903101523931, lat: 38.702058951773999 }, { lng: -9.47685142308044, lat: 38.7020372085247 }, { lng: -9.476767278080491, lat: 38.701951164227403 }, { lng: -9.476727397667579, lat: 38.701951622546801 }, { lng: -9.47668372620929, lat: 38.7019029443546 }, { lng: -9.47664030756194, lat: 38.701867772039499 }, { lng: -9.476612213621101, lat: 38.701883678140703 }, { lng: -9.47660105525625, lat: 38.701901730720998 }, { lng: -9.476549247770309, lat: 38.701866569195602 }, { lng: -9.4764634366444, lat: 38.701845217973798 }, { lng: -9.47641413565866, lat: 38.701796689033102 }, { lng: -9.476404431171011, lat: 38.701738796554103 }, { lng: -9.47637413566982, lat: 38.701643303937402 }, { lng: -9.47632261584684, lat: 38.701623808743101 }, { lng: -9.476254141296801, lat: 38.701613426797003 }, { lng: -9.47620348240533, lat: 38.701651930143598 }, { lng: -9.476192479381339, lat: 38.701672145444299 }, { lng: -9.47614401267947, lat: 38.701668197463903 }, { lng: -9.47614426196629, lat: 38.701681523247302 }, { lng: -9.475958537123979, lat: 38.701799768100003 }, { lng: -9.475935608790181, lat: 38.701791022873799 }, { lng: -9.475913399938531, lat: 38.701820375420297 }, { lng: -9.475821908362439, lat: 38.701839351443397 }, { lng: -9.475752709086599, lat: 38.701796371569003 }, { lng: -9.47575538007991, lat: 38.701767151545603 }, { lng: -9.47570242341631, lat: 38.701762898240602 }, { lng: -9.47563299523418, lat: 38.701707669592103 }, { lng: -9.475626317008601, lat: 38.701676216733198 }, { lng: -9.475595262085159, lat: 38.701681441969299 }, { lng: -9.475369594863549, lat: 38.701569635567999 }, { lng: -9.475274812185649, lat: 38.701646211555598 }, { lng: -9.475305061973501, lat: 38.701769895392502 }, { lng: -9.475318625540529, lat: 38.701991149083099 }, { lng: -9.47537234505571, lat: 38.702214371124299 }, { lng: -9.475095975858419, lat: 38.702212679540899 }, { lng: -9.475036360650281, lat: 38.702184180758302 }, { lng: -9.474999125682791, lat: 38.702184608125101 }, { lng: -9.47499232541176, lat: 38.702153071058802 }, { lng: -9.474916147642229, lat: 38.702068821981101 }, { lng: -9.47486976293947, lat: 38.702071786385098 }, { lng: -9.47483490287153, lat: 38.702033277817897 }, { lng: -9.47489910873518, lat: 38.701981376513999 }, { lng: -9.474838902981601, lat: 38.701921264784303 }, { lng: -9.47478925502036, lat: 38.701921835435002 }, { lng: -9.474759868798619, lat: 38.7018442563161 }, { lng: -9.47471932638642, lat: 38.701839859206501 }, { lng: -9.47465631000367, lat: 38.701789508815402 }, { lng: -9.47465881836685, lat: 38.7017577748381 }, { lng: -9.47461428954435, lat: 38.701699919677402 }, { lng: -9.474551457857009, lat: 38.701659381864999 }, { lng: -9.474489643229919, lat: 38.701679550349603 }, { lng: -9.474523837727171, lat: 38.7018421049738 }, { lng: -9.474571612183791, lat: 38.701907311018601 }, { lng: -9.474503392800671, lat: 38.701910525799597 }, { lng: -9.474342192237559, lat: 38.701926969391202 }, { lng: -9.474268480878161, lat: 38.701808554320799 }, { lng: -9.47418161958546, lat: 38.7018168505004 }, { lng: -9.4740899063366, lat: 38.701725394579903 }, { lng: -9.47402460609336, lat: 38.701718845514002 }, { lng: -9.474011377242171, lat: 38.701675312737201 }, { lng: -9.47397730996019, lat: 38.7016854326314 }, { lng: -9.47388691684723, lat: 38.7016645797409 }, { lng: -9.473820637373329, lat: 38.701611745967199 }, { lng: -9.473796407295399, lat: 38.701643644343903 }, { lng: -9.47381600452155, lat: 38.7016897154422 }, { lng: -9.47380368334434, lat: 38.701694719071902 }, { lng: -9.47368349675895, lat: 38.701574407179798 }, { lng: -9.473629128313121, lat: 38.701494592061401 }, { lng: -9.473682039397049, lat: 38.701496421065102 }, { lng: -9.473698424976901, lat: 38.701389217552801 }, { lng: -9.473625855986221, lat: 38.701319522259702 }, { lng: -9.473550728393141, lat: 38.701291201464699 }, { lng: -9.473468797804481, lat: 38.701231338082998 }, { lng: -9.473474275109821, lat: 38.701192362149698 }, { lng: -9.47329880312496, lat: 38.701109074629798 }, { lng: -9.47325251032335, lat: 38.701129064537 }, { lng: -9.473236249162699, lat: 38.701083039770097 }, { lng: -9.47319900784326, lat: 38.701083466632497 }, { lng: -9.4731949713521, lat: 38.701039647338298 }, { lng: -9.47314770017357, lat: 38.701001367880501 }, { lng: -9.47312751235007, lat: 38.700923681997502 }, { lng: -9.47308058946729, lat: 38.700897467898997 }, { lng: -9.473017187867461, lat: 38.700832529490199 }, { lng: -9.472945049692621, lat: 38.700792012780497 }, { lng: -9.47284149211262, lat: 38.7007371744536 }, { lng: -9.47274527301397, lat: 38.700743140213298 }, { lng: -9.47273053236739, lat: 38.700784743503696 }, { lng: -9.472732121526869, lat: 38.7008698505025 }, { lng: -9.47272311474296, lat: 38.700879678384098 }, { lng: -9.4726532808159, lat: 38.700802657621502 }, { lng: -9.472544650945061, lat: 38.700808765408802 }, { lng: -9.472514079636561, lat: 38.7008334363546 }, { lng: -9.472562755406379, lat: 38.700947272551701 }, { lng: -9.47252957665588, lat: 38.700998727061098 }, { lng: -9.472511549823031, lat: 38.701030554111298 }, { lng: -9.47248051904298, lat: 38.701030909596398 }, { lng: -9.47241970356743, lat: 38.7009317994547 }, { lng: -9.472315466340319, lat: 38.700840576548302 }, { lng: -9.47226447728171, lat: 38.700775495547802 }, { lng: -9.47218737504782, lat: 38.700635142831999 }, { lng: -9.47201912470887, lat: 38.700439983623198 }, { lng: -9.47184611180437, lat: 38.7004882633384 }, { lng: -9.471926791664529, lat: 38.700647854444199 }, { lng: -9.471886501056749, lat: 38.700650751479102 }, { lng: -9.471803393768941, lat: 38.700527666515001 }, { lng: -9.4717540652829, lat: 38.700545260318698 }, { lng: -9.471567841311821, lat: 38.7003843516407 }, { lng: -9.47125156028315, lat: 38.700239530892297 }, { lng: -9.47110841781925, lat: 38.700231440805602 }, { lng: -9.4708593850065, lat: 38.700197725602798 }, { lng: -9.4707197955262, lat: 38.700041240679198 }, { lng: -9.47047844517822, lat: 38.699919880358003 }, { lng: -9.470322005222091, lat: 38.699858345734803 }, { lng: -9.47020006157666, lat: 38.699815966660601 }, { lng: -9.47013505717042, lat: 38.6998313033776 }, { lng: -9.47004756719698, lat: 38.699793390682501 }, { lng: -9.469929769138551, lat: 38.699806899788001 }, { lng: -9.46988188878812, lat: 38.699741691196401 }, { lng: -9.469863472893771, lat: 38.699586159024598 }, { lng: -9.46985629096014, lat: 38.699527874094699 }, { lng: -9.469776387679071, lat: 38.699409616951002 }, { lng: -9.46968560236161, lat: 38.699374083647598 }, { lng: -9.46949621431199, lat: 38.699376250321897 }, { lng: -9.46938713837584, lat: 38.699358044036998 }, { lng: -9.46924352454139, lat: 38.699318342793802 }, { lng: -9.469140107066361, lat: 38.699258721868503 }, { lng: -9.46906525363489, lat: 38.699244986559499 }, { lng: -9.468978713065161, lat: 38.699270388881601 }, { lng: -9.468926798479339, lat: 38.699321965483499 }, { lng: -9.468843137582811, lat: 38.699322922196501 }, { lng: -9.468774622109031, lat: 38.699316406909503 }, { lng: -9.468723798624779, lat: 38.699253753601198 }, { lng: -9.468664622156821, lat: 38.699242270121204 }, { lng: -9.46860584471457, lat: 38.699252670711203 }, { lng: -9.46846845293512, lat: 38.699220105383603 }, { lng: -9.46842515155511, lat: 38.699227894350003 }, { lng: -9.468422794952829, lat: 38.699262062166703 }, { lng: -9.46844526405031, lat: 38.699308012234603 }, { lng: -9.468492849864131, lat: 38.699363403722401 }, { lng: -9.468529881827161, lat: 38.699345957145702 }, { lng: -9.46857399618775, lat: 38.699381935268399 }, { lng: -9.4686055718514, lat: 38.699410848653599 }, { lng: -9.46861266027215, lat: 38.699452111126 }, { lng: -9.46858844926056, lat: 38.699491301743201 }, { lng: -9.46850199692536, lat: 38.699521473172503 }, { lng: -9.46844884169896, lat: 38.6995001907191 }, { lng: -9.46838837015968, lat: 38.699413331230097 }, { lng: -9.468331995535269, lat: 38.699391994512197 }, { lng: -9.468275034864259, lat: 38.699339141188602 }, { lng: -9.46823950026182, lat: 38.699264157210997 }, { lng: -9.468178911333769, lat: 38.699177203466498 }, { lng: -9.46805153740174, lat: 38.699176227580899 }, { lng: -9.46805509125066, lat: 38.699200508637198 }, { lng: -9.468015028363769, lat: 38.699215557596098 }, { lng: -9.46793724729026, lat: 38.699211579678703 }, { lng: -9.46756952546418, lat: 38.698982217164101 }, { lng: -9.46756875604301, lat: 38.698940880697599 }, { lng: -9.467487829530191, lat: 38.698934507206701 }, { lng: -9.46757260548744, lat: 38.6988142770632 }, { lng: -9.467556365228191, lat: 38.698775459168502 }, { lng: -9.467422180478721, lat: 38.698735647150102 }, { lng: -9.46740931493251, lat: 38.698711478643503 }, { lng: -9.467284337218921, lat: 38.698678764834298 }, { lng: -9.46722003820175, lat: 38.698725796212102 }, { lng: -9.467173042296411, lat: 38.698702016219002 }, { lng: -9.46710538709023, lat: 38.698741702233498 }, { lng: -9.467140786469299, lat: 38.698970090703298 }, { lng: -9.467027988091591, lat: 38.699085682418698 }, { lng: -9.46679381253832, lat: 38.698681934555701 }, { lng: -9.46658660525231, lat: 38.698399656150798 }, { lng: -9.466379287796009, lat: 38.698265739629001 }, { lng: -9.46630196052941, lat: 38.698286080684099 }, { lng: -9.46624894232491, lat: 38.698272093676799 }, { lng: -9.466282124425559, lat: 38.698220640868698 }, { lng: -9.46608948223847, lat: 38.698047551422803 }, { lng: -9.465978010228291, lat: 38.698060984412898 }, { lng: -9.46582321137592, lat: 38.697926551939297 }, { lng: -9.46581532681812, lat: 38.697836478513899 }, { lng: -9.46562679144867, lat: 38.697717027258697 }, { lng: -9.46558033809945, lat: 38.697722419917902 }, { lng: -9.46558235403605, lat: 38.697663938883302 }, { lng: -9.465441575319449, lat: 38.697609603661 }, { lng: -9.465337352874441, lat: 38.6975183742246 }, { lng: -9.465281972859421, lat: 38.6975383744509 }, { lng: -9.46523759116025, lat: 38.697487897534003 }, { lng: -9.465161222957059, lat: 38.697398689871797 }, { lng: -9.46486951122046, lat: 38.697411745726399 }, { lng: -9.46469803161181, lat: 38.697201929955398 }, { lng: -9.46438998094637, lat: 38.697003491000501 }, { lng: -9.46419776692794, lat: 38.697020364653902 }, { lng: -9.46371484298438, lat: 38.696930926821402 }, { lng: -9.463626443901781, lat: 38.6970171437072 }, { lng: -9.463579197330761, lat: 38.696985976095597 }, { lng: -9.463609168274189, lat: 38.696922310115397 }, { lng: -9.46356484802283, lat: 38.696794729662201 }, { lng: -9.46356285333504, lat: 38.696687198789299 }, { lng: -9.4634586094526, lat: 38.696675324697502 }, { lng: -9.463201243198631, lat: 38.696469732039702 }, { lng: -9.463097961413069, lat: 38.6965035138481 }, { lng: -9.46294264289349, lat: 38.6964271883649 }, { lng: -9.46287657956711, lat: 38.696447395436302 }, { lng: -9.46272581401101, lat: 38.696387320892903 }, { lng: -9.462607038350971, lat: 38.696254996556199 }, { lng: -9.46243146550683, lat: 38.696208265752396 }, { lng: -9.4622175319174, lat: 38.696324645991702 }, { lng: -9.462231035540389, lat: 38.6963896153663 }, { lng: -9.46230145731216, lat: 38.696369269034101 }, { lng: -9.462331500158429, lat: 38.696421082906099 }, { lng: -9.462409963310311, lat: 38.696394157753403 }, { lng: -9.462458835479429, lat: 38.696556457486899 }, { lng: -9.462301311939401, lat: 38.696590855289202 }, { lng: -9.46206997140014, lat: 38.696450000649001 }, { lng: -9.4621369013537, lat: 38.696240801094 }, { lng: -9.461849975563551, lat: 38.696009508285599 }, { lng: -9.461535440152691, lat: 38.695869775433401 }, { lng: -9.46136608376082, lat: 38.695705599495597 }, { lng: -9.461203085848361, lat: 38.695655295647398 }, { lng: -9.461135047095389, lat: 38.695574643456901 }, { lng: -9.461017905574259, lat: 38.695530393204201 }, { lng: -9.46095166815844, lat: 38.695547449375098 }, { lng: -9.46086152097957, lat: 38.695620089646503 }, { lng: -9.46081165185514, lat: 38.695620656843701 }, { lng: -9.460599844353499, lat: 38.695404804588897 }, { lng: -9.460495120822531, lat: 38.695360327244501 }, { lng: -9.460373192141271, lat: 38.695293343931603 }, { lng: -9.46031815684027, lat: 38.695238571363397 }, { lng: -9.460333198935221, lat: 38.695156974695898 }, { lng: -9.460383430952209, lat: 38.695169466538403 }, { lng: -9.460390978999669, lat: 38.695130286576202 }, { lng: -9.460287389927229, lat: 38.695141192560101 }, { lng: -9.460261432441531, lat: 38.695086180877098 }, { lng: -9.460186630083619, lat: 38.695093604624901 }, { lng: -9.460166913253881, lat: 38.6951523765998 }, { lng: -9.46011703869436, lat: 38.695152943560302 }, { lng: -9.459982158227, lat: 38.695050258018298 }, { lng: -9.45995776631548, lat: 38.695079899895703 }, { lng: -9.459869946757481, lat: 38.695054774141902 }, { lng: -9.45959275369861, lat: 38.694901459214897 }, { lng: -9.459484072970239, lat: 38.694866936108802 }, { lng: -9.459282130739259, lat: 38.6949603837121 }, { lng: -9.459262477546771, lat: 38.695022577741199 }, { lng: -9.459109438840541, lat: 38.695063409511697 }, { lng: -9.459038105632469, lat: 38.695028461533397 }, { lng: -9.4591523541564, lat: 38.694916279384998 }, { lng: -9.4590929342937, lat: 38.694842102041697 }, { lng: -9.458971916985661, lat: 38.694823925902199 }, { lng: -9.45881091012442, lat: 38.694881150659498 }, { lng: -9.458803654733, lat: 38.694936540153797 }, { lng: -9.45890083829898, lat: 38.695026682545397 }, { lng: -9.4589063586923, lat: 38.695101567550203 }, { lng: -9.45885690112876, lat: 38.695118432266199 }, { lng: -9.458786111885139, lat: 38.695119234900801 }, { lng: -9.45877627096449, lat: 38.695028095853701 }, { lng: -9.45872981327858, lat: 38.6949960174368 }, { lng: -9.458786334948179, lat: 38.694900888614399 }, { lng: -9.45871889555387, lat: 38.694852829731403 }, { lng: -9.458518983280999, lat: 38.6948323129022 }, { lng: -9.45851286801588, lat: 38.694731401483402 }, { lng: -9.4584378137033, lat: 38.694712708260603 }, { lng: -9.457859179955809, lat: 38.694673694849399 }, { lng: -9.45778958463457, lat: 38.694726548719402 }, { lng: -9.457744758503351, lat: 38.694782449379503 }, { lng: -9.45762282236031, lat: 38.694702406600904 }, { lng: -9.457561388045921, lat: 38.694755164284203 }, { lng: -9.45750060603233, lat: 38.694837375109103 }, { lng: -9.4575016884113, lat: 38.694896001131902 }, { lng: -9.457480833576509, lat: 38.694899479222798 }, { lng: -9.457459188364661, lat: 38.694847573451199 }, { lng: -9.45740726424377, lat: 38.694730884099101 }, { lng: -9.457323894346841, lat: 38.6947285828643 }, { lng: -9.45730087804656, lat: 38.694833065252602 }, { lng: -9.457226184232431, lat: 38.694833912061902 }, { lng: -9.45713219869676, lat: 38.694922890571704 }, { lng: -9.45697250738662, lat: 38.694833540928897 }, { lng: -9.45694068851725, lat: 38.6949153307473 }, { lng: -9.456877081102069, lat: 38.694844442445103 }, { lng: -9.45679400539502, lat: 38.694851872117297 }, { lng: -9.456843086332711, lat: 38.694802400179199 }, { lng: -9.45682966546223, lat: 38.694753734022598 }, { lng: -9.45675833423144, lat: 38.694725177380299 }, { lng: -9.4567012068011, lat: 38.6947747340662 }, { lng: -9.456638258701799, lat: 38.694739598713099 }, { lng: -9.456621959532709, lat: 38.694765810945803 }, { lng: -9.45659001622899, lat: 38.694834632802397 }, { lng: -9.45660481976614, lat: 38.694958140876999 }, { lng: -9.45657563465511, lat: 38.694958471230997 }, { lng: -9.456560760657499, lat: 38.694825150066997 }, { lng: -9.456464554189029, lat: 38.694793718509501 }, { lng: -9.45626578253707, lat: 38.694835064169297 }, { lng: -9.45621452645735, lat: 38.694760702879698 }, { lng: -9.45613618706763, lat: 38.694800679136399 }, { lng: -9.456137387861389, lat: 38.694865792982498 }, { lng: -9.456163459869719, lat: 38.694920895286003 }, { lng: -9.456272138023721, lat: 38.6949554215186 }, { lng: -9.45639880691837, lat: 38.695061630841799 }, { lng: -9.45634563736191, lat: 38.6951078115153 }, { lng: -9.45605963821887, lat: 38.694931800156802 }, { lng: -9.455989206371649, lat: 38.694939080791002 }, { lng: -9.455958455454111, lat: 38.694854848255197 }, { lng: -9.4558755496268, lat: 38.694865516321798 }, { lng: -9.455830896617179, lat: 38.694924661572003 }, { lng: -9.45577622274492, lat: 38.6948829439064 }, { lng: -9.455689545940871, lat: 38.694919774112499 }, { lng: -9.455662277131159, lat: 38.695017725072702 }, { lng: -9.455591606227481, lat: 38.695025013576497 }, { lng: -9.45531633533815, lat: 38.694744749179399 }, { lng: -9.45519416922671, lat: 38.694658309183801 }, { lng: -9.454941567102971, lat: 38.694709985967698 }, { lng: -9.45485135499723, lat: 38.694779376005499 }, { lng: -9.45479027274718, lat: 38.694845194828297 }, { lng: -9.45477930543082, lat: 38.694930075811897 }, { lng: -9.45467968266197, lat: 38.694937691025999 }, { lng: -9.45466553584634, lat: 38.694849937617001 }, { lng: -9.45457855364141, lat: 38.694863892708803 }, { lng: -9.454626693287249, lat: 38.694775429007301 }, { lng: -9.45455547573059, lat: 38.694740386891503 }, { lng: -9.454518788904879, lat: 38.694776649441998 }, { lng: -9.45439489011091, lat: 38.694826874937498 }, { lng: -9.4543282946109, lat: 38.694817899167198 }, { lng: -9.454311690335381, lat: 38.694821327761701 }, { lng: -9.45426553142547, lat: 38.694799064369697 }, { lng: -9.454228365159111, lat: 38.694809213531499 }, { lng: -9.454177660201809, lat: 38.694770693036403 }, { lng: -9.454234783377689, lat: 38.694708252111496 }, { lng: -9.45414223508039, lat: 38.694657057651 }, { lng: -9.454076530336041, lat: 38.694690497021497 }, { lng: -9.45409349729918, lat: 38.694713096605597 }, { lng: -9.45401112958009, lat: 38.694753025979097 }, { lng: -9.454012149521491, lat: 38.694808412690101 }, { lng: -9.453979308529441, lat: 38.694834816839801 }, { lng: -9.453942746748471, lat: 38.6948841452636 }, { lng: -9.4538965774441, lat: 38.694848814377899 }, { lng: -9.45371519290126, lat: 38.694710885390897 }, { lng: -9.453639483335969, lat: 38.694662742211399 }, { lng: -9.453634087745099, lat: 38.694594342850998 }, { lng: -9.453566710539841, lat: 38.694549526640301 }, { lng: -9.45355028798437, lat: 38.694562774166499 }, { lng: -9.453576967371919, lat: 38.694656960005503 }, { lng: -9.45365752616757, lat: 38.694737479769401 }, { lng: -9.453792277964091, lat: 38.694833689490203 }, { lng: -9.4537261655589, lat: 38.694857229307303 }, { lng: -9.453671321557371, lat: 38.6948187544399 }, { lng: -9.45367455259937, lat: 38.694763319712401 }, { lng: -9.45362018304286, lat: 38.694744389766399 }, { lng: -9.453570908070409, lat: 38.694777553220902 }, { lng: -9.453501913627161, lat: 38.694869578549799 }, { lng: -9.45356581442055, lat: 38.694950287388899 }, { lng: -9.45342866234977, lat: 38.694955078089997 }, { lng: -9.45340906209586, lat: 38.695020427767098 }, { lng: -9.45332598256083, lat: 38.6950213667768 }, { lng: -9.453229408239681, lat: 38.694970301726002 }, { lng: -9.453109047840449, lat: 38.694981481686298 }, { lng: -9.453012601521101, lat: 38.694936994231398 }, { lng: -9.45261349729439, lat: 38.694935015158897 }, { lng: -9.45254546010325, lat: 38.694854262393001 }, { lng: -9.452624341086629, lat: 38.694843647512002 }, { lng: -9.452615051745861, lat: 38.694788354104702 }, { lng: -9.452389313459109, lat: 38.694725866720702 }, { lng: -9.452104933678029, lat: 38.694855995382603 }, { lng: -9.45199373719592, lat: 38.6949094069968 }, { lng: -9.45193763475889, lat: 38.694802487001098 }, { lng: -9.45182998002632, lat: 38.694829826263799 }, { lng: -9.451760139580401, lat: 38.6948697082507 }, { lng: -9.45178628118976, lat: 38.694941113799601 }, { lng: -9.45170001240535, lat: 38.694987574694999 }, { lng: -9.451646185186361, lat: 38.695004485648496 }, { lng: -9.45158072532243, lat: 38.695063863932702 }, { lng: -9.451514661593119, lat: 38.695084159183601 }, { lng: -9.451443639333551, lat: 38.695071898836296 }, { lng: -9.451407011899111, lat: 38.695111491696998 }, { lng: -9.451360731766, lat: 38.695082649298399 }, { lng: -9.45108326150404, lat: 38.694913195220003 }, { lng: -9.450983627248821, lat: 38.694914319170003 }, { lng: -9.45083689779943, lat: 38.694854003544002 }, { lng: -9.450737927002869, lat: 38.694897546068503 }, { lng: -9.450662157259311, lat: 38.694839761589002 }, { lng: -9.450457390505591, lat: 38.6950178982149 }, { lng: -9.45032154960608, lat: 38.6950877988644 }, { lng: -9.450186438872169, lat: 38.695203540319199 }, { lng: -9.44994150365863, lat: 38.695222513893498 }, { lng: -9.449621229749679, lat: 38.695213153024802 }, { lng: -9.44940602700556, lat: 38.695267553064603 }, { lng: -9.449030488461441, lat: 38.695190444283497 }, { lng: -9.44877811735892, lat: 38.695255081673601 }, { lng: -9.44857880338061, lat: 38.6952671408662 }, { lng: -9.44850158404644, lat: 38.695362503992001 }, { lng: -9.448437750428621, lat: 38.695278459651497 }, { lng: -9.448267635595091, lat: 38.695303251899503 }, { lng: -9.44792834291049, lat: 38.695385260045498 }, { lng: -9.44779839126501, lat: 38.695331324847302 }, { lng: -9.447585233732941, lat: 38.6952717520346 }, { lng: -9.44752372835087, lat: 38.695314779670902 }, { lng: -9.447320639529551, lat: 38.695352913212801 }, { lng: -9.4472072889098, lat: 38.695288975065502 }, { lng: -9.44708021938064, lat: 38.695160155375703 }, { lng: -9.44697142194148, lat: 38.695118952608603 }, { lng: -9.446770617056741, lat: 38.695049510273797 }, { lng: -9.44670749704829, lat: 38.695004727829797 }, { lng: -9.446602667939191, lat: 38.694960329238199 }, { lng: -9.446507114085859, lat: 38.694958071585098 }, { lng: -9.446517256063411, lat: 38.694834190930997 }, { lng: -9.446502762197429, lat: 38.694720317129502 }, { lng: -9.446324610602121, lat: 38.6947582633968 }, { lng: -9.446221260840289, lat: 38.694788700049699 }, { lng: -9.44612416182437, lat: 38.694708270773802 }, { lng: -9.44600325574433, lat: 38.694690084437198 }, { lng: -9.445938477029729, lat: 38.694560563113797 }, { lng: -9.44582973951294, lat: 38.694516202297898 }, { lng: -9.445701460824591, lat: 38.694553496695697 }, { lng: -9.445537702341801, lat: 38.694460844134902 }, { lng: -9.44537136547252, lat: 38.694465959269202 }, { lng: -9.44527292360598, lat: 38.694532187960803 }, { lng: -9.445346811253669, lat: 38.694707190014299 }, { lng: -9.445435465206581, lat: 38.6947845593293 }, { lng: -9.445357174757261, lat: 38.6948211949992 }, { lng: -9.44539523785482, lat: 38.694859863038602 }, { lng: -9.44542886083681, lat: 38.694875697731099 }, { lng: -9.445429636004519, lat: 38.694918115312099 }, { lng: -9.44539270939322, lat: 38.694947804797103 }, { lng: -9.445431303882099, lat: 38.695009256347703 }, { lng: -9.445218806854079, lat: 38.694985611618399 }, { lng: -9.445221809921829, lat: 38.694923695898297 }, { lng: -9.44515964732267, lat: 38.694930878115798 }, { lng: -9.445077216753059, lat: 38.6949676564398 }, { lng: -9.444977715077369, lat: 38.694988318697597 }, { lng: -9.44492081961879, lat: 38.695057325513801 }, { lng: -9.44478762352202, lat: 38.695052334276298 }, { lng: -9.444429112203361, lat: 38.695000961837202 }, { lng: -9.444102611447541, lat: 38.694871044313203 }, { lng: -9.443831851044919, lat: 38.694841657547101 }, { lng: -9.44351383616489, lat: 38.694955839406902 }, { lng: -9.443226257004479, lat: 38.695138224407401 }, { lng: -9.442951302100269, lat: 38.695111943423697 }, { lng: -9.44264343047479, lat: 38.695095849761202 }, { lng: -9.442303242889709, lat: 38.695135510918398 }, { lng: -9.441931277342171, lat: 38.695253806472003 }, { lng: -9.44162572831757, lat: 38.695377749448603 }, { lng: -9.44127479177078, lat: 38.695502203951399 }, { lng: -9.4410625896629, lat: 38.695494760436503 }, { lng: -9.440778232448549, lat: 38.695400210134601 }, { lng: -9.440488396105501, lat: 38.695471914381699 }, { lng: -9.440143651290249, lat: 38.695482260507703 }, { lng: -9.44010347464482, lat: 38.6955608028304 }, { lng: -9.43991319809466, lat: 38.695608599608903 }, { lng: -9.439699952383309, lat: 38.695764655156999 }, { lng: -9.43930668525471, lat: 38.695641506365597 }, { lng: -9.43891860307056, lat: 38.695481368535397 }, { lng: -9.438774979611321, lat: 38.695427032785602 }, { lng: -9.438545623262311, lat: 38.695323305506498 }, { lng: -9.43843359174183, lat: 38.695135487184103 }, { lng: -9.437747340591301, lat: 38.694917062849001 }, { lng: -9.43742740018193, lat: 38.694875420826598 }, { lng: -9.43701480034008, lat: 38.694776167485202 }, { lng: -9.436408923330029, lat: 38.694312008407202 }, { lng: -9.435990292727761, lat: 38.693880345792699 }, { lng: -9.435677709250079, lat: 38.693490108560297 }, { lng: -9.43542464090617, lat: 38.693016698724598 }, { lng: -9.435217252163669, lat: 38.692811473410103 }, { lng: -9.435069964101221, lat: 38.692922198770503 }, { lng: -9.435054740288541, lat: 38.693020822601099 }, { lng: -9.43493534300155, lat: 38.692990265603598 }, { lng: -9.43471883555303, lat: 38.692846301500502 }, { lng: -9.434465875788719, lat: 38.6925617773637 }, { lng: -9.434191802228939, lat: 38.692234880200601 }, { lng: -9.433920388283161, lat: 38.692054238088303 }, { lng: -9.433586685756961, lat: 38.691810511696602 }, { lng: -9.43352972139245, lat: 38.691851050337903 }, { lng: -9.43340738017198, lat: 38.691841781810197 }, { lng: -9.43330506153932, lat: 38.691808692992801 }, { lng: -9.433148416670759, lat: 38.691815661021202 }, { lng: -9.43316171385313, lat: 38.691775427033001 }, { lng: -9.43301471272879, lat: 38.691718422940198 }, { lng: -9.43297685550621, lat: 38.6916842550688 }, { lng: -9.43290293751094, lat: 38.691727685995303 }, { lng: -9.43282053101634, lat: 38.691683382380297 }, { lng: -9.43288371104536, lat: 38.691605486639403 }, { lng: -9.43277056982404, lat: 38.691545670150703 }, { lng: -9.432753991452399, lat: 38.6915697284768 }, { lng: -9.432692932058311, lat: 38.691567794900301 }, { lng: -9.43267888675037, lat: 38.691541289962501 }, { lng: -9.432705879969889, lat: 38.691527746798997 }, { lng: -9.43267124047391, lat: 38.691493541260598 }, { lng: -9.432630659253849, lat: 38.691499308641703 }, { lng: -9.43262100786707, lat: 38.6915313032288 }, { lng: -9.43257339311822, lat: 38.691529220166402 }, { lng: -9.43256738248267, lat: 38.691571804295698 }, { lng: -9.432575269782131, lat: 38.691632877244302 }, { lng: -9.43262956935996, lat: 38.691629570556302 }, { lng: -9.4326778946409, lat: 38.691676950916097 }, { lng: -9.432643951956781, lat: 38.691674715925501 }, { lng: -9.4326002868524, lat: 38.691707093942 }, { lng: -9.432645783120311, lat: 38.691775852244703 }, { lng: -9.43261598809497, lat: 38.691818700715203 }, { lng: -9.432470895362, lat: 38.691676640968701 }, { lng: -9.43236583336942, lat: 38.691688440245898 }, { lng: -9.432289545684791, lat: 38.691601466259797 }, { lng: -9.432191601841099, lat: 38.691631829564201 }, { lng: -9.43212327130961, lat: 38.691603315429298 }, { lng: -9.43201221873119, lat: 38.6916524683921 }, { lng: -9.431874063481949, lat: 38.6915316818204 }, { lng: -9.431515003810411, lat: 38.691378580311302 }, { lng: -9.4314655544537, lat: 38.6912754514589 }, { lng: -9.431446955754691, lat: 38.691187835414702 }, { lng: -9.431374945018179, lat: 38.691146118550499 }, { lng: -9.43128393748542, lat: 38.691179016318301 }, { lng: -9.431181384861819, lat: 38.691145657091397 }, { lng: -9.430913913299969, lat: 38.690991535999203 }, { lng: -9.4308945460718, lat: 38.690861410146603 }, { lng: -9.431073179892939, lat: 38.690595952416501 }, { lng: -9.431011180243379, lat: 38.690548808733801 }, { lng: -9.430995935189459, lat: 38.690455929998201 }, { lng: -9.43088511762382, lat: 38.690340063238502 }, { lng: -9.43083435637724, lat: 38.690348639892697 }, { lng: -9.430826776052839, lat: 38.690298104232198 }, { lng: -9.430789142467971, lat: 38.690282575531199 }, { lng: -9.4307381268603, lat: 38.690283051620199 }, { lng: -9.430719966541901, lat: 38.690219571267797 }, { lng: -9.430617240400469, lat: 38.690170090535098 }, { lng: -9.43058230366397, lat: 38.690106614363799 }, { lng: -9.43054867681359, lat: 38.690128244816499 }, { lng: -9.43040467841033, lat: 38.690052651768703 }, { lng: -9.430331851678989, lat: 38.689965721828997 }, { lng: -9.43023247746496, lat: 38.689910889008999 }, { lng: -9.430219239388469, lat: 38.6899349955033 }, { lng: -9.430151681668059, lat: 38.689949079047501 }, { lng: -9.43011254585157, lat: 38.6900347244122 }, { lng: -9.430096791287349, lat: 38.690103988395201 }, { lng: -9.43018313101893, lat: 38.690188149136901 }, { lng: -9.43020495748538, lat: 38.690270419549698 }, { lng: -9.430220991379279, lat: 38.690400672592901 }, { lng: -9.43029431453658, lat: 38.690705850570602 }, { lng: -9.430167451690171, lat: 38.690821563187697 }, { lng: -9.43010236601144, lat: 38.690787695505897 }, { lng: -9.429869863257551, lat: 38.690508249706198 }, { lng: -9.429802626605101, lat: 38.690546198151701 }, { lng: -9.42978633949201, lat: 38.690586368550498 }, { lng: -9.429766051067929, lat: 38.690589206678702 }, { lng: -9.429669942642301, lat: 38.690537039489598 }, { lng: -9.42958942511895, lat: 38.690577839196301 }, { lng: -9.42945741409687, lat: 38.690605965701401 }, { lng: -9.42939854600113, lat: 38.690534736720799 }, { lng: -9.429283158764649, lat: 38.690541332232698 }, { lng: -9.429274007197719, lat: 38.690594666615397 }, { lng: -9.429220093460369, lat: 38.690619320269498 }, { lng: -9.42908924096017, lat: 38.690514209305597 }, { lng: -9.428829386220849, lat: 38.690221731316399 }, { lng: -9.428747560170549, lat: 38.690209305699803 }, { lng: -9.42854389729559, lat: 38.6902089509001 }, { lng: -9.4284291882294, lat: 38.690056014873903 }, { lng: -9.428162956162341, lat: 38.689976457619601 }, { lng: -9.427866394590319, lat: 38.689910566130301 }, { lng: -9.427860325980239, lat: 38.689758941449 }, { lng: -9.427567355671361, lat: 38.689700937123597 }, { lng: -9.427425685492279, lat: 38.689747816956903 }, { lng: -9.42739723246607, lat: 38.6898651386498 }, { lng: -9.427292790037249, lat: 38.689911607141703 }, { lng: -9.42714786751238, lat: 38.689969058072599 }, { lng: -9.427065198082371, lat: 38.689903407656402 }, { lng: -9.42709417451854, lat: 38.689623852020503 }, { lng: -9.42698481638242, lat: 38.6895824547343 }, { lng: -9.426839771216949, lat: 38.689448224943099 }, { lng: -9.426842623880029, lat: 38.689421621490297 }, { lng: -9.42682820219825, lat: 38.689373949130299 }, { lng: -9.42675712512612, lat: 38.689377439635898 }, { lng: -9.4267178176085, lat: 38.689460206024897 }, { lng: -9.426617380174569, lat: 38.689543917088002 }, { lng: -9.42653010947776, lat: 38.689592805378503 }, { lng: -9.4264543190981, lat: 38.689532483962601 }, { lng: -9.4264175491145, lat: 38.689564778018202 }, { lng: -9.42636242814911, lat: 38.689522780235002 }, { lng: -9.42626241777716, lat: 38.6896170253112 }, { lng: -9.42629360215323, lat: 38.6896511800186 }, { lng: -9.42634746022151, lat: 38.689629418003001 }, { lng: -9.426423774870299, lat: 38.689718917818801 }, { lng: -9.42644243776982, lat: 38.689817164931497 }, { lng: -9.426418989706359, lat: 38.6898360738805 }, { lng: -9.42635758810478, lat: 38.689815492074203 }, { lng: -9.42630062685619, lat: 38.689856027186302 }, { lng: -9.42635779048171, lat: 38.690017712370299 }, { lng: -9.42618827465269, lat: 38.690024904384401 }, { lng: -9.426378293213331, lat: 38.690211690355802 }, { lng: -9.42630424630763, lat: 38.690241783524598 }, { lng: -9.426088969031429, lat: 38.689986098313199 }, { lng: -9.42601415540272, lat: 38.689973592334297 }, { lng: -9.42591612777113, lat: 38.689993326704503 }, { lng: -9.42568608800843, lat: 38.690041092277802 }, { lng: -9.42555007215784, lat: 38.690018633425701 }, { lng: -9.42515640151794, lat: 38.689844729316803 }, { lng: -9.424882208924821, lat: 38.689885048980997 }, { lng: -9.42480078777986, lat: 38.689888561598501 }, { lng: -9.42483298714205, lat: 38.689978737147399 }, { lng: -9.424858016111751, lat: 38.690047639985202 }, { lng: -9.42477707300581, lat: 38.690077808374802 }, { lng: -9.42469804502902, lat: 38.690022741560902 }, { lng: -9.42452717615218, lat: 38.689960765870701 }, { lng: -9.42444594646469, lat: 38.6899749971235 }, { lng: -9.424302309059669, lat: 38.6899127212601 }, { lng: -9.424162920403599, lat: 38.689900928052303 }, { lng: -9.423999974896191, lat: 38.6899027288868 }, { lng: -9.423928016701071, lat: 38.689863624456002 }, { lng: -9.423854477007771, lat: 38.6897367039874 }, { lng: -9.42373049669227, lat: 38.689642413142202 }, { lng: -9.423610978168011, lat: 38.6895985188983 }, { lng: -9.4235153641726, lat: 38.689381315961498 }, { lng: -9.42349578729389, lat: 38.689424139462702 }, { lng: -9.423443974127659, lat: 38.689374176986 }, { lng: -9.423390841792891, lat: 38.689435929379499 }, { lng: -9.42340878095689, lat: 38.689494188878598 }, { lng: -9.42335530986414, lat: 38.689537473746 }, { lng: -9.42324968347139, lat: 38.689530626854001 }, { lng: -9.42321976076601, lat: 38.689560232121302 }, { lng: -9.42321369779097, lat: 38.689600204153102 }, { lng: -9.42321106135334, lat: 38.689645447533699 }, { lng: -9.423187490229131, lat: 38.6896510230575 }, { lng: -9.423132945265129, lat: 38.689640994820998 }, { lng: -9.423105877671579, lat: 38.689643996662198 }, { lng: -9.423065516582239, lat: 38.689668406993498 }, { lng: -9.42300173749747, lat: 38.689700906966799 }, { lng: -9.42297852784762, lat: 38.689733140436097 }, { lng: -9.422961519051849, lat: 38.689733328063198 }, { lng: -9.422950496972719, lat: 38.689682824413502 }, { lng: -9.42291022883045, lat: 38.689712542821297 }, { lng: -9.42287911921553, lat: 38.689688928121697 }, { lng: -9.4228592773768, lat: 38.689710493498303 }, { lng: -9.42282483541069, lat: 38.6896869146398 }, { lng: -9.422804765649451, lat: 38.6897083969478 }, { lng: -9.422784157746589, lat: 38.689687364205497 }, { lng: -9.422754121006619, lat: 38.689716969711299 }, { lng: -9.422709632353589, lat: 38.689690799308003 }, { lng: -9.422620264447961, lat: 38.689636029769602 }, { lng: -9.42258016030288, lat: 38.689668359398198 }, { lng: -9.42255211759203, lat: 38.689623448946101 }, { lng: -9.42250834690438, lat: 38.689637264863599 }, { lng: -9.42248431807927, lat: 38.689624197492797 }, { lng: -9.42241993367905, lat: 38.689635538364499 }, { lng: -9.42241245626659, lat: 38.689590401113698 }, { lng: -9.422368455753389, lat: 38.6896042195131 }, { lng: -9.422407873213601, lat: 38.689712778407902 }, { lng: -9.42238349752941, lat: 38.689686470777502 }, { lng: -9.42233661248123, lat: 38.6897188750902 }, { lng: -9.4223718948632, lat: 38.689795684106699 }, { lng: -9.42240260335932, lat: 38.689803362387202 }, { lng: -9.422390050970341, lat: 38.689859346909202 }, { lng: -9.42244846755414, lat: 38.689893292457498 }, { lng: -9.42245587029767, lat: 38.689927800506503 }, { lng: -9.422493576604969, lat: 38.689953955717698 }, { lng: -9.422491104364189, lat: 38.690001904994901 }, { lng: -9.42255403676393, lat: 38.690107677858897 }, { lng: -9.422544379497859, lat: 38.690139586139402 }, { lng: -9.42261487723033, lat: 38.690282567532499 }, { lng: -9.422591202392439, lat: 38.690282828620703 }, { lng: -9.422445593140409, lat: 38.690116802289502 }, { lng: -9.42248566984116, lat: 38.690076460636 }, { lng: -9.4224786775791, lat: 38.690071222279499 }, { lng: -9.42245143275164, lat: 38.690058279543102 }, { lng: -9.42242110687072, lat: 38.690071857998603 }, { lng: -9.42240062219096, lat: 38.690064156169697 }, { lng: -9.422378450575581, lat: 38.689968559310302 }, { lng: -9.42231990384686, lat: 38.6899212819228 }, { lng: -9.422296119961651, lat: 38.689921544152803 }, { lng: -9.42231574514828, lat: 38.689881428942101 }, { lng: -9.422274630410049, lat: 38.689857918088002 }, { lng: -9.42223383773131, lat: 38.689858368730697 }, { lng: -9.42215938842538, lat: 38.689872522742697 }, { lng: -9.422102065069391, lat: 38.689886484313099 }, { lng: -9.4220504878908, lat: 38.689849765383101 }, { lng: -9.421996278555831, lat: 38.689858376213103 }, { lng: -9.42199680379456, lat: 38.689887645542299 }, { lng: -9.421963625008591, lat: 38.689927916402503 }, { lng: -9.4219296587887, lat: 38.689930903935299 }, { lng: -9.421912337785241, lat: 38.6899072261713 }, { lng: -9.42188903174991, lat: 38.689934054951003 }, { lng: -9.421889891504989, lat: 38.6899819692945 }, { lng: -9.42192034013217, lat: 38.6899816327862 }, { lng: -9.42192110396739, lat: 38.690024136342799 }, { lng: -9.421907542374081, lat: 38.690024285821004 }, { lng: -9.4218347259387, lat: 38.689937357614397 }, { lng: -9.42178034382904, lat: 38.689929938293098 }, { lng: -9.42176034403281, lat: 38.689948807410801 }, { lng: -9.421723140693359, lat: 38.689957141516402 }, { lng: -9.421654080407571, lat: 38.689894038678801 }, { lng: -9.42162032720154, lat: 38.689902429312603 }, { lng: -9.421555866659149, lat: 38.689903140528003 }, { lng: -9.421447876015479, lat: 38.689944236479398 }, { lng: -9.421437476880881, lat: 38.689928404675399 }, { lng: -9.42139668414865, lat: 38.689928855026899 }, { lng: -9.42136283557368, lat: 38.689931931176197 }, { lng: -9.42136331322873, lat: 38.689958497814203 }, { lng: -9.42133317941183, lat: 38.689982793971197 }, { lng: -9.42128936085477, lat: 38.689993902238101 }, { lng: -9.42119069083089, lat: 38.689984365510703 }, { lng: -9.421078609788999, lat: 38.689982988798597 }, { lng: -9.42102827665216, lat: 38.6900154296697 }, { lng: -9.421015718558831, lat: 38.690071414111998 }, { lng: -9.420991934611701, lat: 38.690071676077601 }, { lng: -9.420957609607051, lat: 38.690048186357402 }, { lng: -9.420913817005999, lat: 38.690067221900797 }, { lng: -9.420914104500291, lat: 38.690083256095903 }, { lng: -9.42089417310269, lat: 38.690112749830803 }, { lng: -9.420880807706711, lat: 38.690123522546799 }, { lng: -9.42082920722973, lat: 38.690078876530997 }, { lng: -9.42081864369541, lat: 38.690060343262502 }, { lng: -9.42078831747688, lat: 38.6900739203992 }, { lng: -9.42080934226815, lat: 38.690105667201301 }, { lng: -9.42079586318081, lat: 38.690116445663499 }, { lng: -9.420741557167389, lat: 38.690119747822401 }, { lng: -9.42071196523351, lat: 38.690167811052497 }, { lng: -9.42072937703891, lat: 38.690196892633203 }, { lng: -9.42072623635795, lat: 38.690207558140699 }, { lng: -9.42068903445128, lat: 38.6902159864838 }, { lng: -9.420645386542249, lat: 38.690243039014597 }, { lng: -9.42062219646135, lat: 38.690269957245 }, { lng: -9.42065990228441, lat: 38.690296112154002 }, { lng: -9.42070088578259, lat: 38.690306290879803 }, { lng: -9.420694277477811, lat: 38.690322400109402 }, { lng: -9.4206366666035, lat: 38.690320423151597 }, { lng: -9.42061649491254, lat: 38.6903365862443 }, { lng: -9.42075236067952, lat: 38.690510286860899 }, { lng: -9.42080419137937, lat: 38.690548719541397 }, { lng: -9.42083447441143, lat: 38.6905710566907 }, { lng: -9.420783968376551, lat: 38.690587407954197 }, { lng: -9.420798053215339, lat: 38.690616436983703 }, { lng: -9.42077169459618, lat: 38.6906593302133 }, { lng: -9.420741130741449, lat: 38.6906596667923 }, { lng: -9.42073487470199, lat: 38.690689015306901 }, { lng: -9.42077895183877, lat: 38.690685826695599 }, { lng: -9.42081357185501, lat: 38.690725436148803 }, { lng: -9.42087203687457, lat: 38.6907620842656 }, { lng: -9.42086247671465, lat: 38.690799390571897 }, { lng: -9.42095734599426, lat: 38.690795732573299 }, { lng: -9.420960029460311, lat: 38.690753095561497 }, { lng: -9.42099064294853, lat: 38.690755460696899 }, { lng: -9.421018052314389, lat: 38.690771105179202 }, { lng: -9.421048424463899, lat: 38.690760139718201 }, { lng: -9.421086629121501, lat: 38.690807550831998 }, { lng: -9.421090457539041, lat: 38.690828764197498 }, { lng: -9.42112106944783, lat: 38.690831039238603 }, { lng: -9.42115185858324, lat: 38.690849348777697 }, { lng: -9.42113872757972, lat: 38.6908734530804 }, { lng: -9.421084248369089, lat: 38.690860719049503 }, { lng: -9.42107799467261, lat: 38.6908900630511 }, { lng: -9.4211188156702, lat: 38.690897631175602 }, { lng: -9.4211260729699, lat: 38.690924122229198 }, { lng: -9.42107253670053, lat: 38.690969932542203 }, { lng: -9.42106682631551, lat: 38.691023229312897 }, { lng: -9.4212116038593, lat: 38.691149361374002 }, { lng: -9.42125949187432, lat: 38.691172797976002 }, { lng: -9.421249806539199, lat: 38.691196772451299 }, { lng: -9.42126418202373, lat: 38.691241924752298 }, { lng: -9.42132655722383, lat: 38.691310325933799 }, { lng: -9.421327416066649, lat: 38.691358143900302 }, { lng: -9.42135500986176, lat: 38.691384501860597 }, { lng: -9.42135220241733, lat: 38.691413807003997 }, { lng: -9.42138967010635, lat: 38.691426637358802 }, { lng: -9.42139010093257, lat: 38.691450591364401 }, { lng: -9.42142466751554, lat: 38.691487502500898 }, { lng: -9.4214122590631, lat: 38.691551504001801 }, { lng: -9.42144679518921, lat: 38.691580306710698 }, { lng: -9.421420519348739, lat: 38.691633834590498 }, { lng: -9.42143479117706, lat: 38.691673581570697 }, { lng: -9.42136435850229, lat: 38.691719483599897 }, { lng: -9.42127931769066, lat: 38.691707274639299 }, { lng: -9.421271484740769, lat: 38.691706369183002 }, { lng: -9.421208405429979, lat: 38.691636983984303 }, { lng: -9.421170247076731, lat: 38.691592184650702 }, { lng: -9.42116985302089, lat: 38.691570212839999 }, { lng: -9.42104190050344, lat: 38.691491541790398 }, { lng: -9.42076049731814, lat: 38.691047147954002 }, { lng: -9.419372643054659, lat: 38.690012410242304 }, { lng: -9.41907466473387, lat: 38.689899313271297 }, { lng: -9.418792344978449, lat: 38.689838828667099 }, { lng: -9.418421810836991, lat: 38.689819756902303 }, { lng: -9.41792091352765, lat: 38.689952904997 }, { lng: -9.4136858705936, lat: 38.693201538997599 }, { lng: -9.414339977180891, lat: 38.693620249812199 }, { lng: -9.41585503702839, lat: 38.693650102121197 }, { lng: -9.41678460668011, lat: 38.694373833821103 }, { lng: -9.41672884140932, lat: 38.694443264163802 }, { lng: -9.41678944047025, lat: 38.694496102071703 }, { lng: -9.418212944861891, lat: 38.693976203689601 }, { lng: -9.4182243066035, lat: 38.694026499558802 }, { lng: -9.418237050939441, lat: 38.694053794315998 }, { lng: -9.418138081233829, lat: 38.694088887120898 }, { lng: -9.41814528002746, lat: 38.6941320622022 }, { lng: -9.418162215171661, lat: 38.694147097333797 }, { lng: -9.418214920268911, lat: 38.694131295915199 }, { lng: -9.41826237573393, lat: 38.694114318114899 }, { lng: -9.41843971657898, lat: 38.694430257705498 }, { lng: -9.4186448387984, lat: 38.694733357310803 }, { lng: -9.418481606596901, lat: 38.694787384060703 }, { lng: -9.418618202384289, lat: 38.6950516183228 }, { lng: -9.41867637851248, lat: 38.695144477969002 }, { lng: -9.418805375262099, lat: 38.695334979948903 }, { lng: -9.41928248964607, lat: 38.6956791250633 }, { lng: -9.419956096776071, lat: 38.6963818740034 }, { lng: -9.419803230095241, lat: 38.696514440334496 }, { lng: -9.41963832678938, lat: 38.696638578871998 }, { lng: -9.4195540617823, lat: 38.696753006015598 }, { lng: -9.419455689644341, lat: 38.696856594378403 }, { lng: -9.41929538459955, lat: 38.697083192406197 }, { lng: -9.41916656608009, lat: 38.697200359493998 }, { lng: -9.41905434399272, lat: 38.697278574680503 }, { lng: -9.418955936455269, lat: 38.697324679344398 }, { lng: -9.41890423040102, lat: 38.697353898825398 }, { lng: -9.418857636760571, lat: 38.6973565289234 }, { lng: -9.41872532202337, lat: 38.697308150454496 }, { lng: -9.41815117353489, lat: 38.697008136524197 }, { lng: -9.41811579312996, lat: 38.696862092245297 }, { lng: -9.41803564668284, lat: 38.696827269141103 }, { lng: -9.41783874399761, lat: 38.697060685388102 }, { lng: -9.417911864737791, lat: 38.697103636928802 }, { lng: -9.41812384512974, lat: 38.697086203236601 }, { lng: -9.41847711260854, lat: 38.697272642505602 }, { lng: -9.418380826603871, lat: 38.697346426609897 }, { lng: -9.41825690628365, lat: 38.697371247553399 }, { lng: -9.41825651499598, lat: 38.697505574084303 }, { lng: -9.418282322101859, lat: 38.697615320628898 }, { lng: -9.418391054849311, lat: 38.6977698301652 }, { lng: -9.418310798179959, lat: 38.697757619652698 }, { lng: -9.41824518085448, lat: 38.697771226443599 }, { lng: -9.4182370478901, lat: 38.697625211513497 }, { lng: -9.418171390780881, lat: 38.6976301667844 }, { lng: -9.41815062883907, lat: 38.697690564743802 }, { lng: -9.41808593606387, lat: 38.6977557692163 }, { lng: -9.418115248967441, lat: 38.6978585872601 }, { lng: -9.41815363176139, lat: 38.697858165414097 }, { lng: -9.418176702895201, lat: 38.697926728123797 }, { lng: -9.41816157966619, lat: 38.697999948750898 }, { lng: -9.41811188827219, lat: 38.697978968236399 }, { lng: -9.41810331635738, lat: 38.698116520249997 }, { lng: -9.418171713888359, lat: 38.698257724780902 }, { lng: -9.41814493268801, lat: 38.698296575768801 }, { lng: -9.41807252938448, lat: 38.698232964507099 }, { lng: -9.41799722468887, lat: 38.6983154047239 }, { lng: -9.41809863476642, lat: 38.698464712856598 }, { lng: -9.41809951640283, lat: 38.698520463651697 }, { lng: -9.418017312321551, lat: 38.6985256916727 }, { lng: -9.418062944919621, lat: 38.698628414139698 }, { lng: -9.418074594353911, lat: 38.698662694698498 }, { lng: -9.418103519678731, lat: 38.698743898462098 }, { lng: -9.41814259598727, lat: 38.698782200384301 }, { lng: -9.41815826696703, lat: 38.698739062230999 }, { lng: -9.41818465630422, lat: 38.698678693406102 }, { lng: -9.418266592389701, lat: 38.698664905474701 }, { lng: -9.418313889456011, lat: 38.698539632286 }, { lng: -9.418214058997631, lat: 38.698484970906598 }, { lng: -9.418217959100129, lat: 38.698394673395001 }, { lng: -9.418329360417751, lat: 38.698492263580398 }, { lng: -9.418384293606699, lat: 38.698491659729903 }, { lng: -9.418439998256719, lat: 38.698546801549902 }, { lng: -9.418418934142929, lat: 38.698589999027803 }, { lng: -9.41827249358221, lat: 38.698686283485202 }, { lng: -9.4182458351272, lat: 38.698738098855401 }, { lng: -9.41819688071166, lat: 38.698751517966699 }, { lng: -9.418170453174911, lat: 38.698803330781601 }, { lng: -9.41817153109697, lat: 38.698863494098298 }, { lng: -9.418270670437151, lat: 38.698892487503301 }, { lng: -9.41835977551367, lat: 38.698964466964597 }, { lng: -9.418170633992199, lat: 38.6991213904343 }, { lng: -9.418059377034311, lat: 38.699032360362203 }, { lng: -9.41801617141115, lat: 38.699071567470902 }, { lng: -9.418011115978899, lat: 38.699097384201998 }, { lng: -9.41808896064471, lat: 38.699156697554599 }, { lng: -9.41802430256122, lat: 38.699217492326497 }, { lng: -9.417931095645139, lat: 38.699218518404301 }, { lng: -9.417865938833851, lat: 38.699257875696198 }, { lng: -9.417810622713249, lat: 38.699237046946102 }, { lng: -9.41771753641828, lat: 38.699238070627601 }, { lng: -9.417679301351599, lat: 38.699247048044398 }, { lng: -9.41757996833541, lat: 38.699213732563699 }, { lng: -9.41758081527508, lat: 38.6992610110795 }, { lng: -9.41754837009923, lat: 38.699291452392998 }, { lng: -9.41747133680016, lat: 38.699270862056302 }, { lng: -9.41742110552854, lat: 38.699219802307503 }, { lng: -9.41736463547409, lat: 38.699134579029298 }, { lng: -9.41728817729955, lat: 38.699152623565602 }, { lng: -9.4172436570973, lat: 38.699105822914902 }, { lng: -9.41717236775251, lat: 38.699110930468699 }, { lng: -9.41710200189357, lat: 38.69916755109 }, { lng: -9.417169888165789, lat: 38.699274176667203 }, { lng: -9.41710646167075, lat: 38.699416745694499 }, { lng: -9.417173271115701, lat: 38.699463209728201 }, { lng: -9.417235105463529, lat: 38.699552784357401 }, { lng: -9.417334020901309, lat: 38.6995689053768 }, { lng: -9.41735677749806, lat: 38.699607297631204 }, { lng: -9.417362486640689, lat: 38.699624439663602 }, { lng: -9.41729686732754, lat: 38.699638040546901 }, { lng: -9.41713777326594, lat: 38.6996312332153 }, { lng: -9.41696649105174, lat: 38.6995600606338 }, { lng: -9.41695086495524, lat: 38.699598879833999 }, { lng: -9.41693693003084, lat: 38.699745137138102 }, { lng: -9.4170457454406, lat: 38.700006061440099 }, { lng: -9.41703061944551, lat: 38.700079277432401 }, { lng: -9.416338442504291, lat: 38.700319014249096 }, { lng: -9.4157985279304, lat: 38.700479605774397 }, { lng: -9.415121084820321, lat: 38.700624496346997 }, { lng: -9.414497231981651, lat: 38.700700163177501 }, { lng: -9.413971488360829, lat: 38.700740337936303 }, { lng: -9.41380270083655, lat: 38.7008023584673 }, { lng: -9.41370144308204, lat: 38.700684678269901 }, { lng: -9.413558446697211, lat: 38.700622372456301 }, { lng: -9.41331711352187, lat: 38.700632111468501 }, { lng: -9.41318536428501, lat: 38.700692695971199 }, { lng: -9.412920576853219, lat: 38.700910867463897 }, { lng: -9.41288085004741, lat: 38.701053241455099 }, { lng: -9.412989761066751, lat: 38.701066242747601 }, { lng: -9.41288515037191, lat: 38.7012944895679 }, { lng: -9.41273566976087, lat: 38.701376557395399 }, { lng: -9.41253654844923, lat: 38.701383468284703 }, { lng: -9.412480069093499, lat: 38.701263438726102 }, { lng: -9.41231733492773, lat: 38.701279412780401 }, { lng: -9.4123123782697, lat: 38.701538054316302 }, { lng: -9.411908294740019, lat: 38.701592189199303 }, { lng: -9.411891056841259, lat: 38.701553731018301 }, { lng: -9.41171613524125, lat: 38.701581411556703 }, { lng: -9.411671622692101, lat: 38.701547576218502 }, { lng: -9.411491873544479, lat: 38.701613951430602 }, { lng: -9.411294274451039, lat: 38.701607557176999 }, { lng: -9.411167474136461, lat: 38.701574530232399 }, { lng: -9.410337920947541, lat: 38.7017897937382 }, { lng: -9.41034971993148, lat: 38.701832720846802 }, { lng: -9.410207520909889, lat: 38.701864450038499 }, { lng: -9.410064545652171, lat: 38.701840071238301 }, { lng: -9.409931995035929, lat: 38.701781350881802 }, { lng: -9.40985560894914, lat: 38.7018037143961 }, { lng: -9.40982224165235, lat: 38.701782550309403 }, { lng: -9.409695627723559, lat: 38.7017538443381 }, { lng: -9.409579940698629, lat: 38.701725114415297 }, { lng: -9.4094929777778, lat: 38.701773267874202 }, { lng: -9.409416316941879, lat: 38.701774105647999 }, { lng: -9.409338477903409, lat: 38.7017148720291 }, { lng: -9.409256033563681, lat: 38.701707216392997 }, { lng: -9.409173863116539, lat: 38.701708114143898 }, { lng: -9.40907970201375, lat: 38.701661853959301 }, { lng: -9.408972551840961, lat: 38.701660950600598 }, { lng: -9.40885494348711, lat: 38.701659984706502 }, { lng: -9.40876242227036, lat: 38.701699727411999 }, { lng: -9.40862470593343, lat: 38.701666823108503 }, { lng: -9.40861322148557, lat: 38.701141260423903 }, { lng: -9.408513283847039, lat: 38.701138792581702 }, { lng: -9.408538758735149, lat: 38.701933754235299 }, { lng: -9.40853507222211, lat: 38.701981829026501 }, { lng: -9.408510330172479, lat: 38.702016127397599 }, { lng: -9.408356750961641, lat: 38.702022038047303 }, { lng: -9.40834176239683, lat: 38.702103899762598 }, { lng: -9.40790493363086, lat: 38.702516897012799 }, { lng: -9.407600635441501, lat: 38.702670731714697 }, { lng: -9.40764525938345, lat: 38.702717448431798 }, { lng: -9.40753090581271, lat: 38.702757338086897 }, { lng: -9.40748324174815, lat: 38.702856668722397 }, { lng: -9.4074191006055, lat: 38.702947537819803 }, { lng: -9.407109053260641, lat: 38.7030885582735 }, { lng: -9.407147781619241, lat: 38.703113987517803 }, { lng: -9.40656632909392, lat: 38.703416680656098 }, { lng: -9.40611372168406, lat: 38.703563481184702 }, { lng: -9.40577504873975, lat: 38.703640227134699 }, { lng: -9.405484313087911, lat: 38.7036390704965 }, { lng: -9.404852090441819, lat: 38.703542907074898 }, { lng: -9.403663502669991, lat: 38.703323715086199 }, { lng: -9.40308625461601, lat: 38.703235410104298 }, { lng: -9.403113005875239, lat: 38.703200801897196 }, { lng: -9.403106577885911, lat: 38.703149348440199 }, { lng: -9.40304083269857, lat: 38.7031500634709 }, { lng: -9.402987797927089, lat: 38.703258008880198 }, { lng: -9.402900108801941, lat: 38.703258962171297 }, { lng: -9.40266864616579, lat: 38.7031969840654 }, { lng: -9.402492730897229, lat: 38.703168902011697 }, { lng: -9.40229121593115, lat: 38.703227118657203 }, { lng: -9.40219943577643, lat: 38.703159476069501 }, { lng: -9.402116672331269, lat: 38.703107679214902 }, { lng: -9.401934809658711, lat: 38.703068401214402 }, { lng: -9.40179184376739, lat: 38.703076799412699 }, { lng: -9.401685273847679, lat: 38.703004635585103 }, { lng: -9.401512708015471, lat: 38.702990477682498 }, { lng: -9.40141495109024, lat: 38.7029160534384 }, { lng: -9.40121861437855, lat: 38.702883866376602 }, { lng: -9.401086202864629, lat: 38.702825764095898 }, { lng: -9.4009834253207, lat: 38.702806071732198 }, { lng: -9.40076198485662, lat: 38.702673447943297 }, { lng: -9.40071710034219, lat: 38.702605209233802 }, { lng: -9.40075134873908, lat: 38.702565923632001 }, { lng: -9.40074205385203, lat: 38.702540802773598 }, { lng: -9.40045879174941, lat: 38.702546131819801 }, { lng: -9.400418963977669, lat: 38.7026015989426 }, { lng: -9.40028801978627, lat: 38.702639586885297 }, { lng: -9.40006796024319, lat: 38.702591624840501 }, { lng: -9.399586346931629, lat: 38.702619724195401 }, { lng: -9.39950095344614, lat: 38.702574892610201 }, { lng: -9.399349022449689, lat: 38.702583384921397 }, { lng: -9.399119982870459, lat: 38.702514977118398 }, { lng: -9.39883732822714, lat: 38.702392022903602 }, { lng: -9.39835479647194, lat: 38.702035504299502 }, { lng: -9.39844115557433, lat: 38.701958905696998 }, { lng: -9.398608296782861, lat: 38.701828914926899 }, { lng: -9.399163416716361, lat: 38.701496741547899 }, { lng: -9.398869368966871, lat: 38.701024583755299 }, { lng: -9.398744506461339, lat: 38.701071242525003 }, { lng: -9.398934130172529, lat: 38.7014333515244 }, { lng: -9.39863300528317, lat: 38.701609134520901 }, { lng: -9.398271559430169, lat: 38.701315051608297 }, { lng: -9.39817738576137, lat: 38.701422722137202 }, { lng: -9.398462734855631, lat: 38.701714491525998 }, { lng: -9.39827350251069, lat: 38.701879652213201 }, { lng: -9.39799666262091, lat: 38.702070854147699 }, { lng: -9.3969717253746, lat: 38.702061026552002 }, { lng: -9.39549018853325, lat: 38.7018846424304 }, { lng: -9.394549345600661, lat: 38.702140765756802 }, { lng: -9.39394406128633, lat: 38.702128956702602 }, { lng: -9.393853094877221, lat: 38.702107061601303 }, { lng: -9.393433104195591, lat: 38.701978459862197 }, { lng: -9.39318733689432, lat: 38.701965165166001 }, { lng: -9.39315515545227, lat: 38.701965512894702 }, { lng: -9.39312524041058, lat: 38.701917825871497 }, { lng: -9.39265413601664, lat: 38.702053429417703 }, { lng: -9.39259878088137, lat: 38.702056365946298 }, { lng: -9.392177536227351, lat: 38.702026408775801 }, { lng: -9.391959871668821, lat: 38.701950928430797 }, { lng: -9.39160309469524, lat: 38.701762460437699 }, { lng: -9.39140193595199, lat: 38.701624920035897 }, { lng: -9.39102793458899, lat: 38.701457258838197 }, { lng: -9.39088073890872, lat: 38.701394712732103 }, { lng: -9.39058748156328, lat: 38.701164208236797 }, { lng: -9.3906103080182, lat: 38.7009648052804 }, { lng: -9.390657103586729, lat: 38.700794866441598 }, { lng: -9.39062101171824, lat: 38.700742559366098 }, { lng: -9.3905736780073, lat: 38.700711000902601 }, { lng: -9.390609269617469, lat: 38.700571000886697 }, { lng: -9.390596906140731, lat: 38.700534470565401 }, { lng: -9.390468774940031, lat: 38.700556477181401 }, { lng: -9.39043340151434, lat: 38.700538485401303 }, { lng: -9.39042629353396, lat: 38.700467489887998 }, { lng: -9.390372815827069, lat: 38.700419966339602 }, { lng: -9.39046483738683, lat: 38.700325202624498 }, { lng: -9.390324613128669, lat: 38.7001617815271 }, { lng: -9.390188511985601, lat: 38.7002273827094 }, { lng: -9.390171614240581, lat: 38.700273323695797 }, { lng: -9.39002719206171, lat: 38.700368827064999 }, { lng: -9.389890697748671, lat: 38.700418309178403 }, { lng: -9.3897774053272, lat: 38.700453846394097 }, { lng: -9.3896468918325, lat: 38.700510376451597 }, { lng: -9.38949539599998, lat: 38.700530291988002 }, { lng: -9.38911558993105, lat: 38.700371786572099 }, { lng: -9.389109131418611, lat: 38.7003374472906 }, { lng: -9.389132194434829, lat: 38.7001447068575 }, { lng: -9.389086563512, lat: 38.700046743352701 }, { lng: -9.38899758959664, lat: 38.699967532011598 }, { lng: -9.388978359537511, lat: 38.699867030237897 }, { lng: -9.388904481730879, lat: 38.699652545075502 }, { lng: -9.388853831838359, lat: 38.699595798945502 }, { lng: -9.388676447484769, lat: 38.699476460657898 }, { lng: -9.388541098840889, lat: 38.699420630209502 }, { lng: -9.38852279033617, lat: 38.699372722757097 }, { lng: -9.38845867628944, lat: 38.699387192993299 }, { lng: -9.3883882064312, lat: 38.699367322762399 }, { lng: -9.388326955630729, lat: 38.699367981243498 }, { lng: -9.38833476505954, lat: 38.699315112042797 }, { lng: -9.38831670126739, lat: 38.699287834159797 }, { lng: -9.388261027363409, lat: 38.699272490835 }, { lng: -9.388211302763001, lat: 38.699275274753298 }, { lng: -9.38815260686189, lat: 38.6992644649848 }, { lng: -9.38803775540392, lat: 38.699203909154598 }, { lng: -9.38804280963695, lat: 38.699158004602602 }, { lng: -9.388030488694421, lat: 38.699123818250499 }, { lng: -9.387998067653269, lat: 38.699110386179697 }, { lng: -9.38795743435287, lat: 38.699126853358003 }, { lng: -9.387836165756671, lat: 38.699041233697201 }, { lng: -9.38778934326073, lat: 38.699032546459598 }, { lng: -9.38780365866428, lat: 38.699016360861698 }, { lng: -9.38775042454356, lat: 38.698982615315998 }, { lng: -9.387721471589551, lat: 38.698996616862999 }, { lng: -9.387683033929619, lat: 38.698974147841902 }, { lng: -9.387636337386009, lat: 38.698979244639403 }, { lng: -9.387545128684771, lat: 38.698936630274801 }, { lng: -9.387483720022249, lat: 38.698934943488801 }, { lng: -9.38745090114759, lat: 38.698898727746503 }, { lng: -9.3874100328872, lat: 38.698901416310903 }, { lng: -9.38737828820164, lat: 38.698920044373097 }, { lng: -9.387316514012801, lat: 38.698897825569297 }, { lng: -9.3873214970082, lat: 38.698847422440402 }, { lng: -9.38726005029366, lat: 38.698843486711198 }, { lng: -9.38722540240992, lat: 38.698873586606602 }, { lng: -9.387204061103381, lat: 38.698816706427202 }, { lng: -9.387153810307121, lat: 38.698782831323498 }, { lng: -9.38707634003665, lat: 38.698868336788699 }, { lng: -9.387002603532091, lat: 38.6988257147637 }, { lng: -9.386042492835291, lat: 38.698735217824598 }, { lng: -9.38560236238505, lat: 38.698623202083503 }, { lng: -9.38534698769678, lat: 38.698552612597702 }, { lng: -9.385143692134861, lat: 38.698456253106599 }, { lng: -9.385011301962299, lat: 38.698405152850398 }, { lng: -9.38491619608144, lat: 38.698316818799597 }, { lng: -9.38487459726387, lat: 38.698271324663402 }, { lng: -9.38487723401734, lat: 38.698257604661798 }, { lng: -9.38489182478167, lat: 38.698257448452203 }, { lng: -9.384921099058561, lat: 38.698261730786001 }, { lng: -9.384950163831791, lat: 38.698254391761402 }, { lng: -9.384944105072, lat: 38.698236261885803 }, { lng: -9.38491156564743, lat: 38.698215983431403 }, { lng: -9.3848651488036, lat: 38.698237108110703 }, { lng: -9.38483332957666, lat: 38.698258075595199 }, { lng: -9.384804061067801, lat: 38.698253794078298 }, { lng: -9.38476833101265, lat: 38.698215263117099 }, { lng: -9.384712661473211, lat: 38.698206673851899 }, { lng: -9.38472393748054, lat: 38.698174485572999 }, { lng: -9.38467046521107, lat: 38.698126958405297 }, { lng: -9.384652202566601, lat: 38.6980882404307 }, { lng: -9.384587760787291, lat: 38.698077490364703 }, { lng: -9.38455096133533, lat: 38.698148866177903 }, { lng: -9.38450577520201, lat: 38.698062336784297 }, { lng: -9.384467531057821, lat: 38.698051215282298 }, { lng: -9.384432480449931, lat: 38.698051590405399 }, { lng: -9.38442745740651, lat: 38.698099743723297 }, { lng: -9.38439491977201, lat: 38.698079556082298 }, { lng: -9.38440612600998, lat: 38.698049623218203 }, { lng: -9.384399901967971, lat: 38.6980290575857 }, { lng: -9.384305992634641, lat: 38.698002590732401 }, { lng: -9.384246299606779, lat: 38.697934594076202 }, { lng: -9.384182134986199, lat: 38.697939871905 }, { lng: -9.38415258853381, lat: 38.697919562111998 }, { lng: -9.38415175065313, lat: 38.697871471514098 }, { lng: -9.38411646166035, lat: 38.697858159119697 }, { lng: -9.384075506965941, lat: 38.697856256192303 }, { lng: -9.38406609496649, lat: 38.697817443427702 }, { lng: -9.384039727743041, lat: 38.697808534924597 }, { lng: -9.384015886777689, lat: 38.697785822940702 }, { lng: -9.38400093108941, lat: 38.697765356105897 }, { lng: -9.383962976005259, lat: 38.6977703525083 }, { lng: -9.383919425729919, lat: 38.697784605663799 }, { lng: -9.38394949821971, lat: 38.697834723728597 }, { lng: -9.383917633843881, lat: 38.697846506249803 }, { lng: -9.383873175737341, lat: 38.697814914265699 }, { lng: -9.383866831169, lat: 38.697787419332101 }, { lng: -9.383852235897519, lat: 38.697787575461398 }, { lng: -9.383834927519009, lat: 38.697796946711101 }, { lng: -9.383805381206701, lat: 38.697776635926601 }, { lng: -9.383793893995801, lat: 38.697790449676397 }, { lng: -9.3838003962904, lat: 38.697827133530801 }, { lng: -9.38378037686984, lat: 38.6978525711637 }, { lng: -9.383744967075179, lat: 38.697832318579302 }, { lng: -9.383723874209769, lat: 38.697795795288599 }, { lng: -9.38371227509932, lat: 38.697802855318102 }, { lng: -9.383674146118031, lat: 38.697791731422001 }, { lng: -9.383647829821321, lat: 38.697792013790099 }, { lng: -9.383652928205141, lat: 38.697754757266502 }, { lng: -9.38355156696896, lat: 38.697755842230698 }, { lng: -9.38329653883763, lat: 38.697671922059399 }, { lng: -9.38324585768933, lat: 38.697672463952898 }, { lng: -9.383212861124001, lat: 38.697625885483298 }, { lng: -9.38304999476818, lat: 38.697540887485602 }, { lng: -9.38301770714026, lat: 38.697541232645797 }, { lng: -9.383007757353001, lat: 38.697498100919603 }, { lng: -9.38288657237826, lat: 38.697423458301003 }, { lng: -9.382830159020591, lat: 38.697358940671201 }, { lng: -9.382875625313311, lat: 38.6973296263034 }, { lng: -9.38282417890869, lat: 38.697279646328802 }, { lng: -9.38278300876091, lat: 38.697298101858799 }, { lng: -9.382530681626889, lat: 38.697098487132003 }, { lng: -9.38258923092835, lat: 38.697022017127303 }, { lng: -9.382552218959241, lat: 38.697015205543501 }, { lng: -9.38249725633797, lat: 38.697033898436302 }, { lng: -9.38245998372296, lat: 38.697012502460097 }, { lng: -9.382409628768221, lat: 38.697038439652097 }, { lng: -9.38235352978289, lat: 38.696984814197798 }, { lng: -9.38228925341684, lat: 38.697003516426101 }, { lng: -9.382237315148149, lat: 38.696931831865697 }, { lng: -9.382079554622219, lat: 38.696875690115199 }, { lng: -9.38197291311088, lat: 38.696837196910202 }, { lng: -9.38187650972162, lat: 38.696852638056598 }, { lng: -9.38181596886866, lat: 38.696827971953098 }, { lng: -9.38180142148528, lat: 38.696784800038401 }, { lng: -9.38172278236558, lat: 38.696763936571301 }, { lng: -9.381690944285021, lat: 38.696796792737103 }, { lng: -9.38155206193858, lat: 38.696762157351799 }, { lng: -9.38136281115535, lat: 38.696738867033403 }, { lng: -9.381225061577609, lat: 38.696769255120103 }, { lng: -9.38100309668997, lat: 38.6967355023232 }, { lng: -9.380822782293389, lat: 38.6966976195801 }, { lng: -9.38071589193421, lat: 38.696651828896499 }, { lng: -9.380637515336529, lat: 38.696652666070001 }, { lng: -9.3805726080382, lat: 38.696628045906102 }, { lng: -9.38046683961495, lat: 38.696640078187897 }, { lng: -9.38024335624733, lat: 38.6965122992207 }, { lng: -9.380151379234221, lat: 38.696524093135203 }, { lng: -9.379979514382949, lat: 38.6964500834559 }, { lng: -9.37995061649659, lat: 38.6963745436476 }, { lng: -9.37987194224495, lat: 38.6963645759797 }, { lng: -9.379829815046371, lat: 38.6963216987902 }, { lng: -9.37941547321326, lat: 38.696091199266696 }, { lng: -9.379341695173069, lat: 38.696091986551203 }, { lng: -9.379169570892881, lat: 38.695996360723797 }, { lng: -9.37911330009371, lat: 38.695946425092302 }, { lng: -9.37911757508272, lat: 38.695921071353297 }, { lng: -9.37908031241207, lat: 38.695899759753601 }, { lng: -9.37886292944691, lat: 38.695858659560599 }, { lng: -9.378798893732419, lat: 38.695877448286502 }, { lng: -9.37877975775748, lat: 38.695841441888497 }, { lng: -9.37852568621255, lat: 38.6958116349115 }, { lng: -9.378502135183121, lat: 38.695779455146798 }, { lng: -9.378424150111559, lat: 38.695809113273498 }, { lng: -9.37839241012327, lat: 38.695834764907801 }, { lng: -9.378248878732091, lat: 38.695796571082603 }, { lng: -9.378179565932481, lat: 38.695790102076401 }, { lng: -9.378197332052441, lat: 38.695753882778199 }, { lng: -9.378123240490041, lat: 38.695736567945502 }, { lng: -9.378016897633371, lat: 38.695708784445699 }, { lng: -9.37795608201395, lat: 38.695655207061399 }, { lng: -9.377692467051659, lat: 38.695347342209701 }, { lng: -9.37764425684637, lat: 38.6952250805642 }, { lng: -9.377584559980891, lat: 38.695229320858097 }, { lng: -9.377533145473331, lat: 38.695193748773299 }, { lng: -9.3774953657633, lat: 38.695136315660299 }, { lng: -9.377458912895129, lat: 38.695162018102103 }, { lng: -9.37743550198619, lat: 38.695144252635302 }, { lng: -9.377411964655771, lat: 38.6951191904258 }, { lng: -9.37737898757962, lat: 38.695079817157598 }, { lng: -9.377309782479911, lat: 38.695066052904401 }, { lng: -9.377267493591489, lat: 38.695026779591302 }, { lng: -9.3771931434395, lat: 38.694987847398302 }, { lng: -9.376858504152651, lat: 38.694832515164599 }, { lng: -9.376797440631711, lat: 38.694764530089302 }, { lng: -9.376708997789009, lat: 38.694714754414598 }, { lng: -9.376686588463491, lat: 38.694754807938601 }, { lng: -9.3766534712192, lat: 38.694700935264201 }, { lng: -9.376634209388611, lat: 38.694650610207603 }, { lng: -9.376591916501569, lat: 38.694611335785403 }, { lng: -9.37655540682397, lat: 38.694633429143998 }, { lng: -9.3764998077634, lat: 38.694608713106597 }, { lng: -9.376466896678121, lat: 38.694580145477602 }, { lng: -9.376364661861921, lat: 38.694530521602204 }, { lng: -9.37630857836189, lat: 38.694484187502603 }, { lng: -9.37619356235732, lat: 38.694499826354701 }, { lng: -9.376157355777639, lat: 38.694532727477601 }, { lng: -9.376134241600161, lat: 38.694525766097698 }, { lng: -9.37611933683529, lat: 38.694468095646997 }, { lng: -9.37602126581886, lat: 38.694393385637802 }, { lng: -9.37598506212395, lat: 38.694433494684901 }, { lng: -9.375920723727161, lat: 38.694441473041202 }, { lng: -9.37564398153911, lat: 38.694429915336102 }, { lng: -9.375459775997051, lat: 38.694439082495798 }, { lng: -9.375334132259541, lat: 38.694371778291803 }, { lng: -9.3752602312957, lat: 38.694365360791501 }, { lng: -9.375051738856561, lat: 38.694306054317302 }, { lng: -9.374934158977471, lat: 38.694166513682099 }, { lng: -9.374859757208339, lat: 38.694131185439502 }, { lng: -9.37474223067553, lat: 38.693995157062801 }, { lng: -9.37456964228428, lat: 38.693884936719598 }, { lng: -9.37443535816227, lat: 38.693843035976101 }, { lng: -9.3741953235888, lat: 38.693820274006399 }, { lng: -9.37397279994754, lat: 38.693746884057902 }, { lng: -9.37372362433573, lat: 38.693727822128601 }, { lng: -9.37369215878673, lat: 38.693782380894902 }, { lng: -9.373605151803559, lat: 38.693815735541101 }, { lng: -9.37332288422718, lat: 38.693750092500402 }, { lng: -9.37326995877862, lat: 38.693620584496401 }, { lng: -9.373153196235769, lat: 38.693535168199297 }, { lng: -9.37316311088415, lat: 38.693303927505298 }, { lng: -9.37309577469197, lat: 38.693145565446102 }, { lng: -9.37299498082991, lat: 38.693179151418398 }, { lng: -9.372924173879619, lat: 38.693078836944402 }, { lng: -9.372840066875259, lat: 38.6927545539221 }, { lng: -9.3727915986659, lat: 38.692603376179399 }, { lng: -9.37259656727611, lat: 38.692258470143102 }, { lng: -9.37260922931962, lat: 38.692186186437901 }, { lng: -9.372502529051779, lat: 38.692143991029099 }, { lng: -9.372437943465179, lat: 38.692144676495303 }, { lng: -9.37237658913685, lat: 38.692065788226003 }, { lng: -9.37217271404554, lat: 38.692266661895196 }, { lng: -9.37214190821738, lat: 38.692346435907901 }, { lng: -9.37209049154926, lat: 38.692310861406398 }, { lng: -9.37204969578158, lat: 38.692351017913097 }, { lng: -9.37209664874951, lat: 38.692401140427897 }, { lng: -9.37204268378632, lat: 38.692477556704297 }, { lng: -9.37206232208313, lat: 38.692549593584097 }, { lng: -9.372031275647799, lat: 38.692622163003598 }, { lng: -9.371953653172501, lat: 38.692666405557802 }, { lng: -9.37189919467829, lat: 38.692721026407703 }, { lng: -9.37189689636277, lat: 38.692847521550497 }, { lng: -9.37186137834637, lat: 38.692920410331602 }, { lng: -9.371921944765999, lat: 38.692966603624001 }, { lng: -9.371927908157311, lat: 38.693045988008699 }, { lng: -9.37185928343543, lat: 38.693072028667203 }, { lng: -9.371814015179281, lat: 38.693119531462301 }, { lng: -9.37186246410236, lat: 38.693256294690201 }, { lng: -9.37175932359966, lat: 38.6934270917791 }, { lng: -9.37165537366416, lat: 38.693543851678101 }, { lng: -9.371560354121179, lat: 38.693646016201598 }, { lng: -9.37134076249751, lat: 38.693742293700701 }, { lng: -9.37079697993221, lat: 38.693748056400501 }, { lng: -9.370403979086589, lat: 38.693679888790498 }, { lng: -9.36999731374385, lat: 38.693618982336503 }, { lng: -9.369849007402459, lat: 38.6935701066988 }, { lng: -9.369671750420011, lat: 38.693441915619303 }, { lng: -9.36951456554433, lat: 38.693418266008798 }, { lng: -9.36925900770497, lat: 38.693301798926299 }, { lng: -9.36910182343089, lat: 38.693270946142903 }, { lng: -9.3688266287863, lat: 38.693082349722403 }, { lng: -9.368616974956341, lat: 38.692954679543703 }, { lng: -9.36829570229856, lat: 38.692766484047098 }, { lng: -9.36820329397065, lat: 38.692679456113197 }, { lng: -9.3681150385154, lat: 38.692640483909699 }, { lng: -9.368022080546069, lat: 38.6926084981842 }, { lng: -9.367971177486529, lat: 38.692569131373403 }, { lng: -9.367906583510679, lat: 38.692555851488301 }, { lng: -9.367798829640209, lat: 38.692492224417002 }, { lng: -9.367679126672369, lat: 38.692482592555002 }, { lng: -9.367485017162871, lat: 38.692476897000503 }, { lng: -9.367002222935129, lat: 38.692225549706301 }, { lng: -9.366579494210431, lat: 38.692085437849499 }, { lng: -9.36647797638555, lat: 38.692083721708798 }, { lng: -9.366298268010411, lat: 38.692019771265002 }, { lng: -9.366013450637089, lat: 38.691880995181499 }, { lng: -9.36596761770382, lat: 38.691786448280197 }, { lng: -9.36595105030538, lat: 38.6917520637545 }, { lng: -9.365946474113651, lat: 38.691512388244803 }, { lng: -9.365937562368011, lat: 38.6914889710268 }, { lng: -9.365892353065419, lat: 38.691493410196102 }, { lng: -9.36585173233432, lat: 38.691583917949103 }, { lng: -9.365739952000791, lat: 38.691520149442802 }, { lng: -9.36536730053199, lat: 38.690989384113301 }, { lng: -9.36519566781439, lat: 38.690933546608697 }, { lng: -9.365074804219921, lat: 38.690862847999597 }, { lng: -9.364900325922889, lat: 38.690664649694803 }, { lng: -9.364787821688321, lat: 38.690508268172103 }, { lng: -9.364582673997029, lat: 38.690394596175103 }, { lng: -9.36444360336616, lat: 38.690374261938899 }, { lng: -9.36434131578406, lat: 38.690302490481699 }, { lng: -9.364283052033359, lat: 38.6902006648751 }, { lng: -9.364184345658369, lat: 38.690061272052198 }, { lng: -9.36403606922042, lat: 38.689959965191001 }, { lng: -9.363881635785249, lat: 38.689848099176601 }, { lng: -9.36385196935316, lat: 38.689806976576101 }, { lng: -9.363820424265301, lat: 38.689763532620397 }, { lng: -9.36360302261323, lat: 38.689686012632002 }, { lng: -9.363556882987011, lat: 38.689689559005302 }, { lng: -9.36347267724606, lat: 38.689651537786197 }, { lng: -9.363394291184051, lat: 38.689651461774602 }, { lng: -9.363143808683409, lat: 38.6895214124457 }, { lng: -9.36296254183695, lat: 38.689446576479803 }, { lng: -9.36284200243449, lat: 38.689394067811797 }, { lng: -9.36270913575707, lat: 38.689259725101898 }, { lng: -9.36250519326858, lat: 38.689108829204301 }, { lng: -9.36232349218634, lat: 38.689014899412399 }, { lng: -9.36231170490009, lat: 38.688991059937599 }, { lng: -9.362256027512149, lat: 38.688907697249199 }, { lng: -9.362234097701631, lat: 38.6889089141184 }, { lng: -9.36220494041633, lat: 38.6889242662903 }, { lng: -9.362166278343039, lat: 38.688988717957798 }, { lng: -9.362125226022769, lat: 38.688994284782403 }, { lng: -9.362088919294941, lat: 38.688974668218997 }, { lng: -9.36206594992141, lat: 38.688943743627497 }, { lng: -9.36205693475047, lat: 38.688872137381097 }, { lng: -9.362016231475581, lat: 38.688830590730397 }, { lng: -9.362010283433371, lat: 38.688792278313997 }, { lng: -9.36196434717216, lat: 38.688774026703499 }, { lng: -9.36189639481265, lat: 38.688778884386103 }, { lng: -9.361800407656411, lat: 38.688797999570703 }, { lng: -9.36173507928557, lat: 38.688808779223599 }, { lng: -9.36169259614198, lat: 38.688804266815701 }, { lng: -9.36162495629989, lat: 38.688767056542297 }, { lng: -9.361571505113989, lat: 38.6887197904136 }, { lng: -9.36149995670093, lat: 38.688675595063401 }, { lng: -9.36143536251811, lat: 38.6886553755796 }, { lng: -9.36130635270672, lat: 38.688605073814998 }, { lng: -9.36128812720747, lat: 38.688587472184302 }, { lng: -9.36125236934177, lat: 38.688553348872603 }, { lng: -9.36109028322368, lat: 38.688477315849497 }, { lng: -9.36092230762152, lat: 38.688359279919901 }, { lng: -9.360796048401451, lat: 38.688274852461703 }, { lng: -9.36052044942755, lat: 38.688099936658901 }, { lng: -9.36039854227821, lat: 38.688014562301603 }, { lng: -9.36037469751594, lat: 38.687998060801903 }, { lng: -9.3602900523868, lat: 38.687947694906903 }, { lng: -9.360170567376739, lat: 38.687896164135402 }, { lng: -9.359989585064771, lat: 38.687817176932001 }, { lng: -9.35989091044839, lat: 38.687766238221698 }, { lng: -9.359742658517771, lat: 38.687652137210101 }, { lng: -9.359678489074479, lat: 38.687602999116798 }, { lng: -9.359569170823621, lat: 38.687480741883498 }, { lng: -9.359804589544771, lat: 38.687402420619797 }, { lng: -9.35995539921745, lat: 38.687242842877303 }, { lng: -9.359934538688931, lat: 38.687239281176602 }, { lng: -9.35978767079234, lat: 38.6873944037294 }, { lng: -9.359528300806289, lat: 38.687469820743203 }, { lng: -9.359503239865351, lat: 38.6874155865167 }, { lng: -9.35950231917988, lat: 38.687361727846003 }, { lng: -9.359458247291929, lat: 38.687257434083897 }, { lng: -9.35942340544927, lat: 38.687182494442901 }, { lng: -9.359380515970861, lat: 38.687107191499003 }, { lng: -9.359311882258179, lat: 38.687025127030601 }, { lng: -9.359239444998609, lat: 38.686955811481198 }, { lng: -9.359084650265039, lat: 38.686828891677798 }, { lng: -9.359040663312239, lat: 38.686783594218397 }, { lng: -9.358931419538161, lat: 38.686705836721003 }, { lng: -9.35880068239568, lat: 38.686594338771002 }, { lng: -9.3587781542576, lat: 38.686580793001703 }, { lng: -9.358670181314031, lat: 38.686536801116297 }, { lng: -9.35858703013132, lat: 38.686493263314503 }, { lng: -9.358451587874031, lat: 38.686374972864101 }, { lng: -9.35840147562954, lat: 38.686347844986003 }, { lng: -9.358353303121429, lat: 38.686340241848001 }, { lng: -9.35828877298191, lat: 38.686350286078302 }, { lng: -9.358235893986279, lat: 38.6863427358075 }, { lng: -9.358132073885599, lat: 38.6863068897853 }, { lng: -9.35787983736207, lat: 38.686099477703003 }, { lng: -9.357832260531371, lat: 38.6860793445884 }, { lng: -9.35780502900621, lat: 38.6860796297983 }, { lng: -9.357777371168829, lat: 38.686088749796802 }, { lng: -9.35775205576577, lat: 38.686107119670197 }, { lng: -9.35773836393218, lat: 38.686146720757399 }, { lng: -9.357720130715551, lat: 38.686202667185597 }, { lng: -9.35769707019422, lat: 38.686211738118097 }, { lng: -9.357638793076079, lat: 38.686217930533502 }, { lng: -9.357569846559439, lat: 38.686211807506098 }, { lng: -9.357505242382651, lat: 38.686170511317101 }, { lng: -9.3574668555529, lat: 38.686130107093398 }, { lng: -9.35742311158598, lat: 38.686091833439299 }, { lng: -9.357338461943019, lat: 38.6860544357206 }, { lng: -9.357275860376561, lat: 38.686036357617503 }, { lng: -9.357228260760969, lat: 38.686014875128002 }, { lng: -9.357186239404649, lat: 38.685990273380298 }, { lng: -9.357141718002589, lat: 38.6859606552296 }, { lng: -9.357083166089931, lat: 38.685950643438701 }, { lng: -9.357028193511781, lat: 38.685914827387798 }, { lng: -9.35701617996687, lat: 38.685864150127799 }, { lng: -9.35698042197917, lat: 38.685829482305799 }, { lng: -9.35696782408108, lat: 38.685798266168597 }, { lng: -9.35693369717635, lat: 38.685764758577697 }, { lng: -9.356903763123469, lat: 38.685748135425101 }, { lng: -9.35687434714924, lat: 38.685755379273303 }, { lng: -9.356818366731121, lat: 38.685801724663598 }, { lng: -9.35679524028059, lat: 38.685806924562797 }, { lng: -9.35676405674956, lat: 38.685804725103601 }, { lng: -9.356715559183019, lat: 38.685777669675197 }, { lng: -9.35663560059624, lat: 38.685732118950497 }, { lng: -9.356573636813501, lat: 38.6856569235376 }, { lng: -9.356526447068701, lat: 38.685612378341901 }, { lng: -9.35647650845625, lat: 38.6855884888123 }, { lng: -9.356384623262249, lat: 38.685551171496101 }, { lng: -9.35631858109687, lat: 38.685519975699499 }, { lng: -9.35626579956581, lat: 38.685477739034397 }, { lng: -9.35622538027641, lat: 38.685452492334697 }, { lng: -9.35618035879394, lat: 38.685434229752097 }, { lng: -9.356155169017059, lat: 38.6854126025003 }, { lng: -9.35610209936384, lat: 38.685346680999203 }, { lng: -9.356073117124961, lat: 38.685331940211398 }, { lng: -9.35603134352835, lat: 38.685328596526602 }, { lng: -9.35600882588461, lat: 38.685315680650596 }, { lng: -9.35595315963455, lat: 38.685286178590502 }, { lng: -9.35592978992444, lat: 38.685283900796797 }, { lng: -9.355898784128669, lat: 38.685291790668899 }, { lng: -9.355857672650609, lat: 38.685314111287198 }, { lng: -9.35579689688106, lat: 38.685362394368802 }, { lng: -9.355783486059551, lat: 38.685371363124801 }, { lng: -9.355771421060419, lat: 38.685371489276498 }, { lng: -9.355736305421949, lat: 38.685374378618597 }, { lng: -9.355713232655919, lat: 38.685382729566797 }, { lng: -9.35569435662136, lat: 38.685401122650298 }, { lng: -9.35568740344565, lat: 38.685418128183599 }, { lng: -9.355671067275869, lat: 38.685443883795202 }, { lng: -9.35564997476747, lat: 38.685474189421498 }, { lng: -9.355644096444109, lat: 38.685506948240402 }, { lng: -9.35563402533332, lat: 38.685610462011397 }, { lng: -9.355179189932629, lat: 38.685808257691598 }, { lng: -9.35511995967329, lat: 38.685711325069398 }, { lng: -9.35508028858656, lat: 38.6856828219465 }, { lng: -9.355001530268449, lat: 38.685667432736103 }, { lng: -9.354935988501479, lat: 38.685604883831402 }, { lng: -9.354891934699269, lat: 38.685589040941203 }, { lng: -9.35485942957056, lat: 38.685576766961603 }, { lng: -9.35485633196136, lat: 38.6855297813837 }, { lng: -9.35482784489313, lat: 38.685483057471302 }, { lng: -9.35482561068789, lat: 38.685419397565198 }, { lng: -9.35476196617763, lat: 38.685400608380299 }, { lng: -9.35467988598878, lat: 38.685318324898702 }, { lng: -9.354643214631221, lat: 38.685195931848902 }, { lng: -9.354548650536319, lat: 38.685196921455798 }, { lng: -9.35449803890409, lat: 38.685201054123098 }, { lng: -9.354346957535441, lat: 38.685399542301901 }, { lng: -9.35432300695976, lat: 38.685484646686703 }, { lng: -9.35426859802992, lat: 38.685535836857703 }, { lng: -9.35422491490813, lat: 38.685541789588697 }, { lng: -9.35413226349217, lat: 38.6855137511116 }, { lng: -9.354044410364329, lat: 38.685503771715801 }, { lng: -9.353975016866221, lat: 38.685484680015101 }, { lng: -9.353856919461551, lat: 38.685460600179603 }, { lng: -9.353745442753571, lat: 38.685413037171998 }, { lng: -9.353633796000739, lat: 38.685349166331598 }, { lng: -9.35358076377034, lat: 38.685325760938802 }, { lng: -9.35347025044085, lat: 38.685254041334403 }, { lng: -9.353395574231859, lat: 38.685180960393197 }, { lng: -9.35328476450653, lat: 38.685166262100203 }, { lng: -9.353201372660751, lat: 38.685135065411302 }, { lng: -9.353152820224819, lat: 38.685131877 }, { lng: -9.353014718679059, lat: 38.685140618617602 }, { lng: -9.35293803714058, lat: 38.685105208152798 }, { lng: -9.352864819121431, lat: 38.685003104774403 }, { lng: -9.352324139003191, lat: 38.684667173426398 }, { lng: -9.35225860856808, lat: 38.684604626475902 }, { lng: -9.35211266074934, lat: 38.6845574158707 }, { lng: -9.35192354917768, lat: 38.684553982453799 }, { lng: -9.35174865153283, lat: 38.684432945323302 }, { lng: -9.35167911266644, lat: 38.684411962125502 }, { lng: -9.35150909708838, lat: 38.684449855851902 }, { lng: -9.351281175246079, lat: 38.684468536344603 }, { lng: -9.351054939834389, lat: 38.684450987509699 }, { lng: -9.35082805230134, lat: 38.684388315994397 }, { lng: -9.350558438494909, lat: 38.684259163691102 }, { lng: -9.350297587560901, lat: 38.684104787805801 }, { lng: -9.350082371698971, lat: 38.684052804490001 }, { lng: -9.34992004882076, lat: 38.684002071052298 }, { lng: -9.349728649094891, lat: 38.683863093310201 }, { lng: -9.34974353066049, lat: 38.683785201229 }, { lng: -9.3497517712494, lat: 38.683701973564503 }, { lng: -9.349680026218371, lat: 38.683578052146501 }, { lng: -9.349646230185311, lat: 38.6834826518052 }, { lng: -9.34953593058686, lat: 38.683375439993902 }, { lng: -9.349485018392389, lat: 38.6832260790082 }, { lng: -9.34939412162363, lat: 38.683029940255899 }, { lng: -9.349311171311131, lat: 38.682895323983402 }, { lng: -9.34920545594219, lat: 38.682780765147498 }, { lng: -9.348736668697059, lat: 38.682460467899801 }, { lng: -9.34864969784808, lat: 38.682353007295397 }, { lng: -9.34858188064786, lat: 38.682304893571498 }, { lng: -9.348509984608061, lat: 38.682280328044499 }, { lng: -9.34840206181164, lat: 38.682299556270102 }, { lng: -9.34833221284859, lat: 38.682260467707898 }, { lng: -9.34825952454208, lat: 38.682188984145398 }, { lng: -9.34820496623411, lat: 38.682095692537303 }, { lng: -9.34809668438672, lat: 38.681964766045503 }, { lng: -9.3479496674739, lat: 38.681854325647798 }, { lng: -9.34790697563365, lat: 38.6817897373653 }, { lng: -9.347919317131479, lat: 38.681697456690202 }, { lng: -9.34785711014432, lat: 38.681566141382703 }, { lng: -9.34777544191884, lat: 38.681507358099999 }, { lng: -9.34768738990112, lat: 38.681472153217499 }, { lng: -9.3472985803295, lat: 38.6811094024021 }, { lng: -9.34728032993435, lat: 38.680988618063303 }, { lng: -9.347247307693459, lat: 38.680938334396402 }, { lng: -9.34682489284682, lat: 38.680776443565101 }, { lng: -9.346754917741229, lat: 38.680722944668702 }, { lng: -9.34670391319734, lat: 38.6807036577476 }, { lng: -9.34661116551556, lat: 38.680675704309799 }, { lng: -9.346537492522909, lat: 38.6806818752884 }, { lng: -9.34647119820518, lat: 38.680709674853603 }, { lng: -9.34648172802159, lat: 38.680789012586203 }, { lng: -9.34662331297006, lat: 38.680986344627499 }, { lng: -9.34659187881458, lat: 38.6810372063809 }, { lng: -9.34650170437475, lat: 38.681025620351797 }, { lng: -9.346457276162701, lat: 38.6809808657951 }, { lng: -9.34640639311896, lat: 38.680968780121297 }, { lng: -9.34635831676667, lat: 38.680999999125703 }, { lng: -9.34620952356274, lat: 38.680920203243801 }, { lng: -9.3460472696345, lat: 38.680872972167002 }, { lng: -9.34595646923921, lat: 38.680817888137902 }, { lng: -9.34579880357788, lat: 38.680756379503499 }, { lng: -9.345783883425771, lat: 38.680689700855602 }, { lng: -9.3457278534288, lat: 38.6806450618231 }, { lng: -9.34576839098192, lat: 38.680588703916499 }, { lng: -9.34578389407443, lat: 38.680554225230701 }, { lng: -9.345746466658481, lat: 38.680522092489902 }, { lng: -9.34570281601947, lat: 38.680537051292298 }, { lng: -9.345696597068789, lat: 38.680576840179 }, { lng: -9.345658388979761, lat: 38.6806349763676 }, { lng: -9.34559166732474, lat: 38.680637470650403 }, { lng: -9.34552232440342, lat: 38.680634585590298 }, { lng: -9.345481025248739, lat: 38.680645821327403 }, { lng: -9.34543605789087, lat: 38.680718624661303 }, { lng: -9.345372244564359, lat: 38.680757208146197 }, { lng: -9.34503957255354, lat: 38.680717241461601 }, { lng: -9.34499650179894, lat: 38.680759305670001 }, { lng: -9.344916727536701, lat: 38.680812555974498 }, { lng: -9.34479299290718, lat: 38.680855274921697 }, { lng: -9.34477758195305, lat: 38.680895249082802 }, { lng: -9.34464903889655, lat: 38.680925495056599 }, { lng: -9.3445261173679, lat: 38.680886960340501 }, { lng: -9.34439224680227, lat: 38.680873932799003 }, { lng: -9.344334835112891, lat: 38.680999377391203 }, { lng: -9.34423634859208, lat: 38.681067051573201 }, { lng: -9.34417510023755, lat: 38.681121917366603 }, { lng: -9.34412822360599, lat: 38.681210946809401 }, { lng: -9.344186915397859, lat: 38.681277177761999 }, { lng: -9.34410744622441, lat: 38.681348530035798 }, { lng: -9.34407141302826, lat: 38.6813994396474 }, { lng: -9.34322752410487, lat: 38.681655715304601 }, { lng: -9.34296411545132, lat: 38.6816205216142 }, { lng: -9.342846582221011, lat: 38.681628946507999 }, { lng: -9.342785157791649, lat: 38.681680203071998 }, { lng: -9.3426451409447, lat: 38.681574999937702 }, { lng: -9.34251368875039, lat: 38.681569157784203 }, { lng: -9.34218107498287, lat: 38.681532786401498 }, { lng: -9.342107433558009, lat: 38.681540841402601 }, { lng: -9.34194185591889, lat: 38.681562371217197 }, { lng: -9.341772578000279, lat: 38.681500983493898 }, { lng: -9.34174981811236, lat: 38.681521126878401 }, { lng: -9.341683344045579, lat: 38.681545229696603 }, { lng: -9.341610967465639, lat: 38.681491843507899 }, { lng: -9.3415343798971, lat: 38.681454622953403 }, { lng: -9.341409859594069, lat: 38.6814577130232 }, { lng: -9.34134518690367, lat: 38.681445773033502 }, { lng: -9.341295901469071, lat: 38.681392052578801 }, { lng: -9.341228278947669, lat: 38.681354829274198 }, { lng: -9.34108298338352, lat: 38.681345525405597 }, { lng: -9.341038538775949, lat: 38.681306170021102 }, { lng: -9.34091772269603, lat: 38.6812495905479 }, { lng: -9.340562281251181, lat: 38.681085267475503 }, { lng: -9.339989773026231, lat: 38.680908599232701 }, { lng: -9.33975157192434, lat: 38.680855033327902 }, { lng: -9.339466574872359, lat: 38.680773031941499 }, { lng: -9.339357533518641, lat: 38.680732630792903 }, { lng: -9.339109713661371, lat: 38.680661057102903 }, { lng: -9.33893648662311, lat: 38.680637712597203 }, { lng: -9.33872114311597, lat: 38.680576609855997 }, { lng: -9.33859100253647, lat: 38.680525528769401 }, { lng: -9.33823214357243, lat: 38.680424470370603 }, { lng: -9.337884237281219, lat: 38.680297988788801 }, { lng: -9.337749712011391, lat: 38.6802523584158 }, { lng: -9.337468563274751, lat: 38.680139144566397 }, { lng: -9.33726144162895, lat: 38.680081829596901 }, { lng: -9.337079716452051, lat: 38.680058570733102 }, { lng: -9.336932410598299, lat: 38.680032253121901 }, { lng: -9.33656071465299, lat: 38.679905202663399 }, { lng: -9.336359698287239, lat: 38.679862681634901 }, { lng: -9.336283190370111, lat: 38.679816089564397 }, { lng: -9.33571243932194, lat: 38.679694776558797 }, { lng: -9.33522002501698, lat: 38.679509513458697 }, { lng: -9.33506641420283, lat: 38.6794563258454 }, { lng: -9.334833453879011, lat: 38.679269202044303 }, { lng: -9.334703323173279, lat: 38.679218474097198 }, { lng: -9.33450184250543, lat: 38.679140650309897 }, { lng: -9.33445917294593, lat: 38.679063171104801 }, { lng: -9.334395631394591, lat: 38.679015451913898 }, { lng: -9.334321462561601, lat: 38.678978111656498 }, { lng: -9.334237908823299, lat: 38.678867635141501 }, { lng: -9.334062835150259, lat: 38.678809084498702 }, { lng: -9.333921906516791, lat: 38.678813321431797 }, { lng: -9.333811909785259, lat: 38.678825620570599 }, { lng: -9.33368167920883, lat: 38.6788306544574 }, { lng: -9.333541294680421, lat: 38.678798679346897 }, { lng: -9.33335592422049, lat: 38.6787633816148 }, { lng: -9.333163452939109, lat: 38.678654023061497 }, { lng: -9.332850712429909, lat: 38.678588418610197 }, { lng: -9.33269118894443, lat: 38.678538981709202 }, { lng: -9.33244402409756, lat: 38.678422704703301 }, { lng: -9.332210865971859, lat: 38.678223598122003 }, { lng: -9.33215811255719, lat: 38.678188830206601 }, { lng: -9.33208065364259, lat: 38.678160798491902 }, { lng: -9.33184475043439, lat: 38.678010085863903 }, { lng: -9.33164863997118, lat: 38.677902473566697 }, { lng: -9.3315399340987, lat: 38.677847833774003 }, { lng: -9.331439806881891, lat: 38.677810846863203 }, { lng: -9.331404102355799, lat: 38.6777991440592 }, { lng: -9.33131822870644, lat: 38.677762821690798 }, { lng: -9.33126462865958, lat: 38.677745804733298 }, { lng: -9.33116847478323, lat: 38.677733729427203 }, { lng: -9.331111350094719, lat: 38.677719450853203 }, { lng: -9.33105551508485, lat: 38.677706157105597 }, { lng: -9.331012636143541, lat: 38.677698215474699 }, { lng: -9.330962947677691, lat: 38.677702419456303 }, { lng: -9.330887073695891, lat: 38.677700404195598 }, { lng: -9.33084199801003, lat: 38.677691588724301 }, { lng: -9.33078966971784, lat: 38.677675369225902 }, { lng: -9.33075014840243, lat: 38.677655419922203 }, { lng: -9.330679568592821, lat: 38.677612452121302 }, { lng: -9.33061987552621, lat: 38.677581539652302 }, { lng: -9.330582564423571, lat: 38.677549405304902 }, { lng: -9.33055375470305, lat: 38.677523758699699 }, { lng: -9.33053439395146, lat: 38.677499815997699 }, { lng: -9.33052799282085, lat: 38.6774744785995 }, { lng: -9.330551137864409, lat: 38.677442716051402 }, { lng: -9.330567374777811, lat: 38.6774240819665 }, { lng: -9.33056235238625, lat: 38.677405489917199 }, { lng: -9.330514660708699, lat: 38.677384627027998 }, { lng: -9.330446732172209, lat: 38.677363166020903 }, { lng: -9.33040241049212, lat: 38.677337586318103 }, { lng: -9.33029519574683, lat: 38.677295986014997 }, { lng: -9.33025230762094, lat: 38.677280575815999 }, { lng: -9.33018326024605, lat: 38.677260922266598 }, { lng: -9.330125988515491, lat: 38.677237368462102 }, { lng: -9.330075913269029, lat: 38.677218336758102 }, { lng: -9.33004228262805, lat: 38.677186165463198 }, { lng: -9.33001094976648, lat: 38.677153964335297 }, { lng: -9.329979271485289, lat: 38.677107991079303 }, { lng: -9.329965916267319, lat: 38.677085699201101 }, { lng: -9.329947658255611, lat: 38.677058952689002 }, { lng: -9.329920037490339, lat: 38.677036086178198 }, { lng: -9.329893904245919, lat: 38.677026085615999 }, { lng: -9.329868842258261, lat: 38.677011478296698 }, { lng: -9.329847046055519, lat: 38.6769931434456 }, { lng: -9.32980646404482, lat: 38.676971220249399 }, { lng: -9.329770737169071, lat: 38.676965103817899 }, { lng: -9.329728115528919, lat: 38.676965539951802 }, { lng: -9.32970328033732, lat: 38.676964894194398 }, { lng: -9.32967932196156, lat: 38.676947481316503 }, { lng: -9.329652952441039, lat: 38.676923701156802 }, { lng: -9.329628614557009, lat: 38.676890533875202 }, { lng: -9.32961230570144, lat: 38.676835841329499 }, { lng: -9.329597456235559, lat: 38.676799781833701 }, { lng: -9.32959464046537, lat: 38.676775669691203 }, { lng: -9.32959614153364, lat: 38.676720891304797 }, { lng: -9.329593030658661, lat: 38.676679124155797 }, { lng: -9.32959501116364, lat: 38.676653071298801 }, { lng: -9.329574392994891, lat: 38.6766226592704 }, { lng: -9.32954802088816, lat: 38.676605271059003 }, { lng: -9.32948161111462, lat: 38.676605951375002 }, { lng: -9.32944144308938, lat: 38.676615639453701 }, { lng: -9.329401760705331, lat: 38.676641178112099 }, { lng: -9.32929839757437, lat: 38.676768526850402 }, { lng: -9.329266681803061, lat: 38.676789297206099 }, { lng: -9.32924085069377, lat: 38.676797851312799 }, { lng: -9.32921228326409, lat: 38.676793548618299 }, { lng: -9.329171888585989, lat: 38.676782792977598 }, { lng: -9.329137132966849, lat: 38.676759008391798 }, { lng: -9.329079769006841, lat: 38.676729868362997 }, { lng: -9.329026053960209, lat: 38.676706277638999 }, { lng: -9.328971284132139, lat: 38.676688284325202 }, { lng: -9.32894368419946, lat: 38.676666228070303 }, { lng: -9.32893375575426, lat: 38.676635701211502 }, { lng: -9.328937844245679, lat: 38.676598547191702 }, { lng: -9.32895025926026, lat: 38.676557529246303 }, { lng: -9.328954648344871, lat: 38.676538024773699 }, { lng: -9.32895418255109, lat: 38.676510103497598 }, { lng: -9.32895909382559, lat: 38.676459969803702 }, { lng: -9.32894413001763, lat: 38.676410040249401 }, { lng: -9.32892617300268, lat: 38.676394373713997 }, { lng: -9.328889066667839, lat: 38.676374392769702 }, { lng: -9.32884735138154, lat: 38.676353382505297 }, { lng: -9.328822045215301, lat: 38.676331393744803 }, { lng: -9.32879062722029, lat: 38.676300995615001 }, { lng: -9.328742458825101, lat: 38.676251405525903 }, { lng: -9.32870429258109, lat: 38.676229457241199 }, { lng: -9.32867090357894, lat: 38.676218720778998 }, { lng: -9.328633048623709, lat: 38.676222802786803 }, { lng: -9.328595602084761, lat: 38.6762510206622 }, { lng: -9.32857251798068, lat: 38.676286476315802 }, { lng: -9.32854256426619, lat: 38.676337047047902 }, { lng: -9.32853330883221, lat: 38.676353802521902 }, { lng: -9.32851452136671, lat: 38.676364262583398 }, { lng: -9.32849197470598, lat: 38.676362606817598 }, { lng: -9.32847656549767, lat: 38.676355375213603 }, { lng: -9.328462148165119, lat: 38.676345253669197 }, { lng: -9.328433724662229, lat: 38.676342750875399 }, { lng: -9.328412476964081, lat: 38.6763504490483 }, { lng: -9.328393681030271, lat: 38.6763599174161 }, { lng: -9.328367611057541, lat: 38.676361085558199 }, { lng: -9.328278873112859, lat: 38.676338481189703 }, { lng: -9.3281517260024, lat: 38.676300868592797 }, { lng: -9.328090721036, lat: 38.676267083915398 }, { lng: -9.328061999941371, lat: 38.676198378398702 }, { lng: -9.32805204164926, lat: 38.676124705208899 }, { lng: -9.32805025693909, lat: 38.676086619466297 }, { lng: -9.3280482443528, lat: 38.676034760392803 }, { lng: -9.327899018382, lat: 38.675988816588003 }, { lng: -9.32784410166358, lat: 38.675989377647198 }, { lng: -9.32783343140165, lat: 38.676011100021299 }, { lng: -9.327834006116561, lat: 38.676045599505798 }, { lng: -9.32779611956528, lat: 38.676089043036903 }, { lng: -9.327791796997509, lat: 38.676153761542302 }, { lng: -9.32775402527127, lat: 38.676197204787101 }, { lng: -9.32761139028478, lat: 38.676215958612303 }, { lng: -9.327467672070631, lat: 38.676169957099802 }, { lng: -9.327373032909611, lat: 38.676110573026698 }, { lng: -9.327372030463771, lat: 38.676050322746804 }, { lng: -9.32745305857528, lat: 38.675954638383402 }, { lng: -9.32745219524427, lat: 38.675902762154003 }, { lng: -9.32742433557326, lat: 38.675885842643503 }, { lng: -9.32734778946263, lat: 38.675912477708202 }, { lng: -9.327271605113101, lat: 38.675960816976001 }, { lng: -9.327167988640451, lat: 38.676017903645501 }, { lng: -9.32707494228239, lat: 38.676040388658201 }, { lng: -9.32702535241561, lat: 38.676036571193301 }, { lng: -9.326964849053351, lat: 38.6760328651214 }, { lng: -9.32692621950434, lat: 38.6760246984433 }, { lng: -9.32691449975661, lat: 38.675990319030198 }, { lng: -9.326832360863641, lat: 38.675964047566801 }, { lng: -9.32679595669358, lat: 38.676068818906302 }, { lng: -9.326628743762059, lat: 38.676558477429602 }, { lng: -9.32653153769245, lat: 38.676835646533299 }, { lng: -9.326443081939789, lat: 38.677086064911897 }, { lng: -9.325856548845691, lat: 38.677084308248098 }, { lng: -9.3254304104378, lat: 38.677088658330597 }, { lng: -9.324837355078481, lat: 38.6770816475372 }, { lng: -9.32482692764807, lat: 38.677180299358 }, { lng: -9.324719113343511, lat: 38.6774694699021 }, { lng: -9.32463615698247, lat: 38.677698393180101 }, { lng: -9.324554202147411, lat: 38.677925860434698 }, { lng: -9.32448524246392, lat: 38.678125814166997 }, { lng: -9.32442013929135, lat: 38.678274567756702 }, { lng: -9.324313737361781, lat: 38.6784756225316 }, { lng: -9.32425398018953, lat: 38.678641617480999 }, { lng: -9.32417565945652, lat: 38.678838605508801 }, { lng: -9.324074386092249, lat: 38.679113650285998 }, { lng: -9.32401827181415, lat: 38.6792430344601 }, { lng: -9.323909729319229, lat: 38.679502574089803 }, { lng: -9.32387554368057, lat: 38.679630833207803 }, { lng: -9.32383045441555, lat: 38.6797324501199 }, { lng: -9.32379360052898, lat: 38.679727238722101 }, { lng: -9.323729649114069, lat: 38.6797168120411 }, { lng: -9.323661149617919, lat: 38.679709315931603 }, { lng: -9.32361661052999, lat: 38.679705445615298 }, { lng: -9.323431679475309, lat: 38.680396513557 }, { lng: -9.32341135557289, lat: 38.680452657171699 }, { lng: -9.32328600390799, lat: 38.680752178235302 }, { lng: -9.323196862859559, lat: 38.680962246948503 }, { lng: -9.32316684759137, lat: 38.681078755038797 }, { lng: -9.32313739601787, lat: 38.681236240243202 }, { lng: -9.323171740602429, lat: 38.681380824685398 }, { lng: -9.323238537752561, lat: 38.681542010827101 }, { lng: -9.32328956258382, lat: 38.681611213809902 }, { lng: -9.323368965497201, lat: 38.681680123422701 }, { lng: -9.323433934765561, lat: 38.681738011111896 }, { lng: -9.32355982094551, lat: 38.681817615316199 }, { lng: -9.32367095778663, lat: 38.681866657403802 }, { lng: -9.323835598986729, lat: 38.681926502633601 }, { lng: -9.324018294784789, lat: 38.681994274397503 }, { lng: -9.32417613022516, lat: 38.682073552550698 }, { lng: -9.32430951393944, lat: 38.682175328869 }, { lng: -9.324410894252679, lat: 38.682280319874202 }, { lng: -9.324487777863551, lat: 38.682405101014702 }, { lng: -9.32453565804742, lat: 38.682499462765598 }, { lng: -9.324544982175571, lat: 38.682638719532299 }, { lng: -9.32453517648594, lat: 38.6827749238848 }, { lng: -9.324511755908031, lat: 38.682901004347201 }, { lng: -9.32449035493703, lat: 38.682996345785199 }, { lng: -9.324452629620399, lat: 38.683077709462701 }, { lng: -9.324418534958429, lat: 38.683170113947298 }, { lng: -9.32439767207422, lat: 38.683283917699598 }, { lng: -9.324326149749069, lat: 38.683592800842597 }, { lng: -9.324468197300339, lat: 38.683572616595001 }, { lng: -9.32447928325305, lat: 38.683672579533997 }, { lng: -9.32448389236251, lat: 38.683950238887803 }, { lng: -9.324481286035651, lat: 38.6842431084658 }, { lng: -9.32447001004461, lat: 38.684443197637101 }, { lng: -9.324453915635729, lat: 38.684650449358699 }, { lng: -9.32451203714108, lat: 38.685008903087301 }, { lng: -9.324552414290849, lat: 38.6853227714521 }, { lng: -9.324591296122041, lat: 38.685622334407199 }, { lng: -9.324656212006969, lat: 38.685946667453599 }, { lng: -9.32469142636055, lat: 38.686164206585801 }, { lng: -9.324746669116999, lat: 38.6863421756793 }, { lng: -9.32488499786913, lat: 38.686851414898101 }, { lng: -9.324979593723439, lat: 38.687205082669401 }, { lng: -9.32504020825956, lat: 38.687429570788801 }, { lng: -9.3251481678929, lat: 38.687784722664198 }, { lng: -9.325296874459379, lat: 38.688199270804702 }, { lng: -9.326611842862739, lat: 38.688168639154703 }, { lng: -9.32669632163495, lat: 38.688376035473702 }, { lng: -9.32666716194074, lat: 38.688378135578098 }, { lng: -9.326781509184229, lat: 38.6886055809778 }, { lng: -9.32694165263112, lat: 38.688919397513601 }, { lng: -9.327045304974829, lat: 38.689201812027903 }, { lng: -9.32710089997696, lat: 38.689323930612403 }, { lng: -9.32723259162205, lat: 38.689668030487397 }, { lng: -9.327453507355701, lat: 38.690180110619401 }, { lng: -9.32775176105585, lat: 38.6908571472554 }, { lng: -9.32825383141247, lat: 38.691859886498101 }, { lng: -9.328454233608239, lat: 38.691816038223699 }, { lng: -9.32890678603763, lat: 38.691681064590803 }, { lng: -9.32898609211753, lat: 38.691819151943697 }, { lng: -9.32897834371302, lat: 38.6920509107971 }, { lng: -9.328958248120779, lat: 38.692417371478399 }, { lng: -9.328940068144529, lat: 38.692540423730698 }, { lng: -9.32888521385938, lat: 38.692890030453398 }, { lng: -9.32887304794256, lat: 38.693097967386002 }, { lng: -9.328876308703901, lat: 38.693293669801498 }, { lng: -9.328896770200689, lat: 38.693411102337201 }, { lng: -9.329122568359409, lat: 38.693883767581603 }, { lng: -9.329333548461531, lat: 38.694218587260401 }, { lng: -9.329550459754, lat: 38.694653960167102 }, { lng: -9.32967498575923, lat: 38.695029207064998 }, { lng: -9.329676497167121, lat: 38.695126744169599 }, { lng: -9.3296269754214, lat: 38.695713564401899 }, { lng: -9.329593830834879, lat: 38.696041873584598 }, { lng: -9.329575104413349, lat: 38.696352382641997 }, { lng: -9.329564186170231, lat: 38.696972858051502 }, { lng: -9.32958338638673, lat: 38.697248656593899 }, { lng: -9.329626744654311, lat: 38.697484578147197 }, { lng: -9.329662781415699, lat: 38.697653463884699 }, { lng: -9.329619966024319, lat: 38.697698125761299 }, { lng: -9.32958534531963, lat: 38.697738114299398 }, { lng: -9.329251321583969, lat: 38.697738474617701 }, { lng: -9.329078944883239, lat: 38.6977341144215 }, { lng: -9.32856223234111, lat: 38.697731747304701 }, { lng: -9.327800672251181, lat: 38.6978526761661 }, { lng: -9.327304941928929, lat: 38.697951066410702 }, { lng: -9.326849823039311, lat: 38.698016970413597 }, { lng: -9.326382502605711, lat: 38.698095788232301 }, { lng: -9.325698041766151, lat: 38.698215467975302 }, { lng: -9.325123989477561, lat: 38.698311491500498 }, { lng: -9.324591260033561, lat: 38.698396918634103 }, { lng: -9.32400008639668, lat: 38.698507256055102 }, { lng: -9.32118597121433, lat: 38.699186271354698 }, { lng: -9.320040997283069, lat: 38.699471927852798 }, { lng: -9.31934512347247, lat: 38.699646717658197 }, { lng: -9.319434190409259, lat: 38.699708237992397 }, { lng: -9.319509378547551, lat: 38.699805929347903 }, { lng: -9.3196533130244, lat: 38.700105955024199 }, { lng: -9.31976522025613, lat: 38.700311457128301 }, { lng: -9.319851379160321, lat: 38.7004681244022 }, { lng: -9.32015148505989, lat: 38.700771878786199 }, { lng: -9.320465626521941, lat: 38.701083685123201 }, { lng: -9.320683868846739, lat: 38.701316658378097 }, { lng: -9.32089122990868, lat: 38.701566223298499 }, { lng: -9.321165911206821, lat: 38.701847713786897 }, { lng: -9.32135254397955, lat: 38.702004354266101 }, { lng: -9.32168838760983, lat: 38.702279005614102 }, { lng: -9.322650539938429, lat: 38.703048917402299 }, { lng: -9.32305069579224, lat: 38.703360832266597 }, { lng: -9.32310992432512, lat: 38.703452828565403 }, { lng: -9.323197550777429, lat: 38.703634519927697 }, { lng: -9.323231805959541, lat: 38.703703713131901 }, { lng: -9.323247696736439, lat: 38.7037818263058 }, { lng: -9.3232444802254, lat: 38.703802485968303 }, { lng: -9.3232379029121, lat: 38.703842729430697 }, { lng: -9.323166031928761, lat: 38.704173862837798 }, { lng: -9.32304613036076, lat: 38.704714016068003 }, { lng: -9.322970699327289, lat: 38.7050451900542 }, { lng: -9.322899471702261, lat: 38.705408204241003 }, { lng: -9.322831230390561, lat: 38.7057364206511 }, { lng: -9.32281161269022, lat: 38.705884437940803 }, { lng: -9.32279400825866, lat: 38.705925242161499 }, { lng: -9.32272793562476, lat: 38.705940416987602 }, { lng: -9.322518892551461, lat: 38.705986049567102 }, { lng: -9.321682086597651, lat: 38.706102214176802 }, { lng: -9.32084995244278, lat: 38.7062229148124 }, { lng: -9.320431170516679, lat: 38.7063694030658 }, { lng: -9.31981474725602, lat: 38.706548974700603 }, { lng: -9.319443077796819, lat: 38.706666612120699 }, { lng: -9.31928960403028, lat: 38.7067079845881 }, { lng: -9.3197239724522, lat: 38.707267183781099 }, { lng: -9.3198588952412, lat: 38.707445426754603 }, { lng: -9.31994487630295, lat: 38.7075284155001 }, { lng: -9.32003204127772, lat: 38.707626884640199 }, { lng: -9.32009175307404, lat: 38.707747699690202 }, { lng: -9.32012231931841, lat: 38.707809451157303 }, { lng: -9.32020664894138, lat: 38.708042437780598 }, { lng: -9.320359078139219, lat: 38.708361469605897 }, { lng: -9.32048476670559, lat: 38.708620426083797 }, { lng: -9.320648479804021, lat: 38.708891514295999 }, { lng: -9.3207266293117, lat: 38.709070695855303 }, { lng: -9.32077235018714, lat: 38.709137875309601 }, { lng: -9.320818749933141, lat: 38.709357374746403 }, { lng: -9.32086163959721, lat: 38.709468812903502 }, { lng: -9.320919358322501, lat: 38.709580370617402 }, { lng: -9.320936604219339, lat: 38.7096565831406 }, { lng: -9.320980679961339, lat: 38.709943931944899 }, { lng: -9.32101831496594, lat: 38.710154687294903 }, { lng: -9.321030164240399, lat: 38.710245184209903 }, { lng: -9.32107363230746, lat: 38.710391930469498 }, { lng: -9.321128837467469, lat: 38.7106289018109 }, { lng: -9.32121383076294, lat: 38.710797740966697 }, { lng: -9.321272401670241, lat: 38.711029634563999 }, { lng: -9.32130144507717, lat: 38.711131125431002 }, { lng: -9.321368889053399, lat: 38.711281316563898 }, { lng: -9.32152062083305, lat: 38.711453264910197 }, { lng: -9.321567891338519, lat: 38.711516825153097 }, { lng: -9.3217422043819, lat: 38.711712413343797 }, { lng: -9.32191674077959, lat: 38.711921774576503 }, { lng: -9.321986115766499, lat: 38.711931341584098 }, { lng: -9.322266498639801, lat: 38.711964782339003 }, { lng: -9.322525096147009, lat: 38.711981069869601 }, { lng: -9.32294000909841, lat: 38.711987650980198 }, { lng: -9.32295408546724, lat: 38.712080555288203 }, { lng: -9.32299276166612, lat: 38.712339676421998 }, { lng: -9.3230106620922, lat: 38.712476407834501 }, { lng: -9.32303750528038, lat: 38.712645752729998 }, { lng: -9.32303372638366, lat: 38.712730010233102 }, { lng: -9.323028911407119, lat: 38.712751502235101 }, { lng: -9.32298803882364, lat: 38.712761914150903 }, { lng: -9.32274830690397, lat: 38.7127467895641 }, { lng: -9.322424228604801, lat: 38.712706042415597 }, { lng: -9.322244345311759, lat: 38.712687791177103 }, { lng: -9.322023371430181, lat: 38.7126737326913 }, { lng: -9.321748633508321, lat: 38.712613656553103 }, { lng: -9.321418023695941, lat: 38.7125881087699 }, { lng: -9.32131840719218, lat: 38.7125639904705 }, { lng: -9.321216754552189, lat: 38.712520976458798 }, { lng: -9.32101626623734, lat: 38.712411046248498 }, { lng: -9.320591580681731, lat: 38.712175224217503 }, { lng: -9.32041350508297, lat: 38.712065156284098 }, { lng: -9.32034099619173, lat: 38.7120116694446 }, { lng: -9.320173736022189, lat: 38.711908249839702 }, { lng: -9.32010395644277, lat: 38.711867253239497 }, { lng: -9.320028466335859, lat: 38.711814151376103 }, { lng: -9.320014770923359, lat: 38.711847980385997 }, { lng: -9.319954429016279, lat: 38.712029651004499 }, { lng: -9.319849053841249, lat: 38.712310410222798 }, { lng: -9.31975676340042, lat: 38.712583018710802 }, { lng: -9.319622305070951, lat: 38.712961268555901 }, { lng: -9.319556767607979, lat: 38.713134702724702 }, { lng: -9.319496047676919, lat: 38.7132587244799 }, { lng: -9.31942335470198, lat: 38.7133472860992 }, { lng: -9.319360276403071, lat: 38.7133567564684 }, { lng: -9.31932190890735, lat: 38.7134211910166 }, { lng: -9.319106997041949, lat: 38.713662255673199 }, { lng: -9.31891554322908, lat: 38.713882909100697 }, { lng: -9.318835025556769, lat: 38.713978038014801 }, { lng: -9.31879679962139, lat: 38.713946986783299 }, { lng: -9.3187134737788, lat: 38.713927477876197 }, { lng: -9.31857577862587, lat: 38.713909324620502 }, { lng: -9.31849343775656, lat: 38.713914847171303 }, { lng: -9.318433911087739, lat: 38.713930490989398 }, { lng: -9.31826896319766, lat: 38.7139950428897 }, { lng: -9.318212707970069, lat: 38.714006964749501 }, { lng: -9.318161888421569, lat: 38.714041435584299 }, { lng: -9.318114189504341, lat: 38.714049400026603 }, { lng: -9.318059206446099, lat: 38.714033648755603 }, { lng: -9.31801253799857, lat: 38.714006468801699 }, { lng: -9.31787136739349, lat: 38.7140142986269 }, { lng: -9.317749257258191, lat: 38.714020489397598 }, { lng: -9.317660224181161, lat: 38.714017612769503 }, { lng: -9.317571641623021, lat: 38.714042379962699 }, { lng: -9.3174384230045, lat: 38.714051296107598 }, { lng: -9.31730575077888, lat: 38.7141002938518 }, { lng: -9.317193662411251, lat: 38.714149262225298 }, { lng: -9.317100842134479, lat: 38.714230642589698 }, { lng: -9.317038536277, lat: 38.714286582186702 }, { lng: -9.317125863780671, lat: 38.7143950485396 }, { lng: -9.317168231223251, lat: 38.714475057945201 }, { lng: -9.31720926480749, lat: 38.714578950535703 }, { lng: -9.317204058893781, lat: 38.714674482930697 }, { lng: -9.317193484617549, lat: 38.714765120827003 }, { lng: -9.31720129578556, lat: 38.714834307865502 }, { lng: -9.31724848201757, lat: 38.714892921813899 }, { lng: -9.31749644453518, lat: 38.7151970299944 }, { lng: -9.317797642300601, lat: 38.715612651219402 }, { lng: -9.317697437893729, lat: 38.715657715485399 }, { lng: -9.317482574532381, lat: 38.7157772645457 }, { lng: -9.31741987457065, lat: 38.715858430083003 }, { lng: -9.31735882514967, lat: 38.7160951430305 }, { lng: -9.31727125778939, lat: 38.716487593215298 }, { lng: -9.3171590865367, lat: 38.716699062529401 }, { lng: -9.31693248767057, lat: 38.717089680382998 }, { lng: -9.31658521546774, lat: 38.717623120648099 }, { lng: -9.31641718996384, lat: 38.7176135635845 }, { lng: -9.316212670910939, lat: 38.7176148255123 }, { lng: -9.316110035958591, lat: 38.717700990240402 }, { lng: -9.316095700068811, lat: 38.717619433058204 }, { lng: -9.31519872216351, lat: 38.717526100481898 }, { lng: -9.315068849819481, lat: 38.717536152934798 }, { lng: -9.314850418398541, lat: 38.717558270100298 }, { lng: -9.31484550729933, lat: 38.717692984974498 }, { lng: -9.314916728532589, lat: 38.717919077009697 }, { lng: -9.314986254839161, lat: 38.717979624263897 }, { lng: -9.31507412861394, lat: 38.718072508521203 }, { lng: -9.315098462662711, lat: 38.718258178300403 }, { lng: -9.315195881568609, lat: 38.7185042727343 }, { lng: -9.315333762085579, lat: 38.718763474059799 }, { lng: -9.31549540984599, lat: 38.719097191171699 }, { lng: -9.31560565705826, lat: 38.719395941871902 }, { lng: -9.31563727824274, lat: 38.719521548768597 }, { lng: -9.315651368023371, lat: 38.719657872076702 }, { lng: -9.315624568319739, lat: 38.719685077280197 }, { lng: -9.31544368734451, lat: 38.719760683979999 }, { lng: -9.315361250216171, lat: 38.7197815122259 }, { lng: -9.31527029664808, lat: 38.719788467201198 }, { lng: -9.31501750946348, lat: 38.719805440982299 }, { lng: -9.31486199939518, lat: 38.719823046907798 }, { lng: -9.31490763776754, lat: 38.719934191759201 }, { lng: -9.315015197371791, lat: 38.720125415646201 }, { lng: -9.31518207303872, lat: 38.7204903425976 }, { lng: -9.315257784947629, lat: 38.720758724477598 }, { lng: -9.315270404681931, lat: 38.721008018215798 }, { lng: -9.31521697848085, lat: 38.721296266398497 }, { lng: -9.31505716107745, lat: 38.7218616745565 }, { lng: -9.31500437341052, lat: 38.722174599221397 }, { lng: -9.3150159870635, lat: 38.722279237563399 }, { lng: -9.315150258162809, lat: 38.722772223177202 }, { lng: -9.315245666026691, lat: 38.723132914587097 }, { lng: -9.315286179340999, lat: 38.723386159801301 }, { lng: -9.31539671778981, lat: 38.723744000208598 }, { lng: -9.315485741485951, lat: 38.723919646488099 }, { lng: -9.315681360717941, lat: 38.724325717393803 }, { lng: -9.31582860494297, lat: 38.724607965819303 }, { lng: -9.31599033799961, lat: 38.724869445074297 }, { lng: -9.316339917087969, lat: 38.725455273910498 }, { lng: -9.31644668047165, lat: 38.725702174924997 }, { lng: -9.316496766500659, lat: 38.725873353012297 }, { lng: -9.31656001111604, lat: 38.726131234412001 }, { lng: -9.3165464332182, lat: 38.7263813325402 }, { lng: -9.316483203223269, lat: 38.726618967539103 }, { lng: -9.316371757550989, lat: 38.726910053439397 }, { lng: -9.316234180190211, lat: 38.727381015592997 }, { lng: -9.316173238932731, lat: 38.7275483667635 }, { lng: -9.31619105937606, lat: 38.727791753327502 }, { lng: -9.316211079505161, lat: 38.7278830685676 }, { lng: -9.31628821472489, lat: 38.728006864173999 }, { lng: -9.31645267502528, lat: 38.728140315742202 }, { lng: -9.31710838291702, lat: 38.7284058823344 }, { lng: -9.31749325157385, lat: 38.728537182656801 }, { lng: -9.31805378053215, lat: 38.728755605005198 }, { lng: -9.31822939953928, lat: 38.728833814392097 }, { lng: -9.31838845477743, lat: 38.728931912126797 }, { lng: -9.31860171124044, lat: 38.7291091839557 }, { lng: -9.318796675588141, lat: 38.7293137470391 }, { lng: -9.31888325337326, lat: 38.729479690527903 }, { lng: -9.31892182555792, lat: 38.729642251204602 }, { lng: -9.31892949032207, lat: 38.729994282681197 }, { lng: -9.318870215466941, lat: 38.730248538509002 }, { lng: -9.318657224755739, lat: 38.730789273794201 }, { lng: -9.31856344591491, lat: 38.730980463948001 }, { lng: -9.31851441554001, lat: 38.730999067634698 }, { lng: -9.317984818512411, lat: 38.731045877105302 }, { lng: -9.31772920781178, lat: 38.731040542749199 }, { lng: -9.31748037894338, lat: 38.731021091540399 }, { lng: -9.317369783125979, lat: 38.731044188238101 }, { lng: -9.3173158357364, lat: 38.731084912017998 }, { lng: -9.31726906696351, lat: 38.731135831883698 }, { lng: -9.317247976278731, lat: 38.7312512510047 }, { lng: -9.317250155510839, lat: 38.731383100529598 }, { lng: -9.31726442946173, lat: 38.731502216686998 }, { lng: -9.31722849352566, lat: 38.731568610196099 }, { lng: -9.317180324242729, lat: 38.731638997338699 }, { lng: -9.31710200042378, lat: 38.731694108294903 }, { lng: -9.31700272735824, lat: 38.7317688890043 }, { lng: -9.3168456236334, lat: 38.731858486607798 }, { lng: -9.316621309358769, lat: 38.732035505490998 }, { lng: -9.31650062882715, lat: 38.732088522717198 }, { lng: -9.31637054572807, lat: 38.732107946930299 }, { lng: -9.316206288460901, lat: 38.732085022873299 }, { lng: -9.316084109589671, lat: 38.732053920689502 }, { lng: -9.315735297806469, lat: 38.731948641103301 }, { lng: -9.315650332532551, lat: 38.731928783757901 }, { lng: -9.31551636239228, lat: 38.7319288814898 }, { lng: -9.315288151922459, lat: 38.731981723122303 }, { lng: -9.31496351684657, lat: 38.732058784641303 }, { lng: -9.314828651567799, lat: 38.732109331315201 }, { lng: -9.314715218961259, lat: 38.732176502970297 }, { lng: -9.31459722570224, lat: 38.732287682018303 }, { lng: -9.3145150909876, lat: 38.732335082205402 }, { lng: -9.314307947634189, lat: 38.732382398043598 }, { lng: -9.314243144034389, lat: 38.7324063829236 }, { lng: -9.3141365792474, lat: 38.732457901222901 }, { lng: -9.314093118962541, lat: 38.732493293072601 }, { lng: -9.31408306954024, lat: 38.7325257288092 }, { lng: -9.3140867165662, lat: 38.732642165727498 }, { lng: -9.314063232270961, lat: 38.732717527591902 }, { lng: -9.313990023479411, lat: 38.732762224987397 }, { lng: -9.313921695692301, lat: 38.732788858439498 }, { lng: -9.31374680181457, lat: 38.732866917931297 }, { lng: -9.313593306907819, lat: 38.7329668336411 }, { lng: -9.313394658353429, lat: 38.733103505397999 }, { lng: -9.313171284161941, lat: 38.733233854380799 }, { lng: -9.313001400898861, lat: 38.733295111373799 }, { lng: -9.31280088778967, lat: 38.733319118545197 }, { lng: -9.312534043889769, lat: 38.733386578749503 }, { lng: -9.31244319951209, lat: 38.733428931850298 }, { lng: -9.31229026196703, lat: 38.733562438225903 }, { lng: -9.31219742708784, lat: 38.7337006518339 }, { lng: -9.312117009346689, lat: 38.733859186807699 }, { lng: -9.31205547207259, lat: 38.733977539612702 }, { lng: -9.311972004611279, lat: 38.734146826260499 }, { lng: -9.31189604393251, lat: 38.734220105556403 }, { lng: -9.311787787957879, lat: 38.7342807375014 }, { lng: -9.311618732414029, lat: 38.734343247934703 }, { lng: -9.31155257283776, lat: 38.734390484984502 }, { lng: -9.31145794016026, lat: 38.7344749398845 }, { lng: -9.31139772857539, lat: 38.734562294133902 }, { lng: -9.31114221966997, lat: 38.734773850022897 }, { lng: -9.31108377477455, lat: 38.734898291008903 }, { lng: -9.31103858543791, lat: 38.735024498120403 }, { lng: -9.31099266454302, lat: 38.735106387273603 }, { lng: -9.3109569768013, lat: 38.735230151186997 }, { lng: -9.310898648707241, lat: 38.7353269443283 }, { lng: -9.31086880184432, lat: 38.735421018383697 }, { lng: -9.310796708906571, lat: 38.735492001553098 }, { lng: -9.310738997636969, lat: 38.735556000208902 }, { lng: -9.310678840898889, lat: 38.735618577729099 }, { lng: -9.3106342059711, lat: 38.7357227974925 }, { lng: -9.31061207556672, lat: 38.7357897687113 }, { lng: -9.31060727320166, lat: 38.736008163000697 }, { lng: -9.31061351694515, lat: 38.736262116672897 }, { lng: -9.310684418109361, lat: 38.736713494740698 }, { lng: -9.31071677407701, lat: 38.736883504285998 }, { lng: -9.31073686351033, lat: 38.7369514896018 }, { lng: -9.31081305427181, lat: 38.737150780327603 }, { lng: -9.310838192822761, lat: 38.737210787036702 }, { lng: -9.310879437560629, lat: 38.7372991004233 }, { lng: -9.310865440707749, lat: 38.737468670768202 }, { lng: -9.310824634068039, lat: 38.737526282882101 }, { lng: -9.310708371295821, lat: 38.737659688774002 }, { lng: -9.31062621908705, lat: 38.737790590874702 }, { lng: -9.31055737043779, lat: 38.737890997415299 }, { lng: -9.310530965074321, lat: 38.738019711984897 }, { lng: -9.310522566937561, lat: 38.738138701460301 }, { lng: -9.31049938718974, lat: 38.738225584908101 }, { lng: -9.31047508538148, lat: 38.738328608011798 }, { lng: -9.31042319838885, lat: 38.7384042551909 }, { lng: -9.31034926757216, lat: 38.7384754430405 }, { lng: -9.310204677236969, lat: 38.738586343238197 }, { lng: -9.31001758475505, lat: 38.738713888741401 }, { lng: -9.309914133558109, lat: 38.7388014901925 }, { lng: -9.30981768509286, lat: 38.7389300143805 }, { lng: -9.309756143093891, lat: 38.739048633499401 }, { lng: -9.309733068469439, lat: 38.739142276039601 }, { lng: -9.3096888295419, lat: 38.7392845040767 }, { lng: -9.30965712828008, lat: 38.739490463561701 }, { lng: -9.30959973376746, lat: 38.739769924469002 }, { lng: -9.309537603567531, lat: 38.7400065471573 }, { lng: -9.309513642686049, lat: 38.740130465464901 }, { lng: -9.309484609732451, lat: 38.740316496327402 }, { lng: -9.309480935662981, lat: 38.740407870868403 }, { lng: -9.30941792308866, lat: 38.740597847676703 }, { lng: -9.309375709681531, lat: 38.740709606329801 }, { lng: -9.3093534174241, lat: 38.740766940620098 }, { lng: -9.309282300251921, lat: 38.740932587936904 }, { lng: -9.309183939880979, lat: 38.7411762451963 }, { lng: -9.30911810429161, lat: 38.741264464604797 }, { lng: -9.30905285677065, lat: 38.741318354978397 }, { lng: -9.30900101401269, lat: 38.741383103504099 }, { lng: -9.30896589344464, lat: 38.741457680571003 }, { lng: -9.308958275455529, lat: 38.7415472013315 }, { lng: -9.308960499709009, lat: 38.741598524856897 }, { lng: -9.308944561467721, lat: 38.741657681363698 }, { lng: -9.308900501981061, lat: 38.7417342408568 }, { lng: -9.308828626802811, lat: 38.741846842642403 }, { lng: -9.30869301884065, lat: 38.741951886557302 }, { lng: -9.308625911246921, lat: 38.742053447225302 }, { lng: -9.30844485368028, lat: 38.7423113561251 }, { lng: -9.308325363667, lat: 38.742452447735701 }, { lng: -9.308231048930271, lat: 38.7425505011784 }, { lng: -9.30809309624982, lat: 38.7426736735191 }, { lng: -9.30807317540447, lat: 38.742714317604602 }, { lng: -9.308075424296501, lat: 38.7427741973408 }, { lng: -9.30809174123076, lat: 38.742780335127499 }, { lng: -9.308131985351499, lat: 38.7428495630638 }, { lng: -9.308250362972229, lat: 38.742991592357498 }, { lng: -9.30831480625014, lat: 38.743147765497397 }, { lng: -9.30839204825428, lat: 38.7433127284622 }, { lng: -9.30841621184589, lat: 38.743600820365899 }, { lng: -9.30843516396417, lat: 38.743907703442602 }, { lng: -9.308493953707501, lat: 38.7440765468317 }, { lng: -9.308539688854211, lat: 38.744235071597501 }, { lng: -9.30854550940445, lat: 38.744505871988601 }, { lng: -9.309366865125471, lat: 38.744582811451302 }, { lng: -9.3098940375901, lat: 38.744606144210699 }, { lng: -9.30995342051567, lat: 38.744727148897098 }, { lng: -9.310697501720171, lat: 38.7447072195042 }, { lng: -9.310908404841591, lat: 38.744690766776699 }, { lng: -9.31107842331661, lat: 38.744747782018898 }, { lng: -9.31132368988222, lat: 38.744785483486901 }, { lng: -9.311471244894109, lat: 38.744875149716599 }, { lng: -9.311733818825889, lat: 38.744909253795399 }, { lng: -9.31187452673325, lat: 38.744911794632003 }, { lng: -9.31201517894177, lat: 38.744861640642299 }, { lng: -9.31208564484607, lat: 38.744705371795497 }, { lng: -9.31215137034428, lat: 38.744484828323102 }, { lng: -9.312200163912591, lat: 38.744339492711703 }, { lng: -9.312635987335961, lat: 38.744201055874299 }, { lng: -9.31302139844472, lat: 38.744095195651703 }, { lng: -9.31376898458347, lat: 38.743744087205499 }, { lng: -9.31420280074542, lat: 38.7435608063277 }, { lng: -9.31505543840473, lat: 38.743206105943003 }, { lng: -9.31577809680793, lat: 38.742969183651503 }, { lng: -9.316422390732219, lat: 38.742737732498703 }, { lng: -9.316749072555339, lat: 38.742927906302903 }, { lng: -9.316971227036239, lat: 38.742875661721399 }, { lng: -9.31714758863364, lat: 38.742780553433299 }, { lng: -9.31724070648267, lat: 38.742854551714601 }, { lng: -9.31818813810143, lat: 38.7425021992428 }, { lng: -9.31882535714575, lat: 38.742281618597197 }, { lng: -9.318719934933849, lat: 38.742076233542797 }, { lng: -9.31865078877544, lat: 38.742005324354103 }, { lng: -9.318659484151491, lat: 38.741988570958299 }, { lng: -9.318894335863661, lat: 38.741786489992698 }, { lng: -9.31939144915744, lat: 38.741343397198001 }, { lng: -9.31983434495508, lat: 38.741314126504797 }, { lng: -9.320041190734321, lat: 38.741129617917103 }, { lng: -9.3202274431922, lat: 38.741014498380302 }, { lng: -9.320640246934831, lat: 38.740744932906303 }, { lng: -9.32069716334567, lat: 38.740827586958403 }, { lng: -9.320733711463349, lat: 38.740908822040701 }, { lng: -9.32073999797653, lat: 38.741093776924401 }, { lng: -9.320711255301241, lat: 38.741205674727098 }, { lng: -9.320606415792019, lat: 38.741576416177097 }, { lng: -9.320615625304059, lat: 38.741729539567999 }, { lng: -9.320648854666871, lat: 38.741819189170101 }, { lng: -9.320696638942209, lat: 38.7418986040257 }, { lng: -9.32099091804198, lat: 38.742242765198 }, { lng: -9.32125820460668, lat: 38.742644128811897 }, { lng: -9.32144894099801, lat: 38.742875034102298 }, { lng: -9.32164730559839, lat: 38.7430461447818 }, { lng: -9.321819034094601, lat: 38.743157532755603 }, { lng: -9.321933906288191, lat: 38.743280305339503 }, { lng: -9.32201661478209, lat: 38.7434609688355 }, { lng: -9.3221042183526, lat: 38.743604289590401 }, { lng: -9.322118782517929, lat: 38.743816450793602 }, { lng: -9.322109334549859, lat: 38.743912479164699 }, { lng: -9.322060847536759, lat: 38.7440541243257 }, { lng: -9.322033591882761, lat: 38.744130512333101 }, { lng: -9.322096416131931, lat: 38.744263550591903 }, { lng: -9.322191027278899, lat: 38.744371399619503 }, { lng: -9.322370461163541, lat: 38.744530807784898 }, { lng: -9.32250786083617, lat: 38.744631732008799 }, { lng: -9.32269869118044, lat: 38.744722659575899 }, { lng: -9.32315809782607, lat: 38.744868945197197 }, { lng: -9.32342354099654, lat: 38.745012974436499 }, { lng: -9.323611783368889, lat: 38.745162294179998 }, { lng: -9.32388615821643, lat: 38.745366042640399 }, { lng: -9.324059544447371, lat: 38.745521276134298 }, { lng: -9.32413175075731, lat: 38.745616472593298 }, { lng: -9.32422692909558, lat: 38.745758092189298 }, { lng: -9.32439808693149, lat: 38.746000542593102 }, { lng: -9.32449672824843, lat: 38.746198063692297 }, { lng: -9.324502470594631, lat: 38.746335734980697 }, { lng: -9.324497052328081, lat: 38.7465289129929 }, { lng: -9.324451720105481, lat: 38.746756100233199 }, { lng: -9.324385783062031, lat: 38.746954757436598 }, { lng: -9.32420412917353, lat: 38.747285031051 }, { lng: -9.324047780962189, lat: 38.747504159726901 }, { lng: -9.323944901855469, lat: 38.747694999661299 }, { lng: -9.32390198598026, lat: 38.747874329262203 }, { lng: -9.32391447605564, lat: 38.747995804383997 }, { lng: -9.32401525539222, lat: 38.748211142915302 }, { lng: -9.324109418250931, lat: 38.748340251249402 }, { lng: -9.32421378812257, lat: 38.748397740526798 }, { lng: -9.32436615416859, lat: 38.748443741209798 }, { lng: -9.32456537516164, lat: 38.748457206507197 }, { lng: -9.32469594374567, lat: 38.748451368866696 }, { lng: -9.32487105093244, lat: 38.748405080891402 }, { lng: -9.325097565837289, lat: 38.748317104927999 }, { lng: -9.32524718221274, lat: 38.748253158208698 }, { lng: -9.325395452057339, lat: 38.748267046289399 }, { lng: -9.325558456652759, lat: 38.7483161850732 }, { lng: -9.325698110853869, lat: 38.748386186853203 }, { lng: -9.3258260333794, lat: 38.748490451024303 }, { lng: -9.326239933134071, lat: 38.748892917635501 }, { lng: -9.3263862819322, lat: 38.749088418660101 }, { lng: -9.32670604401625, lat: 38.749453204228701 }, { lng: -9.32685670544614, lat: 38.7496589302826 }, { lng: -9.326934677514529, lat: 38.749823425391099 }, { lng: -9.326994420262579, lat: 38.750046830625102 }, { lng: -9.32709760567894, lat: 38.7501918807313 }, { lng: -9.32717570623897, lat: 38.750295389440701 }, { lng: -9.32730219257274, lat: 38.750375254807302 }, { lng: -9.327447943072089, lat: 38.750451590327103 }, { lng: -9.32758320927883, lat: 38.7505202870814 }, { lng: -9.32783081059072, lat: 38.750599540955299 }, { lng: -9.327953148730311, lat: 38.750624050593601 }, { lng: -9.328033124582671, lat: 38.750701601841499 }, { lng: -9.3281648989445, lat: 38.7508778820606 }, { lng: -9.32815063003655, lat: 38.750966842170001 }, { lng: -9.32827978882796, lat: 38.751055417509498 }, { lng: -9.32844302010313, lat: 38.751179581392101 }, { lng: -9.328527782557931, lat: 38.751364724548303 }, { lng: -9.32858625932527, lat: 38.751532748924397 }, { lng: -9.328662004807599, lat: 38.751660150210903 }, { lng: -9.32877096409894, lat: 38.751778748023398 }, { lng: -9.328820926392099, lat: 38.751829038557801 }, { lng: -9.3290078810394, lat: 38.751899907120603 }, { lng: -9.329171987246969, lat: 38.751910744043002 }, { lng: -9.32937715241208, lat: 38.751969712027602 }, { lng: -9.329479781211781, lat: 38.752005505759598 }, { lng: -9.329542854802609, lat: 38.752076560548097 }, { lng: -9.329584349306289, lat: 38.752122794788001 }, { lng: -9.329698667922161, lat: 38.752141978245803 }, { lng: -9.32981590044205, lat: 38.752143117243698 }, { lng: -9.32996981238405, lat: 38.752094879494102 }, { lng: -9.330198363552769, lat: 38.752038764595099 }, { lng: -9.33059478136534, lat: 38.751888776104899 }, { lng: -9.330695120973679, lat: 38.751842345560398 }, { lng: -9.330803827030509, lat: 38.7518149309359 }, { lng: -9.33098424851689, lat: 38.751797496778899 }, { lng: -9.331046264028769, lat: 38.751777853997197 }, { lng: -9.331184384797901, lat: 38.751707167165101 }, { lng: -9.33132379749882, lat: 38.751651778224002 }, { lng: -9.331437109036241, lat: 38.751611163645499 }, { lng: -9.33153775286514, lat: 38.751589860760703 }, { lng: -9.33163722801171, lat: 38.751601992866199 }, { lng: -9.33175005283586, lat: 38.7516283066266 }, { lng: -9.33184763428622, lat: 38.751623705442697 }, { lng: -9.3319016383081, lat: 38.751599368492698 }, { lng: -9.33207986381788, lat: 38.751485032260298 }, { lng: -9.33219330926207, lat: 38.751445587479999 }, { lng: -9.33233716960167, lat: 38.751387901579498 }, { lng: -9.33242542373767, lat: 38.751306918397297 }, { lng: -9.332532629143349, lat: 38.751197005183897 }, { lng: -9.33263466189713, lat: 38.7510667848426 }, { lng: -9.332715698308951, lat: 38.750946424468097 }, { lng: -9.332810586927581, lat: 38.750870143380098 }, { lng: -9.332792977355259, lat: 38.750698096794402 }, { lng: -9.33279002244252, lat: 38.750618051318398 }, { lng: -9.33298744288073, lat: 38.750248960690797 }, { lng: -9.33313364275716, lat: 38.750125493537901 }, { lng: -9.333397631266511, lat: 38.749947043306598 }, { lng: -9.333552721974749, lat: 38.749681165254799 }, { lng: -9.333632803511589, lat: 38.749600259693302 }, { lng: -9.33369082579649, lat: 38.749472927055102 }, { lng: -9.33377179310437, lat: 38.749273119566801 }, { lng: -9.33412143917227, lat: 38.749188992893799 }, { lng: -9.334190152668279, lat: 38.749136583448802 }, { lng: -9.334257053216289, lat: 38.749058159419199 }, { lng: -9.334336343735419, lat: 38.748950871623599 }, { lng: -9.33435529118435, lat: 38.748818625692998 }, { lng: -9.33441360156333, lat: 38.748749565997301 }, { lng: -9.33451902121177, lat: 38.748643182315 }, { lng: -9.33473593823971, lat: 38.748450077259399 }, { lng: -9.33487372856457, lat: 38.7483464212699 }, { lng: -9.3349689037824, lat: 38.748294911183997 }, { lng: -9.335054663070951, lat: 38.748257546273599 }, { lng: -9.33517007360753, lat: 38.748081698105501 }, { lng: -9.33526101613316, lat: 38.7479560996752 }, { lng: -9.33534447438748, lat: 38.747864080528501 }, { lng: -9.335358061866639, lat: 38.747796297377 }, { lng: -9.335376354566019, lat: 38.747625143799901 }, { lng: -9.33545322765775, lat: 38.747456356552597 }, { lng: -9.335502285649319, lat: 38.747274708649897 }, { lng: -9.33558897376748, lat: 38.747148881690997 }, { lng: -9.3359265189757, lat: 38.746742218896301 }, { lng: -9.33597484342582, lat: 38.746756584299 }, { lng: -9.336167063763281, lat: 38.746812613763801 }, { lng: -9.33666113600361, lat: 38.746904264577601 }, { lng: -9.337315708000061, lat: 38.746998490704797 }, { lng: -9.338043407232149, lat: 38.747077457785799 }, { lng: -9.338901163017271, lat: 38.747147420312501 }, { lng: -9.33899491213343, lat: 38.747154646520301 }, { lng: -9.339035272095069, lat: 38.746976147736902 }, { lng: -9.339262894479541, lat: 38.746285885761601 }, { lng: -9.3393922411885, lat: 38.746289502427203 }, { lng: -9.33988510961408, lat: 38.746296303934997 }, { lng: -9.340478846097341, lat: 38.746282328259603 }, { lng: -9.340456000227871, lat: 38.746073225134403 }, { lng: -9.340445442790161, lat: 38.745774551224898 }, { lng: -9.34193085692422, lat: 38.745435538475299 }, { lng: -9.342005273770701, lat: 38.745667165853099 }, { lng: -9.342783029103639, lat: 38.745475351840497 }, { lng: -9.343590227212379, lat: 38.745318092976298 }, { lng: -9.3447151916113, lat: 38.745131493701798 }, { lng: -9.345248611904969, lat: 38.7450131838091 }, { lng: -9.34567151213273, lat: 38.744903131493103 }, { lng: -9.346194672192309, lat: 38.745157119406301 }, { lng: -9.346448826955051, lat: 38.745304005602797 }, { lng: -9.346696508541029, lat: 38.745442487604002 }, { lng: -9.346912593203839, lat: 38.745562207182303 }, { lng: -9.34715185244735, lat: 38.745712578460903 }, { lng: -9.347317881719709, lat: 38.745851283883098 }, { lng: -9.34749255881804, lat: 38.745977552354198 }, { lng: -9.347764107288731, lat: 38.746098856799101 }, { lng: -9.347823937203639, lat: 38.746127146134597 }, { lng: -9.3479633691818, lat: 38.7461894696904 }, { lng: -9.3482667801206, lat: 38.746412317071901 }, { lng: -9.348467836384, lat: 38.746540831053899 }, { lng: -9.34858977127163, lat: 38.746602615173401 }, { lng: -9.348699557936319, lat: 38.746612465503901 }, { lng: -9.348862557829721, lat: 38.746613290490899 }, { lng: -9.348877880527141, lat: 38.746587545634398 }, { lng: -9.3489798417876, lat: 38.746455243704702 }, { lng: -9.349152891101181, lat: 38.746167181360903 }, { lng: -9.34942178749351, lat: 38.746369032960601 }, { lng: -9.34943481523406, lat: 38.746364030526003 }, { lng: -9.34968474383736, lat: 38.746166593686901 }, { lng: -9.349278451586279, lat: 38.745873664211402 }, { lng: -9.349292166336591, lat: 38.745699133304299 }, { lng: -9.3492636521104, lat: 38.745570982875797 }, { lng: -9.349242279856361, lat: 38.745450232717097 }, { lng: -9.34958610081668, lat: 38.744909884014803 }, { lng: -9.34967277618764, lat: 38.744853044050402 }, { lng: -9.349857020486549, lat: 38.7447097061631 }, { lng: -9.35000056423989, lat: 38.744547332398803 }, { lng: -9.3501402690385, lat: 38.744361850435503 }, { lng: -9.350181068225069, lat: 38.7443126966362 }, { lng: -9.35025293033145, lat: 38.744250242857603 }, { lng: -9.35041628620259, lat: 38.744123333672498 }, { lng: -9.350749658677961, lat: 38.743903134941199 }, { lng: -9.350858925179439, lat: 38.7438693887024 }, { lng: -9.35108444621765, lat: 38.743847038167203 }, { lng: -9.3511839988183, lat: 38.7438169968311 }, { lng: -9.351356609769921, lat: 38.743700434318399 }, { lng: -9.35143733329331, lat: 38.7436112309571 }, { lng: -9.35166535682035, lat: 38.743378346799901 }, { lng: -9.351827663103601, lat: 38.743270810451897 }, { lng: -9.352046681725049, lat: 38.743204932188497 }, { lng: -9.352358628943019, lat: 38.743178974648501 }, { lng: -9.35252123227764, lat: 38.743150251645901 }, { lng: -9.35278873832732, lat: 38.743061074837897 }, { lng: -9.352943604895851, lat: 38.743003339804503 }, { lng: -9.35320811270709, lat: 38.742914106857199 }, { lng: -9.35330984606334, lat: 38.742877100518598 }, { lng: -9.35341993275598, lat: 38.7428373081719 }, { lng: -9.35345579688404, lat: 38.742809099026601 }, { lng: -9.35350385613129, lat: 38.742753924089101 }, { lng: -9.353542700907189, lat: 38.742704875101197 }, { lng: -9.35360596864875, lat: 38.742610984749398 }, { lng: -9.35366032286924, lat: 38.7425069195615 }, { lng: -9.353713863865609, lat: 38.742402319675399 }, { lng: -9.35380118016583, lat: 38.742275209882301 }, { lng: -9.353857596058569, lat: 38.7421571602274 }, { lng: -9.353889309360239, lat: 38.742081166096803 }, { lng: -9.35392229686007, lat: 38.741951739362001 }, { lng: -9.35394952777715, lat: 38.741842376150998 }, { lng: -9.354026846729351, lat: 38.741762931281997 }, { lng: -9.35410764170256, lat: 38.741678581386502 }, { lng: -9.354225998938279, lat: 38.741550788498898 }, { lng: -9.354343358890119, lat: 38.741445430590801 }, { lng: -9.354474664556671, lat: 38.7413284897602 }, { lng: -9.354564380326799, lat: 38.741247656619997 }, { lng: -9.35470275445851, lat: 38.7411407284945 }, { lng: -9.354825573605121, lat: 38.741051887223598 }, { lng: -9.35493684303645, lat: 38.740967586637503 }, { lng: -9.35510188358006, lat: 38.740886049443198 }, { lng: -9.3552429928371, lat: 38.7408048532197 }, { lng: -9.355366866735171, lat: 38.740744289049999 }, { lng: -9.355475017373729, lat: 38.740699471610199 }, { lng: -9.35556991876941, lat: 38.740659741473699 }, { lng: -9.35563756793109, lat: 38.740647687829899 }, { lng: -9.35570430119478, lat: 38.7406489670227 }, { lng: -9.35580182054386, lat: 38.740648580189699 }, { lng: -9.355949885563691, lat: 38.740650991026897 }, { lng: -9.35607790108326, lat: 38.7406513613318 }, { lng: -9.35616348996634, lat: 38.740666139188299 }, { lng: -9.35631885527636, lat: 38.740691893199298 }, { lng: -9.35640763739754, lat: 38.740691592791798 }, { lng: -9.356474792082061, lat: 38.740684134164901 }, { lng: -9.356573019989369, lat: 38.740670943828697 }, { lng: -9.35668379883524, lat: 38.740652131829599 }, { lng: -9.356783506741619, lat: 38.7406247819277 }, { lng: -9.35686547876649, lat: 38.7405956395407 }, { lng: -9.356937467988979, lat: 38.7405547997271 }, { lng: -9.35701316428084, lat: 38.740515727097197 }, { lng: -9.35707539323572, lat: 38.740502371015999 }, { lng: -9.357180495503311, lat: 38.740474516606398 }, { lng: -9.357292308064981, lat: 38.740448846451599 }, { lng: -9.35741457562345, lat: 38.740401981448002 }, { lng: -9.357535037841091, lat: 38.740357571812702 }, { lng: -9.35766014577435, lat: 38.740308880663001 }, { lng: -9.357792362315379, lat: 38.740252368273602 }, { lng: -9.357906997948019, lat: 38.740210274834197 }, { lng: -9.35803548752915, lat: 38.740198115522098 }, { lng: -9.358118467442569, lat: 38.740194632751198 }, { lng: -9.358231498512209, lat: 38.740199663396901 }, { lng: -9.358329758964221, lat: 38.740201963596 }, { lng: -9.35844175258671, lat: 38.7402207866987 }, { lng: -9.358601594891001, lat: 38.7402261360373 }, { lng: -9.35875085932463, lat: 38.7401976361352 }, { lng: -9.35896886320339, lat: 38.7401608477727 }, { lng: -9.359102463988309, lat: 38.740124493040497 }, { lng: -9.359253246983471, lat: 38.740084540391301 }, { lng: -9.359316990540931, lat: 38.740059186986997 }, { lng: -9.359458024821659, lat: 38.739993751767003 }, { lng: -9.359518261644901, lat: 38.739938083591497 }, { lng: -9.35956248061018, lat: 38.7398339409622 }, { lng: -9.35959446421502, lat: 38.739821087356802 }, { lng: -9.359656086727369, lat: 38.739793052812999 }, { lng: -9.35977266298285, lat: 38.739749945438597 }, { lng: -9.359856559117331, lat: 38.739732761013798 }, { lng: -9.359917727266399, lat: 38.739678250256901 }, { lng: -9.359985516866169, lat: 38.739613675019903 }, { lng: -9.360080800555419, lat: 38.7395162032523 }, { lng: -9.36012023479423, lat: 38.739454985501503 }, { lng: -9.36014342844719, lat: 38.739385652941898 }, { lng: -9.36017431901433, lat: 38.739335965544598 }, { lng: -9.36026170077943, lat: 38.739307302654701 }, { lng: -9.36040968087817, lat: 38.739258010838 }, { lng: -9.3605193840736, lat: 38.739236950982097 }, { lng: -9.36058985622328, lat: 38.739228554392 }, { lng: -9.360662702221569, lat: 38.739197790122702 }, { lng: -9.36076174319413, lat: 38.739171797701999 }, { lng: -9.36093357176575, lat: 38.739111713928203 }, { lng: -9.361118718695121, lat: 38.739056619867398 }, { lng: -9.361353626187499, lat: 38.738992806531002 }, { lng: -9.361561726277669, lat: 38.738942069909299 }, { lng: -9.36173140573085, lat: 38.738897587276199 }, { lng: -9.361886645596011, lat: 38.7388692917078 }, { lng: -9.362031857610329, lat: 38.738846502383602 }, { lng: -9.36212339384449, lat: 38.7387720407039 }, { lng: -9.36218922475777, lat: 38.738754592371897 }, { lng: -9.36230626468037, lat: 38.738718861219198 }, { lng: -9.36245131520398, lat: 38.738673196212197 }, { lng: -9.36259794406693, lat: 38.738612474263398 }, { lng: -9.362694139962001, lat: 38.7385818252313 }, { lng: -9.362711910715589, lat: 38.738605058317098 }, { lng: -9.36273762535224, lat: 38.738656128105703 }, { lng: -9.362758524174049, lat: 38.738687527988297 }, { lng: -9.362776925275259, lat: 38.7387546210404 }, { lng: -9.36280181950284, lat: 38.738824439066804 }, { lng: -9.362835510640361, lat: 38.738904699044802 }, { lng: -9.36287669551116, lat: 38.739012357262602 }, { lng: -9.36291699325068, lat: 38.739102283228597 }, { lng: -9.362952064619209, lat: 38.7391888358381 }, { lng: -9.36298180969098, lat: 38.739286976137699 }, { lng: -9.363008282990039, lat: 38.739388481901699 }, { lng: -9.363049564646721, lat: 38.739454885560697 }, { lng: -9.36308393948255, lat: 38.739588105342001 }, { lng: -9.363104716279461, lat: 38.739659497026501 }, { lng: -9.36311753170148, lat: 38.739729532154101 }, { lng: -9.363111244208479, lat: 38.739798597302403 }, { lng: -9.36310983823061, lat: 38.739877339397097 }, { lng: -9.363226960674041, lat: 38.739853042628198 }, { lng: -9.36334339655011, lat: 38.739808578422803 }, { lng: -9.36354941909085, lat: 38.739770832117003 }, { lng: -9.363526319889599, lat: 38.739677937460499 }, { lng: -9.363832307166041, lat: 38.7395274356331 }, { lng: -9.363855936081681, lat: 38.739590868572002 }, { lng: -9.36387533045769, lat: 38.739668581862396 }, { lng: -9.36400031880917, lat: 38.739881017521299 }, { lng: -9.364085756829921, lat: 38.7400205432916 }, { lng: -9.364116917866619, lat: 38.740113891582702 }, { lng: -9.364136276387679, lat: 38.740202954898898 }, { lng: -9.36415074043671, lat: 38.740268197555999 }, { lng: -9.364175930429729, lat: 38.740342068313097 }, { lng: -9.36422487371556, lat: 38.740238684899403 }, { lng: -9.364300280494239, lat: 38.740135922587399 }, { lng: -9.36437828684498, lat: 38.740070693145398 }, { lng: -9.364486446501941, lat: 38.7400268590509 }, { lng: -9.36463030550267, lat: 38.739972017842497 }, { lng: -9.36482734223979, lat: 38.739872835072802 }, { lng: -9.365081818373479, lat: 38.739696573914699 }, { lng: -9.365342089133071, lat: 38.739569523229797 }, { lng: -9.365619316894801, lat: 38.739425178536997 }, { lng: -9.36579304380248, lat: 38.739408753160198 }, { lng: -9.36592315642946, lat: 38.739410886709599 }, { lng: -9.36605312050089, lat: 38.739471128543002 }, { lng: -9.36612382914924, lat: 38.739510015639198 }, { lng: -9.366191478783399, lat: 38.739551189589797 }, { lng: -9.36623590410516, lat: 38.739593231848701 }, { lng: -9.36634452731527, lat: 38.739776382439103 }, { lng: -9.366405299668299, lat: 38.739906352843199 }, { lng: -9.366493998823421, lat: 38.740154745474698 }, { lng: -9.366510149499231, lat: 38.740204384912801 }, { lng: -9.36648728571901, lat: 38.740299300674003 }, { lng: -9.366474717057351, lat: 38.740364016684097 }, { lng: -9.3664788657419, lat: 38.740431350479703 }, { lng: -9.366533152133099, lat: 38.740518332448701 }, { lng: -9.36662999894061, lat: 38.7405854977968 }, { lng: -9.36672150053699, lat: 38.740656231577603 }, { lng: -9.36686009799068, lat: 38.740736645979702 }, { lng: -9.366961993011079, lat: 38.740802855190097 }, { lng: -9.36713429501471, lat: 38.740937410024202 }, { lng: -9.367220783041351, lat: 38.741024051681201 }, { lng: -9.36729506541913, lat: 38.741143066097898 }, { lng: -9.367320860051951, lat: 38.741231608700801 }, { lng: -9.36734119903036, lat: 38.741323993037803 }, { lng: -9.36736696303976, lat: 38.7414040687175 }, { lng: -9.36741673084525, lat: 38.741569191975003 }, { lng: -9.36744358747433, lat: 38.741659342911497 }, { lng: -9.36744861779793, lat: 38.741771077075597 }, { lng: -9.36744200912073, lat: 38.741841493353199 }, { lng: -9.36741616069097, lat: 38.741929951642902 }, { lng: -9.36737236251451, lat: 38.741997882677602 }, { lng: -9.36731485388346, lat: 38.742084426042901 }, { lng: -9.36730279490096, lat: 38.742152196652299 }, { lng: -9.367287445717411, lat: 38.742389623174098 }, { lng: -9.367290241897971, lat: 38.742551911379401 }, { lng: -9.367353072711181, lat: 38.742740674301103 }, { lng: -9.367641631191569, lat: 38.743133148323103 }, { lng: -9.367681884392329, lat: 38.743119751177801 }, { lng: -9.36800570612666, lat: 38.743476095751397 }, { lng: -9.3682364004238, lat: 38.743707940097202 }, { lng: -9.3683219778504, lat: 38.743901328923599 }, { lng: -9.36841325818536, lat: 38.7444190252128 }, { lng: -9.368579754754901, lat: 38.744389246994203 }, { lng: -9.36880266959419, lat: 38.744543170307601 }, { lng: -9.368945452290721, lat: 38.744679297274097 }, { lng: -9.369101043506451, lat: 38.744890497405997 }, { lng: -9.369217357314151, lat: 38.745032401317602 }, { lng: -9.369304160861789, lat: 38.745196859911402 }, { lng: -9.369483337975449, lat: 38.745648315287099 }, { lng: -9.36955818782968, lat: 38.745879739851297 }, { lng: -9.369659955917131, lat: 38.746204921615899 }, { lng: -9.36974425462788, lat: 38.7463239193264 }, { lng: -9.36987526434728, lat: 38.746556906783603 }, { lng: -9.36992697939387, lat: 38.746760926775998 }, { lng: -9.36994050087117, lat: 38.746931203681797 }, { lng: -9.370009648925819, lat: 38.747005414059899 }, { lng: -9.370239221239469, lat: 38.746937949747398 }, { lng: -9.370522672628191, lat: 38.746880087851899 }, { lng: -9.370767995446849, lat: 38.746732555789698 }, { lng: -9.370904373916749, lat: 38.746637161421397 }, { lng: -9.371168469896221, lat: 38.746464298266297 }, { lng: -9.3715693704714, lat: 38.746294573524096 }, { lng: -9.371712224515679, lat: 38.746287476786598 }, { lng: -9.371847495132069, lat: 38.746208033961999 }, { lng: -9.372325893168099, lat: 38.745983531933597 }, { lng: -9.37254405125727, lat: 38.746154163540702 }, { lng: -9.372713317948531, lat: 38.746304325371298 }, { lng: -9.37286661863739, lat: 38.746362690560296 }, { lng: -9.373407912857839, lat: 38.746382521429901 }, { lng: -9.373804280446979, lat: 38.746455956309603 }, { lng: -9.374230970227719, lat: 38.746625989613698 }, { lng: -9.374550640920029, lat: 38.746806526994803 }, { lng: -9.37496148166105, lat: 38.747044193468597 }, { lng: -9.375651921361531, lat: 38.747572079139502 }, { lng: -9.375867128350061, lat: 38.747737420363499 }, { lng: -9.376263935140569, lat: 38.748060624175501 }, { lng: -9.37665412592704, lat: 38.748307328131901 }, { lng: -9.37700762782988, lat: 38.748567126564602 }, { lng: -9.377424496269381, lat: 38.748932357919799 }, { lng: -9.37802977446605, lat: 38.749501670329401 }, { lng: -9.37832942547611, lat: 38.749488835468497 }, { lng: -9.378504221328029, lat: 38.749512646708901 }, { lng: -9.37862560096714, lat: 38.7495274734002 }, { lng: -9.37869702483102, lat: 38.749619849786001 }, { lng: -9.378826792427009, lat: 38.749772854668201 }, { lng: -9.37892540477006, lat: 38.7499929401584 }, { lng: -9.378992536008401, lat: 38.750188771997301 }, { lng: -9.379084270717231, lat: 38.750409916086099 }, { lng: -9.37933872701357, lat: 38.751111326543501 }, { lng: -9.379664391867159, lat: 38.751852419501397 }, { lng: -9.37968241560152, lat: 38.751896364846402 }, { lng: -9.379717792490201, lat: 38.751985974136602 }, { lng: -9.379743991563339, lat: 38.7520505490101 }, { lng: -9.379810212522811, lat: 38.752200088775197 }, { lng: -9.379867110828791, lat: 38.752343239723601 }, { lng: -9.37994103388314, lat: 38.752512423135798 }, { lng: -9.380034698552389, lat: 38.752679054779499 }, { lng: -9.380092890203089, lat: 38.7528171538141 }, { lng: -9.380156355121009, lat: 38.752967080365799 }, { lng: -9.38023720543449, lat: 38.753137900206902 }, { lng: -9.380281442348601, lat: 38.753200934015098 }, { lng: -9.380325497616109, lat: 38.753326297398701 }, { lng: -9.38037386456881, lat: 38.753415048122697 }, { lng: -9.380410487432201, lat: 38.753503380999199 }, { lng: -9.38046061737418, lat: 38.753581119911402 }, { lng: -9.38049861222151, lat: 38.753649263642501 }, { lng: -9.38050944527944, lat: 38.7537228316354 }, { lng: -9.380531383969791, lat: 38.7538002417635 }, { lng: -9.3805498626557, lat: 38.753916783890702 }, { lng: -9.38055724964245, lat: 38.754023805297599 }, { lng: -9.38056925383607, lat: 38.754105101967802 }, { lng: -9.38059063381403, lat: 38.754196662780302 }, { lng: -9.380600369896561, lat: 38.754293572320798 }, { lng: -9.380638287287351, lat: 38.754363513851601 }, { lng: -9.38069581647731, lat: 38.754482970133502 }, { lng: -9.38074423146268, lat: 38.754554783054097 }, { lng: -9.38078773184187, lat: 38.754648179441901 }, { lng: -9.38081620701656, lat: 38.754724438800203 }, { lng: -9.38083481397323, lat: 38.754801794347301 }, { lng: -9.380844797483, lat: 38.754853033254001 }, { lng: -9.380882250326421, lat: 38.754922888678202 }, { lng: -9.380922198754741, lat: 38.754977769224901 }, { lng: -9.38100095206242, lat: 38.755047550256599 }, { lng: -9.381035180090009, lat: 38.755117173434002 }, { lng: -9.38106776689725, lat: 38.755184831538401 }, { lng: -9.38110271439859, lat: 38.755242916300297 }, { lng: -9.38112720356162, lat: 38.755314717907197 }, { lng: -9.381101891501981, lat: 38.755360928188097 }, { lng: -9.381047400797421, lat: 38.755408889458401 }, { lng: -9.38098882761525, lat: 38.755447618201501 }, { lng: -9.380876833619579, lat: 38.755529701873897 }, { lng: -9.38079306327738, lat: 38.7555877048027 }, { lng: -9.38073926664978, lat: 38.755636107101601 }, { lng: -9.38070389868262, lat: 38.755686209665598 }, { lng: -9.38069153590027, lat: 38.755729307292597 }, { lng: -9.38071366823136, lat: 38.755771407049501 }, { lng: -9.382070948611331, lat: 38.7579186280351 }, { lng: -9.382241926930551, lat: 38.757906978735697 }, { lng: -9.382402170770209, lat: 38.757853833053403 }, { lng: -9.382552091155979, lat: 38.757821962817403 }, { lng: -9.38274103067778, lat: 38.757765534653899 }, { lng: -9.38302217505548, lat: 38.757652450057101 }, { lng: -9.38345130005469, lat: 38.757502652718301 }, { lng: -9.38395488175737, lat: 38.757301706816897 }, { lng: -9.38438461263018, lat: 38.757153701112401 }, { lng: -9.38477450709107, lat: 38.757003599242601 }, { lng: -9.38500748620047, lat: 38.756913097193198 }, { lng: -9.38681866039633, lat: 38.756250070438099 }, { lng: -9.388623192528289, lat: 38.755584116360097 }, { lng: -9.38874532395138, lat: 38.7556340524361 }, { lng: -9.388546388522631, lat: 38.7561701635288 }, { lng: -9.388526441807921, lat: 38.756233250343399 }, { lng: -9.38858527846322, lat: 38.756281979365603 }, { lng: -9.389028301704339, lat: 38.756217226557403 }, { lng: -9.389157234141891, lat: 38.756189444905402 }, { lng: -9.38925587738162, lat: 38.756159920512602 }, { lng: -9.38935652519843, lat: 38.756113440995897 }, { lng: -9.389495440129719, lat: 38.756051596406898 }, { lng: -9.38968289968572, lat: 38.755983188283203 }, { lng: -9.389844092105291, lat: 38.755919034696198 }, { lng: -9.39002822457625, lat: 38.755903447565402 }, { lng: -9.390186639032949, lat: 38.755917234206898 }, { lng: -9.3902462407291, lat: 38.755931099035401 }, { lng: -9.39041534526892, lat: 38.755957379292703 }, { lng: -9.39059279460125, lat: 38.756006722796201 }, { lng: -9.39074228453631, lat: 38.756036097874201 }, { lng: -9.39089629259834, lat: 38.756027684760397 }, { lng: -9.391048906077151, lat: 38.756012440636397 }, { lng: -9.39115044971952, lat: 38.756010445955198 }, { lng: -9.39123069160356, lat: 38.756000842942697 }, { lng: -9.39133993614481, lat: 38.7559919193776 }, { lng: -9.391478061305291, lat: 38.755983670187398 }, { lng: -9.39166500968423, lat: 38.755971029890702 }, { lng: -9.39179530856169, lat: 38.755956025993797 }, { lng: -9.391959724913439, lat: 38.755937853985699 }, { lng: -9.39213287639827, lat: 38.755893384377202 }, { lng: -9.39227280147221, lat: 38.7558171097673 }, { lng: -9.392392416204149, lat: 38.755744034470098 }, { lng: -9.3925144354385, lat: 38.755676417901 }, { lng: -9.392638866863139, lat: 38.755608871590503 }, { lng: -9.392732209411131, lat: 38.755552919794503 }, { lng: -9.39282329511423, lat: 38.755512298958003 }, { lng: -9.392911879417589, lat: 38.7554734227745 }, { lng: -9.39297804120465, lat: 38.755454603280597 }, { lng: -9.393073563858829, lat: 38.755417724840598 }, { lng: -9.39325477083522, lat: 38.7553800071449 }, { lng: -9.39357396621995, lat: 38.755326297805198 }, { lng: -9.393808118316599, lat: 38.7552898151581 }, { lng: -9.39401025301645, lat: 38.755245024725198 }, { lng: -9.394168991314769, lat: 38.755198815103803 }, { lng: -9.39442574410363, lat: 38.755413755802202 }, { lng: -9.394542560431001, lat: 38.755534362262303 }, { lng: -9.394647167393421, lat: 38.755464777684097 }, { lng: -9.394744569504759, lat: 38.7553912146439 }, { lng: -9.394801607039319, lat: 38.755337632097302 }, { lng: -9.39488460666956, lat: 38.755249723001903 }, { lng: -9.39504889467044, lat: 38.7551135513839 }, { lng: -9.395134243643771, lat: 38.755021837132198 }, { lng: -9.395215441764559, lat: 38.754962315059799 }, { lng: -9.395413880956781, lat: 38.754844784775599 }, { lng: -9.395569202184401, lat: 38.754748437534303 }, { lng: -9.395809478139419, lat: 38.754668279587499 }, { lng: -9.396083682606429, lat: 38.754601002060397 }, { lng: -9.396317014033221, lat: 38.754537947089503 }, { lng: -9.396620085942031, lat: 38.754457113237699 }, { lng: -9.39684351716163, lat: 38.754380921199001 }, { lng: -9.39704502939651, lat: 38.754301095196404 }, { lng: -9.39719575516779, lat: 38.754218123226899 }, { lng: -9.397319726200211, lat: 38.754118419613 }, { lng: -9.397462666946851, lat: 38.754005265795797 }, { lng: -9.397614187410809, lat: 38.753837075891497 }, { lng: -9.397723504267979, lat: 38.753715282397103 }, { lng: -9.39776873506235, lat: 38.753664529359597 }, { lng: -9.39787753044747, lat: 38.753630473210102 }, { lng: -9.398066239306591, lat: 38.753646623644698 }, { lng: -9.39820375060607, lat: 38.753675127103797 }, { lng: -9.39834464146003, lat: 38.753602172139999 }, { lng: -9.398545829094591, lat: 38.753497668807597 }, { lng: -9.398669960175759, lat: 38.753432998204097 }, { lng: -9.398846561749259, lat: 38.753428199675199 }, { lng: -9.398909442442889, lat: 38.753406171417403 }, { lng: -9.399028533462641, lat: 38.753329847774602 }, { lng: -9.39911445748527, lat: 38.753264514125398 }, { lng: -9.39921310120196, lat: 38.753209305939102 }, { lng: -9.39943037340068, lat: 38.753090844232098 }, { lng: -9.39974493684835, lat: 38.752945199246298 }, { lng: -9.399972300896581, lat: 38.753130451701999 }, { lng: -9.40015264135458, lat: 38.753271714802104 }, { lng: -9.400340788340291, lat: 38.7534707211978 }, { lng: -9.40043746268146, lat: 38.753583889957298 }, { lng: -9.40055067378724, lat: 38.753727772840797 }, { lng: -9.400627499901701, lat: 38.7538439499533 }, { lng: -9.40088259832892, lat: 38.754217964071003 }, { lng: -9.401186635321841, lat: 38.754120533861197 }, { lng: -9.40172947492283, lat: 38.754483950037802 }, { lng: -9.401775029099859, lat: 38.754503448023499 }, { lng: -9.401813182280989, lat: 38.754533752642502 }, { lng: -9.40196524674267, lat: 38.754766654677297 }, { lng: -9.40214567199609, lat: 38.7550485257904 }, { lng: -9.40237091612777, lat: 38.755418537008403 }, { lng: -9.40247384696222, lat: 38.755618108577899 }, { lng: -9.40257252914034, lat: 38.755837628592602 }, { lng: -9.402642188853511, lat: 38.755815344540302 }, { lng: -9.40315945115419, lat: 38.756829827774702 }, { lng: -9.403385937554599, lat: 38.757269545231601 }, { lng: -9.4056424257566, lat: 38.756512210011003 }, { lng: -9.406522949552979, lat: 38.757864912360802 }, { lng: -9.407184525760121, lat: 38.758148463073702 }, { lng: -9.407548894418371, lat: 38.758273113005203 }, { lng: -9.407828857549941, lat: 38.758367336779799 }, { lng: -9.408350152105919, lat: 38.758544316467599 }, { lng: -9.40847121516364, lat: 38.758565693730802 }, { lng: -9.408882039022121, lat: 38.758573094410004 }, { lng: -9.40912056992657, lat: 38.7585758939477 }, { lng: -9.40938819735192, lat: 38.758578374345397 }, { lng: -9.40951216160845, lat: 38.758555939923497 }, { lng: -9.40973956880954, lat: 38.7585091402307 }, { lng: -9.4100188622857, lat: 38.758449968683003 }, { lng: -9.410423374887969, lat: 38.758586779868203 }, { lng: -9.41052131902552, lat: 38.758614891377697 }, { lng: -9.411156167796101, lat: 38.758959238374302 }, { lng: -9.411197486340869, lat: 38.758979865279798 }, { lng: -9.410538492201329, lat: 38.759197134734002 }, { lng: -9.41019619743232, lat: 38.759297802402301 }, { lng: -9.410081147411489, lat: 38.7593231099683 }, { lng: -9.4097970392677, lat: 38.759390080841101 }, { lng: -9.40941019389977, lat: 38.759482852186402 }, { lng: -9.409189759311831, lat: 38.7595660623493 }, { lng: -9.408831849755639, lat: 38.759720310017997 }, { lng: -9.40853708679964, lat: 38.7598933212509 }, { lng: -9.408347495150959, lat: 38.760093555518402 }, { lng: -9.408285092198669, lat: 38.760206833695598 }, { lng: -9.40832380839595, lat: 38.760255773086001 }, { lng: -9.408744932568689, lat: 38.760562385521403 }, { lng: -9.40913749932542, lat: 38.760835616060596 }, { lng: -9.410174600199641, lat: 38.761672339133597 }, { lng: -9.41031388129019, lat: 38.761547502533901 }, { lng: -9.41047921452413, lat: 38.761071354455403 }, { lng: -9.41084720611352, lat: 38.760953024758102 }, { lng: -9.41116366135399, lat: 38.760880201111199 }, { lng: -9.411479818881251, lat: 38.7608102650116 }, { lng: -9.411845493989819, lat: 38.760697806178101 }, { lng: -9.411926170316789, lat: 38.760602973783797 }, { lng: -9.41204705792763, lat: 38.760530941875501 }, { lng: -9.412179480703911, lat: 38.760466891363698 }, { lng: -9.412324820017441, lat: 38.760391796479603 }, { lng: -9.412425696956451, lat: 38.760352226038997 }, { lng: -9.41256036036089, lat: 38.760310670552499 }, { lng: -9.412667667529, lat: 38.760270490848903 }, { lng: -9.412780690189731, lat: 38.760221691212003 }, { lng: -9.41277842625203, lat: 38.760095071386303 }, { lng: -9.412771499101209, lat: 38.7599650752149 }, { lng: -9.412752974624819, lat: 38.759791164104698 }, { lng: -9.41274802701056, lat: 38.759597826188198 }, { lng: -9.412804036366399, lat: 38.759436244678497 }, { lng: -9.412849416829751, lat: 38.759246141559402 }, { lng: -9.412903924715341, lat: 38.759109888790398 }, { lng: -9.412961082948179, lat: 38.758947937913398 }, { lng: -9.413013360299271, lat: 38.758789820964502 }, { lng: -9.41309740463317, lat: 38.7585294797152 }, { lng: -9.413165736185841, lat: 38.758523238438997 }, { lng: -9.41325824952825, lat: 38.758505020514399 }, { lng: -9.41341351347487, lat: 38.758483320920703 }, { lng: -9.413549006842731, lat: 38.758462556545297 }, { lng: -9.413651002906599, lat: 38.758447299712302 }, { lng: -9.413975762270301, lat: 38.758369872794098 }, { lng: -9.41433503127011, lat: 38.758279910847598 }, { lng: -9.41464759117118, lat: 38.758202349185296 }, { lng: -9.414929556237739, lat: 38.7581252979111 }, { lng: -9.415150251218019, lat: 38.758096032539299 }, { lng: -9.41538997288129, lat: 38.758081691716598 }, { lng: -9.4155332886794, lat: 38.7580739011877 }, { lng: -9.41574808242593, lat: 38.758081181261502 }, { lng: -9.41596090152906, lat: 38.7580809116997 }, { lng: -9.41617255811366, lat: 38.758099303016401 }, { lng: -9.41646876552112, lat: 38.758117308660999 }, { lng: -9.41677940310564, lat: 38.758138033893303 }, { lng: -9.41690203050255, lat: 38.758182800567702 }, { lng: -9.41704645782675, lat: 38.758236972086301 }, { lng: -9.41729184676351, lat: 38.758327140104399 }, { lng: -9.41755419982743, lat: 38.758426582773097 }, { lng: -9.41778349806679, lat: 38.758510980656098 }, { lng: -9.41795039372035, lat: 38.758580125153799 }, { lng: -9.418094704751381, lat: 38.758659603581002 }, { lng: -9.41835861238695, lat: 38.758794336341602 }, { lng: -9.4185815393224, lat: 38.758882769669 }, { lng: -9.418724748667479, lat: 38.758926680185802 }, { lng: -9.418869819604859, lat: 38.7589588610264 }, { lng: -9.418945709817651, lat: 38.759136105101298 }, { lng: -9.41905299855388, lat: 38.759332096200097 }, { lng: -9.419141938358029, lat: 38.759550449677803 }, { lng: -9.41924895396353, lat: 38.759808062065702 }, { lng: -9.419293275372009, lat: 38.7599824078493 }, { lng: -9.4192793108305, lat: 38.760095424414203 }, { lng: -9.41930648368468, lat: 38.760199073384697 }, { lng: -9.419379724336769, lat: 38.760344008004203 }, { lng: -9.419428473795699, lat: 38.760444627093001 }, { lng: -9.4196477755002, lat: 38.760600021289903 }, { lng: -9.41975226218163, lat: 38.760684532607499 }, { lng: -9.41980094085225, lat: 38.7607493956356 }, { lng: -9.419823603767311, lat: 38.760813456963902 }, { lng: -9.41987918856487, lat: 38.760916611002102 }, { lng: -9.420029540941851, lat: 38.761076097341203 }, { lng: -9.42010743489409, lat: 38.761140637609998 }, { lng: -9.420164161194419, lat: 38.7612178324665 }, { lng: -9.42030542285219, lat: 38.7613064438696 }, { lng: -9.420468545567759, lat: 38.761408412193802 }, { lng: -9.42052951416829, lat: 38.761471966726504 }, { lng: -9.420693928668641, lat: 38.761735064199499 }, { lng: -9.420831548083431, lat: 38.761960173377197 }, { lng: -9.42098966969469, lat: 38.762212085615701 }, { lng: -9.42106855168368, lat: 38.762414331882297 }, { lng: -9.421128420374369, lat: 38.762589591829403 }, { lng: -9.42129737796418, lat: 38.7631877200443 }, { lng: -9.421508067545799, lat: 38.763975717978902 }, { lng: -9.42156890492268, lat: 38.764223563876101 }, { lng: -9.42163904807011, lat: 38.764451580435903 }, { lng: -9.421681834670251, lat: 38.764527761700499 }, { lng: -9.421722097955239, lat: 38.764559475834197 }, { lng: -9.421904094470589, lat: 38.7647118549406 }, { lng: -9.4222567911184, lat: 38.765200948992302 }, { lng: -9.42229942469695, lat: 38.765230018257299 }, { lng: -9.422522765244659, lat: 38.7657486412634 }, { lng: -9.42271563395356, lat: 38.765891531163398 }, { lng: -9.42277047796974, lat: 38.765895697257697 }, { lng: -9.424635428978551, lat: 38.766045958300403 }, { lng: -9.425840663154499, lat: 38.766125304115903 }, { lng: -9.42617022287361, lat: 38.766140478502599 }, { lng: -9.42663308296787, lat: 38.766140666915597 }, { lng: -9.426889462288599, lat: 38.766162057452597 }, { lng: -9.42714779559973, lat: 38.766183333010098 }, { lng: -9.427223014382999, lat: 38.766194660335799 }, { lng: -9.427298354323399, lat: 38.766212564530697 }, { lng: -9.428790889489481, lat: 38.766304906940597 }, { lng: -9.43008120838871, lat: 38.766343097899799 }, { lng: -9.431085062529309, lat: 38.766425980024401 }, { lng: -9.432094595753361, lat: 38.766511402585401 }, { lng: -9.43282180899393, lat: 38.766560055709299 }, { lng: -9.433471944346071, lat: 38.766602359531198 }, { lng: -9.43434552636179, lat: 38.766651711809502 }, { lng: -9.43478340509229, lat: 38.766695382581702 }, { lng: -9.43598040456458, lat: 38.766807773263501 }, { lng: -9.436592755722041, lat: 38.76682228984 }, { lng: -9.437167897125731, lat: 38.766865496014503 }, { lng: -9.437663395901019, lat: 38.766907702275802 }, { lng: -9.438219530733059, lat: 38.766955983149998 }, { lng: -9.43893839505677, lat: 38.7670003668281 }, { lng: -9.43887093580326, lat: 38.767269725527697 }, { lng: -9.438846201246371, lat: 38.767471502864701 }, { lng: -9.438842020598941, lat: 38.767538744486401 }, { lng: -9.438848930353821, lat: 38.768062543074898 }, { lng: -9.43888502253467, lat: 38.768230853051399 }, { lng: -9.438924018125009, lat: 38.768267980803103 }, { lng: -9.438981267018571, lat: 38.7682970616464 }, { lng: -9.439139508428591, lat: 38.768343033493899 }, { lng: -9.439521917682089, lat: 38.768448104031897 }, { lng: -9.43973207926318, lat: 38.768496014943601 }, { lng: -9.440040386049001, lat: 38.768550392446002 }, { lng: -9.44036329704128, lat: 38.768629198305902 }, { lng: -9.440346032688449, lat: 38.768647673259402 }, { lng: -9.44033827737255, lat: 38.768689193168598 }, { lng: -9.440339730875349, lat: 38.7687373720672 }, { lng: -9.440363778731481, lat: 38.7687879041085 }, { lng: -9.440377866564299, lat: 38.768797113512598 }, { lng: -9.440481573070951, lat: 38.7687865854124 }, { lng: -9.440569490923581, lat: 38.768787131265803 }];

/***/ }),
/* 574 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/*
	    Botão apresentado em cima do mapa no canto inferior
	    direito e que permite criar uma ocorrência.
	*/
	var AddReportButton = function AddReportButton(props) {
	    var btnClasses = 'd-flex justify-content-center align-items-center btn btn-danger rounded-circle add-button' + (props.active ? '' : ' disabled');

	    return _react2.default.createElement(
	        'div',
	        { className: 'd-flex justify-content-center align-items-center report-button-div' },
	        _react2.default.createElement(
	            'button',
	            { className: btnClasses, onClick: props.onClick },
	            _react2.default.createElement('i', { className: 'ion-plus' })
	        )
	    );
	}; // 3rd Party
	exports.default = AddReportButton;

/***/ }),
/* 575 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/*

	*/
	var SideMenu = function SideMenu(props) {
	    return _react2.default.createElement(
	        'div',
	        { className: 'side-menu ' + props.side },
	        props.children
	    );
	}; // 3rd Party
	exports.default = SideMenu;

/***/ }),
/* 576 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/*
	    
	*/
	var FilterButton = function FilterButton(props) {
	    var btnClasses = "d-flex justify-content-center align-items-center btn btn-info rounded-circle filter-button";

	    return _react2.default.createElement(
	        "div",
	        { className: "d-flex justify-content-center align-items-center filter-button-div" },
	        _react2.default.createElement(
	            "button",
	            { className: btnClasses, onClick: props.onClick },
	            _react2.default.createElement("i", { className: "ion-ios-settings" })
	        )
	    );
	}; // 3rd Party
	exports.default = FilterButton;

/***/ }),
/* 577 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _reactSwitchButton = __webpack_require__(281);

	var _reactSwitchButton2 = _interopRequireDefault(_reactSwitchButton);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/*
	    
	*/
	// 3rd Party
	var FilterField = function FilterField(props) {
	    return _react2.default.createElement(
	        'div',
	        { className: 'mb-2' },
	        _react2.default.createElement(_reactSwitchButton2.default, { name: props.name, defaultChecked: true, onChange: function onChange(event) {
	                return props.onChange(event);
	            } }),
	        _react2.default.createElement(
	            'span',
	            { className: 'filter-span h6 text-muted' },
	            props.name
	        )
	    );
	};

	exports.default = FilterField;

/***/ }),
/* 578 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _reactRedux = __webpack_require__(160);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // 3rd Party


	/*
	    
	*/
	var SettingsPage = function (_Component) {
	    _inherits(SettingsPage, _Component);

	    function SettingsPage() {
	        _classCallCheck(this, SettingsPage);

	        return _possibleConstructorReturn(this, (SettingsPage.__proto__ || Object.getPrototypeOf(SettingsPage)).apply(this, arguments));
	    }

	    _createClass(SettingsPage, [{
	        key: 'render',
	        value: function render() {
	            return _react2.default.createElement(
	                'div',
	                null,
	                'Settings Page'
	            );
	        }
	    }]);

	    return SettingsPage;
	}(_react.Component);

	function mapStateToProps(store) {
	    return {
	        token: store.token
	    };
	}

	exports.default = (0, _reactRedux.connect)(mapStateToProps)(SettingsPage);

/***/ }),
/* 579 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _axios = __webpack_require__(253);

	var _axios2 = _interopRequireDefault(_axios);

	var _config = __webpack_require__(279);

	var _config2 = _interopRequireDefault(_config);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var markerColors = {
	    "Pendente": "#959595",
	    "Em Resolução": "#FCF004",
	    "Resolvido": "#00FF00",
	    "Rejeitado": "#FF0000"
	};

	var NotificationDetailsPage = function (_Component) {
	    _inherits(NotificationDetailsPage, _Component);

	    function NotificationDetailsPage(props) {
	        _classCallCheck(this, NotificationDetailsPage);

	        var _this = _possibleConstructorReturn(this, (NotificationDetailsPage.__proto__ || Object.getPrototypeOf(NotificationDetailsPage)).call(this, props));

	        _this.state = {
	            notification: null,
	            report: '',
	            days: null,
	            prevPath: ''
	        };
	        return _this;
	    }

	    _createClass(NotificationDetailsPage, [{
	        key: 'loadReportDetails',
	        value: function loadReportDetails(reportId) {
	            var _this2 = this;

	            console.log("state", this.state);
	            var token = JSON.parse(localStorage.getItem('token'));

	            _axios2.default.post(_config2.default + '/report/reportById/' + reportId, token).then(function (response) {
	                if (response.status === 200) {
	                    console.log("Success!", response.data);
	                    _this2.setState({ report: response.data });
	                }
	            }).catch(function (err) {
	                console.log("An error occured while trying to load reports details", err);
	            });
	        }
	    }, {
	        key: 'componentWillMount',
	        value: function componentWillMount() {
	            var notification = JSON.parse(localStorage.getItem('notification'));
	            this.loadReportDetails(notification.reportId);

	            // calculate how many days has passed since it was changed
	            var changeDate = notification.modifiedDate.split(" ")[0].split("/").reverse().join("/");

	            var start = new Date(changeDate),
	                end = new Date(),
	                diff = new Date(end - start),
	                days = diff / 1000 / 60 / 60 / 24;

	            console.log("changeDate", notification.modifiedDate);
	            console.log("today", new Date());
	            console.log("days have passed", days);
	            console.log("days have passed 2", Math.round(days));
	            this.setState({ days: Math.round(days) });
	        }
	    }, {
	        key: 'goBack',
	        value: function goBack() {
	            this.props.history.push('/app/user/map');
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            var report = this.state.report;
	            var notification = JSON.parse(localStorage.getItem('notification'));
	            var dayAmount = void 0;
	            if (this.state.days) {

	                if (this.state.days < 1) {
	                    dayAmount = "Hoje";
	                } else if (this.state.days === 1) {
	                    dayAmount = "Há 1 dia";
	                } else {
	                    dayAmount = 'H\xE1 ' + this.state.days + ' dias';
	                }
	            }

	            console.log("previousPath", this.state.prevPath);
	            return _react2.default.createElement(
	                'div',
	                { className: 'container h-100' },
	                _react2.default.createElement(
	                    'div',
	                    { className: 'row' },
	                    _react2.default.createElement(
	                        'div',
	                        { className: 'col-md-2 goBackBttnItem' },
	                        _react2.default.createElement(
	                            'i',
	                            { className: 'fa fa-arrow-left', 'aria-hidden': 'true' },
	                            ' ',
	                            _react2.default.createElement(
	                                'span',
	                                { id: 'goBackLabel', onClick: this.goBack.bind(this) },
	                                ' Voltar '
	                            )
	                        )
	                    )
	                ),
	                _react2.default.createElement(
	                    'div',
	                    { className: 'row justify-content-left custom-container mt-2' },
	                    _react2.default.createElement(
	                        'div',
	                        { className: 'col-md-6' },
	                        _react2.default.createElement(
	                            'figure',
	                            null,
	                            _react2.default.createElement('img', { src: this.state.report.imageUrl, className: 'w-100 details-image' })
	                        ),
	                        _react2.default.createElement(
	                            'div',
	                            { className: 'row my-3' },
	                            _react2.default.createElement(
	                                'div',
	                                { className: 'col' },
	                                _react2.default.createElement(
	                                    'strong',
	                                    null,
	                                    'Morada:'
	                                ),
	                                ' ',
	                                report.addressAsStreet
	                            )
	                        ),
	                        _react2.default.createElement(
	                            'div',
	                            { className: 'row my-3' },
	                            _react2.default.createElement(
	                                'div',
	                                { className: 'col' },
	                                _react2.default.createElement(
	                                    'strong',
	                                    null,
	                                    'Tipo:'
	                                ),
	                                ' ',
	                                report.type
	                            )
	                        ),
	                        _react2.default.createElement(
	                            'div',
	                            { className: 'row my-3' },
	                            _react2.default.createElement(
	                                'div',
	                                { className: 'col' },
	                                _react2.default.createElement(
	                                    'strong',
	                                    null,
	                                    'Estado:'
	                                ),
	                                ' ',
	                                report.statusDescription,
	                                _react2.default.createElement('i', { className: 'fa fa-circle i', 'aria-hidden': 'true', style: { color: markerColors[report.statusDescription] } })
	                            )
	                        ),
	                        _react2.default.createElement(
	                            'div',
	                            { className: 'row my-3' },
	                            _react2.default.createElement(
	                                'div',
	                                { className: 'col' },
	                                _react2.default.createElement(
	                                    'strong',
	                                    null,
	                                    'Descri\xE7\xE3o:'
	                                ),
	                                _react2.default.createElement('br', null),
	                                report.description
	                            )
	                        )
	                    ),
	                    _react2.default.createElement(
	                        'div',
	                        { className: 'col-md-5' },
	                        _react2.default.createElement(
	                            'div',
	                            { className: 'updateReportStatusArea' },
	                            _react2.default.createElement(
	                                'h6',
	                                null,
	                                ' Detalhes da mudan\xE7a de estado: '
	                            ),
	                            _react2.default.createElement(
	                                'ul',
	                                { className: 'notificationDetailList' },
	                                _react2.default.createElement(
	                                    'li',
	                                    null,
	                                    'Mudan\xE7a de estado: ',
	                                    _react2.default.createElement(
	                                        'strong',
	                                        null,
	                                        notification.prevStatus
	                                    ),
	                                    ' para ',
	                                    _react2.default.createElement(
	                                        'strong',
	                                        null,
	                                        notification.newStatus
	                                    )
	                                ),
	                                _react2.default.createElement(
	                                    'li',
	                                    null,
	                                    'Modificado por ',
	                                    _react2.default.createElement(
	                                        'strong',
	                                        null,
	                                        notification.modifiedBy,
	                                        ' '
	                                    ),
	                                    ' em',
	                                    _react2.default.createElement(
	                                        'strong',
	                                        null,
	                                        ' ',
	                                        notification.modifiedDate
	                                    ),
	                                    ' ',
	                                    _react2.default.createElement(
	                                        'i',
	                                        { style: { color: 'grey' } },
	                                        '(',
	                                        dayAmount,
	                                        ')'
	                                    )
	                                ),
	                                _react2.default.createElement('br', null),
	                                _react2.default.createElement(
	                                    'li',
	                                    null,
	                                    ' ',
	                                    _react2.default.createElement(
	                                        'strong',
	                                        null,
	                                        'Descri\xE7\xE3o: '
	                                    ),
	                                    ' ',
	                                    notification.description,
	                                    ' '
	                                )
	                            )
	                        )
	                    )
	                )
	            );
	        }
	    }]);

	    return NotificationDetailsPage;
	}(_react.Component);

	exports.default = NotificationDetailsPage;

/***/ }),
/* 580 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _reactRouterDom = __webpack_require__(203);

	var _page_core_types = __webpack_require__(581);

	var _page_core_types2 = _interopRequireDefault(_page_core_types);

	var _page_core_workers = __webpack_require__(587);

	var _page_core_workers2 = _interopRequireDefault(_page_core_workers);

	var _page_core_worker_reports = __webpack_require__(594);

	var _page_core_worker_reports2 = _interopRequireDefault(_page_core_worker_reports);

	var _page_core_end_accounts = __webpack_require__(596);

	var _page_core_end_accounts2 = _interopRequireDefault(_page_core_end_accounts);

	var _page_core_statistics = __webpack_require__(613);

	var _page_core_statistics2 = _interopRequireDefault(_page_core_statistics);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/*

	*/
	var CoreRouter = function CoreRouter(props) {
	    return _react2.default.createElement(
	        _reactRouterDom.Switch,
	        null,
	        _react2.default.createElement(_reactRouterDom.Route, { exact: true, path: '/app/core/management/statistics', component: _page_core_statistics2.default }),
	        _react2.default.createElement(_reactRouterDom.Route, { exact: true, path: '/app/core/management/types', component: _page_core_types2.default }),
	        _react2.default.createElement(_reactRouterDom.Route, { exact: true, path: '/app/core/management/workers/reports/:id/:email', component: _page_core_worker_reports2.default }),
	        _react2.default.createElement(_reactRouterDom.Route, { exact: true, path: '/app/core/management/workers', component: _page_core_workers2.default }),
	        _react2.default.createElement(_reactRouterDom.Route, { exact: true, path: '/app/core/management/accounts', component: _page_core_end_accounts2.default })
	    );
	};

	// Pages
	// 3rd Party
	exports.default = CoreRouter;

/***/ }),
/* 581 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _reactRedux = __webpack_require__(160);

	var _form_report_type = __webpack_require__(582);

	var _form_report_type2 = _interopRequireDefault(_form_report_type);

	var _report_type_list = __webpack_require__(584);

	var _report_type_list2 = _interopRequireDefault(_report_type_list);

	var _actions_report_types = __webpack_require__(583);

	var _actions_workers = __webpack_require__(586);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	// Components 


	// Actions 


	var TypeManagementPage = function (_Component) {
	    _inherits(TypeManagementPage, _Component);

	    function TypeManagementPage(props) {
	        _classCallCheck(this, TypeManagementPage);

	        var _this = _possibleConstructorReturn(this, (TypeManagementPage.__proto__ || Object.getPrototypeOf(TypeManagementPage)).call(this, props));

	        _this.state = {};
	        return _this;
	    }

	    _createClass(TypeManagementPage, [{
	        key: 'getReportTypes',
	        value: function getReportTypes() {
	            var token = JSON.parse(localStorage.getItem('token'));
	            this.props.loadReportTypes(token);
	        }

	        // Loads users with the role "work" which works in this area

	    }, {
	        key: 'getWorkers',
	        value: function getWorkers() {
	            var token = JSON.parse(localStorage.getItem('token'));
	            this.props.loadWorkers(token);
	        }
	    }, {
	        key: 'componentWillMount',
	        value: function componentWillMount() {
	            this.getReportTypes();
	            this.getWorkers();
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            return _react2.default.createElement(
	                'div',
	                { className: 'row grid-divider' },
	                _react2.default.createElement(
	                    'div',
	                    { className: 'col-sm-6 column-one' },
	                    _react2.default.createElement(_form_report_type2.default, { workers: this.props.workers })
	                ),
	                _react2.default.createElement(
	                    'div',
	                    { className: 'col-sm-6 column-two' },
	                    _react2.default.createElement(_report_type_list2.default, { reportTypes: this.props.reportTypes })
	                ),
	                _react2.default.createElement('div', { id: 'changeNotifyMessage' })
	            );
	        }
	    }]);

	    return TypeManagementPage;
	}(_react.Component);

	function mapStateToProps(_ref) {
	    var reportTypes = _ref.reportTypes,
	        workers = _ref.workers;

	    return { reportTypes: reportTypes, workers: workers };
	}

	exports.default = (0, _reactRedux.connect)(mapStateToProps, { loadReportTypes: _actions_report_types.loadReportTypes, loadWorkers: _actions_workers.loadWorkers })(TypeManagementPage);

/***/ }),
/* 582 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _reactRedux = __webpack_require__(160);

	var _axios = __webpack_require__(253);

	var _axios2 = _interopRequireDefault(_axios);

	var _reduxForm = __webpack_require__(332);

	var _config = __webpack_require__(279);

	var _config2 = _interopRequireDefault(_config);

	var _jquery = __webpack_require__(252);

	var _jquery2 = _interopRequireDefault(_jquery);

	var _actions_report_types = __webpack_require__(583);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	// Actions


	var ReportTypeForm = function (_Component) {
	    _inherits(ReportTypeForm, _Component);

	    function ReportTypeForm(props) {
	        _classCallCheck(this, ReportTypeForm);

	        var _this = _possibleConstructorReturn(this, (ReportTypeForm.__proto__ || Object.getPrototypeOf(ReportTypeForm)).call(this, props));

	        _this.state = {
	            selectedWorker: "",
	            isATypeSelected: false
	        };
	        _this.updateSelectedWorker = _this.updateSelectedWorker.bind(_this);
	        return _this;
	    }

	    _createClass(ReportTypeForm, [{
	        key: 'updateResponsible',
	        value: function updateResponsible(token, worker) {
	            var _this2 = this;

	            var alert = this.refs.alert;

	            var id = this.props.selectedReportType.id;
	            var email = worker.email;
	            _axios2.default.post(_config2.default + '/admin/reportTypeManagement/changeResponsible/' + id, { token: token, email: email }).then(function (response) {
	                if (response.status === 200) {
	                    alert.classList.remove('d-none');
	                    alert.classList.add('text-success');
	                    alert.innerHTML = 'Responsável foi actualizado com sucesso.';
	                    _this2.props.dispatch((0, _actions_report_types.loadReportTypes)(JSON.parse(localStorage.getItem('token'))));

	                    setTimeout(function () {
	                        alert.classList.add('d-none');
	                        alert.classList.remove('text-success');
	                        alert.innerHTML = '';
	                        if (_this2.state.selectedWorker !== "") {
	                            console.log("setState will be updated...");
	                            _this2.setState({ selectedWorker: "" });
	                            _this2.updateSelectedWorker("");
	                        }
	                        _this2.props.dispatch((0, _reduxForm.reset)('ReportTypeForm'));
	                    }, 3000);
	                }
	            }).catch(function (err) {
	                if (err.response.status === 409) {
	                    alert.classList.remove('d-none');
	                    alert.classList.add('text-danger');
	                    alert.innerHTML = 'Responsável selecionado já está encarregue deste tipo de ocorrências.';
	                    setTimeout(function () {
	                        alert.classList.add('d-none');
	                        alert.classList.remove('text-danger');
	                        alert.innerHTML = '';
	                        if (_this2.state.selectedWorker !== "") {
	                            console.log("setState will be updated...");
	                            _this2.setState({ selectedWorker: "" });
	                            _this2.updateSelectedWorker("");
	                        }
	                        _this2.props.dispatch((0, _reduxForm.reset)('ReportTypeForm'));
	                    }, 3000);
	                }
	            });
	        }
	    }, {
	        key: 'addNewType',
	        value: function addNewType(token, data) {
	            var _this3 = this;

	            var alert = this.refs.alert;

	            _axios2.default.post(_config2.default + '/admin/reportTypeManagement/addReportType', { token: token, data: data }).then(function (response) {
	                if (response.status === 200) {
	                    alert.classList.remove('d-none');
	                    alert.classList.add('text-success');
	                    alert.innerHTML = 'Tipo de ocorrência registado com sucesso!';
	                    _this3.props.dispatch((0, _actions_report_types.loadReportTypes)(JSON.parse(localStorage.getItem('token'))));
	                    setTimeout(function () {
	                        alert.classList.add('d-none');
	                        alert.classList.remove('text-danger');
	                        alert.innerHTML = '';

	                        if (_this3.state.selectedWorker !== "") {
	                            console.log("setState will be updated...");
	                            _this3.setState({ selectedWorker: "" });
	                            _this3.updateSelectedWorker("");
	                        }
	                        _this3.props.dispatch((0, _reduxForm.reset)('ReportTypeForm'));
	                    }, 3000);
	                }
	            }).catch(function (err) {
	                if (err.response.status === 409) {
	                    alert.classList.remove('d-none');
	                    alert.classList.add('text-danger');
	                    alert.innerHTML = 'Tipo de ocorrência já existe.';
	                    setTimeout(function () {
	                        alert.classList.add('d-none');
	                        alert.classList.remove('alert-danger');
	                        alert.innerHTML = '';
	                    }, 3000);
	                }
	            });
	        }
	    }, {
	        key: 'onSubmit',
	        value: function onSubmit(data) {
	            var token = JSON.parse(localStorage.getItem('token'));
	            if (!this.props.selectedReportType) {
	                this.addNewType(token, data);
	            } else {
	                this.updateResponsible(token, this.state.selectedWorker);
	            }
	        }
	    }, {
	        key: 'updateSelectedReportType',
	        value: function updateSelectedReportType() {
	            if (this.props.selectedReportType) {
	                this.props.change("name", this.props.selectedReportType.name);
	                (0, _jquery2.default)("#submitButton").html("Editar");
	            } else {
	                (0, _jquery2.default)("#submitButton").html("Guardar");
	            }
	        }
	    }, {
	        key: 'componentWillUpdate',
	        value: function componentWillUpdate() {
	            this.updateSelectedReportType();
	        }
	    }, {
	        key: 'componentDidUpdate',
	        value: function componentDidUpdate() {
	            this.updateSelectedReportType();
	        }
	    }, {
	        key: 'componentWillReceiveProps',
	        value: function componentWillReceiveProps() {
	            if (this.props.selectedReportType) {
	                this.setState({ isATypeSelected: true });
	            } else {
	                this.setState({ isATypeSelected: false });
	            }
	        }
	    }, {
	        key: 'renderField',
	        value: function renderField(field) {
	            var fieldName = field.input.name;
	            var fieldDisabled = field.disabled;

	            var _field$meta = field.meta,
	                touched = _field$meta.touched,
	                error = _field$meta.error;

	            var className = 'form-group ' + (touched && error ? 'has-danger' : '');
	            return _react2.default.createElement(
	                'div',
	                { className: className },
	                _react2.default.createElement(
	                    'div',
	                    { className: 'input-group input-group-sm' },
	                    _react2.default.createElement('input', _extends({
	                        disabled: fieldDisabled,
	                        type: fieldName,
	                        placeholder: fieldName.charAt(0).toUpperCase() + fieldName.slice(1),
	                        className: 'form-control input-sm'
	                    }, field.input))
	                ),
	                _react2.default.createElement(
	                    'small',
	                    { className: 'form-control-feedback' },
	                    touched ? error : ''
	                )
	            );
	        }
	    }, {
	        key: 'updateSelectedWorker',
	        value: function updateSelectedWorker(worker) {
	            console.log("updateSelectedWorker was called...", worker);
	            this.setState({ selectedWorker: worker });
	            if (worker) {
	                console.log("deu merda");
	                (0, _jquery2.default)("#detailsTitle").html("Detalhes do trabalhador:");
	                (0, _jquery2.default)("#detailsTitle").css("font-size", "13px").css("font-weight", "bold");
	                if (worker.isAccountBlocked) {
	                    (0, _jquery2.default)("#accountStatusItem").html("Estado da conta: Bloqueada");
	                } else {
	                    (0, _jquery2.default)("#accountStatusItem").html("Estado da conta: Activa");
	                }
	                (0, _jquery2.default)("#workerInfoTitle").html("Informação do trabalhador:");
	                (0, _jquery2.default)("#workerInfoTitle").css('font-weight', 'bold').css("font-size", "13px");
	                if (worker.workerInfo !== "") {
	                    (0, _jquery2.default)("#workerInfoItem").html('' + worker.workerInfo);
	                } else {
	                    (0, _jquery2.default)("#workerInfoItem").html("Sem informação.");
	                }
	            } else {
	                console.log("fixolas");
	                (0, _jquery2.default)("#detailsTitle").html("");
	                (0, _jquery2.default)("#accountStatusTitle").html("");
	                (0, _jquery2.default)("#accountStatusItem").html("");
	                (0, _jquery2.default)("#workerInfoTitle").html("");
	                (0, _jquery2.default)("#workerInfoItem").html("");
	            }
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            var _this4 = this;

	            var _props = this.props,
	                handleSubmit = _props.handleSubmit,
	                pristine = _props.pristine,
	                submitting = _props.submitting;

	            console.log("workers", this.props.workers);
	            var displayWorkers = this.props.workers.map(function (worker) {
	                return _react2.default.createElement(
	                    'option',
	                    { key: worker.email, value: worker.email },
	                    worker.email
	                );
	            });
	            return _react2.default.createElement(
	                'div',
	                { className: 'container-fluid d-flex h-100' },
	                _react2.default.createElement(
	                    'div',
	                    { className: 'row justify-content-center align-self-center w-100' },
	                    _react2.default.createElement(
	                        'div',
	                        { className: 'col-sm-9 pt-5 mt-5' },
	                        _react2.default.createElement(
	                            'h4',
	                            { className: 'form-descript' },
	                            ' Adicionar um novo tipo de ocorr\xEAncia:'
	                        ),
	                        _react2.default.createElement(
	                            'form',
	                            { onSubmit: handleSubmit(this.onSubmit.bind(this)) },
	                            _react2.default.createElement(_reduxForm.Field, {
	                                name: 'name',
	                                disabled: this.props.selectedReportType != null,
	                                component: this.renderField

	                                //disabled = { this.props.selectedReportType !== null  }    
	                            }),
	                            _react2.default.createElement(
	                                'div',
	                                { className: 'form-group' },
	                                _react2.default.createElement(
	                                    'div',
	                                    { className: 'input-group input-group-sm' },
	                                    _react2.default.createElement(
	                                        _reduxForm.Field,
	                                        {
	                                            id: 'workerList',
	                                            name: 'responsible',
	                                            component: 'select',
	                                            className: 'form-control',
	                                            onChange: function onChange(event) {

	                                                var x = document.getElementById('workerList');
	                                                var selected = event.currentTarget.value;
	                                                var worker = _this4.props.workers.find(function (worker) {
	                                                    return worker.email === selected;
	                                                });
	                                                if (!worker) {
	                                                    _this4.updateSelectedWorker("");
	                                                } else {
	                                                    _this4.updateSelectedWorker(worker);
	                                                }
	                                            }
	                                        },
	                                        _react2.default.createElement(
	                                            'option',
	                                            { value: '' },
	                                            ' Nenhum utilizador para associar '
	                                        ),
	                                        displayWorkers
	                                    )
	                                )
	                            ),
	                            _react2.default.createElement(
	                                'button',
	                                { id: 'submitButton', type: 'submit', className: 'btn btn-primary form-control mt-2' },
	                                'Guardar'
	                            )
	                        ),
	                        _react2.default.createElement('div', { className: 'submit-error', ref: 'alert' }),
	                        _react2.default.createElement(
	                            'div',
	                            { className: 'displayInfo' },
	                            _react2.default.createElement(
	                                'ul',
	                                { className: 'workerInfoList' },
	                                _react2.default.createElement('div', { className: 'dropdown-divider' }),
	                                _react2.default.createElement('h6', { id: 'detailsTitle' }),
	                                _react2.default.createElement(
	                                    'li',
	                                    null,
	                                    this.state.selectedWorker.name
	                                ),
	                                _react2.default.createElement(
	                                    'li',
	                                    null,
	                                    this.state.selectedWorker.email
	                                ),
	                                _react2.default.createElement(
	                                    'li',
	                                    null,
	                                    this.state.selectedWorker.nif
	                                ),
	                                _react2.default.createElement('li', { id: 'accountStatusItem' }),
	                                _react2.default.createElement('br', null),
	                                _react2.default.createElement(
	                                    'div',
	                                    { className: 'displayInfoWorkerDesc' },
	                                    _react2.default.createElement('span', { id: 'workerInfoTitle' }),
	                                    _react2.default.createElement('li', { id: 'workerInfoItem' })
	                                )
	                            )
	                        )
	                    )
	                )
	            );
	        }
	    }]);

	    return ReportTypeForm;
	}(_react.Component);

	function validate(values) {
	    var errors = {};
	    if (!values.name) {
	        errors.name = 'Deve introduzir um nome para o tipo de ocorrência.';
	    }
	    return errors;
	}

	function mapStateToProps(_ref) {
	    var selectedReportType = _ref.selectedReportType;

	    return { selectedReportType: selectedReportType };
	}

	exports.default = (0, _reduxForm.reduxForm)({
	    form: 'ReportTypeForm',
	    validate: validate
	})((0, _reactRedux.connect)(mapStateToProps, {})(ReportTypeForm));

/***/ }),
/* 583 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.SELECTED_TYPE = exports.LOAD_TYPES = undefined;
	exports.loadReportTypes = loadReportTypes;
	exports.selectType = selectType;

	var _axios = __webpack_require__(253);

	var _axios2 = _interopRequireDefault(_axios);

	var _config = __webpack_require__(279);

	var _config2 = _interopRequireDefault(_config);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var LOAD_TYPES = exports.LOAD_TYPES = 'LOAD_TYPES';
	var SELECTED_TYPE = exports.SELECTED_TYPE = 'SELECTED_TYPE';

	function loadReportTypes(token) {
	    return function (dispatch) {
	        _axios2.default.post(_config2.default + '/admin/reportTypeManagement/listReportTypes', { token: token }).then(function (response) {
	            dispatch({
	                type: LOAD_TYPES,
	                payload: response
	            });
	            console.log(response);
	        }).catch(function (err) {
	            console.log(err);
	            console.log('An error has occured.');
	        });
	    };
	}

	function selectType(token, newSelectedType) {
	    return function (dispatch) {
	        dispatch({
	            type: SELECTED_TYPE,
	            payload: newSelectedType
	        });
	    };
	}

/***/ }),
/* 584 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _reactRedux = __webpack_require__(160);

	var _report_type_item = __webpack_require__(585);

	var _report_type_item2 = _interopRequireDefault(_report_type_item);

	var _actions_report_types = __webpack_require__(583);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	// Components


	// Actions


	var ReportTypeList = function (_Component) {
	    _inherits(ReportTypeList, _Component);

	    function ReportTypeList() {
	        _classCallCheck(this, ReportTypeList);

	        return _possibleConstructorReturn(this, (ReportTypeList.__proto__ || Object.getPrototypeOf(ReportTypeList)).apply(this, arguments));
	    }

	    _createClass(ReportTypeList, [{
	        key: 'render',
	        value: function render() {
	            var _this2 = this;

	            var reportTypeItems = void 0;
	            if (this.props.reportTypes) {
	                reportTypeItems = this.props.reportTypes.map(function (item) {
	                    if (_this2.props.selectedReportType && _this2.props.selectedReportType.name === item.name) {
	                        return _react2.default.createElement(_report_type_item2.default, { key: item.name, item: item, selected: true });
	                    } else return _react2.default.createElement(_report_type_item2.default, { key: item.name, item: item, selected: false });
	                });
	            }
	            return _react2.default.createElement(
	                'div',
	                { className: 'col-sm-5 pt-5 mt-5 ml-5' },
	                _react2.default.createElement(
	                    'h4',
	                    { className: 'form-descript' },
	                    ' Os seus tipos de ocorr\xEAncia: '
	                ),
	                _react2.default.createElement(
	                    'div',
	                    { className: 'typeList' },
	                    reportTypeItems
	                )
	            );
	        }
	    }]);

	    return ReportTypeList;
	}(_react.Component);

	function mapStateToProps(_ref) {
	    var selectedReportType = _ref.selectedReportType;

	    return { selectedReportType: selectedReportType };
	}

	exports.default = (0, _reactRedux.connect)(mapStateToProps, {})(ReportTypeList);

/***/ }),
/* 585 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _reactRedux = __webpack_require__(160);

	var _reactRouterDom = __webpack_require__(203);

	var _modal = __webpack_require__(320);

	var _modal2 = _interopRequireDefault(_modal);

	var _axios = __webpack_require__(253);

	var _axios2 = _interopRequireDefault(_axios);

	var _config = __webpack_require__(279);

	var _config2 = _interopRequireDefault(_config);

	var _actions_report_types = __webpack_require__(583);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	// Actions 


	var ReportTypeItem = function (_Component) {
	    _inherits(ReportTypeItem, _Component);

	    function ReportTypeItem(props) {
	        _classCallCheck(this, ReportTypeItem);

	        var _this = _possibleConstructorReturn(this, (ReportTypeItem.__proto__ || Object.getPrototypeOf(ReportTypeItem)).call(this, props));

	        _this.state = {
	            selected: false,
	            isModalActive: false
	        };
	        return _this;
	    }

	    _createClass(ReportTypeItem, [{
	        key: 'updateItemStyle',
	        value: function updateItemStyle() {
	            var id = "reportItem-" + this.props.item.id;
	            var blocked = "reportBlocked-" + this.props.item.id;
	            var symbol = "reportSymbol-" + this.props.item.id;
	            if (this.props.item.isActive === false) {
	                $('#' + id).css('color', 'red').css('font-weight', 'bolder');
	                $('#' + symbol).removeClass("fa fa-ban").addClass("fa fa-circle-o");
	            } else {
	                $('#' + id).css('color', 'black').css('font-weight', 'normal');

	                $('#' + symbol).removeClass("fa fa-circle-o").addClass("fa fa-ban");
	            }
	        }
	    }, {
	        key: 'handleSelect',
	        value: function handleSelect() {
	            var token = JSON.parse(localStorage.getItem('token'));
	            if (!this.props.selected) {
	                this.props.selectType(token, this.props.item);
	            } else {
	                this.props.selectType(token, null);
	            }
	        }
	    }, {
	        key: 'updateSelectedType',
	        value: function updateSelectedType() {
	            var _refs = this.refs,
	                edit = _refs.edit,
	                currentResp = _refs.currentResp;

	            if (this.props.selected) {
	                edit.innerHTML = "A editar...";
	                edit.classList.add('text-danger');

	                if (this.props.item.responsible) {
	                    currentResp.innerHTML = "Actual: " + this.props.item.responsible;
	                } else currentResp.innerHTML = "Sem responsável associado.";
	            }
	            if (!this.props.selected) {
	                edit.innerHTML = "";
	                currentResp.innerHTML = "";
	            }
	        }
	    }, {
	        key: 'componentWillMount',
	        value: function componentWillMount() {
	            this.updateItemStyle();
	        }
	    }, {
	        key: 'componentDidMount',
	        value: function componentDidMount() {
	            this.updateItemStyle();
	        }
	    }, {
	        key: 'componentWillUpdate',
	        value: function componentWillUpdate() {
	            this.updateSelectedType();
	        }
	    }, {
	        key: 'componentDidUpdate',
	        value: function componentDidUpdate() {
	            this.updateSelectedType();
	        }
	    }, {
	        key: 'changeActiveProperty',
	        value: function changeActiveProperty() {
	            var _this2 = this;

	            var id = "reportItem-" + this.props.item.id;
	            var blocked = "reportBlocked-" + this.props.item.id;
	            var symbol = "reportSymbol-" + this.props.item.id;
	            var token = JSON.parse(localStorage.getItem('token'));

	            _axios2.default.post(_config2.default + '/admin/reportTypeManagement/changeReportTypeStatus/' + this.props.item.id, token).then(function (response) {
	                if (response.status === 200) {
	                    if (response.data === false) {
	                        console.log(false);
	                        $('#' + id).css('color', 'red').css('font-weight', 'bolder');

	                        $('#' + symbol).removeClass("fa fa-ban").addClass("fa fa-circle-o");
	                        _this2.props.item.isActive = false;
	                        _this2.closeModal();
	                    } else {
	                        console.log(true);
	                        $('#' + id).css('color', 'black').css('font-weight', 'normal');
	                        $('#' + symbol).removeClass("fa fa-circle-o").addClass("fa fa-ban");
	                        _this2.props.item.isActive = true;
	                        _this2.closeModal();
	                    }
	                }
	            }).catch(function (err) {
	                console.log("Error while trying to update active status of report type");
	            });
	        }
	    }, {
	        key: 'openModal',
	        value: function openModal() {
	            if (!this.props.item.isActive) {
	                this.changeActiveProperty();

	                $("#changeNotifyMessage").html('Tipo de ocorr\xEAncia ' + this.props.item.name + ' foi activado com sucesso.');
	                $("#changeNotifyMessage").css('color', 'green');
	                setTimeout(function () {
	                    $("#changeNotifyMessage").html("");
	                }, 3000);
	            } else {
	                this.setState({ isModalActive: true });
	            }
	        }
	    }, {
	        key: 'closeModal',
	        value: function closeModal() {
	            this.setState({ isModalActive: false });
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            var id = "reportItem-" + this.props.item.id;
	            var blocked = "reportBlocked-" + this.props.item.id;
	            var symbol = "reportSymbol-" + this.props.item.id;
	            return _react2.default.createElement(
	                'div',
	                null,
	                this.state.isModalActive && _react2.default.createElement(
	                    _modal2.default,
	                    null,
	                    _react2.default.createElement(
	                        'div',
	                        { className: 'container w-100' },
	                        _react2.default.createElement(
	                            'p',
	                            null,
	                            'Tem a certeza que deseja desactivar o tipo de ocorr\xEAncia ',
	                            _react2.default.createElement(
	                                'strong',
	                                null,
	                                this.props.item.name
	                            ),
	                            '? '
	                        ),
	                        _react2.default.createElement(
	                            'button',
	                            { className: 'btn btn-primary', onClick: this.changeActiveProperty.bind(this) },
	                            'Bloquear'
	                        ),
	                        _react2.default.createElement(
	                            'button',
	                            { className: 'btn btn-primary ml-2', onClick: this.closeModal.bind(this) },
	                            'Cancelar'
	                        )
	                    )
	                ),
	                _react2.default.createElement(
	                    'div',
	                    { className: 'reportType' },
	                    _react2.default.createElement(
	                        'a',
	                        { href: '#', onClick: this.handleSelect.bind(this) },
	                        _react2.default.createElement('i', { className: 'fa fa-pencil edit-button', 'aria-hidden': 'true' })
	                    ),
	                    _react2.default.createElement(
	                        'a',
	                        { href: '#', onClick: this.openModal.bind(this) },
	                        _react2.default.createElement('i', { id: symbol, className: 'fa fa-ban edit-button', 'aria-hidden': 'true' })
	                    ),
	                    _react2.default.createElement(
	                        'li',
	                        { id: id },
	                        this.props.item.name,
	                        ' ',
	                        _react2.default.createElement('span', { id: blocked, ref: 'edit' })
	                    ),
	                    _react2.default.createElement('div', { className: 'resp-display', ref: 'currentResp' })
	                )
	            );
	        }
	    }]);

	    return ReportTypeItem;
	}(_react.Component);

	function mapStateToProps(_ref) {
	    var selectedReportType = _ref.selectedReportType;

	    return { selectedReportType: selectedReportType };
	}

	exports.default = (0, _reactRedux.connect)(mapStateToProps, { selectType: _actions_report_types.selectType })(ReportTypeItem);

/***/ }),
/* 586 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.LOAD_WORKER_REPORTS = exports.LOAD_ADMIN_INFO = exports.LOAD_WORKERS_UNSUCCESS = exports.LOAD_WORKERS_SUCCESS = undefined;
	exports.loadWorkers = loadWorkers;
	exports.loadAdminInfo = loadAdminInfo;
	exports.getWorkerReports = getWorkerReports;

	var _axios = __webpack_require__(253);

	var _axios2 = _interopRequireDefault(_axios);

	var _config = __webpack_require__(279);

	var _config2 = _interopRequireDefault(_config);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var LOAD_WORKERS_SUCCESS = exports.LOAD_WORKERS_SUCCESS = "LOAD_WORKERS_SUCCESS";
	var LOAD_WORKERS_UNSUCCESS = exports.LOAD_WORKERS_UNSUCCESS = "LOAD_WORKERS_UNSUCCESS";
	var LOAD_ADMIN_INFO = exports.LOAD_ADMIN_INFO = "LOAD_ADMIN_INFO";
	var LOAD_WORKER_REPORTS = exports.LOAD_WORKER_REPORTS = "LOAD_WORKER_REPORTS";

	function loadWorkers(token) {
	    return function (dispatch) {
	        _axios2.default.post(_config2.default + '/admin/workerManagement/listWorkers', token).then(function (response) {
	            dispatch({
	                type: LOAD_WORKERS_SUCCESS,
	                payload: response
	            });
	        }).catch(function (err) {
	            dispatch({
	                type: LOAD_WORKERS_UNSUCCESS,
	                payload: err
	            });
	        });
	    };
	}

	function loadAdminInfo(token) {
	    return function (dispatch) {
	        _axios2.default.post(_config2.default + '/admin/workerManagement/loadAdminInfo', token).then(function (response) {
	            dispatch({
	                type: LOAD_ADMIN_INFO,
	                payload: response
	            });
	        }).catch(function (err) {});
	    };
	}

	function getWorkerReports(token) {
	    return function (dispatch) {
	        _axios2.default.post(_config2.default + '/backoffice/report/listAll', token).then(function (response) {
	            dispatch({
	                type: LOAD_WORKER_REPORTS,
	                payload: response
	            });
	            console.log("ON ACTION: ", response);
	        }).catch(function (err) {
	            console.log("An error has occured while trying to load reports from this worker.", err);
	        });
	    };
	}

/***/ }),
/* 587 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _reactRedux = __webpack_require__(160);

	var _worker_item = __webpack_require__(588);

	var _worker_item2 = _interopRequireDefault(_worker_item);

	var _actions_workers = __webpack_require__(586);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	// Components


	// Actions 


	var WorkerManagementPage = function (_Component) {
	    _inherits(WorkerManagementPage, _Component);

	    function WorkerManagementPage() {
	        _classCallCheck(this, WorkerManagementPage);

	        return _possibleConstructorReturn(this, (WorkerManagementPage.__proto__ || Object.getPrototypeOf(WorkerManagementPage)).apply(this, arguments));
	    }

	    _createClass(WorkerManagementPage, [{
	        key: 'getWorkers',
	        value: function getWorkers() {
	            var token = JSON.parse(localStorage.getItem('token'));
	            this.props.loadAdminInfo(token);
	        }
	    }, {
	        key: 'componentWillMount',
	        value: function componentWillMount() {
	            this.getWorkers();
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            var workerItems = void 0;
	            if (this.props.generalAdminInfo) {
	                workerItems = this.props.generalAdminInfo.map(function (item) {
	                    return _react2.default.createElement(_worker_item2.default, { key: item.email, item: item });
	                });
	            }

	            return _react2.default.createElement(
	                'div',
	                { className: 'container' },
	                _react2.default.createElement(
	                    'div',
	                    { className: 'admin_table' },
	                    _react2.default.createElement(
	                        'table',
	                        { className: 'table' },
	                        _react2.default.createElement(
	                            'thead',
	                            null,
	                            _react2.default.createElement(
	                                'tr',
	                                null,
	                                _react2.default.createElement(
	                                    'th',
	                                    null,
	                                    'Email'
	                                ),
	                                _react2.default.createElement(
	                                    'th',
	                                    null,
	                                    'Nome'
	                                ),
	                                _react2.default.createElement(
	                                    'th',
	                                    null,
	                                    '\xC1rea'
	                                ),
	                                _react2.default.createElement(
	                                    'th',
	                                    null,
	                                    'Servi\xE7os'
	                                ),
	                                _react2.default.createElement(
	                                    'th',
	                                    null,
	                                    'Por resolver'
	                                )
	                            )
	                        ),
	                        _react2.default.createElement(
	                            'tbody',
	                            null,
	                            workerItems
	                        )
	                    )
	                )
	            );
	        }
	    }]);

	    return WorkerManagementPage;
	}(_react.Component);

	function mapStateToProps(_ref) {
	    var generalAdminInfo = _ref.generalAdminInfo;

	    return { generalAdminInfo: generalAdminInfo };
	}

	exports.default = (0, _reactRedux.connect)(mapStateToProps, { loadAdminInfo: _actions_workers.loadAdminInfo })(WorkerManagementPage);

/***/ }),
/* 588 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _reactRouterDom = __webpack_require__(203);

	var _uuid = __webpack_require__(589);

	var _uuid2 = _interopRequireDefault(_uuid);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var WorkerItem = function (_Component) {
	    _inherits(WorkerItem, _Component);

	    function WorkerItem() {
	        _classCallCheck(this, WorkerItem);

	        return _possibleConstructorReturn(this, (WorkerItem.__proto__ || Object.getPrototypeOf(WorkerItem)).apply(this, arguments));
	    }

	    _createClass(WorkerItem, [{
	        key: 'render',
	        value: function render() {
	            var _this2 = this;

	            //console.log("services", this.props.item.services);
	            var reportItems = void 0;
	            if (this.props.item.reports) {
	                if (this.props.item.reports.length === 0) {
	                    reportItems = _react2.default.createElement(
	                        'p',
	                        null,
	                        ' Sem tipos de ocorr\xEAncia associados.'
	                    );
	                } else {
	                    reportItems = this.props.item.reports.map(function (i) {
	                        var link = "/app/core/management/workers/reports/".concat(i.type).concat('/' + _this2.props.item.email);
	                        return _react2.default.createElement(
	                            'li',
	                            { key: _uuid2.default.v4() },
	                            _react2.default.createElement(
	                                _reactRouterDom.Link,
	                                { to: link },
	                                i.type,
	                                '(',
	                                i.numberOf,
	                                ')'
	                            )
	                        );
	                    });
	                }
	            }
	            return _react2.default.createElement(
	                'tr',
	                null,
	                _react2.default.createElement(
	                    'td',
	                    { scope: 'row' },
	                    this.props.item.email
	                ),
	                _react2.default.createElement(
	                    'td',
	                    null,
	                    this.props.item.name
	                ),
	                _react2.default.createElement(
	                    'td',
	                    null,
	                    this.props.item.workingArea.join(", ")
	                ),
	                _react2.default.createElement(
	                    'td',
	                    null,
	                    this.props.item.services.join(", ")
	                ),
	                _react2.default.createElement(
	                    'td',
	                    null,
	                    _react2.default.createElement(
	                        'ul',
	                        { className: 'admin-console-list' },
	                        reportItems
	                    )
	                )
	            );
	        }
	    }]);

	    return WorkerItem;
	}(_react.Component);

	exports.default = WorkerItem;

/***/ }),
/* 589 */
/***/ (function(module, exports, __webpack_require__) {

	var v1 = __webpack_require__(590);
	var v4 = __webpack_require__(593);

	var uuid = v4;
	uuid.v1 = v1;
	uuid.v4 = v4;

	module.exports = uuid;


/***/ }),
/* 590 */
/***/ (function(module, exports, __webpack_require__) {

	var rng = __webpack_require__(591);
	var bytesToUuid = __webpack_require__(592);

	// **`v1()` - Generate time-based UUID**
	//
	// Inspired by https://github.com/LiosK/UUID.js
	// and http://docs.python.org/library/uuid.html

	// random #'s we need to init node and clockseq
	var _seedBytes = rng();

	// Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)
	var _nodeId = [
	  _seedBytes[0] | 0x01,
	  _seedBytes[1], _seedBytes[2], _seedBytes[3], _seedBytes[4], _seedBytes[5]
	];

	// Per 4.2.2, randomize (14 bit) clockseq
	var _clockseq = (_seedBytes[6] << 8 | _seedBytes[7]) & 0x3fff;

	// Previous uuid creation time
	var _lastMSecs = 0, _lastNSecs = 0;

	// See https://github.com/broofa/node-uuid for API details
	function v1(options, buf, offset) {
	  var i = buf && offset || 0;
	  var b = buf || [];

	  options = options || {};

	  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq;

	  // UUID timestamps are 100 nano-second units since the Gregorian epoch,
	  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so
	  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'
	  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.
	  var msecs = options.msecs !== undefined ? options.msecs : new Date().getTime();

	  // Per 4.2.1.2, use count of uuid's generated during the current clock
	  // cycle to simulate higher resolution clock
	  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1;

	  // Time since last uuid creation (in msecs)
	  var dt = (msecs - _lastMSecs) + (nsecs - _lastNSecs)/10000;

	  // Per 4.2.1.2, Bump clockseq on clock regression
	  if (dt < 0 && options.clockseq === undefined) {
	    clockseq = clockseq + 1 & 0x3fff;
	  }

	  // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new
	  // time interval
	  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {
	    nsecs = 0;
	  }

	  // Per 4.2.1.2 Throw error if too many uuids are requested
	  if (nsecs >= 10000) {
	    throw new Error('uuid.v1(): Can\'t create more than 10M uuids/sec');
	  }

	  _lastMSecs = msecs;
	  _lastNSecs = nsecs;
	  _clockseq = clockseq;

	  // Per 4.1.4 - Convert from unix epoch to Gregorian epoch
	  msecs += 12219292800000;

	  // `time_low`
	  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;
	  b[i++] = tl >>> 24 & 0xff;
	  b[i++] = tl >>> 16 & 0xff;
	  b[i++] = tl >>> 8 & 0xff;
	  b[i++] = tl & 0xff;

	  // `time_mid`
	  var tmh = (msecs / 0x100000000 * 10000) & 0xfffffff;
	  b[i++] = tmh >>> 8 & 0xff;
	  b[i++] = tmh & 0xff;

	  // `time_high_and_version`
	  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version
	  b[i++] = tmh >>> 16 & 0xff;

	  // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)
	  b[i++] = clockseq >>> 8 | 0x80;

	  // `clock_seq_low`
	  b[i++] = clockseq & 0xff;

	  // `node`
	  var node = options.node || _nodeId;
	  for (var n = 0; n < 6; ++n) {
	    b[i + n] = node[n];
	  }

	  return buf ? buf : bytesToUuid(b);
	}

	module.exports = v1;


/***/ }),
/* 591 */
/***/ (function(module, exports) {

	/* WEBPACK VAR INJECTION */(function(global) {// Unique ID creation requires a high quality random # generator.  In the
	// browser this is a little complicated due to unknown quality of Math.random()
	// and inconsistent support for the `crypto` API.  We do the best we can via
	// feature-detection
	var rng;

	var crypto = global.crypto || global.msCrypto; // for IE 11
	if (crypto && crypto.getRandomValues) {
	  // WHATWG crypto RNG - http://wiki.whatwg.org/wiki/Crypto
	  var rnds8 = new Uint8Array(16); // eslint-disable-line no-undef
	  rng = function whatwgRNG() {
	    crypto.getRandomValues(rnds8);
	    return rnds8;
	  };
	}

	if (!rng) {
	  // Math.random()-based (RNG)
	  //
	  // If all else fails, use Math.random().  It's fast, but is of unspecified
	  // quality.
	  var rnds = new Array(16);
	  rng = function() {
	    for (var i = 0, r; i < 16; i++) {
	      if ((i & 0x03) === 0) r = Math.random() * 0x100000000;
	      rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;
	    }

	    return rnds;
	  };
	}

	module.exports = rng;

	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ }),
/* 592 */
/***/ (function(module, exports) {

	/**
	 * Convert array of 16 byte values to UUID string format of the form:
	 * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX
	 */
	var byteToHex = [];
	for (var i = 0; i < 256; ++i) {
	  byteToHex[i] = (i + 0x100).toString(16).substr(1);
	}

	function bytesToUuid(buf, offset) {
	  var i = offset || 0;
	  var bth = byteToHex;
	  return bth[buf[i++]] + bth[buf[i++]] +
	          bth[buf[i++]] + bth[buf[i++]] + '-' +
	          bth[buf[i++]] + bth[buf[i++]] + '-' +
	          bth[buf[i++]] + bth[buf[i++]] + '-' +
	          bth[buf[i++]] + bth[buf[i++]] + '-' +
	          bth[buf[i++]] + bth[buf[i++]] +
	          bth[buf[i++]] + bth[buf[i++]] +
	          bth[buf[i++]] + bth[buf[i++]];
	}

	module.exports = bytesToUuid;


/***/ }),
/* 593 */
/***/ (function(module, exports, __webpack_require__) {

	var rng = __webpack_require__(591);
	var bytesToUuid = __webpack_require__(592);

	function v4(options, buf, offset) {
	  var i = buf && offset || 0;

	  if (typeof(options) == 'string') {
	    buf = options == 'binary' ? new Array(16) : null;
	    options = null;
	  }
	  options = options || {};

	  var rnds = options.random || (options.rng || rng)();

	  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`
	  rnds[6] = (rnds[6] & 0x0f) | 0x40;
	  rnds[8] = (rnds[8] & 0x3f) | 0x80;

	  // Copy bytes to buffer, if provided
	  if (buf) {
	    for (var ii = 0; ii < 16; ++ii) {
	      buf[i + ii] = rnds[ii];
	    }
	  }

	  return buf || bytesToUuid(rnds);
	}

	module.exports = v4;


/***/ }),
/* 594 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _reactRedux = __webpack_require__(160);

	var _core_report_item = __webpack_require__(595);

	var _core_report_item2 = _interopRequireDefault(_core_report_item);

	var _actions_reports = __webpack_require__(327);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	// Components


	// Actions 


	var ReportPage = function (_Component) {
	    _inherits(ReportPage, _Component);

	    function ReportPage() {
	        _classCallCheck(this, ReportPage);

	        return _possibleConstructorReturn(this, (ReportPage.__proto__ || Object.getPrototypeOf(ReportPage)).apply(this, arguments));
	    }

	    _createClass(ReportPage, [{
	        key: 'componentWillMount',
	        value: function componentWillMount() {
	            console.log("on ComponentWillMount", this.props.reportsByType);
	            this.getReportsByType();
	        }
	    }, {
	        key: 'getReportsByType',
	        value: function getReportsByType() {
	            console.log("PARAMS ADDED NOW: ", this.props.match.params);
	            var token = JSON.parse(localStorage.getItem('token'));
	            this.props.getReportsByType(token, this.props.match.params.id, this.props.match.params.email);
	            console.log("REPORTS: ", this.props.reportsByType);
	        }
	    }, {
	        key: 'goBack',
	        value: function goBack() {
	            this.props.history.push('/app/core/management/workers');
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            var reports = void 0;
	            if (this.props.reportsByType) {
	                reports = this.props.reportsByType.map(function (item) {
	                    return _react2.default.createElement(_core_report_item2.default, { key: item.id, report: item });
	                });
	            }

	            return _react2.default.createElement(
	                'div',
	                null,
	                _react2.default.createElement(
	                    'div',
	                    { className: 'goBackBttnItem' },
	                    _react2.default.createElement(
	                        'i',
	                        { onClick: this.goBack.bind(this), className: 'fa fa-arrow-left', 'aria-hidden': 'true' },
	                        ' ',
	                        _react2.default.createElement(
	                            'span',
	                            { id: 'goBackLabel' },
	                            ' Voltar '
	                        )
	                    )
	                ),
	                _react2.default.createElement(
	                    'div',
	                    { className: 'ReportList' },
	                    reports
	                )
	            );
	        }
	    }]);

	    return ReportPage;
	}(_react.Component);

	function mapStateToProps(_ref) {
	    var reportsByType = _ref.reportsByType;

	    return { reportsByType: reportsByType };
	}

	exports.default = (0, _reactRedux.connect)(mapStateToProps, { getReportsByType: _actions_reports.getReportsByType })(ReportPage);

/***/ }),
/* 595 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _jquery = __webpack_require__(252);

	var _jquery2 = _interopRequireDefault(_jquery);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var statuses = {
	    WAITING: "Pendente",
	    IN_RESOLUTION: "Em Resolução",
	    REJECTED: "Rejeitado",
	    SOLVED: "Resolvido"
	};

	var ReportItem = function (_Component) {
	    _inherits(ReportItem, _Component);

	    function ReportItem() {
	        _classCallCheck(this, ReportItem);

	        return _possibleConstructorReturn(this, (ReportItem.__proto__ || Object.getPrototypeOf(ReportItem)).apply(this, arguments));
	    }

	    _createClass(ReportItem, [{
	        key: 'changeStatusColorProperty',
	        value: function changeStatusColorProperty(color) {
	            var id = this.props.report.id;
	            (0, _jquery2.default)('#' + id + ' i').css('color', color);
	            (0, _jquery2.default)('#' + id + ' p').css('color', color);
	        }
	    }, {
	        key: 'setStatusProperties',
	        value: function setStatusProperties() {
	            switch (this.props.report.statusDescription) {
	                case statuses.WAITING:
	                    this.changeStatusColorProperty('#959595');
	                    break;
	                case statuses.IN_RESOLUTION:
	                    this.changeStatusColorProperty('#FCF004');
	                    break;
	                case statuses.REJECTED:
	                    this.changeStatusColorProperty('#FF0000');
	                    break;
	                case statuses.SOLVED:
	                    this.changeStatusColorProperty('#00FF00');
	            }
	        }
	    }, {
	        key: 'componentWillMount',
	        value: function componentWillMount() {
	            this.setStatusProperties();
	        }
	    }, {
	        key: 'componentDidMount',
	        value: function componentDidMount() {
	            this.setStatusProperties();
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            var report = this.props.report;
	            var image = void 0;
	            if (report.imageUrl === "url-null") {
	                image = _react2.default.createElement('img', { className: 'figure-img img-fluid rounded', src: '/img/no-content-image.png' });
	            } else {
	                image = _react2.default.createElement('img', { className: 'figure-img img-fluid rounded', src: report.imageUrl });
	            }

	            return _react2.default.createElement(
	                'div',
	                { className: 'Report' },
	                _react2.default.createElement(
	                    'div',
	                    { id: '' + report.id, className: 'reportStatus' },
	                    _react2.default.createElement('i', { className: 'fa fa-circle', 'aria-hidden': 'true' }),
	                    _react2.default.createElement(
	                        'p',
	                        null,
	                        report.statusDescription
	                    )
	                ),
	                _react2.default.createElement(
	                    'figure',
	                    { className: 'figure' },
	                    image
	                ),
	                _react2.default.createElement(
	                    'div',
	                    { className: 'reportInfo' },
	                    _react2.default.createElement(
	                        'ul',
	                        { className: 'info-list' },
	                        _react2.default.createElement(
	                            'li',
	                            { className: 'report-info-item' },
	                            'Ocorr\xEAncia de tipo ',
	                            report.type,
	                            ' '
	                        ),
	                        _react2.default.createElement(
	                            'li',
	                            { className: 'report-info-item' },
	                            report.description
	                        ),
	                        _react2.default.createElement(
	                            'li',
	                            { className: 'report-info-item' },
	                            report.numOfFollows,
	                            ' pessoa(s) confirma(m) a exist\xEAncia desta ocorr\xEAncia'
	                        ),
	                        _react2.default.createElement(
	                            'li',
	                            { className: 'report-info-item' },
	                            report.addressAsStreet
	                        ),
	                        _react2.default.createElement(
	                            'li',
	                            { className: 'report-info-item' },
	                            ' A cargo de: ',
	                            report.responsible
	                        )
	                    )
	                )
	            );
	        }
	    }]);

	    return ReportItem;
	}(_react.Component);

	exports.default = ReportItem;

/***/ }),
/* 596 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _reactRedux = __webpack_require__(160);

	var _reactTabs = __webpack_require__(597);

	var _end_account_list = __webpack_require__(608);

	var _end_account_list2 = _interopRequireDefault(_end_account_list);

	var _form_end_account_add = __webpack_require__(611);

	var _form_end_account_add2 = _interopRequireDefault(_form_end_account_add);

	var _form_add_worker = __webpack_require__(612);

	var _form_add_worker2 = _interopRequireDefault(_form_add_worker);

	var _actions_end_users = __webpack_require__(610);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	// Components 


	// Actions 


	var AccountManagementPage = function (_Component) {
	    _inherits(AccountManagementPage, _Component);

	    function AccountManagementPage(props) {
	        _classCallCheck(this, AccountManagementPage);

	        var _this = _possibleConstructorReturn(this, (AccountManagementPage.__proto__ || Object.getPrototypeOf(AccountManagementPage)).call(this, props));

	        _this.state = {
	            adminForm: true
	        };
	        return _this;
	    }

	    _createClass(AccountManagementPage, [{
	        key: 'getEndAccountList',
	        value: function getEndAccountList() {
	            var token = JSON.parse(localStorage.getItem('token'));
	            this.props.loadEndUsers(token);
	        }
	    }, {
	        key: 'componentWillMount',
	        value: function componentWillMount() {
	            this.getEndAccountList();
	        }
	    }, {
	        key: 'goToWorkerForm',
	        value: function goToWorkerForm() {
	            this.setState({ adminForm: false });
	        }
	    }, {
	        key: 'goToAdminForm',
	        value: function goToAdminForm() {
	            this.setState({ adminForm: true });
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            return _react2.default.createElement(
	                'div',
	                { className: 'row grid-divider' },
	                _react2.default.createElement(
	                    'div',
	                    { className: 'col-sm-6 column-one' },
	                    this.state.adminForm && _react2.default.createElement(
	                        'div',
	                        null,
	                        _react2.default.createElement(_form_end_account_add2.default, null),
	                        _react2.default.createElement(
	                            'div',
	                            { className: 'formWithLink' },
	                            _react2.default.createElement(
	                                'a',
	                                { onClick: this.goToWorkerForm.bind(this), href: '#' },
	                                ' Registar Trabalhador '
	                            )
	                        )
	                    ),
	                    !this.state.adminForm && _react2.default.createElement(
	                        'div',
	                        null,
	                        _react2.default.createElement(_form_add_worker2.default, null),
	                        _react2.default.createElement(
	                            'div',
	                            { className: 'formWithLink' },
	                            _react2.default.createElement(
	                                'a',
	                                { onClick: this.goToAdminForm.bind(this), href: '#' },
	                                ' Registar Administrador '
	                            )
	                        )
	                    )
	                ),
	                _react2.default.createElement(
	                    'div',
	                    { className: 'col-sm-6 column-two' },
	                    _react2.default.createElement(_end_account_list2.default, { userList: this.props.endAccounts })
	                ),
	                _react2.default.createElement('div', { id: 'changeNotifyMessage' })
	            );
	        }
	    }]);

	    return AccountManagementPage;
	}(_react.Component);

	function mapStateToProps(_ref) {
	    var endAccounts = _ref.endAccounts;

	    return { endAccounts: endAccounts };
	}

	exports.default = (0, _reactRedux.connect)(mapStateToProps, { loadEndUsers: _actions_end_users.loadEndUsers })(AccountManagementPage);

/***/ }),
/* 597 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;
	exports.resetIdCounter = exports.Tabs = exports.TabPanel = exports.TabList = exports.Tab = undefined;

	var _Tabs = __webpack_require__(598);

	var _Tabs2 = _interopRequireDefault(_Tabs);

	var _TabList = __webpack_require__(603);

	var _TabList2 = _interopRequireDefault(_TabList);

	var _Tab = __webpack_require__(601);

	var _Tab2 = _interopRequireDefault(_Tab);

	var _TabPanel = __webpack_require__(604);

	var _TabPanel2 = _interopRequireDefault(_TabPanel);

	var _uuid = __webpack_require__(606);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.Tab = _Tab2.default;
	exports.TabList = _TabList2.default;
	exports.TabPanel = _TabPanel2.default;
	exports.Tabs = _Tabs2.default;
	exports.resetIdCounter = _uuid.reset;

/***/ }),
/* 598 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	exports.__esModule = true;

	var _propTypes = __webpack_require__(205);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes3 = __webpack_require__(599);

	var _UncontrolledTabs = __webpack_require__(605);

	var _UncontrolledTabs2 = _interopRequireDefault(_UncontrolledTabs);

	var _count = __webpack_require__(607);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var Tabs = function (_Component) {
	  _inherits(Tabs, _Component);

	  function Tabs(props) {
	    _classCallCheck(this, Tabs);

	    var _this = _possibleConstructorReturn(this, _Component.call(this, props));

	    _this.handleSelected = function (index, last, event) {
	      // Call change event handler
	      if (typeof _this.props.onSelect === 'function') {
	        // Check if the change event handler cancels the tab change
	        if (_this.props.onSelect(index, last, event) === false) return;
	      }

	      var state = {
	        // Set focus if the change was triggered from the keyboard
	        focus: event.type === 'keydown'
	      };

	      if (Tabs.inUncontrolledMode(_this.props)) {
	        // Update selected index
	        state.selectedIndex = index;
	      }

	      _this.setState(state);
	    };

	    _this.state = Tabs.copyPropsToState(_this.props, {}, _this.props.defaultFocus);
	    return _this;
	  }

	  Tabs.prototype.componentWillReceiveProps = function componentWillReceiveProps(newProps) {
	    if (process.env.NODE_ENV !== 'production' && Tabs.inUncontrolledMode(newProps) !== Tabs.inUncontrolledMode(this.props)) {
	      throw new Error('Switching between controlled mode (by using `selectedIndex`) and uncontrolled mode is not supported in `Tabs`.\nFor more information about controlled and uncontrolled mode of react-tabs see the README.');
	    }
	    // Use a transactional update to prevent race conditions
	    // when reading the state in copyPropsToState
	    // See https://github.com/reactjs/react-tabs/issues/51
	    this.setState(function (state) {
	      return Tabs.copyPropsToState(newProps, state);
	    });
	  };

	  Tabs.inUncontrolledMode = function inUncontrolledMode(props) {
	    return props.selectedIndex === null;
	  };

	  // preserve the existing selectedIndex from state.
	  // If the state has not selectedIndex, default to the defaultIndex or 0
	  Tabs.copyPropsToState = function copyPropsToState(props, state) {
	    var focus = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

	    var newState = {
	      focus: focus
	    };

	    if (Tabs.inUncontrolledMode(props)) {
	      var maxTabIndex = (0, _count.getTabsCount)(props.children) - 1;
	      var selectedIndex = null;

	      if (state.selectedIndex != null) {
	        selectedIndex = Math.min(state.selectedIndex, maxTabIndex);
	      } else {
	        selectedIndex = props.defaultIndex || 0;
	      }
	      newState.selectedIndex = selectedIndex;
	    }

	    return newState;
	  };

	  Tabs.prototype.render = function render() {
	    var _props = this.props,
	        children = _props.children,
	        defaultIndex = _props.defaultIndex,
	        defaultFocus = _props.defaultFocus,
	        props = _objectWithoutProperties(_props, ['children', 'defaultIndex', 'defaultFocus']);

	    props.focus = this.state.focus;
	    props.onSelect = this.handleSelected;

	    if (this.state.selectedIndex != null) {
	      props.selectedIndex = this.state.selectedIndex;
	    }

	    return _react2.default.createElement(
	      _UncontrolledTabs2.default,
	      props,
	      children
	    );
	  };

	  return Tabs;
	}(_react.Component);

	Tabs.defaultProps = {
	  defaultFocus: false,
	  forceRenderTabPanel: false,
	  selectedIndex: null,
	  defaultIndex: null
	};
	exports.default = Tabs;
	Tabs.propTypes = process.env.NODE_ENV !== "production" ? {
	  children: _propTypes3.childrenPropType,
	  className: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.array, _propTypes2.default.object]),
	  defaultFocus: _propTypes2.default.bool,
	  defaultIndex: _propTypes2.default.number,
	  disabledTabClassName: _propTypes2.default.string,
	  forceRenderTabPanel: _propTypes2.default.bool,
	  onSelect: _propTypes3.onSelectPropType,
	  selectedIndex: _propTypes3.selectedIndexPropType,
	  selectedTabClassName: _propTypes2.default.string,
	  selectedTabPanelClassName: _propTypes2.default.string
	} : {};
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)))

/***/ }),
/* 599 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	exports.childrenPropType = childrenPropType;
	exports.onSelectPropType = onSelectPropType;
	exports.selectedIndexPropType = selectedIndexPropType;

	var _childrenDeepMap = __webpack_require__(600);

	var _Tab = __webpack_require__(601);

	var _Tab2 = _interopRequireDefault(_Tab);

	var _TabList = __webpack_require__(603);

	var _TabList2 = _interopRequireDefault(_TabList);

	var _TabPanel = __webpack_require__(604);

	var _TabPanel2 = _interopRequireDefault(_TabPanel);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function childrenPropType(props, propName, componentName) {
	  var error = void 0;
	  var tabsCount = 0;
	  var panelsCount = 0;
	  var tabListFound = false;
	  var listTabs = [];
	  var children = props[propName];

	  (0, _childrenDeepMap.deepForEach)(children, function (child) {
	    if (child.type === _TabList2.default) {
	      if (child.props && child.props.children && _typeof(child.props.children) === 'object') {
	        (0, _childrenDeepMap.deepForEach)(child.props.children, function (listChild) {
	          return listTabs.push(listChild);
	        });
	      }

	      if (tabListFound) {
	        error = new Error("Found multiple 'TabList' components inside 'Tabs'. Only one is allowed.");
	      }
	      tabListFound = true;
	    }
	    if (child.type === _Tab2.default) {
	      if (!tabListFound || listTabs.indexOf(child) === -1) {
	        error = new Error("Found a 'Tab' component outside of the 'TabList' component. 'Tab' components have to be inside the 'TabList' component.");
	      }
	      tabsCount++;
	    } else if (child.type === _TabPanel2.default) {
	      panelsCount++;
	    }
	  });

	  if (!error && tabsCount !== panelsCount) {
	    error = new Error('There should be an equal number of \'Tab\' and \'TabPanel\' in `' + componentName + '`.' + ('Received ' + tabsCount + ' \'Tab\' and ' + panelsCount + ' \'TabPanel\'.'));
	  }

	  return error;
	}

	function onSelectPropType(props, propName, componentName, location, propFullName) {
	  var prop = props[propName];
	  var name = propFullName || propName;
	  var error = null;

	  if (prop && typeof prop !== 'function') {
	    error = new Error('Invalid ' + location + ' `' + name + '` of type `' + (typeof prop === 'undefined' ? 'undefined' : _typeof(prop)) + '` supplied to `' + componentName + '`, expected `function`.');
	  } else if (props.selectedIndex != null && prop == null) {
	    error = new Error('The ' + location + ' `' + name + '` is marked as required in `' + componentName + '`, but its value is `undefined` or `null`.\n`onSelect` is required when `selectedIndex` is also set. Not doing so will make the tabs not do anything, as `selectedIndex` indicates that you want to handle the selected tab yourself.\nIf you only want to set the inital tab replace `selectedIndex` with `defaultIndex`.');
	  }

	  return error;
	}

	function selectedIndexPropType(props, propName, componentName, location, propFullName) {
	  var prop = props[propName];
	  var name = propFullName || propName;
	  var error = null;

	  if (prop != null && typeof prop !== 'number') {
	    error = new Error('Invalid ' + location + ' `' + name + '` of type `' + (typeof prop === 'undefined' ? 'undefined' : _typeof(prop)) + '` supplied to `' + componentName + '`, expected `number`.');
	  } else if (props.defaultIndex != null && prop != null) {
	    return new Error('The ' + location + ' `' + name + '` cannot be used together with `defaultIndex` in `' + componentName + '`.\nEither remove `' + name + '` to let `' + componentName + '` handle the selected tab internally or remove `defaultIndex` to handle it yourself.');
	  }

	  return error;
	}

/***/ }),
/* 600 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	exports.deepMap = deepMap;
	exports.deepForEach = deepForEach;

	var _react = __webpack_require__(2);

	var _Tab = __webpack_require__(601);

	var _Tab2 = _interopRequireDefault(_Tab);

	var _TabList = __webpack_require__(603);

	var _TabList2 = _interopRequireDefault(_TabList);

	var _TabPanel = __webpack_require__(604);

	var _TabPanel2 = _interopRequireDefault(_TabPanel);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function isTabChild(child) {
	  return child.type === _Tab2.default || child.type === _TabList2.default || child.type === _TabPanel2.default;
	}

	function deepMap(children, callback) {
	  return _react.Children.map(children, function (child) {
	    // null happens when conditionally rendering TabPanel/Tab
	    // see https://github.com/reactjs/react-tabs/issues/37
	    if (child === null) return null;

	    if (isTabChild(child)) {
	      return callback(child);
	    }

	    if (child.props && child.props.children && _typeof(child.props.children) === 'object') {
	      // Clone the child that has children and map them too
	      return (0, _react.cloneElement)(child, _extends({}, child.props, {
	        children: deepMap(child.props.children, callback)
	      }));
	    }

	    return child;
	  });
	}

	function deepForEach(children, callback) {
	  return _react.Children.forEach(children, function (child) {
	    // null happens when conditionally rendering TabPanel/Tab
	    // see https://github.com/reactjs/react-tabs/issues/37
	    if (child === null) return;

	    if (child.type === _Tab2.default || child.type === _TabPanel2.default) {
	      callback(child);
	    } else if (child.props && child.props.children && _typeof(child.props.children) === 'object') {
	      if (child.type === _TabList2.default) callback(child);
	      deepForEach(child.props.children, callback);
	    }
	  });
	}

/***/ }),
/* 601 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _propTypes = __webpack_require__(205);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(602);

	var _classnames2 = _interopRequireDefault(_classnames);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var DEFAULT_CLASS = 'react-tabs__tab';

	var Tab = function (_Component) {
	  _inherits(Tab, _Component);

	  function Tab() {
	    _classCallCheck(this, Tab);

	    return _possibleConstructorReturn(this, _Component.apply(this, arguments));
	  }

	  Tab.prototype.componentDidMount = function componentDidMount() {
	    this.checkFocus();
	  };

	  Tab.prototype.componentDidUpdate = function componentDidUpdate() {
	    this.checkFocus();
	  };

	  Tab.prototype.checkFocus = function checkFocus() {
	    if (this.props.selected && this.props.focus) {
	      this.node.focus();
	    }
	  };

	  Tab.prototype.render = function render() {
	    var _cx,
	        _this2 = this;

	    var _props = this.props,
	        children = _props.children,
	        className = _props.className,
	        disabled = _props.disabled,
	        disabledClassName = _props.disabledClassName,
	        focus = _props.focus,
	        id = _props.id,
	        panelId = _props.panelId,
	        selected = _props.selected,
	        selectedClassName = _props.selectedClassName,
	        tabRef = _props.tabRef,
	        attributes = _objectWithoutProperties(_props, ['children', 'className', 'disabled', 'disabledClassName', 'focus', 'id', 'panelId', 'selected', 'selectedClassName', 'tabRef']);

	    return _react2.default.createElement(
	      'li',
	      _extends({}, attributes, {
	        className: (0, _classnames2.default)(className, (_cx = {}, _cx[selectedClassName] = selected, _cx[disabledClassName] = disabled, _cx)),
	        ref: function ref(node) {
	          _this2.node = node;
	          if (tabRef) tabRef(node);
	        },
	        role: 'tab',
	        id: id,
	        'aria-selected': selected ? 'true' : 'false',
	        'aria-disabled': disabled ? 'true' : 'false',
	        'aria-controls': panelId,
	        tabIndex: selected ? '0' : null
	      }),
	      children
	    );
	  };

	  return Tab;
	}(_react.Component);

	Tab.defaultProps = {
	  className: DEFAULT_CLASS,
	  disabledClassName: DEFAULT_CLASS + '--disabled',
	  focus: false,
	  id: null,
	  panelId: null,
	  selected: false,
	  selectedClassName: DEFAULT_CLASS + '--selected'
	};
	exports.default = Tab;
	Tab.propTypes = process.env.NODE_ENV !== "production" ? {
	  children: _propTypes2.default.oneOfType([_propTypes2.default.array, _propTypes2.default.object, _propTypes2.default.string]),
	  className: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.array, _propTypes2.default.object]),
	  disabled: _propTypes2.default.bool,
	  disabledClassName: _propTypes2.default.string,
	  focus: _propTypes2.default.bool, // private
	  id: _propTypes2.default.string, // private
	  panelId: _propTypes2.default.string, // private
	  selected: _propTypes2.default.bool, // private
	  selectedClassName: _propTypes2.default.string,
	  tabRef: _propTypes2.default.func // private
	} : {};
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)))

/***/ }),
/* 602 */
/***/ (function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
	  Copyright (c) 2016 Jed Watson.
	  Licensed under the MIT License (MIT), see
	  http://jedwatson.github.io/classnames
	*/
	/* global define */

	(function () {
		'use strict';

		var hasOwn = {}.hasOwnProperty;

		function classNames () {
			var classes = [];

			for (var i = 0; i < arguments.length; i++) {
				var arg = arguments[i];
				if (!arg) continue;

				var argType = typeof arg;

				if (argType === 'string' || argType === 'number') {
					classes.push(arg);
				} else if (Array.isArray(arg)) {
					classes.push(classNames.apply(null, arg));
				} else if (argType === 'object') {
					for (var key in arg) {
						if (hasOwn.call(arg, key) && arg[key]) {
							classes.push(key);
						}
					}
				}
			}

			return classes.join(' ');
		}

		if (typeof module !== 'undefined' && module.exports) {
			module.exports = classNames;
		} else if (true) {
			// register as 'classnames', consistent with npm package name
			!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function () {
				return classNames;
			}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
		} else {
			window.classNames = classNames;
		}
	}());


/***/ }),
/* 603 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _propTypes = __webpack_require__(205);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(602);

	var _classnames2 = _interopRequireDefault(_classnames);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var TabList = function (_Component) {
	  _inherits(TabList, _Component);

	  function TabList() {
	    _classCallCheck(this, TabList);

	    return _possibleConstructorReturn(this, _Component.apply(this, arguments));
	  }

	  TabList.prototype.render = function render() {
	    var _props = this.props,
	        children = _props.children,
	        className = _props.className,
	        attributes = _objectWithoutProperties(_props, ['children', 'className']);

	    return _react2.default.createElement(
	      'ul',
	      _extends({}, attributes, { className: (0, _classnames2.default)(className), role: 'tablist' }),
	      children
	    );
	  };

	  return TabList;
	}(_react.Component);

	TabList.defaultProps = {
	  className: 'react-tabs__tab-list'
	};
	exports.default = TabList;
	TabList.propTypes = process.env.NODE_ENV !== "production" ? {
	  children: _propTypes2.default.oneOfType([_propTypes2.default.object, _propTypes2.default.array]),
	  className: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.array, _propTypes2.default.object])
	} : {};
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)))

/***/ }),
/* 604 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _propTypes = __webpack_require__(205);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(602);

	var _classnames2 = _interopRequireDefault(_classnames);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var DEFAULT_CLASS = 'react-tabs__tab-panel';

	var TabPanel = function (_Component) {
	  _inherits(TabPanel, _Component);

	  function TabPanel() {
	    _classCallCheck(this, TabPanel);

	    return _possibleConstructorReturn(this, _Component.apply(this, arguments));
	  }

	  TabPanel.prototype.render = function render() {
	    var _cx;

	    var _props = this.props,
	        children = _props.children,
	        className = _props.className,
	        forceRender = _props.forceRender,
	        id = _props.id,
	        selected = _props.selected,
	        selectedClassName = _props.selectedClassName,
	        tabId = _props.tabId,
	        attributes = _objectWithoutProperties(_props, ['children', 'className', 'forceRender', 'id', 'selected', 'selectedClassName', 'tabId']);

	    return _react2.default.createElement(
	      'div',
	      _extends({}, attributes, {
	        className: (0, _classnames2.default)(className, (_cx = {}, _cx[selectedClassName] = selected, _cx)),
	        role: 'tabpanel',
	        id: id,
	        'aria-labelledby': tabId
	      }),
	      forceRender || selected ? children : null
	    );
	  };

	  return TabPanel;
	}(_react.Component);

	TabPanel.defaultProps = {
	  className: DEFAULT_CLASS,
	  forceRender: false,
	  selectedClassName: DEFAULT_CLASS + '--selected',
	  style: {}
	};
	exports.default = TabPanel;
	TabPanel.propTypes = process.env.NODE_ENV !== "production" ? {
	  children: _propTypes2.default.node,
	  className: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.array, _propTypes2.default.object]),
	  forceRender: _propTypes2.default.bool,
	  id: _propTypes2.default.string, // private
	  selected: _propTypes2.default.bool, // private
	  selectedClassName: _propTypes2.default.string,
	  tabId: _propTypes2.default.string // private
	} : {};
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)))

/***/ }),
/* 605 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _propTypes = __webpack_require__(205);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(602);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _uuid = __webpack_require__(606);

	var _uuid2 = _interopRequireDefault(_uuid);

	var _propTypes3 = __webpack_require__(599);

	var _Tab = __webpack_require__(601);

	var _Tab2 = _interopRequireDefault(_Tab);

	var _TabList = __webpack_require__(603);

	var _TabList2 = _interopRequireDefault(_TabList);

	var _TabPanel = __webpack_require__(604);

	var _TabPanel2 = _interopRequireDefault(_TabPanel);

	var _count = __webpack_require__(607);

	var _childrenDeepMap = __webpack_require__(600);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	// Determine if a node from event.target is a Tab element
	function isTabNode(node) {
	  return node.nodeName === 'LI' && node.getAttribute('role') === 'tab';
	}

	// Determine if a tab node is disabled
	function isTabDisabled(node) {
	  return node.getAttribute('aria-disabled') === 'true';
	}

	var canUseActiveElement = !!(typeof window !== 'undefined' && window.document && window.document.activeElement);

	var UncontrolledTabs = function (_Component) {
	  _inherits(UncontrolledTabs, _Component);

	  function UncontrolledTabs() {
	    var _temp, _this, _ret;

	    _classCallCheck(this, UncontrolledTabs);

	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _Component.call.apply(_Component, [this].concat(args))), _this), _this.tabNodes = [], _this.handleKeyDown = function (e) {
	      if (_this.isTabFromContainer(e.target)) {
	        var index = _this.props.selectedIndex;
	        var preventDefault = false;

	        if (e.keyCode === 37 || e.keyCode === 38) {
	          // Select next tab to the left
	          index = _this.getPrevTab(index);
	          preventDefault = true;
	        } else if (e.keyCode === 39 || e.keyCode === 40) {
	          // Select next tab to the right
	          index = _this.getNextTab(index);
	          preventDefault = true;
	        }

	        // This prevents scrollbars from moving around
	        if (preventDefault) {
	          e.preventDefault();
	        }

	        _this.setSelected(index, e);
	      }
	    }, _this.handleClick = function (e) {
	      var node = e.target;
	      // eslint-disable-next-line no-cond-assign
	      do {
	        if (_this.isTabFromContainer(node)) {
	          if (isTabDisabled(node)) {
	            return;
	          }

	          var index = [].slice.call(node.parentNode.children).filter(isTabNode).indexOf(node);
	          _this.setSelected(index, e);
	          return;
	        }
	      } while ((node = node.parentNode) !== null);
	    }, _temp), _possibleConstructorReturn(_this, _ret);
	  }

	  UncontrolledTabs.prototype.setSelected = function setSelected(index, event) {
	    // Don't do anything if nothing has changed
	    if (index === this.props.selectedIndex) return;
	    // Check index boundary
	    if (index < 0 || index >= this.getTabsCount()) return;

	    // Call change event handler
	    this.props.onSelect(index, this.props.selectedIndex, event);
	  };

	  UncontrolledTabs.prototype.getNextTab = function getNextTab(index) {
	    var count = this.getTabsCount();

	    // Look for non-disabled tab from index to the last tab on the right
	    for (var i = index + 1; i < count; i++) {
	      if (!isTabDisabled(this.getTab(i))) {
	        return i;
	      }
	    }

	    // If no tab found, continue searching from first on left to index
	    for (var _i = 0; _i < index; _i++) {
	      if (!isTabDisabled(this.getTab(_i))) {
	        return _i;
	      }
	    }

	    // No tabs are disabled, return index
	    return index;
	  };

	  UncontrolledTabs.prototype.getPrevTab = function getPrevTab(index) {
	    var i = index;

	    // Look for non-disabled tab from index to first tab on the left
	    while (i--) {
	      if (!isTabDisabled(this.getTab(i))) {
	        return i;
	      }
	    }

	    // If no tab found, continue searching from last tab on right to index
	    i = this.getTabsCount();
	    while (i-- > index) {
	      if (!isTabDisabled(this.getTab(i))) {
	        return i;
	      }
	    }

	    // No tabs are disabled, return index
	    return index;
	  };

	  UncontrolledTabs.prototype.getTabsCount = function getTabsCount() {
	    return (0, _count.getTabsCount)(this.props.children);
	  };

	  UncontrolledTabs.prototype.getPanelsCount = function getPanelsCount() {
	    return (0, _count.getPanelsCount)(this.props.children);
	  };

	  UncontrolledTabs.prototype.getTab = function getTab(index) {
	    return this.tabNodes['tabs-' + index];
	  };

	  UncontrolledTabs.prototype.getChildren = function getChildren() {
	    var _this2 = this;

	    var index = 0;
	    var _props = this.props,
	        children = _props.children,
	        disabledTabClassName = _props.disabledTabClassName,
	        focus = _props.focus,
	        forceRenderTabPanel = _props.forceRenderTabPanel,
	        selectedIndex = _props.selectedIndex,
	        selectedTabClassName = _props.selectedTabClassName,
	        selectedTabPanelClassName = _props.selectedTabPanelClassName;


	    this.tabIds = this.tabIds || [];
	    this.panelIds = this.panelIds || [];
	    var diff = this.tabIds.length - this.getTabsCount();

	    // Add ids if new tabs have been added
	    // Don't bother removing ids, just keep them in case they are added again
	    // This is more efficient, and keeps the uuid counter under control
	    while (diff++ < 0) {
	      this.tabIds.push((0, _uuid2.default)());
	      this.panelIds.push((0, _uuid2.default)());
	    }

	    // Map children to dynamically setup refs
	    return (0, _childrenDeepMap.deepMap)(children, function (child) {
	      var result = child;

	      // Clone TabList and Tab components to have refs
	      if (child.type === _TabList2.default) {
	        var listIndex = 0;

	        // Figure out if the current focus in the DOM is set on a Tab
	        // If it is we should keep the focus on the next selected tab
	        var wasTabFocused = false;

	        if (canUseActiveElement) {
	          wasTabFocused = _react2.default.Children.toArray(child.props.children).filter(function (tab) {
	            return tab.type === _Tab2.default;
	          }).some(function (tab, i) {
	            return document.activeElement === _this2.getTab(i);
	          });
	        }

	        result = (0, _react.cloneElement)(child, {
	          children: (0, _childrenDeepMap.deepMap)(child.props.children, function (tab) {
	            var key = 'tabs-' + listIndex;
	            var selected = selectedIndex === listIndex;

	            var props = {
	              tabRef: function tabRef(node) {
	                _this2.tabNodes[key] = node;
	              },
	              id: _this2.tabIds[listIndex],
	              panelId: _this2.panelIds[listIndex],
	              selected: selected,
	              focus: selected && (focus || wasTabFocused)
	            };

	            if (selectedTabClassName) props.selectedClassName = selectedTabClassName;
	            if (disabledTabClassName) props.disabledClassName = disabledTabClassName;

	            listIndex++;

	            return (0, _react.cloneElement)(tab, props);
	          })
	        });
	      } else if (child.type === _TabPanel2.default) {
	        var props = {
	          id: _this2.panelIds[index],
	          tabId: _this2.tabIds[index],
	          selected: selectedIndex === index
	        };

	        if (forceRenderTabPanel) props.forceRender = forceRenderTabPanel;
	        if (selectedTabPanelClassName) props.selectedClassName = selectedTabPanelClassName;

	        index++;

	        result = (0, _react.cloneElement)(child, props);
	      }

	      return result;
	    });
	  };

	  /**
	   * Determine if a node from event.target is a Tab element for the current Tabs container.
	   * If the clicked element is not a Tab, it returns false.
	   * If it finds another Tabs container between the Tab and `this`, it returns false.
	   */
	  UncontrolledTabs.prototype.isTabFromContainer = function isTabFromContainer(node) {
	    // return immediately if the clicked element is not a Tab.
	    if (!isTabNode(node)) {
	      return false;
	    }

	    // Check if the first occurrence of a Tabs container is `this` one.
	    var nodeAncestor = node.parentElement;
	    do {
	      if (nodeAncestor === this.node) return true;else if (nodeAncestor.getAttribute('data-tabs')) break;

	      nodeAncestor = nodeAncestor.parentElement;
	    } while (nodeAncestor);

	    return false;
	  };

	  UncontrolledTabs.prototype.render = function render() {
	    var _this3 = this;

	    // Delete all known props, so they don't get added to DOM
	    var _props2 = this.props,
	        children = _props2.children,
	        className = _props2.className,
	        disabledTabClassName = _props2.disabledTabClassName,
	        focus = _props2.focus,
	        forceRenderTabPanel = _props2.forceRenderTabPanel,
	        onSelect = _props2.onSelect,
	        selectedIndex = _props2.selectedIndex,
	        selectedTabClassName = _props2.selectedTabClassName,
	        selectedTabPanelClassName = _props2.selectedTabPanelClassName,
	        attributes = _objectWithoutProperties(_props2, ['children', 'className', 'disabledTabClassName', 'focus', 'forceRenderTabPanel', 'onSelect', 'selectedIndex', 'selectedTabClassName', 'selectedTabPanelClassName']);

	    return _react2.default.createElement(
	      'div',
	      _extends({}, attributes, {
	        className: (0, _classnames2.default)(className),
	        onClick: this.handleClick,
	        onKeyDown: this.handleKeyDown,
	        ref: function ref(node) {
	          _this3.node = node;
	        },
	        'data-tabs': true
	      }),
	      this.getChildren()
	    );
	  };

	  return UncontrolledTabs;
	}(_react.Component);

	UncontrolledTabs.defaultProps = {
	  className: 'react-tabs',
	  focus: false
	};
	exports.default = UncontrolledTabs;
	UncontrolledTabs.propTypes = process.env.NODE_ENV !== "production" ? {
	  children: _propTypes3.childrenPropType,
	  className: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.array, _propTypes2.default.object]),
	  disabledTabClassName: _propTypes2.default.string,
	  focus: _propTypes2.default.bool,
	  forceRenderTabPanel: _propTypes2.default.bool,
	  onSelect: _propTypes2.default.func.isRequired,
	  selectedIndex: _propTypes2.default.number.isRequired,
	  selectedTabClassName: _propTypes2.default.string,
	  selectedTabPanelClassName: _propTypes2.default.string
	} : {};
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)))

/***/ }),
/* 606 */
/***/ (function(module, exports) {

	"use strict";

	exports.__esModule = true;
	exports.default = uuid;
	exports.reset = reset;
	// Get a universally unique identifier
	var count = 0;
	function uuid() {
	  return "react-tabs-" + count++;
	}

	function reset() {
	  count = 0;
	}

/***/ }),
/* 607 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;
	exports.getTabsCount = getTabsCount;
	exports.getPanelsCount = getPanelsCount;

	var _childrenDeepMap = __webpack_require__(600);

	var _Tab = __webpack_require__(601);

	var _Tab2 = _interopRequireDefault(_Tab);

	var _TabPanel = __webpack_require__(604);

	var _TabPanel2 = _interopRequireDefault(_TabPanel);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function getTabsCount(children) {
	  var tabCount = 0;
	  (0, _childrenDeepMap.deepForEach)(children, function (child) {
	    if (child.type === _Tab2.default) tabCount++;
	  });

	  return tabCount;
	}

	function getPanelsCount(children) {
	  var panelCount = 0;
	  (0, _childrenDeepMap.deepForEach)(children, function (child) {
	    if (child.type === _TabPanel2.default) panelCount++;
	  });

	  return panelCount;
	}

/***/ }),
/* 608 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _end_account_item = __webpack_require__(609);

	var _end_account_item2 = _interopRequireDefault(_end_account_item);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	// Components


	var EndAccountList = function (_Component) {
	    _inherits(EndAccountList, _Component);

	    function EndAccountList() {
	        _classCallCheck(this, EndAccountList);

	        return _possibleConstructorReturn(this, (EndAccountList.__proto__ || Object.getPrototypeOf(EndAccountList)).apply(this, arguments));
	    }

	    _createClass(EndAccountList, [{
	        key: 'render',
	        value: function render() {
	            var endAccountList = void 0;
	            if (this.props.userList) {
	                endAccountList = this.props.userList.map(function (item) {
	                    return _react2.default.createElement(_end_account_item2.default, { key: item.email, item: item });
	                });
	            }

	            return _react2.default.createElement(
	                'div',
	                { className: 'col-sm-5 pt-5 mt-5 ml-5' },
	                _react2.default.createElement(
	                    'h4',
	                    { className: 'form-descript' },
	                    ' Elementos da sua autarquia: '
	                ),
	                _react2.default.createElement(
	                    'div',
	                    { className: 'typeList' },
	                    endAccountList
	                )
	            );
	        }
	    }]);

	    return EndAccountList;
	}(_react.Component);

	exports.default = EndAccountList;

/***/ }),
/* 609 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _axios = __webpack_require__(253);

	var _axios2 = _interopRequireDefault(_axios);

	var _jquery = __webpack_require__(252);

	var _jquery2 = _interopRequireDefault(_jquery);

	var _uuid = __webpack_require__(589);

	var _uuid2 = _interopRequireDefault(_uuid);

	var _config = __webpack_require__(279);

	var _config2 = _interopRequireDefault(_config);

	var _modal = __webpack_require__(320);

	var _modal2 = _interopRequireDefault(_modal);

	var _actions_end_users = __webpack_require__(610);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	// Components 


	// Actions 


	var EndAccountItem = function (_Component) {
	    _inherits(EndAccountItem, _Component);

	    function EndAccountItem(props) {
	        _classCallCheck(this, EndAccountItem);

	        var _this = _possibleConstructorReturn(this, (EndAccountItem.__proto__ || Object.getPrototypeOf(EndAccountItem)).call(this, props));

	        _this.state = {
	            isModalActive: false
	        };
	        return _this;
	    }

	    _createClass(EndAccountItem, [{
	        key: 'updateItemStyle',
	        value: function updateItemStyle() {
	            var tmp = this.props.item.email.split('.').join('').replace('@', '');
	            var id = "item-" + tmp;
	            var blocked = "blocked-" + tmp;
	            var symbol = "symbol-" + tmp;

	            if (this.props.item.isAccountBlocked === true) {
	                (0, _jquery2.default)('#' + id).css('color', 'red').css('font-weight', 'bolder');
	                (0, _jquery2.default)('#' + blocked).html(' - Bloqueada');
	                (0, _jquery2.default)('#' + blocked).css('font-weight', 'normal');
	                (0, _jquery2.default)('#' + symbol).removeClass("fa fa-ban").addClass("fa fa-circle-o");
	            } else {
	                (0, _jquery2.default)('#' + id).css('color', 'black').css('font-weight', 'normal');
	                (0, _jquery2.default)('#' + blocked).html('');
	                (0, _jquery2.default)('#' + symbol).removeClass("fa fa-circle-o").addClass("fa fa-ban");
	            }
	        }
	    }, {
	        key: 'componentWillMount',
	        value: function componentWillMount() {
	            this.updateItemStyle();
	        }
	    }, {
	        key: 'componentDidMount',
	        value: function componentDidMount() {
	            this.updateItemStyle();
	        }
	    }, {
	        key: 'openModal',
	        value: function openModal() {
	            if (this.props.item.isAccountBlocked) {
	                this.updateBlockStatus();
	            } else {
	                this.setState({ isModalActive: true });
	            }
	        }
	    }, {
	        key: 'closeModal',
	        value: function closeModal() {
	            this.setState({ isModalActive: false });
	        }
	    }, {
	        key: 'updateBlockStatus',
	        value: function updateBlockStatus() {
	            var _this2 = this;

	            var token = JSON.parse(localStorage.getItem('token'));
	            var tmp = this.props.item.email.split('.').join('').replace('@', '');
	            var id = "item-" + tmp;
	            var blocked = "blocked-" + tmp;
	            var symbol = "symbol-" + tmp;

	            console.log("update block status was called", tmp);

	            _axios2.default.post(_config2.default + '/admin/endAccountManagement/updateBlockStatus/' + this.props.item.email, token).then(function (response) {
	                if (response.status === 200) {
	                    if (response.data === true) {
	                        (0, _jquery2.default)('#' + id).css('color', 'red').css('font-weight', 'bolder');
	                        (0, _jquery2.default)('#' + blocked).html(' - Bloqueada');
	                        (0, _jquery2.default)('#' + blocked).css('font-weight', 'normal');
	                        (0, _jquery2.default)('#' + symbol).removeClass("fa fa-ban").addClass("fa fa-circle-o");
	                        _this2.props.item.isAccountBlocked = true;
	                        _this2.closeModal();
	                    } else {
	                        (0, _jquery2.default)('#' + id).css('color', 'black').css('font-weight', 'normal');
	                        (0, _jquery2.default)('#' + blocked).html('');
	                        (0, _jquery2.default)('#' + symbol).removeClass("fa fa-circle-o").addClass("fa fa-ban");
	                        _this2.props.item.isAccountBlocked = false;

	                        (0, _jquery2.default)("#changeNotifyMessage").html('A conta seleccionada foi activada com sucesso.');
	                        (0, _jquery2.default)("#changeNotifyMessage").css('color', 'green');
	                        setTimeout(function () {
	                            (0, _jquery2.default)("#changeNotifyMessage").html("");
	                        }, 3000);
	                    }
	                }
	            }).catch(function (err) {
	                console.log("An error has occured while trying to update blocking status.");
	            });
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            var tmp = this.props.item.email.split('.').join('').replace('@', '');
	            return _react2.default.createElement(
	                'div',
	                null,
	                this.state.isModalActive && _react2.default.createElement(
	                    _modal2.default,
	                    null,
	                    _react2.default.createElement(
	                        'div',
	                        { className: 'container w-100' },
	                        _react2.default.createElement(
	                            'p',
	                            null,
	                            'Tem a certeza que deseja bloquear a conta ',
	                            _react2.default.createElement(
	                                'strong',
	                                null,
	                                this.props.item.email
	                            ),
	                            '?'
	                        ),
	                        _react2.default.createElement(
	                            'button',
	                            { className: 'btn btn-primary', onClick: this.updateBlockStatus.bind(this) },
	                            'Bloquear'
	                        ),
	                        _react2.default.createElement(
	                            'button',
	                            { className: 'btn btn-primary ml-2', onClick: this.closeModal.bind(this) },
	                            'Cancelar'
	                        )
	                    )
	                ),
	                _react2.default.createElement(
	                    'div',
	                    { className: 'end-account-item' },
	                    _react2.default.createElement(
	                        'a',
	                        { href: '#', onClick: this.openModal.bind(this) },
	                        _react2.default.createElement('i', { id: 'symbol-' + tmp, className: 'fa fa-ban edit-button', 'aria-hidden': 'true' })
	                    ),
	                    _react2.default.createElement(
	                        'a',
	                        { href: '#' + tmp, 'data-toggle': 'collapse' },
	                        _react2.default.createElement('i', { className: 'fa fa-info-circle edit-button', 'aria-hidden': 'true' })
	                    ),
	                    _react2.default.createElement(
	                        'li',
	                        { id: 'item-' + tmp },
	                        this.props.item.email,
	                        ' ',
	                        _react2.default.createElement('span', { id: 'blocked-' + tmp }),
	                        ' '
	                    ),
	                    _react2.default.createElement(
	                        'div',
	                        { id: '' + tmp, className: 'collapse' },
	                        _react2.default.createElement(
	                            'ul',
	                            { className: 'end-info-display' },
	                            _react2.default.createElement(
	                                'li',
	                                null,
	                                ' ',
	                                _react2.default.createElement(
	                                    'strong',
	                                    null,
	                                    'Nome:'
	                                ),
	                                ' ',
	                                this.props.item.name,
	                                ' '
	                            ),
	                            _react2.default.createElement(
	                                'li',
	                                null,
	                                ' ',
	                                _react2.default.createElement(
	                                    'strong',
	                                    null,
	                                    'Identificador interno:'
	                                ),
	                                ' ',
	                                this.props.item.internalId,
	                                ' '
	                            )
	                        )
	                    )
	                )
	            );
	        }
	    }]);

	    return EndAccountItem;
	}(_react.Component);

	exports.default = EndAccountItem;

/***/ }),
/* 610 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.LOAD_END_USERS = undefined;
	exports.loadEndUsers = loadEndUsers;

	var _axios = __webpack_require__(253);

	var _axios2 = _interopRequireDefault(_axios);

	var _config = __webpack_require__(279);

	var _config2 = _interopRequireDefault(_config);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var LOAD_END_USERS = exports.LOAD_END_USERS = 'LOAD_END_USERS';

	function loadEndUsers(token) {
	    return function (dispatch) {
	        _axios2.default.post(_config2.default + '/admin/endAccountManagement/loadEndAccounts', token).then(function (response) {
	            dispatch({
	                type: LOAD_END_USERS,
	                payload: response
	            });
	        }).catch(function (err) {
	            console.log("An error has occured", err);
	        });
	    };
	}

/***/ }),
/* 611 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _reactRedux = __webpack_require__(160);

	var _reduxForm = __webpack_require__(332);

	var _config = __webpack_require__(279);

	var _config2 = _interopRequireDefault(_config);

	var _axios = __webpack_require__(253);

	var _axios2 = _interopRequireDefault(_axios);

	var _actions_end_users = __webpack_require__(610);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _objectDestructuringEmpty(obj) { if (obj == null) throw new TypeError("Cannot destructure undefined"); }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	// Actions 


	var EndAccountRegister = function (_Component) {
	    _inherits(EndAccountRegister, _Component);

	    function EndAccountRegister() {
	        _classCallCheck(this, EndAccountRegister);

	        return _possibleConstructorReturn(this, (EndAccountRegister.__proto__ || Object.getPrototypeOf(EndAccountRegister)).apply(this, arguments));
	    }

	    _createClass(EndAccountRegister, [{
	        key: 'onSubmit',
	        value: function onSubmit(values) {
	            var _this2 = this;

	            var alert = this.refs.alert;

	            var token = JSON.parse(localStorage.getItem('token'));
	            var data = {
	                name: values.name,
	                email: values.email,
	                email_confirm: values.email_confirm,
	                password: " ",
	                password_confirm: " ",
	                address: {
	                    district: "",
	                    county: ""
	                },
	                internalId: values.internal_id
	            };

	            _axios2.default.post(_config2.default + '/register/end', { token: token, data: data }).then(function (response) {
	                if (response.status === 200) {
	                    alert.classList.remove('d-none');
	                    alert.classList.add('text-success');
	                    alert.innerHTML = 'Nova conta registada com sucesso.';
	                    _this2.props.dispatch((0, _actions_end_users.loadEndUsers)(JSON.parse(localStorage.getItem('token'))));

	                    setTimeout(function () {
	                        alert.classList.add('d-none');
	                        alert.classList.remove('text-success');
	                        alert.innerHTML = '';
	                        _this2.props.dispatch((0, _reduxForm.reset)('CoreAccountForm'));
	                    }, 3000);
	                }
	            }).catch(function (err) {
	                if (err.response.status === 409) {
	                    alert.classList.remove('d-none');
	                    alert.classList.add('text-danger');
	                    alert.innerHTML = 'Email introduzido já existe.';
	                    setTimeout(function () {
	                        alert.classList.add('d-none');
	                        alert.classList.remove('text-danger');
	                        alert.innerHTML = '';
	                        _this2.props.dispatch((0, _reduxForm.reset)('CoreAccountForm'));
	                    }, 3000);
	                }
	            });
	        }
	    }, {
	        key: 'renderField',
	        value: function renderField(field) {
	            var _field$meta = field.meta,
	                touched = _field$meta.touched,
	                error = _field$meta.error;

	            var className = 'form-group ' + (touched && error ? 'has-danger' : '');
	            return _react2.default.createElement(
	                'div',
	                { className: className },
	                _react2.default.createElement(
	                    'div',
	                    { className: 'input-group input-group-sm' },
	                    _react2.default.createElement('input', _extends({
	                        type: field.type,
	                        placeholder: field.placeholder,
	                        className: 'form-control input-sm'
	                    }, field.input))
	                ),
	                _react2.default.createElement(
	                    'small',
	                    { className: 'form-control-feedback' },
	                    touched ? error : ''
	                )
	            );
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            var _props = this.props,
	                handleSubmit = _props.handleSubmit,
	                pristine = _props.pristine,
	                submitting = _props.submitting;


	            return _react2.default.createElement(
	                'div',
	                null,
	                _react2.default.createElement(
	                    'div',
	                    { className: 'row justify-content-center' },
	                    _react2.default.createElement(
	                        'div',
	                        { className: 'col-sm-9 pt-5 mt-5' },
	                        _react2.default.createElement(
	                            'h4',
	                            { className: 'form-descript' },
	                            ' Registar um novo administrador: '
	                        ),
	                        _react2.default.createElement(
	                            'form',
	                            { onSubmit: handleSubmit(this.onSubmit.bind(this)) },
	                            _react2.default.createElement(_reduxForm.Field, {
	                                type: 'text',
	                                name: 'name',
	                                placeholder: 'Name',
	                                component: this.renderField
	                            }),
	                            _react2.default.createElement(_reduxForm.Field, {
	                                name: 'email',
	                                type: 'email',
	                                placeholder: 'Email',
	                                component: this.renderField
	                            }),
	                            _react2.default.createElement(_reduxForm.Field, {
	                                name: 'email_confirm',
	                                type: 'email',
	                                placeholder: 'Email Confirma\xE7\xE3o',
	                                component: this.renderField
	                            }),
	                            _react2.default.createElement(_reduxForm.Field, {
	                                name: 'internal_id',
	                                type: 'text',
	                                placeholder: 'Identificador interno (opcional)',
	                                component: this.renderField
	                            }),
	                            _react2.default.createElement(
	                                'button',
	                                { id: 'submitButton', type: 'submit', className: 'btn btn-primary form-control mt-2' },
	                                'Registar'
	                            )
	                        )
	                    )
	                ),
	                _react2.default.createElement(
	                    'div',
	                    { className: 'submit-success', ref: 'alert' },
	                    ' '
	                )
	            );
	        }
	    }]);

	    return EndAccountRegister;
	}(_react.Component);

	function validate(values) {
	    var errors = {};
	    if (!values.email) {
	        errors.email = "Deve introduzir um email válido.";
	    }
	    if (!values.name) {
	        errors.name = "Deve introduzir um nome válido.";
	    }
	    if (values.email !== values.email_confirm) {
	        errors.email_confirm = "O email introduzido e a respectiva confirmação não correspondem.";
	    }
	    return errors;
	}

	function mapStateToProps(_ref) {
	    _objectDestructuringEmpty(_ref);

	    return {};
	}

	exports.default = (0, _reduxForm.reduxForm)({
	    form: 'CoreAccountForm',
	    validate: validate
	})((0, _reactRedux.connect)(mapStateToProps, {})(EndAccountRegister));

/***/ }),
/* 612 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _reactRedux = __webpack_require__(160);

	var _reduxForm = __webpack_require__(332);

	var _config = __webpack_require__(279);

	var _config2 = _interopRequireDefault(_config);

	var _axios = __webpack_require__(253);

	var _axios2 = _interopRequireDefault(_axios);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _objectDestructuringEmpty(obj) { if (obj == null) throw new TypeError("Cannot destructure undefined"); }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var WorkerAccountAdd = function (_Component) {
	    _inherits(WorkerAccountAdd, _Component);

	    function WorkerAccountAdd() {
	        _classCallCheck(this, WorkerAccountAdd);

	        return _possibleConstructorReturn(this, (WorkerAccountAdd.__proto__ || Object.getPrototypeOf(WorkerAccountAdd)).apply(this, arguments));
	    }

	    _createClass(WorkerAccountAdd, [{
	        key: 'renderField',
	        value: function renderField(field) {
	            var _field$meta = field.meta,
	                touched = _field$meta.touched,
	                error = _field$meta.error;

	            var className = 'form-group ' + (touched && error ? 'has-danger' : '');
	            return _react2.default.createElement(
	                'div',
	                { className: className },
	                _react2.default.createElement(
	                    'div',
	                    { className: 'input-group input-group-sm' },
	                    _react2.default.createElement('input', _extends({
	                        type: field.type,
	                        placeholder: field.placeholder,
	                        className: 'form-control input-sm'
	                    }, field.input))
	                ),
	                _react2.default.createElement(
	                    'small',
	                    { className: 'form-control-feedback' },
	                    touched ? error : ''
	                )
	            );
	        }
	    }, {
	        key: 'onSubmit',
	        value: function onSubmit(values) {
	            var _this2 = this;

	            var alert = this.refs.alert;

	            var token = JSON.parse(localStorage.getItem("token"));
	            var data = {
	                name: values.name,
	                email: values.email,
	                email_confirm: values.email_confirm,
	                password: " ",
	                password_confirm: " ",
	                address: {
	                    district: " ",
	                    county: " "
	                },
	                nif: values.nif,
	                workingArea: []
	            };

	            _axios2.default.post(_config2.default + '/admin/endAccountManagement/workerRegisterByCore', { token: token, data: data }).then(function (response) {
	                if (response.status === 200) {
	                    console.log(response.data);
	                    alert.classList.remove('d-none');
	                    alert.classList.add('text-success');
	                    alert.innerHTML = 'Nova conta registada com sucesso.';

	                    setTimeout(function () {
	                        alert.classList.add('d-none');
	                        alert.classList.remove('text-success');
	                        alert.innerHTML = '';
	                        _this2.props.dispatch((0, _reduxForm.reset)('WorkerAccountForm'));
	                    }, 3000);
	                }
	            }).catch(function (err) {
	                console.log("An error has occured while trying to add a new worker.");
	                if (err.response.status === 409) {
	                    alert.classList.remove('d-none');
	                    alert.classList.add('text-danger');
	                    alert.innerHTML = 'Email introduzido já existe.';
	                    setTimeout(function () {
	                        alert.classList.add('d-none');
	                        alert.classList.remove('text-danger');
	                        alert.innerHTML = '';
	                        _this2.props.dispatch((0, _reduxForm.reset)('WorkerAccountForm'));
	                    }, 3000);
	                }
	            });
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            var _props = this.props,
	                handleSubmit = _props.handleSubmit,
	                pristine = _props.pristine,
	                submitting = _props.submitting;

	            return _react2.default.createElement(
	                'div',
	                null,
	                _react2.default.createElement(
	                    'div',
	                    { className: 'row justify-content-center' },
	                    _react2.default.createElement(
	                        'div',
	                        { className: 'col-sm-9 pt-5 mt-5' },
	                        _react2.default.createElement(
	                            'h4',
	                            { className: 'form-descript' },
	                            ' Registar um novo Trabalhador: '
	                        ),
	                        _react2.default.createElement(
	                            'form',
	                            { onSubmit: handleSubmit(this.onSubmit.bind(this)) },
	                            _react2.default.createElement(_reduxForm.Field, {
	                                type: 'text',
	                                name: 'name',
	                                placeholder: 'Name',
	                                component: this.renderField
	                            }),
	                            _react2.default.createElement(_reduxForm.Field, {
	                                name: 'email',
	                                type: 'email',
	                                placeholder: 'Email',
	                                component: this.renderField
	                            }),
	                            _react2.default.createElement(_reduxForm.Field, {
	                                name: 'email_confirm',
	                                type: 'email',
	                                placeholder: 'Email Confirma\xE7\xE3o',
	                                component: this.renderField
	                            }),
	                            _react2.default.createElement(_reduxForm.Field, {
	                                name: 'nif',
	                                type: 'text',
	                                placeholder: 'NIF',
	                                component: this.renderField
	                            }),
	                            _react2.default.createElement(
	                                'button',
	                                { id: 'submitButton', type: 'submit', className: 'btn btn-primary form-control mt-2' },
	                                'Registar'
	                            )
	                        )
	                    )
	                ),
	                _react2.default.createElement('div', { className: 'submit-success', ref: 'alert' })
	            );
	        }
	    }]);

	    return WorkerAccountAdd;
	}(_react.Component);

	function validate(values) {
	    var errors = {};
	    if (!values.email) {
	        errors.email = "Deve introduzir um email válido.";
	    }
	    if (!values.name) {
	        errors.name = "Deve introduzir um nome válido.";
	    }
	    if (values.email !== values.email_confirm) {
	        errors.email_confirm = "O email introduzido e a respectiva confirmação não correspondem.";
	    }
	    if (!values.nif) {
	        errors.nif = "O fornecimento do NIF é obrigatório.";
	    }
	    return errors;
	}

	function mapStateToProps(_ref) {
	    _objectDestructuringEmpty(_ref);

	    return {};
	}

	exports.default = (0, _reduxForm.reduxForm)({
	    form: 'WorkerAccountForm',
	    validate: validate
	})((0, _reactRedux.connect)(mapStateToProps, {})(WorkerAccountAdd));

/***/ }),
/* 613 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _axios = __webpack_require__(253);

	var _axios2 = _interopRequireDefault(_axios);

	var _config = __webpack_require__(279);

	var _config2 = _interopRequireDefault(_config);

	var _reactSimplePieChart = __webpack_require__(614);

	var _reactSimplePieChart2 = _interopRequireDefault(_reactSimplePieChart);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var reportTypeColor = {
	    "Árvores e Espaços Verdes": "#86af49",
	    "Estradas e Sinalização": "#d5e1df",
	    "Iluminação Pública": "#e3eaa7",
	    "Higiene Urbana e Animais": "#618685",
	    "Saneamento": "#dac292"
	};

	var markerColors = {
	    "Pendente": "#959595",
	    "Em Resolução": "#FCF004",
	    "Resolvido": "#00FF00",
	    "Rejeitado": "#FF0000",
	    "Com erros": "black"
	};

	var StatisticsPage = function (_Component) {
	    _inherits(StatisticsPage, _Component);

	    function StatisticsPage(props) {
	        _classCallCheck(this, StatisticsPage);

	        var _this = _possibleConstructorReturn(this, (StatisticsPage.__proto__ || Object.getPrototypeOf(StatisticsPage)).call(this, props));

	        _this.state = {
	            typeGraphData: [],
	            statusGraphData: [],
	            username: ''
	        };
	        return _this;
	    }

	    _createClass(StatisticsPage, [{
	        key: 'loadGeneralStatisticsData',
	        value: function loadGeneralStatisticsData() {
	            var _this2 = this;

	            var token = JSON.parse(localStorage.getItem('token'));
	            _axios2.default.post(_config2.default + '/admin/graph/reports', { token: token }).then(function (response) {
	                if (response.status === 200) {
	                    console.log("graph data", response.data);
	                    _this2.setState({ typeGraphData: _this2.buildSliceArray(response.data.graph1) });
	                    _this2.setState({ statusGraphData: _this2.buildStatusSliceArray(response.data.graph2) });
	                }
	            }).catch(function (err) {
	                console.log("An error has occured while trying to load graph data from the server", err);
	            });
	        }
	    }, {
	        key: 'componentWillMount',
	        value: function componentWillMount() {
	            var token = JSON.parse(localStorage.getItem('token'));
	            if (token) {
	                this.setState({ username: token.user });
	            }
	            this.loadGeneralStatisticsData();
	        }
	    }, {
	        key: 'buildSliceArray',
	        value: function buildSliceArray(graph) {
	            console.log("in buildSliceArray", graph);

	            var slices = [];
	            $.each(graph, function (key, value) {
	                var obj = {
	                    key: key,
	                    color: reportTypeColor[key],
	                    value: value
	                };
	                slices.push(obj);
	            });
	            return slices;
	        }
	    }, {
	        key: 'buildStatusSliceArray',
	        value: function buildStatusSliceArray(graph) {
	            console.log("in buildSliceArray", graph);

	            var slices = [];
	            $.each(graph, function (key, value) {
	                var obj = {
	                    key: key,
	                    color: markerColors[key],
	                    value: value
	                };
	                slices.push(obj);
	            });
	            return slices;
	        }

	        /*
	             if (err.response.status === 409) {
	                        alert.classList.remove('d-none');
	                        alert.classList.add('text-danger');
	                        alert.innerHTML = 'Responsável selecionado já está encarregue deste tipo de ocorrências.';
	                        setTimeout(() => {
	                            alert.classList.add('d-none');
	                            alert.classList.remove('text-danger');
	                            alert.innerHTML = '';
	                            if (this.state.selectedWorker !== "") {
	                                console.log("setState will be updated...");
	                                this.setState({ selectedWorker: "" });
	                                this.updateSelectedWorker("");
	                            }
	                            this.props.dispatch(reset('ReportTypeForm'));
	                        }, 3000);
	                    }
	         */

	        // 2017-07-10 ----> "date":"09/07/2017"   

	    }, {
	        key: 'handleDateSubmit',
	        value: function handleDateSubmit() {
	            var _this3 = this;

	            var alert = this.refs.alert;

	            var token = JSON.parse(localStorage.getItem('token'));
	            var initialDate = $("#datePicker").val();
	            var date = initialDate.split("-").reverse().join("/");

	            _axios2.default.post(_config2.default + '/admin/graph/reports', { token: token, date: date }).then(function (response) {
	                if (response.status === 200) {
	                    _this3.setState({ typeGraphData: _this3.buildSliceArray(response.data.graph1) });
	                    _this3.setState({ statusGraphData: _this3.buildStatusSliceArray(response.data.graph2) });
	                }
	            }).catch(function (err) {
	                if (err.response.status === 400) {
	                    alert.classList.remove('d-none');
	                    alert.classList.add('text-danger');
	                    alert.innerHTML = 'Não foram encontrados dados para o dia seleccionado.';
	                    setTimeout(function () {
	                        alert.classList.add('d-none');
	                        alert.classList.remove('text-danger');
	                        alert.innerHTML = '';
	                    }, 3000);
	                    console.log("An error occured while trying to load statistics info.", err);
	                }
	            });
	        }
	    }, {
	        key: 'showGeneral',
	        value: function showGeneral() {
	            var _this4 = this;

	            var token = JSON.parse(localStorage.getItem('token'));
	            _axios2.default.post(_config2.default + '/admin/graph/reports', { token: token }).then(function (response) {
	                if (response.status === 200) {
	                    _this4.setState({ typeGraphData: _this4.buildSliceArray(response.data.graph1) });
	                    _this4.setState({ statusGraphData: _this4.buildStatusSliceArray(response.data.graph2) });
	                }
	            }).catch(function (err) {
	                console.log("An error occured while trying to load statistics info.", err);
	            });
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            var sliceData = void 0;
	            var graphLegend = void 0;
	            var statusSliceData = void 0;
	            var statusGraphLegend = void 0;

	            if (this.state.typeGraphData) {
	                sliceData = this.state.typeGraphData;
	                console.log("sliceData on render", sliceData);

	                graphLegend = sliceData.map(function (item) {
	                    return _react2.default.createElement(
	                        'li',
	                        { key: item.key, className: 'graph-lengend-item' },
	                        _react2.default.createElement('i', { className: 'fa fa-square', 'aria-hidden': 'true', style: { color: item.color } }),
	                        item.key,
	                        _react2.default.createElement(
	                            'span',
	                            { className: 'amount' },
	                            ' ',
	                            _react2.default.createElement(
	                                'i',
	                                null,
	                                '(',
	                                item.value,
	                                ')'
	                            )
	                        )
	                    );
	                });
	            }

	            if (this.state.statusGraphData) {
	                statusSliceData = this.state.statusGraphData;
	                console.log("sliceData on render", statusSliceData);
	                statusGraphLegend = statusSliceData.map(function (item) {
	                    return _react2.default.createElement(
	                        'li',
	                        { key: item.key, className: 'graph-lengend-item' },
	                        _react2.default.createElement('i', { className: 'fa fa-square', 'aria-hidden': 'true', style: { color: item.color } }),
	                        item.key,
	                        _react2.default.createElement(
	                            'span',
	                            { className: 'amount' },
	                            ' ',
	                            _react2.default.createElement(
	                                'i',
	                                null,
	                                '(',
	                                item.value,
	                                ')'
	                            )
	                        )
	                    );
	                });
	            }

	            return _react2.default.createElement(
	                'div',
	                { className: 'container h-100' },
	                _react2.default.createElement(
	                    'div',
	                    { className: 'row justify-content-left custom-container' },
	                    _react2.default.createElement(
	                        'div',
	                        { className: 'statTitle' },
	                        _react2.default.createElement(
	                            'h4',
	                            { className: 'customTitle' },
	                            ' Bem vindo, ',
	                            this.state.username,
	                            '! '
	                        ),
	                        _react2.default.createElement(
	                            'h6',
	                            { className: 'customSubTitle' },
	                            ' Estat\xEDsticas gerais do seu concelho: '
	                        )
	                    ),
	                    _react2.default.createElement(
	                        'div',
	                        { className: 'col-md-4 offset-md-8' },
	                        _react2.default.createElement(
	                            'h6',
	                            { className: 'form-descript' },
	                            ' Adicione uma data: '
	                        ),
	                        _react2.default.createElement('input', { id: 'datePicker', type: 'date', className: ' form-control col-md-11' }),
	                        _react2.default.createElement(
	                            'button',
	                            { className: 'btn btn-primary col-md-6 mt-2',
	                                onClick: this.handleDateSubmit.bind(this) },
	                            ' No dia selecionado'
	                        ),
	                        _react2.default.createElement(
	                            'button',
	                            { className: 'btn btn-primary col-md-5 mt-2 ml-2',
	                                onClick: this.showGeneral.bind(this) },
	                            ' At\xE9 hoje '
	                        ),
	                        _react2.default.createElement(
	                            'div',
	                            { className: 'submit-error', ref: 'alert' },
	                            ' '
	                        )
	                    )
	                ),
	                _react2.default.createElement(
	                    'div',
	                    { className: 'row justify-content-center custom-container mt-1' },
	                    _react2.default.createElement(
	                        'div',
	                        { className: 'col-md-4 custom-pie-chart' },
	                        _react2.default.createElement(
	                            'h6',
	                            null,
	                            ' Tipos de ocorr\xEAncias desde a cria\xE7\xE3o de conta: '
	                        ),
	                        _react2.default.createElement(_reactSimplePieChart2.default, {
	                            slices: this.state.typeGraphData
	                        }),
	                        _react2.default.createElement(
	                            'ul',
	                            { className: 'graphLegend' },
	                            graphLegend
	                        )
	                    ),
	                    _react2.default.createElement(
	                        'div',
	                        { className: 'col-md-4 offset-md-2 custom-pie-chart' },
	                        _react2.default.createElement(
	                            'h6',
	                            null,
	                            ' Estado de ocorr\xEAncias: '
	                        ),
	                        _react2.default.createElement(_reactSimplePieChart2.default, {
	                            slices: statusSliceData
	                        }),
	                        _react2.default.createElement(
	                            'ul',
	                            { className: 'graphLegend' },
	                            statusGraphLegend
	                        )
	                    )
	                )
	            );
	        }
	    }]);

	    return StatisticsPage;
	}(_react.Component);

	exports.default = StatisticsPage;

/***/ }),
/* 614 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(205);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var size = 100;
	var radCircumference = Math.PI * 2;
	var center = size / 2;
	var radius = center - 1; // padding to prevent clipping

	/**
	 * @param {Object[]} slices
	 * @return {Object[]}
	 */
	function renderPaths(slices) {
	  var total = slices.reduce(function (totalValue, _ref) {
	    var value = _ref.value;
	    return totalValue + value;
	  }, 0);

	  var radSegment = 0;
	  var lastX = radius;
	  var lastY = 0;

	  return slices.map(function (_ref2, index) {
	    var color = _ref2.color;
	    var value = _ref2.value;

	    // Should we just draw a circle?
	    if (value === total) {
	      return _react2.default.createElement('circle', {
	        r: radius,
	        cx: center,
	        cy: center,
	        fill: color,
	        key: index
	      });
	    }

	    if (value === 0) {
	      return;
	    }

	    var valuePercentage = value / total;

	    // Should the arc go the long way round?
	    var longArc = valuePercentage <= 0.5 ? 0 : 1;

	    radSegment += valuePercentage * radCircumference;
	    var nextX = Math.cos(radSegment) * radius;
	    var nextY = Math.sin(radSegment) * radius;

	    // d is a string that describes the path of the slice.
	    // The weirdly placed minus signs [eg, (-(lastY))] are due to the fact
	    // that our calculations are for a graph with positive Y values going up,
	    // but on the screen positive Y values go down.
	    var d = ['M ' + center + ',' + center, 'l ' + lastX + ',' + -lastY, 'a' + radius + ',' + radius, '0', longArc + ',0', nextX - lastX + ',' + -(nextY - lastY), 'z'].join(' ');

	    lastX = nextX;
	    lastY = nextY;

	    return _react2.default.createElement('path', { d: d, fill: color, key: index });
	  });
	}

	/**
	 * Generates an SVG pie chart.
	 * @see {http://wiki.scribus.net/canvas/Making_a_Pie_Chart}
	 */

	var PieChart = (function (_React$Component) {
	  _inherits(PieChart, _React$Component);

	  function PieChart() {
	    _classCallCheck(this, PieChart);

	    return _possibleConstructorReturn(this, Object.getPrototypeOf(PieChart).apply(this, arguments));
	  }

	  _createClass(PieChart, [{
	    key: 'render',

	    /**
	     * @return {Object}
	     */
	    value: function render() {
	      return _react2.default.createElement(
	        'svg',
	        { viewBox: '0 0 ' + size + ' ' + size },
	        _react2.default.createElement(
	          'g',
	          { transform: 'rotate(-90 ' + center + ' ' + center + ')' },
	          renderPaths(this.props.slices)
	        )
	      );
	    }
	  }]);

	  return PieChart;
	})(_react2.default.Component);

	exports.default = PieChart;

	PieChart.propTypes = {
	  slices: _propTypes2.default.arrayOf(_propTypes2.default.shape({
	    color: _propTypes2.default.string.isRequired, // hex color
	    value: _propTypes2.default.number.isRequired
	  })).isRequired
	};
	module.exports = exports['default'];


/***/ }),
/* 615 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _reactRouterDom = __webpack_require__(203);

	var _page_worker_initial = __webpack_require__(616);

	var _page_worker_initial2 = _interopRequireDefault(_page_worker_initial);

	var _page_worker_report_details = __webpack_require__(619);

	var _page_worker_report_details2 = _interopRequireDefault(_page_worker_report_details);

	var _page_worker_map = __webpack_require__(620);

	var _page_worker_map2 = _interopRequireDefault(_page_worker_map);

	var _page_worker_profile = __webpack_require__(622);

	var _page_worker_profile2 = _interopRequireDefault(_page_worker_profile);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	// Pages
	// 3rd Party
	var WorkerRouter = function WorkerRouter(props) {
	    return _react2.default.createElement(
	        _reactRouterDom.Switch,
	        null,
	        _react2.default.createElement(_reactRouterDom.Route, { path: '/app/worker/reports/details/:id', component: _page_worker_report_details2.default }),
	        _react2.default.createElement(_reactRouterDom.Route, { path: '/app/worker/reports', component: _page_worker_initial2.default }),
	        _react2.default.createElement(_reactRouterDom.Route, { path: '/app/worker/map', component: _page_worker_map2.default }),
	        _react2.default.createElement(_reactRouterDom.Route, { path: '/app/worker/profile', component: _page_worker_profile2.default })
	    );
	};

	exports.default = WorkerRouter;

/***/ }),
/* 616 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _reactRedux = __webpack_require__(160);

	var _reactRouterDom = __webpack_require__(203);

	var _report_list_worker = __webpack_require__(617);

	var _report_list_worker2 = _interopRequireDefault(_report_list_worker);

	var _button_filters = __webpack_require__(576);

	var _button_filters2 = _interopRequireDefault(_button_filters);

	var _filter_field = __webpack_require__(577);

	var _filter_field2 = _interopRequireDefault(_filter_field);

	var _side_menu = __webpack_require__(575);

	var _side_menu2 = _interopRequireDefault(_side_menu);

	var _actions_workers = __webpack_require__(586);

	var _actions_reports = __webpack_require__(327);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	// Components 


	// Actions 


	var WorkerReportPage = function (_Component) {
	    _inherits(WorkerReportPage, _Component);

	    function WorkerReportPage(props) {
	        _classCallCheck(this, WorkerReportPage);

	        var _this = _possibleConstructorReturn(this, (WorkerReportPage.__proto__ || Object.getPrototypeOf(WorkerReportPage)).call(this, props));

	        _this.state = {
	            menuActiveRight: false
	        };
	        return _this;
	    }

	    _createClass(WorkerReportPage, [{
	        key: 'componentWillMount',
	        value: function componentWillMount() {

	            //this.props.clearSelectedReports();
	            this.props.dispatch((0, _actions_reports.clearSelectedReports)(token));
	            var token = JSON.parse(localStorage.getItem('token'));
	            //this.props.getWorkerReports(token);
	            this.props.dispatch((0, _actions_workers.getWorkerReports)(token));

	            console.log("PROPS", this.props);
	        }
	    }, {
	        key: 'componentDidMount',
	        value: function componentDidMount() {
	            var token = JSON.parse(localStorage.getItem('token'));
	            //this.props.getWorkerReports(token);
	            this.props.dispatch((0, _actions_workers.getWorkerReports)(token));
	        }

	        //onMapRedirect() {
	        //    localStorage.setItem("workerReports", JSON.stringify(this.props.selectedWorkerReports));
	        //}

	    }, {
	        key: 'toggleFilterPanel',
	        value: function toggleFilterPanel() {
	            this.setState({ menuActiveRight: !this.state.menuActiveRight });
	        }
	    }, {
	        key: 'onQuitRightSideMenuClick',
	        value: function onQuitRightSideMenuClick(event) {
	            event.preventDefault();
	            this.setState({ menuActiveRight: false });
	        }
	    }, {
	        key: 'reportStateFilter',
	        value: function reportStateFilter(event) {
	            var _event$target = event.target,
	                name = _event$target.name,
	                checked = _event$target.checked;

	            console.log(name, checked);
	            if (checked) {
	                this.props.dispatch((0, _actions_reports.addStateFilter)(name));
	            } else {
	                this.props.dispatch((0, _actions_reports.removeStateFilter)(name));
	            }
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            var _this2 = this;

	            var username = JSON.parse(localStorage.getItem('token')).user;
	            var unresolvedReports = 0;
	            console.log("ADDED NOW", this.props.workerReports);
	            this.props.workerReports.reports.map(function (item) {
	                if (item.statusDescription === 'Pendente' || item.statusDescription === 'Em Resolução') {
	                    unresolvedReports++;
	                }
	            });

	            var mapBttn = void 0;
	            if (this.props.selectedWorkerReports.length >= 1) {
	                console.log("Entered renderMapLinkBttn");
	                mapBttn = _react2.default.createElement(
	                    'div',
	                    { className: 'buttonToMap' },
	                    _react2.default.createElement(
	                        _reactRouterDom.Link,
	                        { className: 'btn btn-primary form-control mt-2 mb-5',
	                            role: 'button',
	                            to: '/app/worker/map' },
	                        ' Ver no Mapa '
	                    )
	                );
	            }

	            return _react2.default.createElement(
	                'div',
	                { className: 'container h-100 w-100' },
	                _react2.default.createElement(
	                    'div',
	                    { className: 'row justify-content-left' },
	                    _react2.default.createElement(
	                        'div',
	                        { className: 'workerWelcoming' },
	                        _react2.default.createElement(
	                            'h4',
	                            null,
	                            ' Bem vindo, ',
	                            username,
	                            '!'
	                        ),
	                        _react2.default.createElement(
	                            'h6',
	                            null,
	                            ' Tem actualmente ',
	                            unresolvedReports,
	                            ' ocorr\xEAncia(s) por resolver.'
	                        )
	                    )
	                ),
	                _react2.default.createElement(_report_list_worker2.default, { history: this.props.history, reports: this.props.workerReports.reports }),
	                _react2.default.createElement(
	                    'div',
	                    { className: 'row justify-content-left' },
	                    mapBttn
	                ),
	                this.state.menuActiveRight && _react2.default.createElement(
	                    _side_menu2.default,
	                    { side: 'right' },
	                    _react2.default.createElement(
	                        'a',
	                        { href: '#', className: 'quit text-muted btn btn-primary', onClick: function onClick(event) {
	                                return _this2.onQuitRightSideMenuClick(event);
	                            } },
	                        '\xD7'
	                    ),
	                    _react2.default.createElement(
	                        'h4',
	                        { className: 'text-muted' },
	                        'Filtrar por Estado:'
	                    ),
	                    _react2.default.createElement('hr', null),
	                    _react2.default.createElement(_filter_field2.default, { name: 'Pendente', onChange: this.reportStateFilter.bind(this) }),
	                    _react2.default.createElement(_filter_field2.default, { name: 'Em Resolu\xE7\xE3o', onChange: this.reportStateFilter.bind(this) }),
	                    _react2.default.createElement(_filter_field2.default, { name: 'Resolvido', onChange: this.reportStateFilter.bind(this) }),
	                    _react2.default.createElement(_filter_field2.default, { name: 'Rejeitado', onChange: this.reportStateFilter.bind(this) })
	                ),
	                _react2.default.createElement(_button_filters2.default, { onClick: this.toggleFilterPanel.bind(this) })
	            );
	        }
	    }]);

	    return WorkerReportPage;
	}(_react.Component);

	/*
	function mapStateToProps({ workerReports, selectedWorkerReports }) {
	    return { workerReports, selectedWorkerReports };
	}
	*/

	function mapStateToProps(store) {
	    return {
	        workerReports: store.workerReports,
	        selectedWorkerReports: store.selectedWorkerReports

	    };
	}

	exports.default = (0, _reactRedux.connect)(mapStateToProps)(WorkerReportPage);

/***/ }),
/* 617 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _report_item_worker = __webpack_require__(618);

	var _report_item_worker2 = _interopRequireDefault(_report_item_worker);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	// Components


	var WorkerReportList = function (_Component) {
	    _inherits(WorkerReportList, _Component);

	    function WorkerReportList() {
	        _classCallCheck(this, WorkerReportList);

	        return _possibleConstructorReturn(this, (WorkerReportList.__proto__ || Object.getPrototypeOf(WorkerReportList)).apply(this, arguments));
	    }

	    _createClass(WorkerReportList, [{
	        key: 'render',
	        value: function render() {
	            var _this2 = this;

	            var workerReports = void 0;
	            if (this.props.reports) {
	                workerReports = this.props.reports.map(function (item) {
	                    return _react2.default.createElement(_report_item_worker2.default, { history: _this2.props.history, key: item.id, item: item });
	                });
	            }
	            return _react2.default.createElement(
	                'div',
	                { className: 'container-fluid workerReportList' },
	                _react2.default.createElement(
	                    'div',
	                    { className: 'worker_report_table' },
	                    _react2.default.createElement(
	                        'table',
	                        { className: 'table header-fixed' },
	                        _react2.default.createElement(
	                            'thead',
	                            null,
	                            _react2.default.createElement(
	                                'tr',
	                                null,
	                                _react2.default.createElement(
	                                    'th',
	                                    null,
	                                    'Prioridade'
	                                ),
	                                _react2.default.createElement(
	                                    'th',
	                                    null,
	                                    'Tipo'
	                                ),
	                                _react2.default.createElement(
	                                    'th',
	                                    null,
	                                    'Estado'
	                                ),
	                                _react2.default.createElement(
	                                    'th',
	                                    null,
	                                    'Concelho'
	                                ),
	                                _react2.default.createElement(
	                                    'th',
	                                    null,
	                                    'Descri\xE7\xE3o'
	                                )
	                            )
	                        ),
	                        _react2.default.createElement(
	                            'tbody',
	                            null,
	                            workerReports
	                        )
	                    )
	                )
	            );
	        }
	    }]);

	    return WorkerReportList;
	}(_react.Component);

	exports.default = WorkerReportList;

/***/ }),
/* 618 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _reactRedux = __webpack_require__(160);

	var _reactRouterDom = __webpack_require__(203);

	var _actions_reports = __webpack_require__(327);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	// Actions 


	var statuses = {
	    WAITING: "Pendente",
	    IN_RESOLUTION: "Em Resolução",
	    REJECTED: "Rejeitado",
	    SOLVED: "Resolvido"
	};

	var WorkerReportItem = function (_Component) {
	    _inherits(WorkerReportItem, _Component);

	    function WorkerReportItem() {
	        _classCallCheck(this, WorkerReportItem);

	        return _possibleConstructorReturn(this, (WorkerReportItem.__proto__ || Object.getPrototypeOf(WorkerReportItem)).apply(this, arguments));
	    }

	    _createClass(WorkerReportItem, [{
	        key: 'changeStatusColorProperty',
	        value: function changeStatusColorProperty(color) {
	            var id = "workerReport-" + this.props.item.id;
	            $('#' + id + ' i').css('color', color);
	            $('#' + id + ' span').css('color', color);
	        }
	    }, {
	        key: 'setStatusProperties',
	        value: function setStatusProperties() {
	            switch (this.props.item.statusDescription) {
	                case statuses.WAITING:
	                    this.changeStatusColorProperty('#959595');
	                    break;
	                case statuses.IN_RESOLUTION:
	                    this.changeStatusColorProperty('#FCF004');
	                    break;
	                case statuses.REJECTED:
	                    this.changeStatusColorProperty('#FF0000');
	                    break;
	                case statuses.SOLVED:
	                    this.changeStatusColorProperty('#00FF00');
	            }
	        }
	    }, {
	        key: 'componentWillMount',
	        value: function componentWillMount() {
	            var id = this.props.item.id;
	            var switchName = 'switch-' + id;
	            var rowId = "row-" + this.props.item.id;

	            var handleSwitchEvent = function handleSwitchEvent(event) {
	                var array = this.props.selectedWorkerReports;
	                var report = this.props.item;
	                var index = array.indexOf(report);

	                if (index === -1) {
	                    this.props.selectReport(report);
	                    $('#' + rowId).css('background', '#CAD8D3');
	                    console.log("Report was added", this.props.selectedWorkerReports);
	                } else {
	                    this.props.unselectReport(index);
	                    $('#' + rowId).css('background', 'white');
	                    console.log("Report was deleted", this.props.selectedWorkerReports);
	                }

	                event.preventDefault();
	            };

	            //$(`[name=${switchName}]`).on('change', handleSwitchEvent.bind(this));

	            $('#' + rowId).on('click', handleSwitchEvent.bind(this));

	            this.setStatusProperties();
	        }
	    }, {
	        key: 'componentDidMount',
	        value: function componentDidMount() {
	            var id = this.props.item.id;
	            var switchName = 'switch-' + id;
	            var rowId = "row-" + this.props.item.id;

	            var handleSwitchEvent = function handleSwitchEvent(event) {
	                var array = this.props.selectedWorkerReports;
	                var report = this.props.item;
	                var index = array.indexOf(report);

	                if (index === -1) {
	                    this.props.selectReport(report);
	                    $('#' + rowId).css('background', '#CAD8D3');
	                    console.log("Report was added", this.props.selectedWorkerReports);
	                } else {
	                    this.props.unselectReport(index);
	                    $('#' + rowId).css('background', 'white');
	                    console.log("Report was deleted", this.props.selectedWorkerReports);
	                }
	                event.preventDefault();
	            };
	            //$(`[name=${switchName}]`).on('change', handleSwitchEvent.bind(this));


	            $('#' + rowId).on('click', handleSwitchEvent.bind(this));

	            this.setStatusProperties();
	        }
	    }, {
	        key: 'componentWillUpdate',
	        value: function componentWillUpdate() {
	            this.setStatusProperties();
	            var report = this.props.item;
	            var rowId = "row-" + this.props.item.id;
	            if (this.props.selectedWorkerReports.indexOf(report) !== -1) {
	                $('#' + rowId).css('background', '#CAD8D3');
	            } else {
	                $('#' + rowId).css('background', 'white');
	            }
	        }
	    }, {
	        key: 'componentDidUpdate',
	        value: function componentDidUpdate() {
	            this.setStatusProperties();
	            var report = this.props.item;
	            var rowId = "row-" + this.props.item.id;
	            if (this.props.selectedWorkerReports.indexOf(report) !== -1) {
	                $('#' + rowId).css('background', '#CAD8D3');
	            } else {
	                $('#' + rowId).css('background', 'white');
	            }
	        }
	    }, {
	        key: 'handleDetailsRedirect',
	        value: function handleDetailsRedirect() {
	            console.log("props", this.props);
	            this.props.history.push('/app/worker/reports/details/' + this.props.item.id);
	        }

	        /*
	        onRow() {
	            const rowId = "row-" + this.props.item.id;
	            $(`#${rowId}`).css('background', '#CAD8D3');
	        }
	         offRow() {
	            const rowId = "row-" + this.props.item.id;
	            $(`#${rowId}`).css('background', 'white');
	        }
	        */

	    }, {
	        key: 'render',
	        value: function render() {
	            var id = "workerReport-" + this.props.item.id;
	            var rowId = "row-" + this.props.item.id;
	            //const detailsLink = "/app/worker/reports/details/" + this.props.item.id;

	            return _react2.default.createElement(
	                'tr',
	                {
	                    //onMouseLeave={this.offRow.bind(this)} 
	                    //onMouseEnter={this.onRow.bind(this)} 
	                    onDoubleClick: this.handleDetailsRedirect.bind(this),
	                    id: '' + rowId
	                },
	                _react2.default.createElement(
	                    'td',
	                    null,
	                    this.props.item.priority
	                ),
	                _react2.default.createElement(
	                    'td',
	                    null,
	                    this.props.item.type
	                ),
	                _react2.default.createElement(
	                    'td',
	                    null,
	                    _react2.default.createElement(
	                        'div',
	                        { id: '' + id, className: 'reportStatus' },
	                        _react2.default.createElement(
	                            'span',
	                            null,
	                            this.props.item.statusDescription
	                        ),
	                        _react2.default.createElement('i', { className: 'fa fa-circle', 'aria-hidden': 'true' })
	                    )
	                ),
	                _react2.default.createElement(
	                    'td',
	                    null,
	                    this.props.item.address.county
	                ),
	                _react2.default.createElement(
	                    'td',
	                    null,
	                    this.props.item.description
	                )
	            );
	        }
	    }]);

	    return WorkerReportItem;
	}(_react.Component);

	function mapStateToProps(_ref) {
	    var selectedWorkerReports = _ref.selectedWorkerReports;

	    return { selectedWorkerReports: selectedWorkerReports };
	}

	exports.default = (0, _reactRedux.connect)(mapStateToProps, { selectReport: _actions_reports.selectReport, unselectReport: _actions_reports.unselectReport })(WorkerReportItem);

/***/ }),
/* 619 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _reactRedux = __webpack_require__(160);

	var _axios = __webpack_require__(253);

	var _axios2 = _interopRequireDefault(_axios);

	var _config = __webpack_require__(279);

	var _config2 = _interopRequireDefault(_config);

	var _comment_item = __webpack_require__(570);

	var _comment_item2 = _interopRequireDefault(_comment_item);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _objectDestructuringEmpty(obj) { if (obj == null) throw new TypeError("Cannot destructure undefined"); }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	// Components 


	var markerColors = {
	    "Pendente": "#959595",
	    "Em Resolução": "#FCF004",
	    "Resolvido": "#00FF00",
	    "Rejeitado": "#FF0000"
	};

	var PRIORITY_LEVELS = [1, 2, 3, 4, 5];

	var WorkerReportDetailsPage = function (_Component) {
	    _inherits(WorkerReportDetailsPage, _Component);

	    function WorkerReportDetailsPage(props) {
	        _classCallCheck(this, WorkerReportDetailsPage);

	        var _this = _possibleConstructorReturn(this, (WorkerReportDetailsPage.__proto__ || Object.getPrototypeOf(WorkerReportDetailsPage)).call(this, props));

	        _this.state = {
	            report: '',
	            comments: []
	        };
	        return _this;
	    }

	    _createClass(WorkerReportDetailsPage, [{
	        key: 'loadReportDetails',
	        value: function loadReportDetails() {
	            var _this2 = this;

	            var token = JSON.parse(localStorage.getItem('token'));
	            var id = this.props.match.params.id;
	            _axios2.default.post(_config2.default + '/report/reportById/' + id, token).then(function (response) {
	                if (response.status === 200) {
	                    console.log("report", response.data);
	                    _this2.setState({ report: response.data });
	                    $("#statusSelectList").val('' + _this2.state.report.statusDescription);
	                }
	            }).catch(function (err) {
	                console.log("An error occured while trying to load report details.");
	            });
	        }
	    }, {
	        key: 'componentWillMount',
	        value: function componentWillMount() {
	            this.loadReportDetails();
	        }
	    }, {
	        key: 'handleSubmit',
	        value: function handleSubmit() {
	            var _this3 = this;

	            var alert = this.refs.alert;

	            var token = JSON.parse(localStorage.getItem('token'));
	            var id = this.props.match.params.id;
	            var newStatus = $("#statusSelectList").val();
	            var description = $("#statusTextarea").val();

	            console.log("newStatus", newStatus);
	            console.log("desc", description);

	            var status = {
	                statusDescription: newStatus,
	                description: description
	            };

	            if (this.validDescription(description)) {
	                _axios2.default.post(_config2.default + '/backoffice/report/change/' + id, { token: token, status: status }).then(function (response) {
	                    if (response.status === 200) {
	                        console.log("response", response);

	                        var newReport = _this3.state.report;
	                        newReport.statusDescription = response.data.statusDescription;
	                        _this3.setState({ report: newReport });
	                        console.log("newReport", _this3.state.report);

	                        alert.classList.remove('d-none');
	                        alert.classList.add('text-success');
	                        alert.innerHTML = 'Actualização de estado realizada com sucesso.';
	                        setTimeout(function () {
	                            alert.classList.add('d-none');
	                            alert.classList.remove('text-success');
	                            alert.innerHTML = '';
	                            $("#statusTextarea").val("");
	                            _this3.goBack();
	                        }, 3000);
	                    }
	                }).catch(function (err) {
	                    console.log("An error occured when trying to update this report status.");

	                    if (err.response.status === 409) {
	                        alert.classList.remove('d-none');
	                        alert.classList.add('text-danger');
	                        alert.innerHTML = 'Esta ocorrência já possui o estado introduzido.';
	                        setTimeout(function () {
	                            alert.classList.add('d-none');
	                            alert.classList.remove('text-danger');
	                            alert.innerHTML = '';
	                            $("#statusTextarea").val("");
	                        }, 3000);
	                    }
	                });
	            } else {
	                alert.classList.remove('d-none');
	                alert.classList.add('text-danger');
	                alert.innerHTML = 'Descrição da mudança de estado é obrigatória.';
	                setTimeout(function () {
	                    alert.classList.add('d-none');
	                    alert.classList.remove('text-danger');
	                    alert.innerHTML = '';
	                    $("#statusTextarea").val("");
	                }, 3000);
	            }
	        }
	    }, {
	        key: 'getComments',
	        value: function getComments(id, token) {
	            var _this4 = this;

	            _axios2.default.post(_config2.default + '/report/getComments/' + id, token).then(function (response) {
	                var comments = response.data;
	                _this4.setState({ comments: comments });
	                console.log('Comments:', comments);
	            }).catch(function (error) {
	                console.log('Error fetching comments...', error);
	            });
	        }
	    }, {
	        key: 'renderCommentSection',
	        value: function renderCommentSection() {
	            var commentItems = this.state.comments.map(function (comment, i) {
	                return _react2.default.createElement(_comment_item2.default, { key: i, comment: comment });
	            });
	            return _react2.default.createElement(
	                'div',
	                null,
	                _react2.default.createElement(
	                    'a',
	                    { href: '/index.html', className: 'dropdown-toggle d-block mb-2', onClick: function onClick(event) {
	                            return event.preventDefault();
	                        } },
	                    'Coment\xE1rios: (',
	                    commentItems.length,
	                    ')'
	                ),
	                commentItems
	            );
	        }
	    }, {
	        key: 'validDescription',
	        value: function validDescription(description) {
	            if (!description || description.length === 0) {
	                return false;
	            }
	            return true;
	        }
	    }, {
	        key: 'goBack',
	        value: function goBack() {
	            this.props.history.push('/app/worker/reports');
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            var report = this.state.report;
	            return _react2.default.createElement(
	                'div',
	                { className: 'container h-100' },
	                _react2.default.createElement(
	                    'div',
	                    { className: 'row' },
	                    _react2.default.createElement(
	                        'div',
	                        { className: 'col-md-2 goBackBttnItem' },
	                        _react2.default.createElement(
	                            'i',
	                            { onClick: this.goBack.bind(this), className: 'fa fa-arrow-left', 'aria-hidden': 'true' },
	                            ' ',
	                            _react2.default.createElement(
	                                'span',
	                                { id: 'goBackLabel' },
	                                ' Voltar '
	                            )
	                        )
	                    )
	                ),
	                _react2.default.createElement(
	                    'div',
	                    { className: 'row justify-content-left custom-container mt-2' },
	                    _react2.default.createElement(
	                        'div',
	                        { className: 'col-md-6' },
	                        _react2.default.createElement(
	                            'figure',
	                            null,
	                            _react2.default.createElement('img', { src: report.imageUrl, className: 'w-100 details-image' })
	                        ),
	                        _react2.default.createElement(
	                            'div',
	                            { className: 'row my-3' },
	                            _react2.default.createElement(
	                                'div',
	                                { className: 'col' },
	                                _react2.default.createElement(
	                                    'strong',
	                                    null,
	                                    'Morada:'
	                                ),
	                                ' ',
	                                report.addressAsStreet
	                            )
	                        ),
	                        _react2.default.createElement(
	                            'div',
	                            { className: 'row my-3' },
	                            _react2.default.createElement(
	                                'div',
	                                { className: 'col' },
	                                _react2.default.createElement(
	                                    'strong',
	                                    null,
	                                    'Tipo:'
	                                ),
	                                ' ',
	                                report.type
	                            )
	                        ),
	                        _react2.default.createElement(
	                            'div',
	                            { className: 'row my-3' },
	                            _react2.default.createElement(
	                                'div',
	                                { className: 'col' },
	                                _react2.default.createElement(
	                                    'strong',
	                                    null,
	                                    'Estado:'
	                                ),
	                                ' ',
	                                report.statusDescription,
	                                _react2.default.createElement('i', { className: 'fa fa-circle i', 'aria-hidden': 'true', style: { color: markerColors[report.statusDescription] } })
	                            )
	                        ),
	                        _react2.default.createElement(
	                            'div',
	                            { className: 'row my-3' },
	                            _react2.default.createElement(
	                                'div',
	                                { className: 'col' },
	                                _react2.default.createElement(
	                                    'strong',
	                                    null,
	                                    'Descri\xE7\xE3o:'
	                                ),
	                                _react2.default.createElement('br', null),
	                                report.description
	                            )
	                        ),
	                        _react2.default.createElement(
	                            'div',
	                            { className: 'row my-3' },
	                            _react2.default.createElement(
	                                'div',
	                                { className: 'col' },
	                                this.renderCommentSection()
	                            )
	                        )
	                    ),
	                    _react2.default.createElement(
	                        'div',
	                        { className: 'col-md-5' },
	                        _react2.default.createElement(
	                            'div',
	                            { className: 'updateReportStatusArea' },
	                            _react2.default.createElement(
	                                'h6',
	                                null,
	                                ' Actualizar estado da ocorr\xEAncia: '
	                            ),
	                            _react2.default.createElement(
	                                'div',
	                                { className: 'form-group' },
	                                _react2.default.createElement(
	                                    'select',
	                                    { className: 'form-control', id: 'statusSelectList' },
	                                    _react2.default.createElement(
	                                        'option',
	                                        null,
	                                        ' Resolvido '
	                                    ),
	                                    _react2.default.createElement(
	                                        'option',
	                                        null,
	                                        ' Em Resolu\xE7\xE3o '
	                                    ),
	                                    _react2.default.createElement(
	                                        'option',
	                                        null,
	                                        ' Rejeitado '
	                                    ),
	                                    _react2.default.createElement(
	                                        'option',
	                                        null,
	                                        ' Pendente '
	                                    )
	                                ),
	                                _react2.default.createElement('textarea', { className: 'form-control input-sm mt-2', placeholder: 'Descri\xE7\xE3o', id: 'statusTextarea' }),
	                                _react2.default.createElement(
	                                    'button',
	                                    { className: 'btn btn-primary form-control mt-3',
	                                        onClick: this.handleSubmit.bind(this) },
	                                    ' Actualizar '
	                                ),
	                                _react2.default.createElement('div', { className: 'submit-error', ref: 'alert' })
	                            )
	                        )
	                    )
	                )
	            );
	        }
	    }]);

	    return WorkerReportDetailsPage;
	}(_react.Component);

	function mapStateToProps(_ref) {
	    _objectDestructuringEmpty(_ref);

	    return {};
	}

	exports.default = (0, _reactRedux.connect)(mapStateToProps, {})(WorkerReportDetailsPage);

/***/ }),
/* 620 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _reactRedux = __webpack_require__(160);

	var _reactRouterDom = __webpack_require__(203);

	var _axios = __webpack_require__(253);

	var _axios2 = _interopRequireDefault(_axios);

	var _config = __webpack_require__(279);

	var _config2 = _interopRequireDefault(_config);

	var _map_google_worker = __webpack_require__(621);

	var _map_google_worker2 = _interopRequireDefault(_map_google_worker);

	var _side_menu = __webpack_require__(575);

	var _side_menu2 = _interopRequireDefault(_side_menu);

	var _actions_reports = __webpack_require__(327);

	var _actions_interval_reports = __webpack_require__(326);

	var _actions_workers = __webpack_require__(586);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	// Components 


	// Actions


	var markerColors = {
	    "Pendente": "#959595",
	    "Em Resolução": "#FCF004",
	    "Resolvido": "#00FF00",
	    "Rejeitado": "#FF0000"
	};

	var WorkerMapPage = function (_Component) {
	    _inherits(WorkerMapPage, _Component);

	    function WorkerMapPage(props) {
	        _classCallCheck(this, WorkerMapPage);

	        var _this = _possibleConstructorReturn(this, (WorkerMapPage.__proto__ || Object.getPrototypeOf(WorkerMapPage)).call(this, props));

	        _this.state = {
	            menuActive: false,
	            selectedReport: null,
	            selectedState: null
	        };
	        return _this;
	    }

	    _createClass(WorkerMapPage, [{
	        key: 'onQuitRightSideMenuClick',
	        value: function onQuitRightSideMenuClick(event) {
	            event.preventDefault();
	            this.setState({ menuActive: false });
	        }
	    }, {
	        key: 'componentWillMount',
	        value: function componentWillMount() {
	            var token = JSON.parse(localStorage.getItem('token'));
	            if (this.props.selectedWorkerReports.length === 0) {
	                this.props.getWorkerReports(token);
	            }
	        }
	    }, {
	        key: 'goBack',
	        value: function goBack() {
	            this.props.history.push('/app/worker/reports');
	        }
	    }, {
	        key: 'onMarkerClick',
	        value: function onMarkerClick(reportId) {
	            console.log("workerReports", this.props.workerReports.reports);
	            console.log("reportId", reportId);
	            var report = this.props.workerReports.reports.find(function (report) {
	                return report.id === reportId;
	            });

	            //console.log('SELECTED REPORT CRL', this.props.reports.reports[reportId].report);
	            console.log('SELECTED REPORT CRL', report);
	            //this.setState({ menuActive: true, selectedReport: this.props.reports.reports[reportId].report });
	            this.setState({ menuActive: true, selectedReport: report });
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            var _this2 = this;

	            var btnClasses = 'd-flex justify-content-center align-items-center btn btn-danger rounded-circle';
	            console.log("workerReports", this.props.workerReports.reports);

	            var reports = void 0;
	            if (this.props.selectedWorkerReports.length !== 0) {
	                reports = this.props.selectedWorkerReports;
	            } else {
	                reports = this.props.workerReports.reports;
	            }

	            var descriptionTextarea = void 0;
	            if (this.state.selectedState) {
	                descriptionTextarea = _react2.default.createElement('textarea', { placeholder: 'Insira uma descri\xE7\xE3o', className: 'w-75 mt-4 form-control' });
	            }

	            return _react2.default.createElement(
	                'div',
	                { className: 'h-100' },
	                this.state.menuActive && _react2.default.createElement(
	                    _side_menu2.default,
	                    { side: 'left' },
	                    _react2.default.createElement(
	                        'a',
	                        { href: '#', className: 'quit text-muted btn btn-primary', onClick: function onClick(event) {
	                                return _this2.onQuitRightSideMenuClick(event);
	                            } },
	                        '\xD7'
	                    ),
	                    _react2.default.createElement('img', { className: 'details-image', src: this.state.selectedReport.imageUrl }),
	                    _react2.default.createElement(
	                        'div',
	                        { className: 'row my-3' },
	                        _react2.default.createElement(
	                            'div',
	                            { className: 'col' },
	                            _react2.default.createElement(
	                                'strong',
	                                null,
	                                'Morada:'
	                            ),
	                            ' ',
	                            this.state.selectedReport.addressAsStreet
	                        )
	                    ),
	                    _react2.default.createElement(
	                        'div',
	                        { className: 'row my-3' },
	                        _react2.default.createElement(
	                            'div',
	                            { className: 'col' },
	                            _react2.default.createElement(
	                                'strong',
	                                null,
	                                'Tipo:'
	                            ),
	                            ' ',
	                            this.state.selectedReport.type
	                        )
	                    ),
	                    _react2.default.createElement(
	                        'div',
	                        { className: 'row my-3' },
	                        _react2.default.createElement(
	                            'div',
	                            { className: 'col' },
	                            _react2.default.createElement(
	                                'strong',
	                                null,
	                                'Estado:'
	                            ),
	                            ' ',
	                            this.state.selectedReport.statusDescription,
	                            _react2.default.createElement('i', { className: 'fa fa-circle', 'aria-hidden': 'true', style: { color: markerColors[this.state.selectedReport.statusDescription] } })
	                        )
	                    ),
	                    _react2.default.createElement(
	                        'div',
	                        { className: 'row my-3' },
	                        _react2.default.createElement(
	                            'div',
	                            { className: 'col' },
	                            _react2.default.createElement(
	                                'strong',
	                                null,
	                                'Descri\xE7\xE3o:'
	                            ),
	                            _react2.default.createElement('br', null),
	                            this.state.selectedReport.description
	                        )
	                    ),
	                    _react2.default.createElement(
	                        'div',
	                        { className: 'row my-3' },
	                        _react2.default.createElement(
	                            'div',
	                            { className: 'col text-right' },
	                            _react2.default.createElement(
	                                _reactRouterDom.Link,
	                                { to: '/app/worker/reports/details/' + this.state.selectedReport.id },
	                                'Ver mais >>'
	                            )
	                        )
	                    )
	                ),
	                _react2.default.createElement(_map_google_worker2.default, {
	                    initialLat: 38.6359837,
	                    initialLng: -9.1874799,
	                    reports: reports,
	                    onMarkerClick: this.onMarkerClick.bind(this)
	                }),
	                _react2.default.createElement(
	                    'div',
	                    { className: 'd-flex justify-content-center align-items-center goBackBttnItemMap' },
	                    _react2.default.createElement(
	                        'i',
	                        { onClick: this.goBack.bind(this), className: 'fa fa-arrow-left', 'aria-hidden': 'true' },
	                        _react2.default.createElement(
	                            'span',
	                            null,
	                            ' Voltar '
	                        ),
	                        ' '
	                    )
	                )
	            );
	        }
	    }]);

	    return WorkerMapPage;
	}(_react.Component);

	function mapStateToProps(store) {
	    return {
	        selectedWorkerReports: store.selectedWorkerReports,
	        workerReports: store.workerReports
	    };
	}

	exports.default = (0, _reactRedux.connect)(mapStateToProps, { getWorkerReports: _actions_workers.getWorkerReports })(WorkerMapPage);

/***/ }),
/* 621 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _geojson = __webpack_require__(573);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	//
	var markerColors = {
	    "Pendente": "959595",
	    "Em Resolução": "FCF004",
	    "Resolvido": "00FF00",
	    "Rejeitado": "FF0000"
	};

	var ownMarkerIcons = {
	    "Pendente": "icon_pendente.png",
	    "Em Resolução": "icon_resolucao.png",
	    "Resolvido": "icon_resolvido.png",
	    "Rejeitado": "icon_rejeitado.png"
	};

	var GoogleMapWorker = function (_Component) {
	    _inherits(GoogleMapWorker, _Component);

	    function GoogleMapWorker() {
	        _classCallCheck(this, GoogleMapWorker);

	        return _possibleConstructorReturn(this, (GoogleMapWorker.__proto__ || Object.getPrototypeOf(GoogleMapWorker)).apply(this, arguments));
	    }

	    _createClass(GoogleMapWorker, [{
	        key: 'shouldComponentUpdate',
	        value: function shouldComponentUpdate() {
	            return false;
	        }
	    }, {
	        key: 'componentDidMount',
	        value: function componentDidMount() {
	            var _this2 = this;

	            // Instanciate the map and put it in the DOM.
	            this.map = new google.maps.Map(this.refs.map, {
	                scrollwheel: true,
	                disableDefaultUI: true,
	                disableDoubleClickZoom: true,
	                zoom: 13,
	                center: {
	                    lat: this.props.initialLat,
	                    lng: this.props.initialLng
	                }
	            });
	            // Adiciona máscara e delimitações ao mapa
	            this.map.data.add({ geometry: new google.maps.Data.Polygon([_geojson.innerCoords, _geojson.outerCoords]) });
	            this.map.data.setStyle({ strokeWeight: 1, strokeOpacity: 0 });
	            /*
	               Se o utilizador der permissão para aceder à sua localização,
	               centra na localização do mesmo.
	            */
	            if (navigator.geolocation) {
	                navigator.geolocation.getCurrentPosition(function (position) {
	                    var pos = {
	                        lat: position.coords.latitude,
	                        lng: position.coords.longitude
	                    };

	                    _this2.map.setCenter(pos);
	                });
	            }
	            //this.markers = this.buildMarkersArray(this.props.reports);
	            //this.showMarkers();
	            console.log('Reports:', this.props.reports);
	            this.markers = this.props.reports.map(function (report) {
	                return new google.maps.Marker({
	                    //icon: `https://chart.apis.google.com/chart?chst=d_map_pin_letter&chld=%E2%80%A2|${markerColors[report.statusDescription]}`,
	                    icon: {
	                        url: '/img/' + ownMarkerIcons[report.statusDescription],
	                        scaledSize: new google.maps.Size(35, 50)
	                    },

	                    position: { lat: report.lat, lng: report.lng },
	                    reportId: report.id
	                });
	            });
	            console.log("before show markers", this.markers);
	            this.showMarkers();
	        }
	    }, {
	        key: 'componentWillReceiveProps',
	        value: function componentWillReceiveProps(nextProps) {}

	        /*
	           Extrai os markers de cada propriedade de reports e constrói um array
	           de markers.
	        */

	    }, {
	        key: 'buildMarkersArray',
	        value: function buildMarkersArray(reports) {
	            var _this3 = this;

	            var arr = [];

	            var _loop = function _loop(id) {
	                var report = reports[id];
	                var marker = report.marker;
	                marker.reportId = id;
	                marker.addListener('click', function () {
	                    console.log('ReportID:', marker.reportId);
	                    _this3.props.onMarkerClick(marker.reportId);
	                });
	                arr.push(marker);
	            };

	            for (var id in reports) {
	                _loop(id);
	            }
	            return arr;
	        }

	        // Torna todos os marcadores visíveis no mapa

	    }, {
	        key: 'showMarkers',
	        value: function showMarkers() {
	            var _this4 = this;

	            console.log("on show markers", this.markers);

	            //var directionsService = new google.maps.DirectionsService;
	            //var directionsDisplay = new google.maps.DirectionsRenderer;

	            var _iteratorNormalCompletion = true;
	            var _didIteratorError = false;
	            var _iteratorError = undefined;

	            try {
	                var _loop2 = function _loop2() {
	                    var marker = _step.value;

	                    marker.addListener('click', function () {
	                        console.log("A marker was clicked.");
	                        _this4.props.onMarkerClick(marker.reportId);
	                    });
	                    marker.setMap(_this4.map);
	                };

	                for (var _iterator = this.markers[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
	                    _loop2();
	                }
	            } catch (err) {
	                _didIteratorError = true;
	                _iteratorError = err;
	            } finally {
	                try {
	                    if (!_iteratorNormalCompletion && _iterator.return) {
	                        _iterator.return();
	                    }
	                } finally {
	                    if (_didIteratorError) {
	                        throw _iteratorError;
	                    }
	                }
	            }
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            return _react2.default.createElement('div', { id: 'map', ref: 'map' });
	        }
	    }]);

	    return GoogleMapWorker;
	}(_react.Component);

	exports.default = GoogleMapWorker;

/***/ }),
/* 622 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _axios = __webpack_require__(253);

	var _axios2 = _interopRequireDefault(_axios);

	var _config = __webpack_require__(279);

	var _config2 = _interopRequireDefault(_config);

	var _working_area_list = __webpack_require__(623);

	var _working_area_list2 = _interopRequireDefault(_working_area_list);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	// Components 


	var WorkerProfilePage = function (_Component) {
	    _inherits(WorkerProfilePage, _Component);

	    function WorkerProfilePage(props) {
	        _classCallCheck(this, WorkerProfilePage);

	        var _this = _possibleConstructorReturn(this, (WorkerProfilePage.__proto__ || Object.getPrototypeOf(WorkerProfilePage)).call(this, props));

	        _this.state = {
	            workerInfo: null,
	            workingArea: null,
	            districts: null,
	            selectedWorkArea: null,
	            selectedCounties: null,
	            selectedCounty: null,
	            output: null
	        };
	        return _this;
	    }

	    _createClass(WorkerProfilePage, [{
	        key: 'fetchDistricts',
	        value: function fetchDistricts() {
	            var _this2 = this;

	            _axios2.default.get(_config2.default + '/operation/address').then(function (response) {
	                if (response.status === 200) {
	                    console.log("counties", response.data);
	                    _this2.setState({ districts: response.data });
	                }
	            }).catch(function (err) {
	                console.log("An error occured while trying to load counties.", err);
	            });
	        }
	    }, {
	        key: 'getWorkerDetails',
	        value: function getWorkerDetails() {
	            var _this3 = this;

	            var token = JSON.parse(localStorage.getItem('token'));
	            _axios2.default.post(_config2.default + '/backoffice/report/details', token).then(function (response) {
	                if (response.status === 200) {
	                    console.log("RESPONSE", response);
	                    _this3.setState({ workerInfo: response.data.workerInfo, workingArea: response.data.workingArea });
	                    $('#additionalInfoTextarea').val(_this3.state.workerInfo);

	                    console.log("on componentWillMount from server: ", response.data);
	                }
	            }).catch(function (err) {
	                console.log("An error has occured while trying to load this worker details.", err);
	            });
	        }
	    }, {
	        key: 'componentWillMount',
	        value: function componentWillMount() {
	            this.getWorkerDetails();
	            this.fetchDistricts();
	        }
	    }, {
	        key: 'handleSelectDistrict',
	        value: function handleSelectDistrict(event) {
	            var newDistrict = event.currentTarget.value;
	            if (newDistrict !== "Nenhum distrito seleccionado") {
	                var counties = this.state.districts[newDistrict];
	                this.setState({ selectedCounties: counties });
	            } else {
	                this.setState({ selectedCounties: null });
	            }
	        }
	    }, {
	        key: 'handleSelectCounty',
	        value: function handleSelectCounty(event) {
	            var newCounty = event.currentTarget.value;
	            if (newCounty !== "Nenhum concelho seleccionado") {
	                console.log("selectedCounty", newCounty);
	                this.setState({ selectedCounty: newCounty });
	            } else {
	                this.setState({ selectedCounty: null });
	            }
	        }
	    }, {
	        key: 'canAddWorkingArea',
	        value: function canAddWorkingArea(county) {
	            console.log("county parameter", county);
	            console.log("array of areas", this.state.workingArea);

	            if (this.state.workingArea.indexOf(county) === -1) {
	                return true;
	            }
	            return false;
	        }
	    }, {
	        key: 'handleAddCounty',
	        value: function handleAddCounty() {
	            var alert = this.refs.alert;

	            console.log("handleAddCounty", this.state.workingArea);

	            if (this.state.selectedCounty && this.state.selectedCounty !== "Nenhum concelho seleccionado") {
	                if (this.canAddWorkingArea(this.state.selectedCounty)) {
	                    console.log("handle AddC County", this.state.workingArea);

	                    var tmp = this.state.workingArea;
	                    tmp.push(this.state.selectedCounty);
	                    this.setState({ workingArea: tmp });
	                } else {
	                    alert.classList.remove('d-none');
	                    alert.classList.add('text-danger');
	                    alert.innerHTML = 'Área de actuação já seleccionada.';
	                    setTimeout(function () {
	                        alert.classList.add('d-none');
	                        alert.classList.remove('alert-danger');
	                        alert.innerHTML = '';
	                    }, 3000);
	                }
	            } else {
	                alert.classList.remove('d-none');
	                alert.classList.add('text-danger');
	                alert.innerHTML = 'Nenhum concelho foi seleccionado.';
	                setTimeout(function () {
	                    alert.classList.add('d-none');
	                    alert.classList.remove('alert-danger');
	                    alert.innerHTML = '';
	                }, 3000);
	            }
	        }
	    }, {
	        key: 'handleRemoveCounty',
	        value: function handleRemoveCounty(county) {
	            var index = this.state.workingArea.findIndex(function (item) {
	                return item === county;
	            });
	            var tmp = this.state.workingArea;
	            tmp.splice(index, 1);
	            this.setState({ workingArea: tmp });
	        }
	    }, {
	        key: 'deleteOutputs',
	        value: function deleteOutputs() {
	            this.setState({ output: null });
	        }
	    }, {
	        key: 'addOutputs',
	        value: function addOutputs(outputArray) {
	            this.setState({ output: outputArray });
	        }
	    }, {
	        key: 'handleSubmitInfo',
	        value: function handleSubmitInfo() {
	            var _this4 = this;

	            var alert = this.refs.alert;

	            var token = JSON.parse(localStorage.getItem('token'));
	            var info = $('#additionalInfoTextarea').val();
	            var data = {
	                workerInfo: info,
	                workingArea: this.state.workingArea
	            };
	            _axios2.default.post(_config2.default + '/backoffice/report/updateDetails', { token: token, data: data }).then(function (response) {
	                if (response.status === 200) {
	                    var outputArray = [];
	                    var addedCountiesJson = response.data.addedCounties;
	                    var removedCountiesJson = response.data.removedCounties;
	                    if (addedCountiesJson.length > 0) {
	                        // build added counties
	                        var addedCounties = addedCountiesJson.join(", ");
	                        var string = 'O(s) concelho(s) ' + addedCounties + ' foram adicionados com sucesso \xE0s suas \xE1reas de actua\xE7\xE3o.';
	                        var obj = {
	                            output: string,
	                            color: "green"
	                        };
	                        outputArray.push(obj);
	                    }

	                    var removedCounties = removedCountiesJson;
	                    if (removedCounties !== {}) {
	                        // build removed counties
	                        $.each(removedCounties, function (key, value) {
	                            if (value) {
	                                var string = 'O concelho ' + key + ' foi removido com sucesso das suas \xE1reas de actua\xE7\xE3o.';
	                                var _obj = {
	                                    output: string,
	                                    color: "green"
	                                };
	                                outputArray.push(_obj);
	                            } else {
	                                var string = 'O concelho ' + key + ' n\xE3o foi removido: existem ocorr\xEAncias neste concelho a serem resolvidas.';
	                                var _obj2 = {
	                                    output: string,
	                                    color: "red"
	                                };
	                                outputArray.push(_obj2);
	                            }
	                        });
	                    }
	                    _this4.setState({ output: outputArray });
	                    alert.classList.remove('d-none');
	                    alert.classList.add('text-success');
	                    alert.innerHTML = 'O seu perfil foi actualizado com sucesso.';
	                    setTimeout(function () {
	                        alert.classList.add('d-none');
	                        alert.classList.remove('text-success');
	                        alert.innerHTML = '';
	                    }, 3000);
	                }
	            }).catch(function (err) {
	                console.log("An error occured while trying to submit worker information.", err);
	            });
	        }
	    }, {
	        key: 'renderCountyList',
	        value: function renderCountyList() {
	            var counties = void 0;
	            if (this.state.selectedCounties) {
	                counties = this.state.selectedCounties.map(function (item) {
	                    return _react2.default.createElement(
	                        'option',
	                        { key: item },
	                        ' ',
	                        item,
	                        ' '
	                    );
	                });
	                return _react2.default.createElement(
	                    'div',
	                    { className: 'add-county-section' },
	                    _react2.default.createElement(
	                        'h6',
	                        { className: 'mt-2' },
	                        ' Seleccionar concelho: '
	                    ),
	                    _react2.default.createElement(
	                        'select',
	                        { onChange: this.handleSelectCounty.bind(this), id: 'selected-county', className: 'form-control w-75' },
	                        _react2.default.createElement(
	                            'option',
	                            null,
	                            ' Nenhum concelho seleccionado '
	                        ),
	                        counties
	                    ),
	                    _react2.default.createElement('i', { onClick: this.handleAddCounty.bind(this), className: 'fa fa-plus edit-button', 'aria-hidden': 'true' }),
	                    _react2.default.createElement('div', { className: 'submit-error', ref: 'alert' })
	                );
	            }
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            var arr = [];
	            $.each(this.state.districts, function (key, value) {
	                arr.push(key);
	            });

	            var districts = void 0;
	            districts = arr.map(function (item) {
	                return _react2.default.createElement(
	                    'option',
	                    { key: item },
	                    ' ',
	                    item,
	                    ' '
	                );
	            });

	            var logSection = void 0;
	            var outputs = void 0;
	            if (this.state.output) {
	                outputs = this.state.output.map(function (item) {
	                    if (item.color === "green") {
	                        return _react2.default.createElement(
	                            'li',
	                            { style: { color: 'green' }, id: 'outputItem', key: item.output },
	                            item.output
	                        );
	                    } else if (item.color === "red") {
	                        return _react2.default.createElement(
	                            'li',
	                            { style: { color: 'red' }, id: 'outputItem', key: item.output },
	                            item.output
	                        );
	                    }
	                });
	                if (outputs.length > 0) {
	                    logSection = _react2.default.createElement(
	                        'div',
	                        { className: 'logSection' },
	                        _react2.default.createElement('i', { className: 'fa fa-times logSectionExitBttn', onClick: this.deleteOutputs.bind(this) }),
	                        outputs
	                    );
	                }
	            }

	            console.log("arr", districts);
	            return _react2.default.createElement(
	                'div',
	                { className: 'container h-100 worker-profile-container' },
	                _react2.default.createElement(
	                    'div',
	                    { className: 'row justify-content' },
	                    _react2.default.createElement(
	                        'div',
	                        { className: 'col-md-6 data-form' },
	                        _react2.default.createElement(
	                            'div',
	                            { className: 'profile-info-block' },
	                            _react2.default.createElement(
	                                'h5',
	                                null,
	                                ' As minhas \xE1reas de actua\xE7\xE3o: '
	                            ),
	                            _react2.default.createElement(_working_area_list2.default, { workingArea: this.state.workingArea, onDelete: this.handleRemoveCounty.bind(this) })
	                        ),
	                        _react2.default.createElement(
	                            'div',
	                            { className: 'profile-info-block' },
	                            _react2.default.createElement(
	                                'h5',
	                                { className: 'mt-5' },
	                                ' Adicionar nova \xE1rea de actua\xE7\xE3o:'
	                            ),
	                            _react2.default.createElement(
	                                'h6',
	                                null,
	                                ' Seleccionar distrito: '
	                            ),
	                            _react2.default.createElement(
	                                'select',
	                                { onChange: this.handleSelectDistrict.bind(this), className: 'form-control w-75' },
	                                _react2.default.createElement(
	                                    'option',
	                                    null,
	                                    ' Nenhum distrito seleccionado '
	                                ),
	                                districts
	                            ),
	                            this.renderCountyList()
	                        )
	                    ),
	                    _react2.default.createElement(
	                        'div',
	                        { className: 'col-md-6 data-form' },
	                        _react2.default.createElement(
	                            'div',
	                            { className: 'profile-info-block' },
	                            _react2.default.createElement(
	                                'h5',
	                                null,
	                                ' Informa\xE7\xE3o geral de perfil: '
	                            ),
	                            _react2.default.createElement('textarea', {
	                                maxlength: '20',
	                                className: 'form-control input-sm mt-2',
	                                placeholder: 'Informa\xE7\xE3o sobre si, servi\xE7os que fornece, etc...',
	                                id: 'additionalInfoTextarea' })
	                        )
	                    ),
	                    _react2.default.createElement(
	                        'div',
	                        { className: 'handleSubmitSection' },
	                        _react2.default.createElement(
	                            'button',
	                            { onClick: this.handleSubmitInfo.bind(this), className: 'btn btn-primary' },
	                            ' Guardar '
	                        ),
	                        _react2.default.createElement('div', { ref: 'alert' })
	                    ),
	                    logSection
	                )
	            );
	        }
	    }]);

	    return WorkerProfilePage;
	}(_react.Component);

	exports.default = WorkerProfilePage;

/***/ }),
/* 623 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _working_area_item = __webpack_require__(624);

	var _working_area_item2 = _interopRequireDefault(_working_area_item);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	// Components 


	var WorkingAreaList = function (_Component) {
	    _inherits(WorkingAreaList, _Component);

	    function WorkingAreaList() {
	        _classCallCheck(this, WorkingAreaList);

	        return _possibleConstructorReturn(this, (WorkingAreaList.__proto__ || Object.getPrototypeOf(WorkingAreaList)).apply(this, arguments));
	    }

	    _createClass(WorkingAreaList, [{
	        key: 'removeCounty',
	        value: function removeCounty(county) {
	            this.props.onDelete(county);
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            var _this2 = this;

	            var workingAreaList = void 0;
	            if (this.props.workingArea) {
	                workingAreaList = this.props.workingArea.map(function (item) {
	                    return _react2.default.createElement(_working_area_item2.default, { key: item, item: item, onDelete: _this2.removeCounty.bind(_this2) });
	                });
	            }
	            return _react2.default.createElement(
	                'div',
	                { className: 'typeList' },
	                workingAreaList
	            );
	        }
	    }]);

	    return WorkingAreaList;
	}(_react.Component);

	exports.default = WorkingAreaList;

/***/ }),
/* 624 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var WorkingAreaItem = function (_Component) {
	    _inherits(WorkingAreaItem, _Component);

	    function WorkingAreaItem() {
	        _classCallCheck(this, WorkingAreaItem);

	        return _possibleConstructorReturn(this, (WorkingAreaItem.__proto__ || Object.getPrototypeOf(WorkingAreaItem)).apply(this, arguments));
	    }

	    _createClass(WorkingAreaItem, [{
	        key: "removeCounty",
	        value: function removeCounty() {
	            this.props.onDelete(this.props.item);
	        }
	    }, {
	        key: "render",
	        value: function render() {
	            return _react2.default.createElement(
	                "div",
	                { className: "reportType" },
	                _react2.default.createElement(
	                    "a",
	                    { href: "#" },
	                    _react2.default.createElement("i", { onClick: this.removeCounty.bind(this), className: "fa fa-times edit-button", "aria-hidden": "true" })
	                ),
	                _react2.default.createElement(
	                    "li",
	                    null,
	                    this.props.item,
	                    " "
	                )
	            );
	        }
	    }]);

	    return WorkingAreaItem;
	}(_react.Component);

	exports.default = WorkingAreaItem;

/***/ }),
/* 625 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _reactRouterDom = __webpack_require__(203);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // 3rd Party


	/*
	    Landing Page da Aplicação.

	    Apresentação, explicação e demonstração da Aplicação.

	    Apresentação da equipa.
	*/
	var IndexPage = function (_Component) {
	    _inherits(IndexPage, _Component);

	    function IndexPage() {
	        _classCallCheck(this, IndexPage);

	        return _possibleConstructorReturn(this, (IndexPage.__proto__ || Object.getPrototypeOf(IndexPage)).apply(this, arguments));
	    }

	    _createClass(IndexPage, [{
	        key: 'renderTeamMembers',
	        value: function renderTeamMembers() {
	            var team = [{
	                name: 'João Dias',
	                img: 'img/joao4.jpg'
	            }, {
	                name: 'Gil Alves',
	                img: 'img/gil.jpg'
	            }, {
	                name: 'Michael Silva',
	                img: 'img/michael1.jpg'
	            }, {
	                name: 'Miguel Pereira',
	                img: 'img/miguel.jpg'
	            }, {
	                name: 'Ricardo Loureiro',
	                img: 'img/ricardo.jpg'
	            }].map(function (member) {
	                return _react2.default.createElement(
	                    'div',
	                    { className: 'col-md d-flex justify-content-center', key: member.name },
	                    _react2.default.createElement(
	                        'figure',
	                        { className: 'figure' },
	                        _react2.default.createElement('img', { src: member.img, className: 'figure-img img-fluid rounded-circle' }),
	                        _react2.default.createElement(
	                            'figcaption',
	                            { className: 'figure-caption text-center' },
	                            _react2.default.createElement(
	                                'strong',
	                                null,
	                                member.name
	                            )
	                        )
	                    )
	                );
	            });

	            return _react2.default.createElement(
	                'div',
	                { className: 'row py-4 w-100 d-flex justify-content-between' },
	                team
	            );
	        }
	    }, {
	        key: 'renderNews',
	        value: function renderNews() {
	            var newsCollection = [{
	                date: '4/5/2017',
	                title: 'Página do Facebook criada.',
	                content: 'Vejam a nossa p\xE1gina no <a href="https://www.facebook.com/FlagNPatch/" target="_blank">Facebook</a>!'
	            }, {
	                date: '4/5/2017',
	                title: 'Estudos de Frontend',
	                content: 'Quase conluído! A nossa equipa está a aprendender todos os conceitos de Redux e já domina o React!'
	            }, {
	                date: '4/5/2017',
	                title: 'Update do Desenvolvimento de backend',
	                content: 'Estamos a trabalhar nos nossos serviços e as operações principais do utilizador estão quase concluídas.'
	            }, {
	                date: '24/03/2017',
	                title: 'Página de apresentação lançada',
	                content: 'Lançámos agora esta página para ser o nosso meio principal de reportar o nosso progresso com o mundo. Também serve como uma simples página de apresentação para nosso projeto!'
	            }, {
	                date: '24/03/2017',
	                title: 'Repositório principal criado',
	                content: 'Criámos o repositório principal para acolher o desenvolvimento do nosso projeto, o que marca o início do nosso desenvolvimento!'
	            }, {
	                date: '23/03/2017',
	                title: 'Primeiro diagrama de Gantt terminado',
	                content: 'O nosso diagrama de Gantt está completo e podemos começar a trabalhar. Agora temos um plano!'
	            }].map(function (news) {
	                return _react2.default.createElement(
	                    'div',
	                    { className: 'card mb-4 mx-auto', key: news.title },
	                    _react2.default.createElement(
	                        'div',
	                        { className: 'card-header d-flex justify-content-between p-3' },
	                        _react2.default.createElement(
	                            'span',
	                            { className: 'h4' },
	                            news.title
	                        ),
	                        _react2.default.createElement(
	                            'span',
	                            { className: 'color-main' },
	                            news.date
	                        )
	                    ),
	                    _react2.default.createElement(
	                        'div',
	                        { className: 'card-block' },
	                        _react2.default.createElement(
	                            'p',
	                            null,
	                            news.content
	                        )
	                    )
	                );
	            });

	            return _react2.default.createElement(
	                'div',
	                { className: 'd-flex flex-column w-100 news-container' },
	                newsCollection
	            );
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            return _react2.default.createElement(
	                'div',
	                null,
	                _react2.default.createElement(
	                    'nav',
	                    { className: 'navbar navbar-toggleable-md navbar-inverse bg-inverse fixed-top' },
	                    _react2.default.createElement(
	                        'button',
	                        { className: 'navbar-toggler navbar-toggler-right', type: 'button', 'data-toggle': 'collapse', 'data-target': '#navbarNav', 'aria-controls': 'navbarNav', 'aria-expanded': 'false', 'aria-label': 'Toggle navigation' },
	                        _react2.default.createElement('span', { className: 'navbar-toggler-icon' })
	                    ),
	                    _react2.default.createElement(
	                        'a',
	                        { className: 'navbar-brand', href: '#top' },
	                        _react2.default.createElement('img', { src: 'img/logo.svg', width: 30, height: 30, className: 'd-inline-block align-top mr-2', alt: '' }),
	                        'Flag N\' Patch'
	                    ),
	                    _react2.default.createElement(
	                        'div',
	                        { className: 'collapse navbar-collapse', id: 'navbarNav' },
	                        _react2.default.createElement(
	                            'ul',
	                            { className: 'navbar-nav ml-auto' },
	                            _react2.default.createElement(
	                                'li',
	                                { className: 'nav-item' },
	                                _react2.default.createElement(
	                                    'a',
	                                    { href: '#howto', className: 'nav-link' },
	                                    'Como usar'
	                                )
	                            ),
	                            _react2.default.createElement(
	                                'li',
	                                { className: 'nav-item' },
	                                _react2.default.createElement(
	                                    'a',
	                                    { href: '#team', className: 'nav-link' },
	                                    'A equipa'
	                                )
	                            ),
	                            _react2.default.createElement(
	                                'li',
	                                { className: 'nav-item' },
	                                _react2.default.createElement(
	                                    'a',
	                                    { href: '#contacts', className: 'nav-link' },
	                                    'Contactos'
	                                )
	                            ),
	                            _react2.default.createElement(
	                                'li',
	                                { className: 'nav-item' },
	                                _react2.default.createElement(
	                                    'a',
	                                    { href: '#news', className: 'nav-link' },
	                                    'Not\xEDcias'
	                                )
	                            ),
	                            _react2.default.createElement(
	                                'li',
	                                { className: 'nav-item app-launcher ml-4' },
	                                _react2.default.createElement(
	                                    _reactRouterDom.Link,
	                                    { className: 'nav-link btn btn-outline-success', to: '/login' },
	                                    'Web Application'
	                                )
	                            )
	                        )
	                    )
	                ),
	                _react2.default.createElement(
	                    'div',
	                    { className: 'container-fluid' },
	                    _react2.default.createElement(
	                        'header',
	                        { className: 'row index-header', id: 'top' },
	                        _react2.default.createElement(
	                            'span',
	                            { className: 'h1 slogan' },
	                            'O poder de mudar a cidade...'
	                        ),
	                        _react2.default.createElement(
	                            'span',
	                            { className: 'h1 slogan' },
	                            '...na palma da sua m\xE3o.'
	                        )
	                    ),
	                    _react2.default.createElement(
	                        'section',
	                        { className: 'row index-section', id: 'howto' },
	                        _react2.default.createElement(
	                            'h2',
	                            { className: 'display-4 text-muted' },
	                            'Como usar'
	                        ),
	                        _react2.default.createElement(
	                            'p',
	                            { className: 'lead' },
	                            'Ao registar-se ganha o estatudo de Trial, e apenas pode registar uma ocorr\xEAncia! Infelizmente nem comentar pode ! ',
	                            _react2.default.createElement('br', null),
	                            'Se confirmar o seu email, ter\xE1 acesso imediato aos coment\xE1rios e pode registar mais ocorr\xEAncias ! ',
	                            _react2.default.createElement('br', null),
	                            'Se n\xE3o quiser criar ocorr\xEAncias, pode sempre apenas seguir ocorr\xEAncias que j\xE1 existam ! ',
	                            _react2.default.createElement('br', null),
	                            'Quando alguma ocorr\xEAncia mudar de estado, ir\xE1 ser notificado sobre tal e poder\xE1 ver mais informa\xE7\xF5es sobre a altera\xE7\xE3o !',
	                            _react2.default.createElement('br', null),
	                            'Espermos por si na nossa aplica\xE7\xE3o e lembre-se Ajude-nos a Ajudar ! Flag N\' Patch'
	                        )
	                    ),
	                    _react2.default.createElement(
	                        'section',
	                        { className: 'row index-section', id: 'team' },
	                        _react2.default.createElement(
	                            'h2',
	                            { className: 'display-4 text-muted' },
	                            'Equipa'
	                        ),
	                        this.renderTeamMembers(),
	                        _react2.default.createElement(
	                            'p',
	                            { className: 'lead' },
	                            'A nossa equipa nasceu em meados de Fevereiro de 2017 e \xE9 formada por 5 engenheiros inform\xE1ticos que diariamente trabalham para chegar a uma aplica\xE7\xE3o totalmente funcional e colaborativa. ',
	                            _react2.default.createElement('br', null),
	                            'N\xE3o existem hierarquias dentro do grupo, desde que cada elemento possa aprender e evoluir com o seu trabalho, dedica\xE7\xE3o e esfor\xE7o, contribuindo igualmente para o desenvolvimento da aplica\xE7\xE3o. ',
	                            _react2.default.createElement('br', null),
	                            'Esta aplica\xE7\xE3o ter\xE1 por base Web e Android para que possa ser usufru\xEDda por todos o tipo de popula\xE7\xE3o e tem como objectivo final ser uma ferramenta importante para o dia-a-dia da popula\xE7\xE3o, ajudando, por um lado, a popula\xE7\xE3o em geral na inser\xE7\xE3o de ocorr\xEAncias que possam ter avistado. Por outro lado, as autarquias para a mais r\xE1pida resolu\xE7\xE3o dos problemas a si entregues.'
	                        )
	                    ),
	                    _react2.default.createElement(
	                        'section',
	                        { className: 'row index-section', id: 'contacts' },
	                        _react2.default.createElement(
	                            'h2',
	                            { className: 'display-4 text-muted' },
	                            'Contactos'
	                        ),
	                        _react2.default.createElement(
	                            'p',
	                            { className: 'lead' },
	                            'Pode visitar-nos at\xE9 dia 12/07/2017 ao vivo na sala 116 da Faculdade de Ci\xEAncias e Tecnologias da Universidade Nova de Lisboa.',
	                            _react2.default.createElement('br', null),
	                            ' Pode ainda no pr\xF3ximo dia 18/07/2017 visitar o nosso stand na sala \xC1gora ao lado da biblioteca na anterior referida faculdade e conhecer o nosso produto melhor.',
	                            _react2.default.createElement('br', null),
	                            '  Se tal n\xE3o for poss\xEDvel, pode-nos contactar diretamente via Facebook na p\xE1gina ',
	                            _react2.default.createElement(
	                                'a',
	                                { target: '_blank', href: 'https://www.facebook.com/FlagNPatch' },
	                                'Flag N\' Patch'
	                            ),
	                            ' e prometemos ser breves na resposta ! At\xE9 J\xE1 !'
	                        )
	                    ),
	                    _react2.default.createElement(
	                        'section',
	                        { className: 'row index-section', id: 'news' },
	                        _react2.default.createElement(
	                            'h2',
	                            { className: 'display-4 text-muted' },
	                            'Not\xEDcias'
	                        ),
	                        this.renderNews()
	                    ),
	                    _react2.default.createElement(
	                        'footer',
	                        { className: 'row bg-inverse p-4 d-flex justify-content-between' },
	                        _react2.default.createElement(
	                            'span',
	                            { className: 'text-white' },
	                            'Grupo Flag n\' Patch , Sala 116 M'
	                        ),
	                        _react2.default.createElement(
	                            'span',
	                            { className: 'text-white' },
	                            '\xA92017 ADPC \u2014 FCT UNL Monte da Caparica, Almada, Portugal'
	                        )
	                    )
	                )
	            );
	        }
	    }]);

	    return IndexPage;
	}(_react.Component);

	;

	exports.default = IndexPage;

/***/ }),
/* 626 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _reactRouterDom = __webpack_require__(203);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/*
	    Página de erro apresentada para routes que não
	    estão definidas.
	    
	    Para esta página ser apresentada o servidor deve
	    devolver index.html no caso de 404 para que a
	    que BrowserRouter possa detectar o erro.
	*/
	// 3rd Party
	var NotFoundPage = function NotFoundPage(props) {
	    return _react2.default.createElement(
	        'div',
	        null,
	        _react2.default.createElement(
	            'h1',
	            null,
	            '404: Page Not Found'
	        )
	    );
	};

	exports.default = NotFoundPage;

/***/ }),
/* 627 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _reactRedux = __webpack_require__(160);

	var _reactRouterDom = __webpack_require__(203);

	var _axios = __webpack_require__(253);

	var _axios2 = _interopRequireDefault(_axios);

	var _form_login = __webpack_require__(628);

	var _form_login2 = _interopRequireDefault(_form_login);

	var _form_reset_password = __webpack_require__(629);

	var _form_reset_password2 = _interopRequireDefault(_form_reset_password);

	var _logo = __webpack_require__(630);

	var _logo2 = _interopRequireDefault(_logo);

	var _divider = __webpack_require__(631);

	var _divider2 = _interopRequireDefault(_divider);

	var _button_oauth_google = __webpack_require__(632);

	var _button_oauth_google2 = _interopRequireDefault(_button_oauth_google);

	var _button_oauth_facebook = __webpack_require__(633);

	var _button_oauth_facebook2 = _interopRequireDefault(_button_oauth_facebook);

	var _alert = __webpack_require__(568);

	var _alert2 = _interopRequireDefault(_alert);

	var _spinner = __webpack_require__(321);

	var _spinner2 = _interopRequireDefault(_spinner);

	var _loading_text = __webpack_require__(322);

	var _loading_text2 = _interopRequireDefault(_loading_text);

	var _modal = __webpack_require__(320);

	var _modal2 = _interopRequireDefault(_modal);

	var _actions_token = __webpack_require__(323);

	var _actions_network = __webpack_require__(634);

	var _config = __webpack_require__(279);

	var _config2 = _interopRequireDefault(_config);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // 3rd Party


	// Internal Modules


	/*
	    Página de login na Aplicação comum a todos os tipos de
	    utilizador.
	*/
	var LoginPage = function (_Component) {
	    _inherits(LoginPage, _Component);

	    function LoginPage(props) {
	        _classCallCheck(this, LoginPage);

	        var _this = _possibleConstructorReturn(this, (LoginPage.__proto__ || Object.getPrototypeOf(LoginPage)).call(this, props));

	        _this.state = {
	            submitResetPending: false,
	            submitResetFulfilled: false,
	            submitResetRejected: false,
	            message: ''
	        };
	        return _this;
	    }

	    /*
	        If there's a token is state, will redirect to proper main page.
	        Otherwise will attempt to fetch token from localstorage.
	        If a valid token is fetched then redirects to proper main page.
	        Else, nothing happens.
	    */


	    _createClass(LoginPage, [{
	        key: 'componentWillMount',
	        value: function componentWillMount() {
	            var token = this.props.token.token;
	            if (token) {
	                this.redirectOnSession(token);
	            } else {
	                this.props.dispatch((0, _actions_token.fetchTokenFromLocalstorage)());
	            }
	        }

	        /*
	            If token is already in state (i.e. comes in nextProps) then
	            redirects to proper main page.
	            Else, nothing happens.
	             NOTA: Este método corre essencialmente após o login.    
	        */

	    }, {
	        key: 'componentWillReceiveProps',
	        value: function componentWillReceiveProps(nextProps) {
	            var token = nextProps.token.token;
	            if (token) {
	                this.redirectOnSession(token);
	            }
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            return _react2.default.createElement(
	                'div',
	                { className: 'container h-100' },
	                _react2.default.createElement(
	                    'div',
	                    { className: 'row align-items-center justify-content-center h-100' },
	                    _react2.default.createElement(
	                        'div',
	                        { className: 'col-md-4 relative' },
	                        _react2.default.createElement(_logo2.default, null),
	                        _react2.default.createElement(_form_login2.default, { onSubmit: this.onSubmit.bind(this) }),
	                        _react2.default.createElement(
	                            _reactRouterDom.Link,
	                            { className: 'btn btn-lg btn-success form-control mb-2 mt-1', to: '/' },
	                            'Voltar'
	                        ),
	                        _react2.default.createElement(
	                            'div',
	                            { className: 'clearfix' },
	                            _react2.default.createElement(
	                                'a',
	                                { className: 'float-left', 'data-toggle': 'collapse', href: '#collapse', 'aria-expanded': 'false', 'aria-controls': 'collapse' },
	                                'Esqueceu-se?'
	                            ),
	                            _react2.default.createElement(
	                                _reactRouterDom.Link,
	                                { className: 'float-right', to: '/register' },
	                                'Registar'
	                            )
	                        ),
	                        _react2.default.createElement(
	                            'div',
	                            { className: 'collapse', id: 'collapse' },
	                            _react2.default.createElement(_form_reset_password2.default, { onSubmit: this.onSubmitResetPassword.bind(this) })
	                        ),
	                        _react2.default.createElement(_divider2.default, null),
	                        _react2.default.createElement(
	                            'div',
	                            { className: 'row' },
	                            _react2.default.createElement(
	                                'div',
	                                { className: 'col-6' },
	                                _react2.default.createElement(_button_oauth_facebook2.default, null)
	                            ),
	                            _react2.default.createElement(
	                                'div',
	                                { className: 'col-6' },
	                                _react2.default.createElement(_button_oauth_google2.default, null)
	                            )
	                        )
	                    ),
	                    this.props.token.loggingIn && _react2.default.createElement(
	                        _modal2.default,
	                        null,
	                        _react2.default.createElement(
	                            'div',
	                            { className: 'd-flex justify-content-center align-items-center' },
	                            _react2.default.createElement(
	                                'div',
	                                { className: 'mr-3' },
	                                _react2.default.createElement(_spinner2.default, null)
	                            ),
	                            _react2.default.createElement(_loading_text2.default, { message: 'A autenticar' })
	                        )
	                    ) || this.state.submitResetPending && _react2.default.createElement(
	                        _modal2.default,
	                        null,
	                        _react2.default.createElement(
	                            'div',
	                            { className: 'd-flex justify-content-center align-items-center' },
	                            _react2.default.createElement(
	                                'div',
	                                { className: 'mr-3' },
	                                _react2.default.createElement(_spinner2.default, null)
	                            ),
	                            _react2.default.createElement(_loading_text2.default, { message: 'A submeter' })
	                        )
	                    ),
	                    this.props.token.error && _react2.default.createElement(
	                        _alert2.default,
	                        { type: 'danger', timeout: 4, timeoutCallback: this.resetNetworkStatusGlobal.bind(this) },
	                        _react2.default.createElement(
	                            'strong',
	                            null,
	                            'Error:'
	                        ),
	                        ' ',
	                        this.props.token.error.response.data.output
	                    ) || this.state.submitResetRejected && _react2.default.createElement(
	                        _alert2.default,
	                        { type: 'danger', timeout: 4, timeoutCallback: this.resetNetworkStatusInternal.bind(this) },
	                        _react2.default.createElement(
	                            'strong',
	                            null,
	                            'Error:'
	                        ),
	                        ' ',
	                        this.state.message
	                    ) || this.state.submitResetFulfilled && _react2.default.createElement(
	                        _alert2.default,
	                        { type: 'success', timeout: 4, timeoutCallback: this.resetNetworkStatusInternal.bind(this) },
	                        _react2.default.createElement(
	                            'strong',
	                            null,
	                            'Sucesso:'
	                        ),
	                        ' Brevemente receber\xE1 um email.'
	                    )
	                )
	            );
	        }

	        /*
	            Recebe os valores submetidos no formulário de
	            login e faz dispatch da acção de login com
	            os valores.
	        */

	    }, {
	        key: 'onSubmit',
	        value: function onSubmit(values) {
	            this.props.dispatch((0, _actions_token.doLogin)(values));
	        }

	        /*
	            Recebe o endereço de email introduzido no campo de email
	            e envia uma mensagem ao servidor para que este envie um
	            email ao utilizador com a possibilidade de alterar a
	            password.
	        */

	    }, {
	        key: 'onSubmitResetPassword',
	        value: function onSubmitResetPassword(values) {
	            var _this2 = this;

	            console.log('Submitting...', values);
	            this.setState({ submitResetPending: true });
	            (0, _axios2.default)({
	                method: 'post',
	                responseType: 'json',
	                url: _config2.default + '/login/resetPassword',
	                data: values
	            }).then(function (response) {
	                console.log('Response', response);
	                var successMessage = response.data;
	                _this2.setState({ submitResetPending: false, submitResetFulfilled: true, message: successMessage });
	            }).catch(function (error) {
	                var e = _extends({}, error);
	                var errorMessage = e.response.data.output;
	                _this2.setState({ submitResetPending: false, submitResetRejected: true, message: errorMessage });
	            });
	        }

	        /*
	            Este método só é invocado no caso de haver um token / sessão.
	            Dado a role do utilizador autenticado, redirecciona para a
	            main page deste.
	        */

	    }, {
	        key: 'redirectOnSession',
	        value: function redirectOnSession(token) {
	            switch (token.role) {
	                case 'trial':
	                case 'basic':
	                    this.props.history.push('/app/user/map');
	                    break;
	                case 'end':
	                    this.props.history.push('/app/core/management/types');
	                    break;
	                case 'core':
	                    this.props.history.push('/app/core/management/statistics');
	                    break;
	                case 'work':
	                    this.props.history.push('/app/worker/reports');
	            }
	        }

	        /**/

	    }, {
	        key: 'resetNetworkStatusGlobal',
	        value: function resetNetworkStatusGlobal() {
	            this.props.dispatch((0, _actions_network.resetNetworkStatuses)());
	        }

	        /**/

	    }, {
	        key: 'resetNetworkStatusInternal',
	        value: function resetNetworkStatusInternal() {
	            this.setState({
	                submitResetPending: false,
	                submitResetFulfilled: false,
	                submitResetRejected: false,
	                message: ''
	            });
	        }
	    }]);

	    return LoginPage;
	}(_react.Component);

	/*
	    Função que filtra as propriedades da store que interessam ao componente
	    em questão e as torna disponíveis através de props.
	*/


	function mapStateToProps(store) {
	    return {
	        token: store.token
	    };
	}

	// Ligar componente ao Redux
	exports.default = (0, _reactRedux.connect)(mapStateToProps)(LoginPage);

/***/ }),
/* 628 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _reduxForm = __webpack_require__(332);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // 3rd Party


	/*
	    Formulário de login da aplicação.

	    Recebe o callback para a submissão dos dados e invoca-o ao submeter.

	    Trata de toda a sua validação e ligação à store do Redux.
	*/
	var LoginForm = function (_Component) {
	    _inherits(LoginForm, _Component);

	    function LoginForm() {
	        _classCallCheck(this, LoginForm);

	        return _possibleConstructorReturn(this, (LoginForm.__proto__ || Object.getPrototypeOf(LoginForm)).apply(this, arguments));
	    }

	    _createClass(LoginForm, [{
	        key: 'renderField',
	        value: function renderField(_ref) {
	            var input = _ref.input,
	                label = _ref.label,
	                placeholder = _ref.placeholder,
	                type = _ref.type,
	                _ref$meta = _ref.meta,
	                touched = _ref$meta.touched,
	                error = _ref$meta.error;

	            return _react2.default.createElement(
	                'div',
	                { className: 'form-group' + (touched && error ? ' has-danger' : '') },
	                _react2.default.createElement(
	                    'label',
	                    null,
	                    label
	                ),
	                _react2.default.createElement(
	                    'div',
	                    { className: 'input-group input-group-lg' },
	                    _react2.default.createElement('input', _extends({
	                        className: 'form-control',
	                        type: type,
	                        placeholder: placeholder
	                    }, input))
	                ),
	                _react2.default.createElement(
	                    'small',
	                    { className: 'form-control-feedback' },
	                    touched ? error : ''
	                )
	            );
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            // reduxForm injected props
	            var _props = this.props,
	                handleSubmit = _props.handleSubmit,
	                pristine = _props.pristine,
	                invalid = _props.invalid,
	                submitting = _props.submitting;


	            return _react2.default.createElement(
	                'form',
	                { noValidate: true, onSubmit: handleSubmit(this.props.onSubmit) },
	                _react2.default.createElement(_reduxForm.Field, {
	                    name: 'email',
	                    type: 'email',
	                    label: 'Email:',
	                    placeholder: 'you@example.com',
	                    component: this.renderField
	                }),
	                _react2.default.createElement(_reduxForm.Field, {
	                    name: 'password',
	                    type: 'password',
	                    label: 'Password:',
	                    placeholder: 'Password',
	                    component: this.renderField
	                }),
	                _react2.default.createElement(
	                    'button',
	                    {
	                        type: 'submit',
	                        className: 'btn btn-lg btn-primary form-control mb-2 mt-1',
	                        disabled: pristine || invalid || submitting
	                    },
	                    'Entrar'
	                )
	            );
	        }
	    }]);

	    return LoginForm;
	}(_react.Component);

	// Expressão regular para validar endereços de email


	var emailRegex = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;

	// Função onde acontece toda a validação dos campos do form.
	function validate(values) {
	    var errors = {};

	    // Email validations
	    if (!values.email) {
	        errors.email = 'Obrigatório';
	    } else if (!emailRegex.test(values.email)) {
	        errors.email = 'Inválido';
	    }

	    // Password validations
	    if (!values.password) {
	        errors.password = 'Obrigatório';
	    }

	    return errors;
	}

	// Liga o formulário ao redux-form e, portanto, à store do Redux.
	exports.default = (0, _reduxForm.reduxForm)({
	    form: 'Login',
	    validate: validate
	})(LoginForm);

/***/ }),
/* 629 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _reduxForm = __webpack_require__(332);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // 3rd Party


	/*

	*/
	var ResetPasswordForm = function (_Component) {
	    _inherits(ResetPasswordForm, _Component);

	    function ResetPasswordForm() {
	        _classCallCheck(this, ResetPasswordForm);

	        return _possibleConstructorReturn(this, (ResetPasswordForm.__proto__ || Object.getPrototypeOf(ResetPasswordForm)).apply(this, arguments));
	    }

	    _createClass(ResetPasswordForm, [{
	        key: 'renderEmailField',
	        value: function renderEmailField(_ref) {
	            var input = _ref.input,
	                _ref$meta = _ref.meta,
	                touched = _ref$meta.touched,
	                error = _ref$meta.error;

	            return _react2.default.createElement(
	                'div',
	                { className: 'mb-1 form-group' + (touched && error ? ' has-danger' : '') },
	                _react2.default.createElement(
	                    'div',
	                    { className: 'input-group input-group-lg' },
	                    _react2.default.createElement('input', _extends({
	                        className: 'form-control',
	                        type: 'email',
	                        placeholder: 'Insira endere\xE7o email'
	                    }, input))
	                ),
	                _react2.default.createElement(
	                    'small',
	                    { className: 'form-control-feedback' },
	                    touched ? error : ''
	                )
	            );
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            // reduxForm injected props
	            var _props = this.props,
	                handleSubmit = _props.handleSubmit,
	                pristine = _props.pristine,
	                invalid = _props.invalid,
	                submitting = _props.submitting;


	            return _react2.default.createElement(
	                'form',
	                { noValidate: true, onSubmit: handleSubmit(this.props.onSubmit) },
	                _react2.default.createElement(_reduxForm.Field, {
	                    name: 'email',
	                    component: this.renderEmailField
	                }),
	                _react2.default.createElement(
	                    'button',
	                    {
	                        type: 'submit',
	                        className: 'btn btn-lg btn-danger form-control mb-2 mt-0',
	                        disabled: pristine || invalid || submitting
	                    },
	                    'Recuperar'
	                )
	            );
	        }
	    }]);

	    return ResetPasswordForm;
	}(_react.Component);

	// Expressão regular para validar endereços de email


	var emailRegex = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;

	// Função onde acontece toda a validação dos campos do form.
	function validate(values) {
	    var errors = {};

	    // Email validations
	    if (!values.email) {
	        errors.email = 'Obrigatório';
	    } else if (!emailRegex.test(values.email)) {
	        errors.email = 'Inválido';
	    }

	    return errors;
	}

	// Liga o formulário ao redux-form e, portanto, à store do Redux.
	exports.default = (0, _reduxForm.reduxForm)({
	    form: 'ResetPassword',
	    validate: validate
	})(ResetPasswordForm);

/***/ }),
/* 630 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/*
	    Logotipo Flag N' Patch versão aumentada para apresentação principal.
	    (Para mais pequeno usar o da barra da aplicação)
	*/
	var Logo = function Logo(props) {
	    return _react2.default.createElement(
	        "div",
	        { className: "d-flex justify-content-center" },
	        _react2.default.createElement(
	            "figure",
	            { className: "figure w-50" },
	            _react2.default.createElement("img", { src: "/img/icon.png", alt: "Icon", className: "figure-img img-fluid" })
	        )
	    );
	}; // 3rd Party
	exports.default = Logo;

/***/ }),
/* 631 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/*
	    Linha divisória que consiste em duas linhas com 'OU' no centro.
	    Divisão de secção na página de login.
	*/
	var Divider = function Divider(props) {
	    return _react2.default.createElement(
	        "div",
	        { className: "clearfix" },
	        _react2.default.createElement(
	            "div",
	            { className: "float-left login-divider-hr" },
	            _react2.default.createElement("hr", null)
	        ),
	        _react2.default.createElement(
	            "div",
	            { className: "float-left login-divider-text h-100" },
	            "OU"
	        ),
	        _react2.default.createElement(
	            "div",
	            { className: "float-left login-divider-hr" },
	            _react2.default.createElement("hr", null)
	        )
	    );
	}; // 3rd Party
	exports.default = Divider;

/***/ }),
/* 632 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/*
	    Botão para login com credênciais do Google+.
	    Utiliza o protocolo OAuth.
	*/
	var GoogleOauthButton = function GoogleOauthButton(props) {
	    return _react2.default.createElement(
	        "a",
	        { href: "#", className: "fa fa-google" },
	        "oogle+"
	    );
	}; // 3rd Party
	exports.default = GoogleOauthButton;

/***/ }),
/* 633 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/*
	    Botão para login com credênciais do Facebook.
	    Utiliza o protocolo OAuth.
	*/
	var FacebookOauthButton = function FacebookOauthButton(props) {
	    return _react2.default.createElement(
	        "a",
	        { href: "#", className: "fa fa-facebook" },
	        "acebook"
	    );
	}; // 3rd Party
	exports.default = FacebookOauthButton;

/***/ }),
/* 634 */
/***/ (function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.resetNetworkStatuses = resetNetworkStatuses;
	var RESET_NETWORK_STATUSES = exports.RESET_NETWORK_STATUSES = 'RESET_NETWORK_STATUSES';

	/*
	    Acção que serve simplesmente para notificar todos os
	    elementos do estado que contém dados sobre o estado
	    dos pedidos à rede que podem fazer reset a essas
	    propriedades.
	*/
	function resetNetworkStatuses() {
	    return {
	        type: RESET_NETWORK_STATUSES
	    };
	}

/***/ }),
/* 635 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _reactRedux = __webpack_require__(160);

	var _reduxForm = __webpack_require__(332);

	var _reactRouterDom = __webpack_require__(203);

	var _axios = __webpack_require__(253);

	var _axios2 = _interopRequireDefault(_axios);

	var _form_register = __webpack_require__(636);

	var _form_register2 = _interopRequireDefault(_form_register);

	var _modal = __webpack_require__(320);

	var _modal2 = _interopRequireDefault(_modal);

	var _spinner = __webpack_require__(321);

	var _spinner2 = _interopRequireDefault(_spinner);

	var _loading_text = __webpack_require__(322);

	var _loading_text2 = _interopRequireDefault(_loading_text);

	var _alert = __webpack_require__(568);

	var _alert2 = _interopRequireDefault(_alert);

	var _config = __webpack_require__(279);

	var _config2 = _interopRequireDefault(_config);

	var _actions_token = __webpack_require__(323);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // 3rd Party


	// Internal Modules


	/*
	    Página para registo de utilizadores na
	    aplicação.

	    TODO:
	        - Redireccional p/ página principal se sessão
	        - load screen enquanto não se tem os dados necessários ao render inicial
	        - mensagens de erro / sucesso
	*/
	var RegisterPage = function (_Component) {
	    _inherits(RegisterPage, _Component);

	    function RegisterPage(props) {
	        _classCallCheck(this, RegisterPage);

	        var _this = _possibleConstructorReturn(this, (RegisterPage.__proto__ || Object.getPrototypeOf(RegisterPage)).call(this, props));

	        _this.state = {
	            districts: null,
	            selectedDistrict: '',
	            submitting: false,
	            successMsg: '',
	            errorMsg: ''
	        };
	        return _this;
	    }

	    /*
	        If there's a token is state, will redirect to proper main page.
	        Otherwise will attempt to fetch token from localstorage.
	        If a valid token is fetched then redirects to proper main page.
	        Else, nothing happens.
	    */


	    _createClass(RegisterPage, [{
	        key: 'componentWillMount',
	        value: function componentWillMount() {
	            var token = this.props.token.token;
	            if (token) {
	                this.redirectOnSession(token);
	            } else {
	                this.props.dispatch((0, _actions_token.fetchTokenFromLocalstorage)());
	            }
	        }

	        /*
	            If token is already in state (i.e. comes in nextProps) then
	            redirects to proper main page.
	            Else, fetches districts data to present in the form.
	             NOTA: Este método corre essencialmente após o login.    
	        */

	    }, {
	        key: 'componentWillReceiveProps',
	        value: function componentWillReceiveProps(nextProps) {
	            var token = nextProps.token.token;
	            if (token) {
	                this.redirectOnSession(token);
	            } else {
	                this.fetchDistricts();
	            }
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            // Alterar para loading...
	            if (!this.state.districts) {
	                return _react2.default.createElement(
	                    'div',
	                    { className: 'container h-100' },
	                    _react2.default.createElement(
	                        'div',
	                        { className: 'row align-items-center justify-content-center h-100' },
	                        _react2.default.createElement(_spinner2.default, null),
	                        _react2.default.createElement(_loading_text2.default, { message: 'A carregar' })
	                    )
	                );
	            }

	            return _react2.default.createElement(
	                'div',
	                { className: 'container h-100' },
	                _react2.default.createElement(
	                    'div',
	                    { className: 'row align-items-center justify-content-center h-100' },
	                    _react2.default.createElement(
	                        'div',
	                        { className: 'col-md-4' },
	                        _react2.default.createElement(_form_register2.default, {
	                            districts: this.state.districts,
	                            selectedDistrict: this.state.selectedDistrict,
	                            onDistrictSelect: this.onDistrictSelect.bind(this),
	                            onSubmit: this.onSubmit.bind(this)
	                        }),
	                        _react2.default.createElement(
	                            _reactRouterDom.Link,
	                            { className: 'btn btn-danger form-control mt-2', to: '/login' },
	                            'Cancelar'
	                        )
	                    )
	                ),
	                this.state.submitting && _react2.default.createElement(
	                    _modal2.default,
	                    null,
	                    _react2.default.createElement(
	                        'div',
	                        { className: 'd-flex justify-content-center align-items-center' },
	                        _react2.default.createElement(
	                            'div',
	                            { className: 'mr-3' },
	                            _react2.default.createElement(_spinner2.default, null)
	                        ),
	                        _react2.default.createElement(_loading_text2.default, { message: 'A registar' })
	                    )
	                ),
	                this.state.successMsg && _react2.default.createElement(
	                    _alert2.default,
	                    { type: 'success', timeout: 2, timeoutCallback: this.resetStateOrRedirect.bind(this) },
	                    _react2.default.createElement(
	                        'strong',
	                        null,
	                        this.state.successMsg
	                    ),
	                    ' ',
	                    'A redireccionar para login...'
	                ) || this.state.errorMsg && _react2.default.createElement(
	                    _alert2.default,
	                    { type: 'danger', timeout: 4, timeoutCallback: this.resetStateOrRedirect.bind(this) },
	                    _react2.default.createElement(
	                        'strong',
	                        null,
	                        this.state.errorMsg
	                    )
	                )
	            );
	        }

	        /*
	            Este método só é invocado no caso de haver um token / sessão.
	            Dado a role do utilizador autenticado, redirecciona para a
	            main page deste.
	        */

	    }, {
	        key: 'redirectOnSession',
	        value: function redirectOnSession(token) {
	            switch (token.role) {
	                case 'trial':
	                case 'basic':
	                    this.props.history.push('/app/user/map');
	                    break;
	                case 'core':
	                    this.props.history.push('/app/core/management/types');
	            }
	        }
	    }, {
	        key: 'fetchDistricts',
	        value: function fetchDistricts() {
	            var _this2 = this;

	            _axios2.default.get(_config2.default + '/operation/address').then(function (response) {
	                _this2.setState({ districts: response.data });
	            }).catch(function (error) {
	                console.log('Error!', error);
	            });
	        }

	        /*
	            Redirecciona para login em caso de registo com sucesso.
	            Faz dismiss do alert de erro em caso de insucesso.
	        */

	    }, {
	        key: 'resetStateOrRedirect',
	        value: function resetStateOrRedirect() {
	            if (this.state.successMsg) this.props.history.push('/login');else this.setState({ successMsg: '', errorMsg: '' });
	        }
	    }, {
	        key: 'onDistrictSelect',
	        value: function onDistrictSelect(event) {
	            var district = event.currentTarget.value;
	            if (district !== 'Distrito...') this.setState({ selectedDistrict: district });else this.setState({ selectedDistrict: '' });
	            // Força a mudança de valor no campo address.county
	            this.props.dispatch((0, _reduxForm.change)('Register', 'address.county', 'Concelho...'));
	        }
	    }, {
	        key: 'onSubmit',
	        value: function onSubmit(values) {
	            var _this3 = this;

	            this.setState({ submitting: true });
	            (0, _axios2.default)({
	                method: 'post',
	                responseType: 'json',
	                url: _config2.default + '/register/trial',
	                data: values
	            }).then(function (response) {
	                _this3.props.dispatch((0, _reduxForm.reset)('Register'));
	                _this3.setState({ submitting: false, successMsg: 'Sucesso!' });
	            }).catch(function (error) {
	                _this3.setState({ submitting: false, errorMsg: error.response.data.output });
	            });
	        }
	    }]);

	    return RegisterPage;
	}(_react.Component);

	/*
	    Função que filtra as propriedades da store que interessam ao componente
	    em questão e as torna disponíveis através de props.
	*/


	function mapStateToProps(store) {
	    return {
	        token: store.token
	    };
	}

	// Ligar componente ao Redux
	exports.default = (0, _reactRedux.connect)(mapStateToProps)(RegisterPage);

/***/ }),
/* 636 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _reduxForm = __webpack_require__(332);

	var _lodash = __webpack_require__(637);

	var _lodash2 = _interopRequireDefault(_lodash);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // 3rd Party


	/*

	*/
	var RegisterForm = function (_Component) {
	    _inherits(RegisterForm, _Component);

	    function RegisterForm() {
	        _classCallCheck(this, RegisterForm);

	        return _possibleConstructorReturn(this, (RegisterForm.__proto__ || Object.getPrototypeOf(RegisterForm)).apply(this, arguments));
	    }

	    _createClass(RegisterForm, [{
	        key: 'renderInput',
	        value: function renderInput(_ref) {
	            var input = _ref.input,
	                placeholder = _ref.placeholder,
	                type = _ref.type,
	                _ref$meta = _ref.meta,
	                touched = _ref$meta.touched,
	                error = _ref$meta.error;

	            return _react2.default.createElement(
	                'div',
	                { className: 'form-group' + (touched ? error ? ' has-danger' : ' has-success' : '') },
	                _react2.default.createElement(
	                    'div',
	                    { className: 'input-group input-group-lg' },
	                    _react2.default.createElement('input', _extends({
	                        className: 'form-control' + (touched ? error ? ' form-control-danger' : ' form-control-success' : ''),
	                        type: type,
	                        placeholder: placeholder
	                    }, input))
	                ),
	                _react2.default.createElement(
	                    'small',
	                    { className: 'form-control-feedback' },
	                    touched ? error : ''
	                )
	            );
	        }
	    }, {
	        key: 'renderSelectDistrict',
	        value: function renderSelectDistrict(_ref2) {
	            var input = _ref2.input,
	                _ref2$meta = _ref2.meta,
	                touched = _ref2$meta.touched,
	                error = _ref2$meta.error;

	            // Lista de chaves no objecto districts (nomes dos distritos) para lista de <option>
	            var districts = _lodash2.default.keys(this.props.districts).map(function (district) {
	                return _react2.default.createElement(
	                    'option',
	                    { key: district, value: district },
	                    district
	                );
	            });

	            return _react2.default.createElement(
	                'div',
	                { className: 'form-group' + (touched ? error ? ' has-danger' : ' has-success' : '') },
	                _react2.default.createElement(
	                    'div',
	                    { className: 'input-group input-group-lg' },
	                    _react2.default.createElement(
	                        'select',
	                        _extends({
	                            className: 'form-control' + (touched ? error ? ' form-control-danger' : ' form-control-success' : '')
	                        }, input),
	                        _react2.default.createElement(
	                            'option',
	                            { defaultValue: true },
	                            'Distrito...'
	                        ),
	                        districts
	                    )
	                ),
	                _react2.default.createElement(
	                    'small',
	                    { className: 'form-control-feedback' },
	                    touched ? error : ''
	                )
	            );
	        }
	    }, {
	        key: 'renderSelectCounty',
	        value: function renderSelectCounty(_ref3) {
	            var input = _ref3.input,
	                _ref3$meta = _ref3.meta,
	                touched = _ref3$meta.touched,
	                error = _ref3$meta.error;

	            if (this.props.selectedDistrict) {
	                // Lista de nomes de concelhos pertencentes ao distrito seleccionado para lista de <option>
	                var counties = this.props.districts[this.props.selectedDistrict].map(function (county) {
	                    return _react2.default.createElement(
	                        'option',
	                        { key: county, value: county },
	                        county
	                    );
	                });

	                return this.props.selectedDistrict && _react2.default.createElement(
	                    'div',
	                    { className: 'form-group' + (touched ? error ? ' has-danger' : ' has-success' : '') },
	                    _react2.default.createElement(
	                        'div',
	                        { className: 'input-group input-group-lg' },
	                        _react2.default.createElement(
	                            'select',
	                            _extends({
	                                className: 'form-control' + (touched ? error ? ' form-control-danger' : ' form-control-success' : '')
	                            }, input),
	                            _react2.default.createElement(
	                                'option',
	                                { defaultValue: true },
	                                'Concelho...'
	                            ),
	                            counties
	                        )
	                    ),
	                    _react2.default.createElement(
	                        'small',
	                        { className: 'form-control-feedback' },
	                        touched ? error : ''
	                    )
	                );
	            } else {
	                return _react2.default.createElement('noscript', null);
	            }
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            var _this2 = this;

	            // reduxForm injected props
	            var _props = this.props,
	                handleSubmit = _props.handleSubmit,
	                pristine = _props.pristine,
	                reset = _props.reset,
	                submitting = _props.submitting;


	            return _react2.default.createElement(
	                'form',
	                { noValidate: true, onSubmit: handleSubmit(this.props.onSubmit) },
	                _react2.default.createElement(_reduxForm.Field, {
	                    name: 'name',
	                    type: 'text',
	                    placeholder: 'Nome',
	                    component: this.renderInput
	                }),
	                _react2.default.createElement(_reduxForm.Field, {
	                    name: 'email',
	                    type: 'email',
	                    placeholder: 'Email',
	                    component: this.renderInput
	                }),
	                _react2.default.createElement(_reduxForm.Field, {
	                    name: 'email_confirm',
	                    type: 'email',
	                    placeholder: 'Confirmar Email',
	                    component: this.renderInput
	                }),
	                _react2.default.createElement(_reduxForm.Field, {
	                    name: 'password',
	                    type: 'password',
	                    placeholder: 'Password',
	                    component: this.renderInput
	                }),
	                _react2.default.createElement(_reduxForm.Field, {
	                    name: 'password_confirm',
	                    type: 'password',
	                    placeholder: 'Confirmar Password',
	                    component: this.renderInput
	                }),
	                _react2.default.createElement(_reduxForm.Field, {
	                    name: 'address.district',
	                    component: this.renderSelectDistrict.bind(this),
	                    onChange: function onChange(event) {
	                        return _this2.props.onDistrictSelect(event);
	                    }
	                }),
	                _react2.default.createElement(_reduxForm.Field, {
	                    name: 'address.county',
	                    component: this.renderSelectCounty.bind(this),
	                    onChange: function onChange(event) {
	                        return console.log('County changed!');
	                    }
	                }),
	                _react2.default.createElement(
	                    'button',
	                    {
	                        type: 'submit',
	                        className: 'btn btn-success form-control mt-2',
	                        disabled: pristine || submitting
	                    },
	                    'Registar'
	                )
	            );
	        }
	    }]);

	    return RegisterForm;
	}(_react.Component);

	// Expressão regular para validar endereços de email


	var emailRegex = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;

	// Função onde acontece toda a validação dos campos do form.
	function validate(values) {
	    var errors = {
	        address: {}
	    };

	    if (!values.name) {
	        errors.name = 'Obrigatório';
	    }

	    if (!values.email) {
	        errors.email = 'Obrigatório';
	    } else if (!emailRegex.test(values.email)) {
	        errors.email = 'Endereço de email inválido';
	    }

	    if (!values.email_confirm) {
	        errors.email_confirm = 'Obrigatório';
	    } else if (values.email_confirm !== values.email) {
	        errors.email_confirm = 'Os emails devem coincidir';
	    }

	    if (!values.password) {
	        errors.password = 'Obrigatório';
	    } else if (values.password.length < 6) {
	        errors.password = 'Password demasiado curta';
	    }

	    if (!values.password_confirm) {
	        errors.password_confirm = 'Obrigatório';
	    } else if (values.password_confirm !== values.password) {
	        errors.password_confirm = 'As passwords devem coincidir';
	    }

	    if (!values.address) {
	        errors.address.district = 'Obrigatório';
	    } else if (!values.address.district) {
	        errors.address.district = 'Obrigatório';
	    } else if (values.address.district === 'Distrito...') {
	        errors.address.district = 'Obrigatório';
	    } else if (values.address.county === 'Concelho...') {
	        errors.address.county = 'Obrigatório';
	    }

	    return errors;
	}

	// Liga o formulário ao redux-form e, portanto, à store do Redux.
	exports.default = (0, _reduxForm.reduxForm)({
	    form: 'Register',
	    validate: validate
	})(RegisterForm);

/***/ }),
/* 637 */
/***/ (function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(module, global) {/**
	 * @license
	 * lodash 3.10.1 (Custom Build) <https://lodash.com/>
	 * Build: `lodash modern -d -o ./index.js`
	 * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>
	 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
	 * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
	 * Available under MIT license <https://lodash.com/license>
	 */
	;(function() {

	  /** Used as a safe reference for `undefined` in pre-ES5 environments. */
	  var undefined;

	  /** Used as the semantic version number. */
	  var VERSION = '3.10.1';

	  /** Used to compose bitmasks for wrapper metadata. */
	  var BIND_FLAG = 1,
	      BIND_KEY_FLAG = 2,
	      CURRY_BOUND_FLAG = 4,
	      CURRY_FLAG = 8,
	      CURRY_RIGHT_FLAG = 16,
	      PARTIAL_FLAG = 32,
	      PARTIAL_RIGHT_FLAG = 64,
	      ARY_FLAG = 128,
	      REARG_FLAG = 256;

	  /** Used as default options for `_.trunc`. */
	  var DEFAULT_TRUNC_LENGTH = 30,
	      DEFAULT_TRUNC_OMISSION = '...';

	  /** Used to detect when a function becomes hot. */
	  var HOT_COUNT = 150,
	      HOT_SPAN = 16;

	  /** Used as the size to enable large array optimizations. */
	  var LARGE_ARRAY_SIZE = 200;

	  /** Used to indicate the type of lazy iteratees. */
	  var LAZY_FILTER_FLAG = 1,
	      LAZY_MAP_FLAG = 2;

	  /** Used as the `TypeError` message for "Functions" methods. */
	  var FUNC_ERROR_TEXT = 'Expected a function';

	  /** Used as the internal argument placeholder. */
	  var PLACEHOLDER = '__lodash_placeholder__';

	  /** `Object#toString` result references. */
	  var argsTag = '[object Arguments]',
	      arrayTag = '[object Array]',
	      boolTag = '[object Boolean]',
	      dateTag = '[object Date]',
	      errorTag = '[object Error]',
	      funcTag = '[object Function]',
	      mapTag = '[object Map]',
	      numberTag = '[object Number]',
	      objectTag = '[object Object]',
	      regexpTag = '[object RegExp]',
	      setTag = '[object Set]',
	      stringTag = '[object String]',
	      weakMapTag = '[object WeakMap]';

	  var arrayBufferTag = '[object ArrayBuffer]',
	      float32Tag = '[object Float32Array]',
	      float64Tag = '[object Float64Array]',
	      int8Tag = '[object Int8Array]',
	      int16Tag = '[object Int16Array]',
	      int32Tag = '[object Int32Array]',
	      uint8Tag = '[object Uint8Array]',
	      uint8ClampedTag = '[object Uint8ClampedArray]',
	      uint16Tag = '[object Uint16Array]',
	      uint32Tag = '[object Uint32Array]';

	  /** Used to match empty string literals in compiled template source. */
	  var reEmptyStringLeading = /\b__p \+= '';/g,
	      reEmptyStringMiddle = /\b(__p \+=) '' \+/g,
	      reEmptyStringTrailing = /(__e\(.*?\)|\b__t\)) \+\n'';/g;

	  /** Used to match HTML entities and HTML characters. */
	  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39|#96);/g,
	      reUnescapedHtml = /[&<>"'`]/g,
	      reHasEscapedHtml = RegExp(reEscapedHtml.source),
	      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);

	  /** Used to match template delimiters. */
	  var reEscape = /<%-([\s\S]+?)%>/g,
	      reEvaluate = /<%([\s\S]+?)%>/g,
	      reInterpolate = /<%=([\s\S]+?)%>/g;

	  /** Used to match property names within property paths. */
	  var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\n\\]|\\.)*?\1)\]/,
	      reIsPlainProp = /^\w*$/,
	      rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\n\\]|\\.)*?)\2)\]/g;

	  /**
	   * Used to match `RegExp` [syntax characters](http://ecma-international.org/ecma-262/6.0/#sec-patterns)
	   * and those outlined by [`EscapeRegExpPattern`](http://ecma-international.org/ecma-262/6.0/#sec-escaperegexppattern).
	   */
	  var reRegExpChars = /^[:!,]|[\\^$.*+?()[\]{}|\/]|(^[0-9a-fA-Fnrtuvx])|([\n\r\u2028\u2029])/g,
	      reHasRegExpChars = RegExp(reRegExpChars.source);

	  /** Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks). */
	  var reComboMark = /[\u0300-\u036f\ufe20-\ufe23]/g;

	  /** Used to match backslashes in property paths. */
	  var reEscapeChar = /\\(\\)?/g;

	  /** Used to match [ES template delimiters](http://ecma-international.org/ecma-262/6.0/#sec-template-literal-lexical-components). */
	  var reEsTemplate = /\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g;

	  /** Used to match `RegExp` flags from their coerced string values. */
	  var reFlags = /\w*$/;

	  /** Used to detect hexadecimal string values. */
	  var reHasHexPrefix = /^0[xX]/;

	  /** Used to detect host constructors (Safari > 5). */
	  var reIsHostCtor = /^\[object .+?Constructor\]$/;

	  /** Used to detect unsigned integer values. */
	  var reIsUint = /^\d+$/;

	  /** Used to match latin-1 supplementary letters (excluding mathematical operators). */
	  var reLatin1 = /[\xc0-\xd6\xd8-\xde\xdf-\xf6\xf8-\xff]/g;

	  /** Used to ensure capturing order of template delimiters. */
	  var reNoMatch = /($^)/;

	  /** Used to match unescaped characters in compiled string literals. */
	  var reUnescapedString = /['\n\r\u2028\u2029\\]/g;

	  /** Used to match words to create compound words. */
	  var reWords = (function() {
	    var upper = '[A-Z\\xc0-\\xd6\\xd8-\\xde]',
	        lower = '[a-z\\xdf-\\xf6\\xf8-\\xff]+';

	    return RegExp(upper + '+(?=' + upper + lower + ')|' + upper + '?' + lower + '|' + upper + '+|[0-9]+', 'g');
	  }());

	  /** Used to assign default `context` object properties. */
	  var contextProps = [
	    'Array', 'ArrayBuffer', 'Date', 'Error', 'Float32Array', 'Float64Array',
	    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Math', 'Number',
	    'Object', 'RegExp', 'Set', 'String', '_', 'clearTimeout', 'isFinite',
	    'parseFloat', 'parseInt', 'setTimeout', 'TypeError', 'Uint8Array',
	    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap'
	  ];

	  /** Used to make template sourceURLs easier to identify. */
	  var templateCounter = -1;

	  /** Used to identify `toStringTag` values of typed arrays. */
	  var typedArrayTags = {};
	  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =
	  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =
	  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =
	  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =
	  typedArrayTags[uint32Tag] = true;
	  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =
	  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =
	  typedArrayTags[dateTag] = typedArrayTags[errorTag] =
	  typedArrayTags[funcTag] = typedArrayTags[mapTag] =
	  typedArrayTags[numberTag] = typedArrayTags[objectTag] =
	  typedArrayTags[regexpTag] = typedArrayTags[setTag] =
	  typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;

	  /** Used to identify `toStringTag` values supported by `_.clone`. */
	  var cloneableTags = {};
	  cloneableTags[argsTag] = cloneableTags[arrayTag] =
	  cloneableTags[arrayBufferTag] = cloneableTags[boolTag] =
	  cloneableTags[dateTag] = cloneableTags[float32Tag] =
	  cloneableTags[float64Tag] = cloneableTags[int8Tag] =
	  cloneableTags[int16Tag] = cloneableTags[int32Tag] =
	  cloneableTags[numberTag] = cloneableTags[objectTag] =
	  cloneableTags[regexpTag] = cloneableTags[stringTag] =
	  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =
	  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;
	  cloneableTags[errorTag] = cloneableTags[funcTag] =
	  cloneableTags[mapTag] = cloneableTags[setTag] =
	  cloneableTags[weakMapTag] = false;

	  /** Used to map latin-1 supplementary letters to basic latin letters. */
	  var deburredLetters = {
	    '\xc0': 'A',  '\xc1': 'A', '\xc2': 'A', '\xc3': 'A', '\xc4': 'A', '\xc5': 'A',
	    '\xe0': 'a',  '\xe1': 'a', '\xe2': 'a', '\xe3': 'a', '\xe4': 'a', '\xe5': 'a',
	    '\xc7': 'C',  '\xe7': 'c',
	    '\xd0': 'D',  '\xf0': 'd',
	    '\xc8': 'E',  '\xc9': 'E', '\xca': 'E', '\xcb': 'E',
	    '\xe8': 'e',  '\xe9': 'e', '\xea': 'e', '\xeb': 'e',
	    '\xcC': 'I',  '\xcd': 'I', '\xce': 'I', '\xcf': 'I',
	    '\xeC': 'i',  '\xed': 'i', '\xee': 'i', '\xef': 'i',
	    '\xd1': 'N',  '\xf1': 'n',
	    '\xd2': 'O',  '\xd3': 'O', '\xd4': 'O', '\xd5': 'O', '\xd6': 'O', '\xd8': 'O',
	    '\xf2': 'o',  '\xf3': 'o', '\xf4': 'o', '\xf5': 'o', '\xf6': 'o', '\xf8': 'o',
	    '\xd9': 'U',  '\xda': 'U', '\xdb': 'U', '\xdc': 'U',
	    '\xf9': 'u',  '\xfa': 'u', '\xfb': 'u', '\xfc': 'u',
	    '\xdd': 'Y',  '\xfd': 'y', '\xff': 'y',
	    '\xc6': 'Ae', '\xe6': 'ae',
	    '\xde': 'Th', '\xfe': 'th',
	    '\xdf': 'ss'
	  };

	  /** Used to map characters to HTML entities. */
	  var htmlEscapes = {
	    '&': '&amp;',
	    '<': '&lt;',
	    '>': '&gt;',
	    '"': '&quot;',
	    "'": '&#39;',
	    '`': '&#96;'
	  };

	  /** Used to map HTML entities to characters. */
	  var htmlUnescapes = {
	    '&amp;': '&',
	    '&lt;': '<',
	    '&gt;': '>',
	    '&quot;': '"',
	    '&#39;': "'",
	    '&#96;': '`'
	  };

	  /** Used to determine if values are of the language type `Object`. */
	  var objectTypes = {
	    'function': true,
	    'object': true
	  };

	  /** Used to escape characters for inclusion in compiled regexes. */
	  var regexpEscapes = {
	    '0': 'x30', '1': 'x31', '2': 'x32', '3': 'x33', '4': 'x34',
	    '5': 'x35', '6': 'x36', '7': 'x37', '8': 'x38', '9': 'x39',
	    'A': 'x41', 'B': 'x42', 'C': 'x43', 'D': 'x44', 'E': 'x45', 'F': 'x46',
	    'a': 'x61', 'b': 'x62', 'c': 'x63', 'd': 'x64', 'e': 'x65', 'f': 'x66',
	    'n': 'x6e', 'r': 'x72', 't': 'x74', 'u': 'x75', 'v': 'x76', 'x': 'x78'
	  };

	  /** Used to escape characters for inclusion in compiled string literals. */
	  var stringEscapes = {
	    '\\': '\\',
	    "'": "'",
	    '\n': 'n',
	    '\r': 'r',
	    '\u2028': 'u2028',
	    '\u2029': 'u2029'
	  };

	  /** Detect free variable `exports`. */
	  var freeExports = objectTypes[typeof exports] && exports && !exports.nodeType && exports;

	  /** Detect free variable `module`. */
	  var freeModule = objectTypes[typeof module] && module && !module.nodeType && module;

	  /** Detect free variable `global` from Node.js. */
	  var freeGlobal = freeExports && freeModule && typeof global == 'object' && global && global.Object && global;

	  /** Detect free variable `self`. */
	  var freeSelf = objectTypes[typeof self] && self && self.Object && self;

	  /** Detect free variable `window`. */
	  var freeWindow = objectTypes[typeof window] && window && window.Object && window;

	  /** Detect the popular CommonJS extension `module.exports`. */
	  var moduleExports = freeModule && freeModule.exports === freeExports && freeExports;

	  /**
	   * Used as a reference to the global object.
	   *
	   * The `this` value is used if it's the global object to avoid Greasemonkey's
	   * restricted `window` object, otherwise the `window` object is used.
	   */
	  var root = freeGlobal || ((freeWindow !== (this && this.window)) && freeWindow) || freeSelf || this;

	  /*--------------------------------------------------------------------------*/

	  /**
	   * The base implementation of `compareAscending` which compares values and
	   * sorts them in ascending order without guaranteeing a stable sort.
	   *
	   * @private
	   * @param {*} value The value to compare.
	   * @param {*} other The other value to compare.
	   * @returns {number} Returns the sort order indicator for `value`.
	   */
	  function baseCompareAscending(value, other) {
	    if (value !== other) {
	      var valIsNull = value === null,
	          valIsUndef = value === undefined,
	          valIsReflexive = value === value;

	      var othIsNull = other === null,
	          othIsUndef = other === undefined,
	          othIsReflexive = other === other;

	      if ((value > other && !othIsNull) || !valIsReflexive ||
	          (valIsNull && !othIsUndef && othIsReflexive) ||
	          (valIsUndef && othIsReflexive)) {
	        return 1;
	      }
	      if ((value < other && !valIsNull) || !othIsReflexive ||
	          (othIsNull && !valIsUndef && valIsReflexive) ||
	          (othIsUndef && valIsReflexive)) {
	        return -1;
	      }
	    }
	    return 0;
	  }

	  /**
	   * The base implementation of `_.findIndex` and `_.findLastIndex` without
	   * support for callback shorthands and `this` binding.
	   *
	   * @private
	   * @param {Array} array The array to search.
	   * @param {Function} predicate The function invoked per iteration.
	   * @param {boolean} [fromRight] Specify iterating from right to left.
	   * @returns {number} Returns the index of the matched value, else `-1`.
	   */
	  function baseFindIndex(array, predicate, fromRight) {
	    var length = array.length,
	        index = fromRight ? length : -1;

	    while ((fromRight ? index-- : ++index < length)) {
	      if (predicate(array[index], index, array)) {
	        return index;
	      }
	    }
	    return -1;
	  }

	  /**
	   * The base implementation of `_.indexOf` without support for binary searches.
	   *
	   * @private
	   * @param {Array} array The array to search.
	   * @param {*} value The value to search for.
	   * @param {number} fromIndex The index to search from.
	   * @returns {number} Returns the index of the matched value, else `-1`.
	   */
	  function baseIndexOf(array, value, fromIndex) {
	    if (value !== value) {
	      return indexOfNaN(array, fromIndex);
	    }
	    var index = fromIndex - 1,
	        length = array.length;

	    while (++index < length) {
	      if (array[index] === value) {
	        return index;
	      }
	    }
	    return -1;
	  }

	  /**
	   * The base implementation of `_.isFunction` without support for environments
	   * with incorrect `typeof` results.
	   *
	   * @private
	   * @param {*} value The value to check.
	   * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.
	   */
	  function baseIsFunction(value) {
	    // Avoid a Chakra JIT bug in compatibility modes of IE 11.
	    // See https://github.com/jashkenas/underscore/issues/1621 for more details.
	    return typeof value == 'function' || false;
	  }

	  /**
	   * Converts `value` to a string if it's not one. An empty string is returned
	   * for `null` or `undefined` values.
	   *
	   * @private
	   * @param {*} value The value to process.
	   * @returns {string} Returns the string.
	   */
	  function baseToString(value) {
	    return value == null ? '' : (value + '');
	  }

	  /**
	   * Used by `_.trim` and `_.trimLeft` to get the index of the first character
	   * of `string` that is not found in `chars`.
	   *
	   * @private
	   * @param {string} string The string to inspect.
	   * @param {string} chars The characters to find.
	   * @returns {number} Returns the index of the first character not found in `chars`.
	   */
	  function charsLeftIndex(string, chars) {
	    var index = -1,
	        length = string.length;

	    while (++index < length && chars.indexOf(string.charAt(index)) > -1) {}
	    return index;
	  }

	  /**
	   * Used by `_.trim` and `_.trimRight` to get the index of the last character
	   * of `string` that is not found in `chars`.
	   *
	   * @private
	   * @param {string} string The string to inspect.
	   * @param {string} chars The characters to find.
	   * @returns {number} Returns the index of the last character not found in `chars`.
	   */
	  function charsRightIndex(string, chars) {
	    var index = string.length;

	    while (index-- && chars.indexOf(string.charAt(index)) > -1) {}
	    return index;
	  }

	  /**
	   * Used by `_.sortBy` to compare transformed elements of a collection and stable
	   * sort them in ascending order.
	   *
	   * @private
	   * @param {Object} object The object to compare.
	   * @param {Object} other The other object to compare.
	   * @returns {number} Returns the sort order indicator for `object`.
	   */
	  function compareAscending(object, other) {
	    return baseCompareAscending(object.criteria, other.criteria) || (object.index - other.index);
	  }

	  /**
	   * Used by `_.sortByOrder` to compare multiple properties of a value to another
	   * and stable sort them.
	   *
	   * If `orders` is unspecified, all valuess are sorted in ascending order. Otherwise,
	   * a value is sorted in ascending order if its corresponding order is "asc", and
	   * descending if "desc".
	   *
	   * @private
	   * @param {Object} object The object to compare.
	   * @param {Object} other The other object to compare.
	   * @param {boolean[]} orders The order to sort by for each property.
	   * @returns {number} Returns the sort order indicator for `object`.
	   */
	  function compareMultiple(object, other, orders) {
	    var index = -1,
	        objCriteria = object.criteria,
	        othCriteria = other.criteria,
	        length = objCriteria.length,
	        ordersLength = orders.length;

	    while (++index < length) {
	      var result = baseCompareAscending(objCriteria[index], othCriteria[index]);
	      if (result) {
	        if (index >= ordersLength) {
	          return result;
	        }
	        var order = orders[index];
	        return result * ((order === 'asc' || order === true) ? 1 : -1);
	      }
	    }
	    // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications
	    // that causes it, under certain circumstances, to provide the same value for
	    // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247
	    // for more details.
	    //
	    // This also ensures a stable sort in V8 and other engines.
	    // See https://code.google.com/p/v8/issues/detail?id=90 for more details.
	    return object.index - other.index;
	  }

	  /**
	   * Used by `_.deburr` to convert latin-1 supplementary letters to basic latin letters.
	   *
	   * @private
	   * @param {string} letter The matched letter to deburr.
	   * @returns {string} Returns the deburred letter.
	   */
	  function deburrLetter(letter) {
	    return deburredLetters[letter];
	  }

	  /**
	   * Used by `_.escape` to convert characters to HTML entities.
	   *
	   * @private
	   * @param {string} chr The matched character to escape.
	   * @returns {string} Returns the escaped character.
	   */
	  function escapeHtmlChar(chr) {
	    return htmlEscapes[chr];
	  }

	  /**
	   * Used by `_.escapeRegExp` to escape characters for inclusion in compiled regexes.
	   *
	   * @private
	   * @param {string} chr The matched character to escape.
	   * @param {string} leadingChar The capture group for a leading character.
	   * @param {string} whitespaceChar The capture group for a whitespace character.
	   * @returns {string} Returns the escaped character.
	   */
	  function escapeRegExpChar(chr, leadingChar, whitespaceChar) {
	    if (leadingChar) {
	      chr = regexpEscapes[chr];
	    } else if (whitespaceChar) {
	      chr = stringEscapes[chr];
	    }
	    return '\\' + chr;
	  }

	  /**
	   * Used by `_.template` to escape characters for inclusion in compiled string literals.
	   *
	   * @private
	   * @param {string} chr The matched character to escape.
	   * @returns {string} Returns the escaped character.
	   */
	  function escapeStringChar(chr) {
	    return '\\' + stringEscapes[chr];
	  }

	  /**
	   * Gets the index at which the first occurrence of `NaN` is found in `array`.
	   *
	   * @private
	   * @param {Array} array The array to search.
	   * @param {number} fromIndex The index to search from.
	   * @param {boolean} [fromRight] Specify iterating from right to left.
	   * @returns {number} Returns the index of the matched `NaN`, else `-1`.
	   */
	  function indexOfNaN(array, fromIndex, fromRight) {
	    var length = array.length,
	        index = fromIndex + (fromRight ? 0 : -1);

	    while ((fromRight ? index-- : ++index < length)) {
	      var other = array[index];
	      if (other !== other) {
	        return index;
	      }
	    }
	    return -1;
	  }

	  /**
	   * Checks if `value` is object-like.
	   *
	   * @private
	   * @param {*} value The value to check.
	   * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
	   */
	  function isObjectLike(value) {
	    return !!value && typeof value == 'object';
	  }

	  /**
	   * Used by `trimmedLeftIndex` and `trimmedRightIndex` to determine if a
	   * character code is whitespace.
	   *
	   * @private
	   * @param {number} charCode The character code to inspect.
	   * @returns {boolean} Returns `true` if `charCode` is whitespace, else `false`.
	   */
	  function isSpace(charCode) {
	    return ((charCode <= 160 && (charCode >= 9 && charCode <= 13) || charCode == 32 || charCode == 160) || charCode == 5760 || charCode == 6158 ||
	      (charCode >= 8192 && (charCode <= 8202 || charCode == 8232 || charCode == 8233 || charCode == 8239 || charCode == 8287 || charCode == 12288 || charCode == 65279)));
	  }

	  /**
	   * Replaces all `placeholder` elements in `array` with an internal placeholder
	   * and returns an array of their indexes.
	   *
	   * @private
	   * @param {Array} array The array to modify.
	   * @param {*} placeholder The placeholder to replace.
	   * @returns {Array} Returns the new array of placeholder indexes.
	   */
	  function replaceHolders(array, placeholder) {
	    var index = -1,
	        length = array.length,
	        resIndex = -1,
	        result = [];

	    while (++index < length) {
	      if (array[index] === placeholder) {
	        array[index] = PLACEHOLDER;
	        result[++resIndex] = index;
	      }
	    }
	    return result;
	  }

	  /**
	   * An implementation of `_.uniq` optimized for sorted arrays without support
	   * for callback shorthands and `this` binding.
	   *
	   * @private
	   * @param {Array} array The array to inspect.
	   * @param {Function} [iteratee] The function invoked per iteration.
	   * @returns {Array} Returns the new duplicate-value-free array.
	   */
	  function sortedUniq(array, iteratee) {
	    var seen,
	        index = -1,
	        length = array.length,
	        resIndex = -1,
	        result = [];

	    while (++index < length) {
	      var value = array[index],
	          computed = iteratee ? iteratee(value, index, array) : value;

	      if (!index || seen !== computed) {
	        seen = computed;
	        result[++resIndex] = value;
	      }
	    }
	    return result;
	  }

	  /**
	   * Used by `_.trim` and `_.trimLeft` to get the index of the first non-whitespace
	   * character of `string`.
	   *
	   * @private
	   * @param {string} string The string to inspect.
	   * @returns {number} Returns the index of the first non-whitespace character.
	   */
	  function trimmedLeftIndex(string) {
	    var index = -1,
	        length = string.length;

	    while (++index < length && isSpace(string.charCodeAt(index))) {}
	    return index;
	  }

	  /**
	   * Used by `_.trim` and `_.trimRight` to get the index of the last non-whitespace
	   * character of `string`.
	   *
	   * @private
	   * @param {string} string The string to inspect.
	   * @returns {number} Returns the index of the last non-whitespace character.
	   */
	  function trimmedRightIndex(string) {
	    var index = string.length;

	    while (index-- && isSpace(string.charCodeAt(index))) {}
	    return index;
	  }

	  /**
	   * Used by `_.unescape` to convert HTML entities to characters.
	   *
	   * @private
	   * @param {string} chr The matched character to unescape.
	   * @returns {string} Returns the unescaped character.
	   */
	  function unescapeHtmlChar(chr) {
	    return htmlUnescapes[chr];
	  }

	  /*--------------------------------------------------------------------------*/

	  /**
	   * Create a new pristine `lodash` function using the given `context` object.
	   *
	   * @static
	   * @memberOf _
	   * @category Utility
	   * @param {Object} [context=root] The context object.
	   * @returns {Function} Returns a new `lodash` function.
	   * @example
	   *
	   * _.mixin({ 'foo': _.constant('foo') });
	   *
	   * var lodash = _.runInContext();
	   * lodash.mixin({ 'bar': lodash.constant('bar') });
	   *
	   * _.isFunction(_.foo);
	   * // => true
	   * _.isFunction(_.bar);
	   * // => false
	   *
	   * lodash.isFunction(lodash.foo);
	   * // => false
	   * lodash.isFunction(lodash.bar);
	   * // => true
	   *
	   * // using `context` to mock `Date#getTime` use in `_.now`
	   * var mock = _.runInContext({
	   *   'Date': function() {
	   *     return { 'getTime': getTimeMock };
	   *   }
	   * });
	   *
	   * // or creating a suped-up `defer` in Node.js
	   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;
	   */
	  function runInContext(context) {
	    // Avoid issues with some ES3 environments that attempt to use values, named
	    // after built-in constructors like `Object`, for the creation of literals.
	    // ES5 clears this up by stating that literals must use built-in constructors.
	    // See https://es5.github.io/#x11.1.5 for more details.
	    context = context ? _.defaults(root.Object(), context, _.pick(root, contextProps)) : root;

	    /** Native constructor references. */
	    var Array = context.Array,
	        Date = context.Date,
	        Error = context.Error,
	        Function = context.Function,
	        Math = context.Math,
	        Number = context.Number,
	        Object = context.Object,
	        RegExp = context.RegExp,
	        String = context.String,
	        TypeError = context.TypeError;

	    /** Used for native method references. */
	    var arrayProto = Array.prototype,
	        objectProto = Object.prototype,
	        stringProto = String.prototype;

	    /** Used to resolve the decompiled source of functions. */
	    var fnToString = Function.prototype.toString;

	    /** Used to check objects for own properties. */
	    var hasOwnProperty = objectProto.hasOwnProperty;

	    /** Used to generate unique IDs. */
	    var idCounter = 0;

	    /**
	     * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)
	     * of values.
	     */
	    var objToString = objectProto.toString;

	    /** Used to restore the original `_` reference in `_.noConflict`. */
	    var oldDash = root._;

	    /** Used to detect if a method is native. */
	    var reIsNative = RegExp('^' +
	      fnToString.call(hasOwnProperty).replace(/[\\^$.*+?()[\]{}|]/g, '\\$&')
	      .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$'
	    );

	    /** Native method references. */
	    var ArrayBuffer = context.ArrayBuffer,
	        clearTimeout = context.clearTimeout,
	        parseFloat = context.parseFloat,
	        pow = Math.pow,
	        propertyIsEnumerable = objectProto.propertyIsEnumerable,
	        Set = getNative(context, 'Set'),
	        setTimeout = context.setTimeout,
	        splice = arrayProto.splice,
	        Uint8Array = context.Uint8Array,
	        WeakMap = getNative(context, 'WeakMap');

	    /* Native method references for those with the same name as other `lodash` methods. */
	    var nativeCeil = Math.ceil,
	        nativeCreate = getNative(Object, 'create'),
	        nativeFloor = Math.floor,
	        nativeIsArray = getNative(Array, 'isArray'),
	        nativeIsFinite = context.isFinite,
	        nativeKeys = getNative(Object, 'keys'),
	        nativeMax = Math.max,
	        nativeMin = Math.min,
	        nativeNow = getNative(Date, 'now'),
	        nativeParseInt = context.parseInt,
	        nativeRandom = Math.random;

	    /** Used as references for `-Infinity` and `Infinity`. */
	    var NEGATIVE_INFINITY = Number.NEGATIVE_INFINITY,
	        POSITIVE_INFINITY = Number.POSITIVE_INFINITY;

	    /** Used as references for the maximum length and index of an array. */
	    var MAX_ARRAY_LENGTH = 4294967295,
	        MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,
	        HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;

	    /**
	     * Used as the [maximum length](http://ecma-international.org/ecma-262/6.0/#sec-number.max_safe_integer)
	     * of an array-like value.
	     */
	    var MAX_SAFE_INTEGER = 9007199254740991;

	    /** Used to store function metadata. */
	    var metaMap = WeakMap && new WeakMap;

	    /** Used to lookup unminified function names. */
	    var realNames = {};

	    /*------------------------------------------------------------------------*/

	    /**
	     * Creates a `lodash` object which wraps `value` to enable implicit chaining.
	     * Methods that operate on and return arrays, collections, and functions can
	     * be chained together. Methods that retrieve a single value or may return a
	     * primitive value will automatically end the chain returning the unwrapped
	     * value. Explicit chaining may be enabled using `_.chain`. The execution of
	     * chained methods is lazy, that is, execution is deferred until `_#value`
	     * is implicitly or explicitly called.
	     *
	     * Lazy evaluation allows several methods to support shortcut fusion. Shortcut
	     * fusion is an optimization strategy which merge iteratee calls; this can help
	     * to avoid the creation of intermediate data structures and greatly reduce the
	     * number of iteratee executions.
	     *
	     * Chaining is supported in custom builds as long as the `_#value` method is
	     * directly or indirectly included in the build.
	     *
	     * In addition to lodash methods, wrappers have `Array` and `String` methods.
	     *
	     * The wrapper `Array` methods are:
	     * `concat`, `join`, `pop`, `push`, `reverse`, `shift`, `slice`, `sort`,
	     * `splice`, and `unshift`
	     *
	     * The wrapper `String` methods are:
	     * `replace` and `split`
	     *
	     * The wrapper methods that support shortcut fusion are:
	     * `compact`, `drop`, `dropRight`, `dropRightWhile`, `dropWhile`, `filter`,
	     * `first`, `initial`, `last`, `map`, `pluck`, `reject`, `rest`, `reverse`,
	     * `slice`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, `toArray`,
	     * and `where`
	     *
	     * The chainable wrapper methods are:
	     * `after`, `ary`, `assign`, `at`, `before`, `bind`, `bindAll`, `bindKey`,
	     * `callback`, `chain`, `chunk`, `commit`, `compact`, `concat`, `constant`,
	     * `countBy`, `create`, `curry`, `debounce`, `defaults`, `defaultsDeep`,
	     * `defer`, `delay`, `difference`, `drop`, `dropRight`, `dropRightWhile`,
	     * `dropWhile`, `fill`, `filter`, `flatten`, `flattenDeep`, `flow`, `flowRight`,
	     * `forEach`, `forEachRight`, `forIn`, `forInRight`, `forOwn`, `forOwnRight`,
	     * `functions`, `groupBy`, `indexBy`, `initial`, `intersection`, `invert`,
	     * `invoke`, `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`,
	     * `matchesProperty`, `memoize`, `merge`, `method`, `methodOf`, `mixin`,
	     * `modArgs`, `negate`, `omit`, `once`, `pairs`, `partial`, `partialRight`,
	     * `partition`, `pick`, `plant`, `pluck`, `property`, `propertyOf`, `pull`,
	     * `pullAt`, `push`, `range`, `rearg`, `reject`, `remove`, `rest`, `restParam`,
	     * `reverse`, `set`, `shuffle`, `slice`, `sort`, `sortBy`, `sortByAll`,
	     * `sortByOrder`, `splice`, `spread`, `take`, `takeRight`, `takeRightWhile`,
	     * `takeWhile`, `tap`, `throttle`, `thru`, `times`, `toArray`, `toPlainObject`,
	     * `transform`, `union`, `uniq`, `unshift`, `unzip`, `unzipWith`, `values`,
	     * `valuesIn`, `where`, `without`, `wrap`, `xor`, `zip`, `zipObject`, `zipWith`
	     *
	     * The wrapper methods that are **not** chainable by default are:
	     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clone`, `cloneDeep`,
	     * `deburr`, `endsWith`, `escape`, `escapeRegExp`, `every`, `find`, `findIndex`,
	     * `findKey`, `findLast`, `findLastIndex`, `findLastKey`, `findWhere`, `first`,
	     * `floor`, `get`, `gt`, `gte`, `has`, `identity`, `includes`, `indexOf`,
	     * `inRange`, `isArguments`, `isArray`, `isBoolean`, `isDate`, `isElement`,
	     * `isEmpty`, `isEqual`, `isError`, `isFinite` `isFunction`, `isMatch`,
	     * `isNative`, `isNaN`, `isNull`, `isNumber`, `isObject`, `isPlainObject`,
	     * `isRegExp`, `isString`, `isUndefined`, `isTypedArray`, `join`, `kebabCase`,
	     * `last`, `lastIndexOf`, `lt`, `lte`, `max`, `min`, `noConflict`, `noop`,
	     * `now`, `pad`, `padLeft`, `padRight`, `parseInt`, `pop`, `random`, `reduce`,
	     * `reduceRight`, `repeat`, `result`, `round`, `runInContext`, `shift`, `size`,
	     * `snakeCase`, `some`, `sortedIndex`, `sortedLastIndex`, `startCase`,
	     * `startsWith`, `sum`, `template`, `trim`, `trimLeft`, `trimRight`, `trunc`,
	     * `unescape`, `uniqueId`, `value`, and `words`
	     *
	     * The wrapper method `sample` will return a wrapped value when `n` is provided,
	     * otherwise an unwrapped value is returned.
	     *
	     * @name _
	     * @constructor
	     * @category Chain
	     * @param {*} value The value to wrap in a `lodash` instance.
	     * @returns {Object} Returns the new `lodash` wrapper instance.
	     * @example
	     *
	     * var wrapped = _([1, 2, 3]);
	     *
	     * // returns an unwrapped value
	     * wrapped.reduce(function(total, n) {
	     *   return total + n;
	     * });
	     * // => 6
	     *
	     * // returns a wrapped value
	     * var squares = wrapped.map(function(n) {
	     *   return n * n;
	     * });
	     *
	     * _.isArray(squares);
	     * // => false
	     *
	     * _.isArray(squares.value());
	     * // => true
	     */
	    function lodash(value) {
	      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {
	        if (value instanceof LodashWrapper) {
	          return value;
	        }
	        if (hasOwnProperty.call(value, '__chain__') && hasOwnProperty.call(value, '__wrapped__')) {
	          return wrapperClone(value);
	        }
	      }
	      return new LodashWrapper(value);
	    }

	    /**
	     * The function whose prototype all chaining wrappers inherit from.
	     *
	     * @private
	     */
	    function baseLodash() {
	      // No operation performed.
	    }

	    /**
	     * The base constructor for creating `lodash` wrapper objects.
	     *
	     * @private
	     * @param {*} value The value to wrap.
	     * @param {boolean} [chainAll] Enable chaining for all wrapper methods.
	     * @param {Array} [actions=[]] Actions to peform to resolve the unwrapped value.
	     */
	    function LodashWrapper(value, chainAll, actions) {
	      this.__wrapped__ = value;
	      this.__actions__ = actions || [];
	      this.__chain__ = !!chainAll;
	    }

	    /**
	     * An object environment feature flags.
	     *
	     * @static
	     * @memberOf _
	     * @type Object
	     */
	    var support = lodash.support = {};

	    /**
	     * By default, the template delimiters used by lodash are like those in
	     * embedded Ruby (ERB). Change the following template settings to use
	     * alternative delimiters.
	     *
	     * @static
	     * @memberOf _
	     * @type Object
	     */
	    lodash.templateSettings = {

	      /**
	       * Used to detect `data` property values to be HTML-escaped.
	       *
	       * @memberOf _.templateSettings
	       * @type RegExp
	       */
	      'escape': reEscape,

	      /**
	       * Used to detect code to be evaluated.
	       *
	       * @memberOf _.templateSettings
	       * @type RegExp
	       */
	      'evaluate': reEvaluate,

	      /**
	       * Used to detect `data` property values to inject.
	       *
	       * @memberOf _.templateSettings
	       * @type RegExp
	       */
	      'interpolate': reInterpolate,

	      /**
	       * Used to reference the data object in the template text.
	       *
	       * @memberOf _.templateSettings
	       * @type string
	       */
	      'variable': '',

	      /**
	       * Used to import variables into the compiled template.
	       *
	       * @memberOf _.templateSettings
	       * @type Object
	       */
	      'imports': {

	        /**
	         * A reference to the `lodash` function.
	         *
	         * @memberOf _.templateSettings.imports
	         * @type Function
	         */
	        '_': lodash
	      }
	    };

	    /*------------------------------------------------------------------------*/

	    /**
	     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.
	     *
	     * @private
	     * @param {*} value The value to wrap.
	     */
	    function LazyWrapper(value) {
	      this.__wrapped__ = value;
	      this.__actions__ = [];
	      this.__dir__ = 1;
	      this.__filtered__ = false;
	      this.__iteratees__ = [];
	      this.__takeCount__ = POSITIVE_INFINITY;
	      this.__views__ = [];
	    }

	    /**
	     * Creates a clone of the lazy wrapper object.
	     *
	     * @private
	     * @name clone
	     * @memberOf LazyWrapper
	     * @returns {Object} Returns the cloned `LazyWrapper` object.
	     */
	    function lazyClone() {
	      var result = new LazyWrapper(this.__wrapped__);
	      result.__actions__ = arrayCopy(this.__actions__);
	      result.__dir__ = this.__dir__;
	      result.__filtered__ = this.__filtered__;
	      result.__iteratees__ = arrayCopy(this.__iteratees__);
	      result.__takeCount__ = this.__takeCount__;
	      result.__views__ = arrayCopy(this.__views__);
	      return result;
	    }

	    /**
	     * Reverses the direction of lazy iteration.
	     *
	     * @private
	     * @name reverse
	     * @memberOf LazyWrapper
	     * @returns {Object} Returns the new reversed `LazyWrapper` object.
	     */
	    function lazyReverse() {
	      if (this.__filtered__) {
	        var result = new LazyWrapper(this);
	        result.__dir__ = -1;
	        result.__filtered__ = true;
	      } else {
	        result = this.clone();
	        result.__dir__ *= -1;
	      }
	      return result;
	    }

	    /**
	     * Extracts the unwrapped value from its lazy wrapper.
	     *
	     * @private
	     * @name value
	     * @memberOf LazyWrapper
	     * @returns {*} Returns the unwrapped value.
	     */
	    function lazyValue() {
	      var array = this.__wrapped__.value(),
	          dir = this.__dir__,
	          isArr = isArray(array),
	          isRight = dir < 0,
	          arrLength = isArr ? array.length : 0,
	          view = getView(0, arrLength, this.__views__),
	          start = view.start,
	          end = view.end,
	          length = end - start,
	          index = isRight ? end : (start - 1),
	          iteratees = this.__iteratees__,
	          iterLength = iteratees.length,
	          resIndex = 0,
	          takeCount = nativeMin(length, this.__takeCount__);

	      if (!isArr || arrLength < LARGE_ARRAY_SIZE || (arrLength == length && takeCount == length)) {
	        return baseWrapperValue((isRight && isArr) ? array.reverse() : array, this.__actions__);
	      }
	      var result = [];

	      outer:
	      while (length-- && resIndex < takeCount) {
	        index += dir;

	        var iterIndex = -1,
	            value = array[index];

	        while (++iterIndex < iterLength) {
	          var data = iteratees[iterIndex],
	              iteratee = data.iteratee,
	              type = data.type,
	              computed = iteratee(value);

	          if (type == LAZY_MAP_FLAG) {
	            value = computed;
	          } else if (!computed) {
	            if (type == LAZY_FILTER_FLAG) {
	              continue outer;
	            } else {
	              break outer;
	            }
	          }
	        }
	        result[resIndex++] = value;
	      }
	      return result;
	    }

	    /*------------------------------------------------------------------------*/

	    /**
	     * Creates a cache object to store key/value pairs.
	     *
	     * @private
	     * @static
	     * @name Cache
	     * @memberOf _.memoize
	     */
	    function MapCache() {
	      this.__data__ = {};
	    }

	    /**
	     * Removes `key` and its value from the cache.
	     *
	     * @private
	     * @name delete
	     * @memberOf _.memoize.Cache
	     * @param {string} key The key of the value to remove.
	     * @returns {boolean} Returns `true` if the entry was removed successfully, else `false`.
	     */
	    function mapDelete(key) {
	      return this.has(key) && delete this.__data__[key];
	    }

	    /**
	     * Gets the cached value for `key`.
	     *
	     * @private
	     * @name get
	     * @memberOf _.memoize.Cache
	     * @param {string} key The key of the value to get.
	     * @returns {*} Returns the cached value.
	     */
	    function mapGet(key) {
	      return key == '__proto__' ? undefined : this.__data__[key];
	    }

	    /**
	     * Checks if a cached value for `key` exists.
	     *
	     * @private
	     * @name has
	     * @memberOf _.memoize.Cache
	     * @param {string} key The key of the entry to check.
	     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
	     */
	    function mapHas(key) {
	      return key != '__proto__' && hasOwnProperty.call(this.__data__, key);
	    }

	    /**
	     * Sets `value` to `key` of the cache.
	     *
	     * @private
	     * @name set
	     * @memberOf _.memoize.Cache
	     * @param {string} key The key of the value to cache.
	     * @param {*} value The value to cache.
	     * @returns {Object} Returns the cache object.
	     */
	    function mapSet(key, value) {
	      if (key != '__proto__') {
	        this.__data__[key] = value;
	      }
	      return this;
	    }

	    /*------------------------------------------------------------------------*/

	    /**
	     *
	     * Creates a cache object to store unique values.
	     *
	     * @private
	     * @param {Array} [values] The values to cache.
	     */
	    function SetCache(values) {
	      var length = values ? values.length : 0;

	      this.data = { 'hash': nativeCreate(null), 'set': new Set };
	      while (length--) {
	        this.push(values[length]);
	      }
	    }

	    /**
	     * Checks if `value` is in `cache` mimicking the return signature of
	     * `_.indexOf` by returning `0` if the value is found, else `-1`.
	     *
	     * @private
	     * @param {Object} cache The cache to search.
	     * @param {*} value The value to search for.
	     * @returns {number} Returns `0` if `value` is found, else `-1`.
	     */
	    function cacheIndexOf(cache, value) {
	      var data = cache.data,
	          result = (typeof value == 'string' || isObject(value)) ? data.set.has(value) : data.hash[value];

	      return result ? 0 : -1;
	    }

	    /**
	     * Adds `value` to the cache.
	     *
	     * @private
	     * @name push
	     * @memberOf SetCache
	     * @param {*} value The value to cache.
	     */
	    function cachePush(value) {
	      var data = this.data;
	      if (typeof value == 'string' || isObject(value)) {
	        data.set.add(value);
	      } else {
	        data.hash[value] = true;
	      }
	    }

	    /*------------------------------------------------------------------------*/

	    /**
	     * Creates a new array joining `array` with `other`.
	     *
	     * @private
	     * @param {Array} array The array to join.
	     * @param {Array} other The other array to join.
	     * @returns {Array} Returns the new concatenated array.
	     */
	    function arrayConcat(array, other) {
	      var index = -1,
	          length = array.length,
	          othIndex = -1,
	          othLength = other.length,
	          result = Array(length + othLength);

	      while (++index < length) {
	        result[index] = array[index];
	      }
	      while (++othIndex < othLength) {
	        result[index++] = other[othIndex];
	      }
	      return result;
	    }

	    /**
	     * Copies the values of `source` to `array`.
	     *
	     * @private
	     * @param {Array} source The array to copy values from.
	     * @param {Array} [array=[]] The array to copy values to.
	     * @returns {Array} Returns `array`.
	     */
	    function arrayCopy(source, array) {
	      var index = -1,
	          length = source.length;

	      array || (array = Array(length));
	      while (++index < length) {
	        array[index] = source[index];
	      }
	      return array;
	    }

	    /**
	     * A specialized version of `_.forEach` for arrays without support for callback
	     * shorthands and `this` binding.
	     *
	     * @private
	     * @param {Array} array The array to iterate over.
	     * @param {Function} iteratee The function invoked per iteration.
	     * @returns {Array} Returns `array`.
	     */
	    function arrayEach(array, iteratee) {
	      var index = -1,
	          length = array.length;

	      while (++index < length) {
	        if (iteratee(array[index], index, array) === false) {
	          break;
	        }
	      }
	      return array;
	    }

	    /**
	     * A specialized version of `_.forEachRight` for arrays without support for
	     * callback shorthands and `this` binding.
	     *
	     * @private
	     * @param {Array} array The array to iterate over.
	     * @param {Function} iteratee The function invoked per iteration.
	     * @returns {Array} Returns `array`.
	     */
	    function arrayEachRight(array, iteratee) {
	      var length = array.length;

	      while (length--) {
	        if (iteratee(array[length], length, array) === false) {
	          break;
	        }
	      }
	      return array;
	    }

	    /**
	     * A specialized version of `_.every` for arrays without support for callback
	     * shorthands and `this` binding.
	     *
	     * @private
	     * @param {Array} array The array to iterate over.
	     * @param {Function} predicate The function invoked per iteration.
	     * @returns {boolean} Returns `true` if all elements pass the predicate check,
	     *  else `false`.
	     */
	    function arrayEvery(array, predicate) {
	      var index = -1,
	          length = array.length;

	      while (++index < length) {
	        if (!predicate(array[index], index, array)) {
	          return false;
	        }
	      }
	      return true;
	    }

	    /**
	     * A specialized version of `baseExtremum` for arrays which invokes `iteratee`
	     * with one argument: (value).
	     *
	     * @private
	     * @param {Array} array The array to iterate over.
	     * @param {Function} iteratee The function invoked per iteration.
	     * @param {Function} comparator The function used to compare values.
	     * @param {*} exValue The initial extremum value.
	     * @returns {*} Returns the extremum value.
	     */
	    function arrayExtremum(array, iteratee, comparator, exValue) {
	      var index = -1,
	          length = array.length,
	          computed = exValue,
	          result = computed;

	      while (++index < length) {
	        var value = array[index],
	            current = +iteratee(value);

	        if (comparator(current, computed)) {
	          computed = current;
	          result = value;
	        }
	      }
	      return result;
	    }

	    /**
	     * A specialized version of `_.filter` for arrays without support for callback
	     * shorthands and `this` binding.
	     *
	     * @private
	     * @param {Array} array The array to iterate over.
	     * @param {Function} predicate The function invoked per iteration.
	     * @returns {Array} Returns the new filtered array.
	     */
	    function arrayFilter(array, predicate) {
	      var index = -1,
	          length = array.length,
	          resIndex = -1,
	          result = [];

	      while (++index < length) {
	        var value = array[index];
	        if (predicate(value, index, array)) {
	          result[++resIndex] = value;
	        }
	      }
	      return result;
	    }

	    /**
	     * A specialized version of `_.map` for arrays without support for callback
	     * shorthands and `this` binding.
	     *
	     * @private
	     * @param {Array} array The array to iterate over.
	     * @param {Function} iteratee The function invoked per iteration.
	     * @returns {Array} Returns the new mapped array.
	     */
	    function arrayMap(array, iteratee) {
	      var index = -1,
	          length = array.length,
	          result = Array(length);

	      while (++index < length) {
	        result[index] = iteratee(array[index], index, array);
	      }
	      return result;
	    }

	    /**
	     * Appends the elements of `values` to `array`.
	     *
	     * @private
	     * @param {Array} array The array to modify.
	     * @param {Array} values The values to append.
	     * @returns {Array} Returns `array`.
	     */
	    function arrayPush(array, values) {
	      var index = -1,
	          length = values.length,
	          offset = array.length;

	      while (++index < length) {
	        array[offset + index] = values[index];
	      }
	      return array;
	    }

	    /**
	     * A specialized version of `_.reduce` for arrays without support for callback
	     * shorthands and `this` binding.
	     *
	     * @private
	     * @param {Array} array The array to iterate over.
	     * @param {Function} iteratee The function invoked per iteration.
	     * @param {*} [accumulator] The initial value.
	     * @param {boolean} [initFromArray] Specify using the first element of `array`
	     *  as the initial value.
	     * @returns {*} Returns the accumulated value.
	     */
	    function arrayReduce(array, iteratee, accumulator, initFromArray) {
	      var index = -1,
	          length = array.length;

	      if (initFromArray && length) {
	        accumulator = array[++index];
	      }
	      while (++index < length) {
	        accumulator = iteratee(accumulator, array[index], index, array);
	      }
	      return accumulator;
	    }

	    /**
	     * A specialized version of `_.reduceRight` for arrays without support for
	     * callback shorthands and `this` binding.
	     *
	     * @private
	     * @param {Array} array The array to iterate over.
	     * @param {Function} iteratee The function invoked per iteration.
	     * @param {*} [accumulator] The initial value.
	     * @param {boolean} [initFromArray] Specify using the last element of `array`
	     *  as the initial value.
	     * @returns {*} Returns the accumulated value.
	     */
	    function arrayReduceRight(array, iteratee, accumulator, initFromArray) {
	      var length = array.length;
	      if (initFromArray && length) {
	        accumulator = array[--length];
	      }
	      while (length--) {
	        accumulator = iteratee(accumulator, array[length], length, array);
	      }
	      return accumulator;
	    }

	    /**
	     * A specialized version of `_.some` for arrays without support for callback
	     * shorthands and `this` binding.
	     *
	     * @private
	     * @param {Array} array The array to iterate over.
	     * @param {Function} predicate The function invoked per iteration.
	     * @returns {boolean} Returns `true` if any element passes the predicate check,
	     *  else `false`.
	     */
	    function arraySome(array, predicate) {
	      var index = -1,
	          length = array.length;

	      while (++index < length) {
	        if (predicate(array[index], index, array)) {
	          return true;
	        }
	      }
	      return false;
	    }

	    /**
	     * A specialized version of `_.sum` for arrays without support for callback
	     * shorthands and `this` binding..
	     *
	     * @private
	     * @param {Array} array The array to iterate over.
	     * @param {Function} iteratee The function invoked per iteration.
	     * @returns {number} Returns the sum.
	     */
	    function arraySum(array, iteratee) {
	      var length = array.length,
	          result = 0;

	      while (length--) {
	        result += +iteratee(array[length]) || 0;
	      }
	      return result;
	    }

	    /**
	     * Used by `_.defaults` to customize its `_.assign` use.
	     *
	     * @private
	     * @param {*} objectValue The destination object property value.
	     * @param {*} sourceValue The source object property value.
	     * @returns {*} Returns the value to assign to the destination object.
	     */
	    function assignDefaults(objectValue, sourceValue) {
	      return objectValue === undefined ? sourceValue : objectValue;
	    }

	    /**
	     * Used by `_.template` to customize its `_.assign` use.
	     *
	     * **Note:** This function is like `assignDefaults` except that it ignores
	     * inherited property values when checking if a property is `undefined`.
	     *
	     * @private
	     * @param {*} objectValue The destination object property value.
	     * @param {*} sourceValue The source object property value.
	     * @param {string} key The key associated with the object and source values.
	     * @param {Object} object The destination object.
	     * @returns {*} Returns the value to assign to the destination object.
	     */
	    function assignOwnDefaults(objectValue, sourceValue, key, object) {
	      return (objectValue === undefined || !hasOwnProperty.call(object, key))
	        ? sourceValue
	        : objectValue;
	    }

	    /**
	     * A specialized version of `_.assign` for customizing assigned values without
	     * support for argument juggling, multiple sources, and `this` binding `customizer`
	     * functions.
	     *
	     * @private
	     * @param {Object} object The destination object.
	     * @param {Object} source The source object.
	     * @param {Function} customizer The function to customize assigned values.
	     * @returns {Object} Returns `object`.
	     */
	    function assignWith(object, source, customizer) {
	      var index = -1,
	          props = keys(source),
	          length = props.length;

	      while (++index < length) {
	        var key = props[index],
	            value = object[key],
	            result = customizer(value, source[key], key, object, source);

	        if ((result === result ? (result !== value) : (value === value)) ||
	            (value === undefined && !(key in object))) {
	          object[key] = result;
	        }
	      }
	      return object;
	    }

	    /**
	     * The base implementation of `_.assign` without support for argument juggling,
	     * multiple sources, and `customizer` functions.
	     *
	     * @private
	     * @param {Object} object The destination object.
	     * @param {Object} source The source object.
	     * @returns {Object} Returns `object`.
	     */
	    function baseAssign(object, source) {
	      return source == null
	        ? object
	        : baseCopy(source, keys(source), object);
	    }

	    /**
	     * The base implementation of `_.at` without support for string collections
	     * and individual key arguments.
	     *
	     * @private
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {number[]|string[]} props The property names or indexes of elements to pick.
	     * @returns {Array} Returns the new array of picked elements.
	     */
	    function baseAt(collection, props) {
	      var index = -1,
	          isNil = collection == null,
	          isArr = !isNil && isArrayLike(collection),
	          length = isArr ? collection.length : 0,
	          propsLength = props.length,
	          result = Array(propsLength);

	      while(++index < propsLength) {
	        var key = props[index];
	        if (isArr) {
	          result[index] = isIndex(key, length) ? collection[key] : undefined;
	        } else {
	          result[index] = isNil ? undefined : collection[key];
	        }
	      }
	      return result;
	    }

	    /**
	     * Copies properties of `source` to `object`.
	     *
	     * @private
	     * @param {Object} source The object to copy properties from.
	     * @param {Array} props The property names to copy.
	     * @param {Object} [object={}] The object to copy properties to.
	     * @returns {Object} Returns `object`.
	     */
	    function baseCopy(source, props, object) {
	      object || (object = {});

	      var index = -1,
	          length = props.length;

	      while (++index < length) {
	        var key = props[index];
	        object[key] = source[key];
	      }
	      return object;
	    }

	    /**
	     * The base implementation of `_.callback` which supports specifying the
	     * number of arguments to provide to `func`.
	     *
	     * @private
	     * @param {*} [func=_.identity] The value to convert to a callback.
	     * @param {*} [thisArg] The `this` binding of `func`.
	     * @param {number} [argCount] The number of arguments to provide to `func`.
	     * @returns {Function} Returns the callback.
	     */
	    function baseCallback(func, thisArg, argCount) {
	      var type = typeof func;
	      if (type == 'function') {
	        return thisArg === undefined
	          ? func
	          : bindCallback(func, thisArg, argCount);
	      }
	      if (func == null) {
	        return identity;
	      }
	      if (type == 'object') {
	        return baseMatches(func);
	      }
	      return thisArg === undefined
	        ? property(func)
	        : baseMatchesProperty(func, thisArg);
	    }

	    /**
	     * The base implementation of `_.clone` without support for argument juggling
	     * and `this` binding `customizer` functions.
	     *
	     * @private
	     * @param {*} value The value to clone.
	     * @param {boolean} [isDeep] Specify a deep clone.
	     * @param {Function} [customizer] The function to customize cloning values.
	     * @param {string} [key] The key of `value`.
	     * @param {Object} [object] The object `value` belongs to.
	     * @param {Array} [stackA=[]] Tracks traversed source objects.
	     * @param {Array} [stackB=[]] Associates clones with source counterparts.
	     * @returns {*} Returns the cloned value.
	     */
	    function baseClone(value, isDeep, customizer, key, object, stackA, stackB) {
	      var result;
	      if (customizer) {
	        result = object ? customizer(value, key, object) : customizer(value);
	      }
	      if (result !== undefined) {
	        return result;
	      }
	      if (!isObject(value)) {
	        return value;
	      }
	      var isArr = isArray(value);
	      if (isArr) {
	        result = initCloneArray(value);
	        if (!isDeep) {
	          return arrayCopy(value, result);
	        }
	      } else {
	        var tag = objToString.call(value),
	            isFunc = tag == funcTag;

	        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {
	          result = initCloneObject(isFunc ? {} : value);
	          if (!isDeep) {
	            return baseAssign(result, value);
	          }
	        } else {
	          return cloneableTags[tag]
	            ? initCloneByTag(value, tag, isDeep)
	            : (object ? value : {});
	        }
	      }
	      // Check for circular references and return its corresponding clone.
	      stackA || (stackA = []);
	      stackB || (stackB = []);

	      var length = stackA.length;
	      while (length--) {
	        if (stackA[length] == value) {
	          return stackB[length];
	        }
	      }
	      // Add the source value to the stack of traversed objects and associate it with its clone.
	      stackA.push(value);
	      stackB.push(result);

	      // Recursively populate clone (susceptible to call stack limits).
	      (isArr ? arrayEach : baseForOwn)(value, function(subValue, key) {
	        result[key] = baseClone(subValue, isDeep, customizer, key, value, stackA, stackB);
	      });
	      return result;
	    }

	    /**
	     * The base implementation of `_.create` without support for assigning
	     * properties to the created object.
	     *
	     * @private
	     * @param {Object} prototype The object to inherit from.
	     * @returns {Object} Returns the new object.
	     */
	    var baseCreate = (function() {
	      function object() {}
	      return function(prototype) {
	        if (isObject(prototype)) {
	          object.prototype = prototype;
	          var result = new object;
	          object.prototype = undefined;
	        }
	        return result || {};
	      };
	    }());

	    /**
	     * The base implementation of `_.delay` and `_.defer` which accepts an index
	     * of where to slice the arguments to provide to `func`.
	     *
	     * @private
	     * @param {Function} func The function to delay.
	     * @param {number} wait The number of milliseconds to delay invocation.
	     * @param {Object} args The arguments provide to `func`.
	     * @returns {number} Returns the timer id.
	     */
	    function baseDelay(func, wait, args) {
	      if (typeof func != 'function') {
	        throw new TypeError(FUNC_ERROR_TEXT);
	      }
	      return setTimeout(function() { func.apply(undefined, args); }, wait);
	    }

	    /**
	     * The base implementation of `_.difference` which accepts a single array
	     * of values to exclude.
	     *
	     * @private
	     * @param {Array} array The array to inspect.
	     * @param {Array} values The values to exclude.
	     * @returns {Array} Returns the new array of filtered values.
	     */
	    function baseDifference(array, values) {
	      var length = array ? array.length : 0,
	          result = [];

	      if (!length) {
	        return result;
	      }
	      var index = -1,
	          indexOf = getIndexOf(),
	          isCommon = indexOf == baseIndexOf,
	          cache = (isCommon && values.length >= LARGE_ARRAY_SIZE) ? createCache(values) : null,
	          valuesLength = values.length;

	      if (cache) {
	        indexOf = cacheIndexOf;
	        isCommon = false;
	        values = cache;
	      }
	      outer:
	      while (++index < length) {
	        var value = array[index];

	        if (isCommon && value === value) {
	          var valuesIndex = valuesLength;
	          while (valuesIndex--) {
	            if (values[valuesIndex] === value) {
	              continue outer;
	            }
	          }
	          result.push(value);
	        }
	        else if (indexOf(values, value, 0) < 0) {
	          result.push(value);
	        }
	      }
	      return result;
	    }

	    /**
	     * The base implementation of `_.forEach` without support for callback
	     * shorthands and `this` binding.
	     *
	     * @private
	     * @param {Array|Object|string} collection The collection to iterate over.
	     * @param {Function} iteratee The function invoked per iteration.
	     * @returns {Array|Object|string} Returns `collection`.
	     */
	    var baseEach = createBaseEach(baseForOwn);

	    /**
	     * The base implementation of `_.forEachRight` without support for callback
	     * shorthands and `this` binding.
	     *
	     * @private
	     * @param {Array|Object|string} collection The collection to iterate over.
	     * @param {Function} iteratee The function invoked per iteration.
	     * @returns {Array|Object|string} Returns `collection`.
	     */
	    var baseEachRight = createBaseEach(baseForOwnRight, true);

	    /**
	     * The base implementation of `_.every` without support for callback
	     * shorthands and `this` binding.
	     *
	     * @private
	     * @param {Array|Object|string} collection The collection to iterate over.
	     * @param {Function} predicate The function invoked per iteration.
	     * @returns {boolean} Returns `true` if all elements pass the predicate check,
	     *  else `false`
	     */
	    function baseEvery(collection, predicate) {
	      var result = true;
	      baseEach(collection, function(value, index, collection) {
	        result = !!predicate(value, index, collection);
	        return result;
	      });
	      return result;
	    }

	    /**
	     * Gets the extremum value of `collection` invoking `iteratee` for each value
	     * in `collection` to generate the criterion by which the value is ranked.
	     * The `iteratee` is invoked with three arguments: (value, index|key, collection).
	     *
	     * @private
	     * @param {Array|Object|string} collection The collection to iterate over.
	     * @param {Function} iteratee The function invoked per iteration.
	     * @param {Function} comparator The function used to compare values.
	     * @param {*} exValue The initial extremum value.
	     * @returns {*} Returns the extremum value.
	     */
	    function baseExtremum(collection, iteratee, comparator, exValue) {
	      var computed = exValue,
	          result = computed;

	      baseEach(collection, function(value, index, collection) {
	        var current = +iteratee(value, index, collection);
	        if (comparator(current, computed) || (current === exValue && current === result)) {
	          computed = current;
	          result = value;
	        }
	      });
	      return result;
	    }

	    /**
	     * The base implementation of `_.fill` without an iteratee call guard.
	     *
	     * @private
	     * @param {Array} array The array to fill.
	     * @param {*} value The value to fill `array` with.
	     * @param {number} [start=0] The start position.
	     * @param {number} [end=array.length] The end position.
	     * @returns {Array} Returns `array`.
	     */
	    function baseFill(array, value, start, end) {
	      var length = array.length;

	      start = start == null ? 0 : (+start || 0);
	      if (start < 0) {
	        start = -start > length ? 0 : (length + start);
	      }
	      end = (end === undefined || end > length) ? length : (+end || 0);
	      if (end < 0) {
	        end += length;
	      }
	      length = start > end ? 0 : (end >>> 0);
	      start >>>= 0;

	      while (start < length) {
	        array[start++] = value;
	      }
	      return array;
	    }

	    /**
	     * The base implementation of `_.filter` without support for callback
	     * shorthands and `this` binding.
	     *
	     * @private
	     * @param {Array|Object|string} collection The collection to iterate over.
	     * @param {Function} predicate The function invoked per iteration.
	     * @returns {Array} Returns the new filtered array.
	     */
	    function baseFilter(collection, predicate) {
	      var result = [];
	      baseEach(collection, function(value, index, collection) {
	        if (predicate(value, index, collection)) {
	          result.push(value);
	        }
	      });
	      return result;
	    }

	    /**
	     * The base implementation of `_.find`, `_.findLast`, `_.findKey`, and `_.findLastKey`,
	     * without support for callback shorthands and `this` binding, which iterates
	     * over `collection` using the provided `eachFunc`.
	     *
	     * @private
	     * @param {Array|Object|string} collection The collection to search.
	     * @param {Function} predicate The function invoked per iteration.
	     * @param {Function} eachFunc The function to iterate over `collection`.
	     * @param {boolean} [retKey] Specify returning the key of the found element
	     *  instead of the element itself.
	     * @returns {*} Returns the found element or its key, else `undefined`.
	     */
	    function baseFind(collection, predicate, eachFunc, retKey) {
	      var result;
	      eachFunc(collection, function(value, key, collection) {
	        if (predicate(value, key, collection)) {
	          result = retKey ? key : value;
	          return false;
	        }
	      });
	      return result;
	    }

	    /**
	     * The base implementation of `_.flatten` with added support for restricting
	     * flattening and specifying the start index.
	     *
	     * @private
	     * @param {Array} array The array to flatten.
	     * @param {boolean} [isDeep] Specify a deep flatten.
	     * @param {boolean} [isStrict] Restrict flattening to arrays-like objects.
	     * @param {Array} [result=[]] The initial result value.
	     * @returns {Array} Returns the new flattened array.
	     */
	    function baseFlatten(array, isDeep, isStrict, result) {
	      result || (result = []);

	      var index = -1,
	          length = array.length;

	      while (++index < length) {
	        var value = array[index];
	        if (isObjectLike(value) && isArrayLike(value) &&
	            (isStrict || isArray(value) || isArguments(value))) {
	          if (isDeep) {
	            // Recursively flatten arrays (susceptible to call stack limits).
	            baseFlatten(value, isDeep, isStrict, result);
	          } else {
	            arrayPush(result, value);
	          }
	        } else if (!isStrict) {
	          result[result.length] = value;
	        }
	      }
	      return result;
	    }

	    /**
	     * The base implementation of `baseForIn` and `baseForOwn` which iterates
	     * over `object` properties returned by `keysFunc` invoking `iteratee` for
	     * each property. Iteratee functions may exit iteration early by explicitly
	     * returning `false`.
	     *
	     * @private
	     * @param {Object} object The object to iterate over.
	     * @param {Function} iteratee The function invoked per iteration.
	     * @param {Function} keysFunc The function to get the keys of `object`.
	     * @returns {Object} Returns `object`.
	     */
	    var baseFor = createBaseFor();

	    /**
	     * This function is like `baseFor` except that it iterates over properties
	     * in the opposite order.
	     *
	     * @private
	     * @param {Object} object The object to iterate over.
	     * @param {Function} iteratee The function invoked per iteration.
	     * @param {Function} keysFunc The function to get the keys of `object`.
	     * @returns {Object} Returns `object`.
	     */
	    var baseForRight = createBaseFor(true);

	    /**
	     * The base implementation of `_.forIn` without support for callback
	     * shorthands and `this` binding.
	     *
	     * @private
	     * @param {Object} object The object to iterate over.
	     * @param {Function} iteratee The function invoked per iteration.
	     * @returns {Object} Returns `object`.
	     */
	    function baseForIn(object, iteratee) {
	      return baseFor(object, iteratee, keysIn);
	    }

	    /**
	     * The base implementation of `_.forOwn` without support for callback
	     * shorthands and `this` binding.
	     *
	     * @private
	     * @param {Object} object The object to iterate over.
	     * @param {Function} iteratee The function invoked per iteration.
	     * @returns {Object} Returns `object`.
	     */
	    function baseForOwn(object, iteratee) {
	      return baseFor(object, iteratee, keys);
	    }

	    /**
	     * The base implementation of `_.forOwnRight` without support for callback
	     * shorthands and `this` binding.
	     *
	     * @private
	     * @param {Object} object The object to iterate over.
	     * @param {Function} iteratee The function invoked per iteration.
	     * @returns {Object} Returns `object`.
	     */
	    function baseForOwnRight(object, iteratee) {
	      return baseForRight(object, iteratee, keys);
	    }

	    /**
	     * The base implementation of `_.functions` which creates an array of
	     * `object` function property names filtered from those provided.
	     *
	     * @private
	     * @param {Object} object The object to inspect.
	     * @param {Array} props The property names to filter.
	     * @returns {Array} Returns the new array of filtered property names.
	     */
	    function baseFunctions(object, props) {
	      var index = -1,
	          length = props.length,
	          resIndex = -1,
	          result = [];

	      while (++index < length) {
	        var key = props[index];
	        if (isFunction(object[key])) {
	          result[++resIndex] = key;
	        }
	      }
	      return result;
	    }

	    /**
	     * The base implementation of `get` without support for string paths
	     * and default values.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @param {Array} path The path of the property to get.
	     * @param {string} [pathKey] The key representation of path.
	     * @returns {*} Returns the resolved value.
	     */
	    function baseGet(object, path, pathKey) {
	      if (object == null) {
	        return;
	      }
	      if (pathKey !== undefined && pathKey in toObject(object)) {
	        path = [pathKey];
	      }
	      var index = 0,
	          length = path.length;

	      while (object != null && index < length) {
	        object = object[path[index++]];
	      }
	      return (index && index == length) ? object : undefined;
	    }

	    /**
	     * The base implementation of `_.isEqual` without support for `this` binding
	     * `customizer` functions.
	     *
	     * @private
	     * @param {*} value The value to compare.
	     * @param {*} other The other value to compare.
	     * @param {Function} [customizer] The function to customize comparing values.
	     * @param {boolean} [isLoose] Specify performing partial comparisons.
	     * @param {Array} [stackA] Tracks traversed `value` objects.
	     * @param {Array} [stackB] Tracks traversed `other` objects.
	     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
	     */
	    function baseIsEqual(value, other, customizer, isLoose, stackA, stackB) {
	      if (value === other) {
	        return true;
	      }
	      if (value == null || other == null || (!isObject(value) && !isObjectLike(other))) {
	        return value !== value && other !== other;
	      }
	      return baseIsEqualDeep(value, other, baseIsEqual, customizer, isLoose, stackA, stackB);
	    }

	    /**
	     * A specialized version of `baseIsEqual` for arrays and objects which performs
	     * deep comparisons and tracks traversed objects enabling objects with circular
	     * references to be compared.
	     *
	     * @private
	     * @param {Object} object The object to compare.
	     * @param {Object} other The other object to compare.
	     * @param {Function} equalFunc The function to determine equivalents of values.
	     * @param {Function} [customizer] The function to customize comparing objects.
	     * @param {boolean} [isLoose] Specify performing partial comparisons.
	     * @param {Array} [stackA=[]] Tracks traversed `value` objects.
	     * @param {Array} [stackB=[]] Tracks traversed `other` objects.
	     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
	     */
	    function baseIsEqualDeep(object, other, equalFunc, customizer, isLoose, stackA, stackB) {
	      var objIsArr = isArray(object),
	          othIsArr = isArray(other),
	          objTag = arrayTag,
	          othTag = arrayTag;

	      if (!objIsArr) {
	        objTag = objToString.call(object);
	        if (objTag == argsTag) {
	          objTag = objectTag;
	        } else if (objTag != objectTag) {
	          objIsArr = isTypedArray(object);
	        }
	      }
	      if (!othIsArr) {
	        othTag = objToString.call(other);
	        if (othTag == argsTag) {
	          othTag = objectTag;
	        } else if (othTag != objectTag) {
	          othIsArr = isTypedArray(other);
	        }
	      }
	      var objIsObj = objTag == objectTag,
	          othIsObj = othTag == objectTag,
	          isSameTag = objTag == othTag;

	      if (isSameTag && !(objIsArr || objIsObj)) {
	        return equalByTag(object, other, objTag);
	      }
	      if (!isLoose) {
	        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),
	            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');

	        if (objIsWrapped || othIsWrapped) {
	          return equalFunc(objIsWrapped ? object.value() : object, othIsWrapped ? other.value() : other, customizer, isLoose, stackA, stackB);
	        }
	      }
	      if (!isSameTag) {
	        return false;
	      }
	      // Assume cyclic values are equal.
	      // For more information on detecting circular references see https://es5.github.io/#JO.
	      stackA || (stackA = []);
	      stackB || (stackB = []);

	      var length = stackA.length;
	      while (length--) {
	        if (stackA[length] == object) {
	          return stackB[length] == other;
	        }
	      }
	      // Add `object` and `other` to the stack of traversed objects.
	      stackA.push(object);
	      stackB.push(other);

	      var result = (objIsArr ? equalArrays : equalObjects)(object, other, equalFunc, customizer, isLoose, stackA, stackB);

	      stackA.pop();
	      stackB.pop();

	      return result;
	    }

	    /**
	     * The base implementation of `_.isMatch` without support for callback
	     * shorthands and `this` binding.
	     *
	     * @private
	     * @param {Object} object The object to inspect.
	     * @param {Array} matchData The propery names, values, and compare flags to match.
	     * @param {Function} [customizer] The function to customize comparing objects.
	     * @returns {boolean} Returns `true` if `object` is a match, else `false`.
	     */
	    function baseIsMatch(object, matchData, customizer) {
	      var index = matchData.length,
	          length = index,
	          noCustomizer = !customizer;

	      if (object == null) {
	        return !length;
	      }
	      object = toObject(object);
	      while (index--) {
	        var data = matchData[index];
	        if ((noCustomizer && data[2])
	              ? data[1] !== object[data[0]]
	              : !(data[0] in object)
	            ) {
	          return false;
	        }
	      }
	      while (++index < length) {
	        data = matchData[index];
	        var key = data[0],
	            objValue = object[key],
	            srcValue = data[1];

	        if (noCustomizer && data[2]) {
	          if (objValue === undefined && !(key in object)) {
	            return false;
	          }
	        } else {
	          var result = customizer ? customizer(objValue, srcValue, key) : undefined;
	          if (!(result === undefined ? baseIsEqual(srcValue, objValue, customizer, true) : result)) {
	            return false;
	          }
	        }
	      }
	      return true;
	    }

	    /**
	     * The base implementation of `_.map` without support for callback shorthands
	     * and `this` binding.
	     *
	     * @private
	     * @param {Array|Object|string} collection The collection to iterate over.
	     * @param {Function} iteratee The function invoked per iteration.
	     * @returns {Array} Returns the new mapped array.
	     */
	    function baseMap(collection, iteratee) {
	      var index = -1,
	          result = isArrayLike(collection) ? Array(collection.length) : [];

	      baseEach(collection, function(value, key, collection) {
	        result[++index] = iteratee(value, key, collection);
	      });
	      return result;
	    }

	    /**
	     * The base implementation of `_.matches` which does not clone `source`.
	     *
	     * @private
	     * @param {Object} source The object of property values to match.
	     * @returns {Function} Returns the new function.
	     */
	    function baseMatches(source) {
	      var matchData = getMatchData(source);
	      if (matchData.length == 1 && matchData[0][2]) {
	        var key = matchData[0][0],
	            value = matchData[0][1];

	        return function(object) {
	          if (object == null) {
	            return false;
	          }
	          return object[key] === value && (value !== undefined || (key in toObject(object)));
	        };
	      }
	      return function(object) {
	        return baseIsMatch(object, matchData);
	      };
	    }

	    /**
	     * The base implementation of `_.matchesProperty` which does not clone `srcValue`.
	     *
	     * @private
	     * @param {string} path The path of the property to get.
	     * @param {*} srcValue The value to compare.
	     * @returns {Function} Returns the new function.
	     */
	    function baseMatchesProperty(path, srcValue) {
	      var isArr = isArray(path),
	          isCommon = isKey(path) && isStrictComparable(srcValue),
	          pathKey = (path + '');

	      path = toPath(path);
	      return function(object) {
	        if (object == null) {
	          return false;
	        }
	        var key = pathKey;
	        object = toObject(object);
	        if ((isArr || !isCommon) && !(key in object)) {
	          object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));
	          if (object == null) {
	            return false;
	          }
	          key = last(path);
	          object = toObject(object);
	        }
	        return object[key] === srcValue
	          ? (srcValue !== undefined || (key in object))
	          : baseIsEqual(srcValue, object[key], undefined, true);
	      };
	    }

	    /**
	     * The base implementation of `_.merge` without support for argument juggling,
	     * multiple sources, and `this` binding `customizer` functions.
	     *
	     * @private
	     * @param {Object} object The destination object.
	     * @param {Object} source The source object.
	     * @param {Function} [customizer] The function to customize merged values.
	     * @param {Array} [stackA=[]] Tracks traversed source objects.
	     * @param {Array} [stackB=[]] Associates values with source counterparts.
	     * @returns {Object} Returns `object`.
	     */
	    function baseMerge(object, source, customizer, stackA, stackB) {
	      if (!isObject(object)) {
	        return object;
	      }
	      var isSrcArr = isArrayLike(source) && (isArray(source) || isTypedArray(source)),
	          props = isSrcArr ? undefined : keys(source);

	      arrayEach(props || source, function(srcValue, key) {
	        if (props) {
	          key = srcValue;
	          srcValue = source[key];
	        }
	        if (isObjectLike(srcValue)) {
	          stackA || (stackA = []);
	          stackB || (stackB = []);
	          baseMergeDeep(object, source, key, baseMerge, customizer, stackA, stackB);
	        }
	        else {
	          var value = object[key],
	              result = customizer ? customizer(value, srcValue, key, object, source) : undefined,
	              isCommon = result === undefined;

	          if (isCommon) {
	            result = srcValue;
	          }
	          if ((result !== undefined || (isSrcArr && !(key in object))) &&
	              (isCommon || (result === result ? (result !== value) : (value === value)))) {
	            object[key] = result;
	          }
	        }
	      });
	      return object;
	    }

	    /**
	     * A specialized version of `baseMerge` for arrays and objects which performs
	     * deep merges and tracks traversed objects enabling objects with circular
	     * references to be merged.
	     *
	     * @private
	     * @param {Object} object The destination object.
	     * @param {Object} source The source object.
	     * @param {string} key The key of the value to merge.
	     * @param {Function} mergeFunc The function to merge values.
	     * @param {Function} [customizer] The function to customize merged values.
	     * @param {Array} [stackA=[]] Tracks traversed source objects.
	     * @param {Array} [stackB=[]] Associates values with source counterparts.
	     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
	     */
	    function baseMergeDeep(object, source, key, mergeFunc, customizer, stackA, stackB) {
	      var length = stackA.length,
	          srcValue = source[key];

	      while (length--) {
	        if (stackA[length] == srcValue) {
	          object[key] = stackB[length];
	          return;
	        }
	      }
	      var value = object[key],
	          result = customizer ? customizer(value, srcValue, key, object, source) : undefined,
	          isCommon = result === undefined;

	      if (isCommon) {
	        result = srcValue;
	        if (isArrayLike(srcValue) && (isArray(srcValue) || isTypedArray(srcValue))) {
	          result = isArray(value)
	            ? value
	            : (isArrayLike(value) ? arrayCopy(value) : []);
	        }
	        else if (isPlainObject(srcValue) || isArguments(srcValue)) {
	          result = isArguments(value)
	            ? toPlainObject(value)
	            : (isPlainObject(value) ? value : {});
	        }
	        else {
	          isCommon = false;
	        }
	      }
	      // Add the source value to the stack of traversed objects and associate
	      // it with its merged value.
	      stackA.push(srcValue);
	      stackB.push(result);

	      if (isCommon) {
	        // Recursively merge objects and arrays (susceptible to call stack limits).
	        object[key] = mergeFunc(result, srcValue, customizer, stackA, stackB);
	      } else if (result === result ? (result !== value) : (value === value)) {
	        object[key] = result;
	      }
	    }

	    /**
	     * The base implementation of `_.property` without support for deep paths.
	     *
	     * @private
	     * @param {string} key The key of the property to get.
	     * @returns {Function} Returns the new function.
	     */
	    function baseProperty(key) {
	      return function(object) {
	        return object == null ? undefined : object[key];
	      };
	    }

	    /**
	     * A specialized version of `baseProperty` which supports deep paths.
	     *
	     * @private
	     * @param {Array|string} path The path of the property to get.
	     * @returns {Function} Returns the new function.
	     */
	    function basePropertyDeep(path) {
	      var pathKey = (path + '');
	      path = toPath(path);
	      return function(object) {
	        return baseGet(object, path, pathKey);
	      };
	    }

	    /**
	     * The base implementation of `_.pullAt` without support for individual
	     * index arguments and capturing the removed elements.
	     *
	     * @private
	     * @param {Array} array The array to modify.
	     * @param {number[]} indexes The indexes of elements to remove.
	     * @returns {Array} Returns `array`.
	     */
	    function basePullAt(array, indexes) {
	      var length = array ? indexes.length : 0;
	      while (length--) {
	        var index = indexes[length];
	        if (index != previous && isIndex(index)) {
	          var previous = index;
	          splice.call(array, index, 1);
	        }
	      }
	      return array;
	    }

	    /**
	     * The base implementation of `_.random` without support for argument juggling
	     * and returning floating-point numbers.
	     *
	     * @private
	     * @param {number} min The minimum possible value.
	     * @param {number} max The maximum possible value.
	     * @returns {number} Returns the random number.
	     */
	    function baseRandom(min, max) {
	      return min + nativeFloor(nativeRandom() * (max - min + 1));
	    }

	    /**
	     * The base implementation of `_.reduce` and `_.reduceRight` without support
	     * for callback shorthands and `this` binding, which iterates over `collection`
	     * using the provided `eachFunc`.
	     *
	     * @private
	     * @param {Array|Object|string} collection The collection to iterate over.
	     * @param {Function} iteratee The function invoked per iteration.
	     * @param {*} accumulator The initial value.
	     * @param {boolean} initFromCollection Specify using the first or last element
	     *  of `collection` as the initial value.
	     * @param {Function} eachFunc The function to iterate over `collection`.
	     * @returns {*} Returns the accumulated value.
	     */
	    function baseReduce(collection, iteratee, accumulator, initFromCollection, eachFunc) {
	      eachFunc(collection, function(value, index, collection) {
	        accumulator = initFromCollection
	          ? (initFromCollection = false, value)
	          : iteratee(accumulator, value, index, collection);
	      });
	      return accumulator;
	    }

	    /**
	     * The base implementation of `setData` without support for hot loop detection.
	     *
	     * @private
	     * @param {Function} func The function to associate metadata with.
	     * @param {*} data The metadata.
	     * @returns {Function} Returns `func`.
	     */
	    var baseSetData = !metaMap ? identity : function(func, data) {
	      metaMap.set(func, data);
	      return func;
	    };

	    /**
	     * The base implementation of `_.slice` without an iteratee call guard.
	     *
	     * @private
	     * @param {Array} array The array to slice.
	     * @param {number} [start=0] The start position.
	     * @param {number} [end=array.length] The end position.
	     * @returns {Array} Returns the slice of `array`.
	     */
	    function baseSlice(array, start, end) {
	      var index = -1,
	          length = array.length;

	      start = start == null ? 0 : (+start || 0);
	      if (start < 0) {
	        start = -start > length ? 0 : (length + start);
	      }
	      end = (end === undefined || end > length) ? length : (+end || 0);
	      if (end < 0) {
	        end += length;
	      }
	      length = start > end ? 0 : ((end - start) >>> 0);
	      start >>>= 0;

	      var result = Array(length);
	      while (++index < length) {
	        result[index] = array[index + start];
	      }
	      return result;
	    }

	    /**
	     * The base implementation of `_.some` without support for callback shorthands
	     * and `this` binding.
	     *
	     * @private
	     * @param {Array|Object|string} collection The collection to iterate over.
	     * @param {Function} predicate The function invoked per iteration.
	     * @returns {boolean} Returns `true` if any element passes the predicate check,
	     *  else `false`.
	     */
	    function baseSome(collection, predicate) {
	      var result;

	      baseEach(collection, function(value, index, collection) {
	        result = predicate(value, index, collection);
	        return !result;
	      });
	      return !!result;
	    }

	    /**
	     * The base implementation of `_.sortBy` which uses `comparer` to define
	     * the sort order of `array` and replaces criteria objects with their
	     * corresponding values.
	     *
	     * @private
	     * @param {Array} array The array to sort.
	     * @param {Function} comparer The function to define sort order.
	     * @returns {Array} Returns `array`.
	     */
	    function baseSortBy(array, comparer) {
	      var length = array.length;

	      array.sort(comparer);
	      while (length--) {
	        array[length] = array[length].value;
	      }
	      return array;
	    }

	    /**
	     * The base implementation of `_.sortByOrder` without param guards.
	     *
	     * @private
	     * @param {Array|Object|string} collection The collection to iterate over.
	     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.
	     * @param {boolean[]} orders The sort orders of `iteratees`.
	     * @returns {Array} Returns the new sorted array.
	     */
	    function baseSortByOrder(collection, iteratees, orders) {
	      var callback = getCallback(),
	          index = -1;

	      iteratees = arrayMap(iteratees, function(iteratee) { return callback(iteratee); });

	      var result = baseMap(collection, function(value) {
	        var criteria = arrayMap(iteratees, function(iteratee) { return iteratee(value); });
	        return { 'criteria': criteria, 'index': ++index, 'value': value };
	      });

	      return baseSortBy(result, function(object, other) {
	        return compareMultiple(object, other, orders);
	      });
	    }

	    /**
	     * The base implementation of `_.sum` without support for callback shorthands
	     * and `this` binding.
	     *
	     * @private
	     * @param {Array|Object|string} collection The collection to iterate over.
	     * @param {Function} iteratee The function invoked per iteration.
	     * @returns {number} Returns the sum.
	     */
	    function baseSum(collection, iteratee) {
	      var result = 0;
	      baseEach(collection, function(value, index, collection) {
	        result += +iteratee(value, index, collection) || 0;
	      });
	      return result;
	    }

	    /**
	     * The base implementation of `_.uniq` without support for callback shorthands
	     * and `this` binding.
	     *
	     * @private
	     * @param {Array} array The array to inspect.
	     * @param {Function} [iteratee] The function invoked per iteration.
	     * @returns {Array} Returns the new duplicate-value-free array.
	     */
	    function baseUniq(array, iteratee) {
	      var index = -1,
	          indexOf = getIndexOf(),
	          length = array.length,
	          isCommon = indexOf == baseIndexOf,
	          isLarge = isCommon && length >= LARGE_ARRAY_SIZE,
	          seen = isLarge ? createCache() : null,
	          result = [];

	      if (seen) {
	        indexOf = cacheIndexOf;
	        isCommon = false;
	      } else {
	        isLarge = false;
	        seen = iteratee ? [] : result;
	      }
	      outer:
	      while (++index < length) {
	        var value = array[index],
	            computed = iteratee ? iteratee(value, index, array) : value;

	        if (isCommon && value === value) {
	          var seenIndex = seen.length;
	          while (seenIndex--) {
	            if (seen[seenIndex] === computed) {
	              continue outer;
	            }
	          }
	          if (iteratee) {
	            seen.push(computed);
	          }
	          result.push(value);
	        }
	        else if (indexOf(seen, computed, 0) < 0) {
	          if (iteratee || isLarge) {
	            seen.push(computed);
	          }
	          result.push(value);
	        }
	      }
	      return result;
	    }

	    /**
	     * The base implementation of `_.values` and `_.valuesIn` which creates an
	     * array of `object` property values corresponding to the property names
	     * of `props`.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @param {Array} props The property names to get values for.
	     * @returns {Object} Returns the array of property values.
	     */
	    function baseValues(object, props) {
	      var index = -1,
	          length = props.length,
	          result = Array(length);

	      while (++index < length) {
	        result[index] = object[props[index]];
	      }
	      return result;
	    }

	    /**
	     * The base implementation of `_.dropRightWhile`, `_.dropWhile`, `_.takeRightWhile`,
	     * and `_.takeWhile` without support for callback shorthands and `this` binding.
	     *
	     * @private
	     * @param {Array} array The array to query.
	     * @param {Function} predicate The function invoked per iteration.
	     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.
	     * @param {boolean} [fromRight] Specify iterating from right to left.
	     * @returns {Array} Returns the slice of `array`.
	     */
	    function baseWhile(array, predicate, isDrop, fromRight) {
	      var length = array.length,
	          index = fromRight ? length : -1;

	      while ((fromRight ? index-- : ++index < length) && predicate(array[index], index, array)) {}
	      return isDrop
	        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))
	        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));
	    }

	    /**
	     * The base implementation of `wrapperValue` which returns the result of
	     * performing a sequence of actions on the unwrapped `value`, where each
	     * successive action is supplied the return value of the previous.
	     *
	     * @private
	     * @param {*} value The unwrapped value.
	     * @param {Array} actions Actions to peform to resolve the unwrapped value.
	     * @returns {*} Returns the resolved value.
	     */
	    function baseWrapperValue(value, actions) {
	      var result = value;
	      if (result instanceof LazyWrapper) {
	        result = result.value();
	      }
	      var index = -1,
	          length = actions.length;

	      while (++index < length) {
	        var action = actions[index];
	        result = action.func.apply(action.thisArg, arrayPush([result], action.args));
	      }
	      return result;
	    }

	    /**
	     * Performs a binary search of `array` to determine the index at which `value`
	     * should be inserted into `array` in order to maintain its sort order.
	     *
	     * @private
	     * @param {Array} array The sorted array to inspect.
	     * @param {*} value The value to evaluate.
	     * @param {boolean} [retHighest] Specify returning the highest qualified index.
	     * @returns {number} Returns the index at which `value` should be inserted
	     *  into `array`.
	     */
	    function binaryIndex(array, value, retHighest) {
	      var low = 0,
	          high = array ? array.length : low;

	      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {
	        while (low < high) {
	          var mid = (low + high) >>> 1,
	              computed = array[mid];

	          if ((retHighest ? (computed <= value) : (computed < value)) && computed !== null) {
	            low = mid + 1;
	          } else {
	            high = mid;
	          }
	        }
	        return high;
	      }
	      return binaryIndexBy(array, value, identity, retHighest);
	    }

	    /**
	     * This function is like `binaryIndex` except that it invokes `iteratee` for
	     * `value` and each element of `array` to compute their sort ranking. The
	     * iteratee is invoked with one argument; (value).
	     *
	     * @private
	     * @param {Array} array The sorted array to inspect.
	     * @param {*} value The value to evaluate.
	     * @param {Function} iteratee The function invoked per iteration.
	     * @param {boolean} [retHighest] Specify returning the highest qualified index.
	     * @returns {number} Returns the index at which `value` should be inserted
	     *  into `array`.
	     */
	    function binaryIndexBy(array, value, iteratee, retHighest) {
	      value = iteratee(value);

	      var low = 0,
	          high = array ? array.length : 0,
	          valIsNaN = value !== value,
	          valIsNull = value === null,
	          valIsUndef = value === undefined;

	      while (low < high) {
	        var mid = nativeFloor((low + high) / 2),
	            computed = iteratee(array[mid]),
	            isDef = computed !== undefined,
	            isReflexive = computed === computed;

	        if (valIsNaN) {
	          var setLow = isReflexive || retHighest;
	        } else if (valIsNull) {
	          setLow = isReflexive && isDef && (retHighest || computed != null);
	        } else if (valIsUndef) {
	          setLow = isReflexive && (retHighest || isDef);
	        } else if (computed == null) {
	          setLow = false;
	        } else {
	          setLow = retHighest ? (computed <= value) : (computed < value);
	        }
	        if (setLow) {
	          low = mid + 1;
	        } else {
	          high = mid;
	        }
	      }
	      return nativeMin(high, MAX_ARRAY_INDEX);
	    }

	    /**
	     * A specialized version of `baseCallback` which only supports `this` binding
	     * and specifying the number of arguments to provide to `func`.
	     *
	     * @private
	     * @param {Function} func The function to bind.
	     * @param {*} thisArg The `this` binding of `func`.
	     * @param {number} [argCount] The number of arguments to provide to `func`.
	     * @returns {Function} Returns the callback.
	     */
	    function bindCallback(func, thisArg, argCount) {
	      if (typeof func != 'function') {
	        return identity;
	      }
	      if (thisArg === undefined) {
	        return func;
	      }
	      switch (argCount) {
	        case 1: return function(value) {
	          return func.call(thisArg, value);
	        };
	        case 3: return function(value, index, collection) {
	          return func.call(thisArg, value, index, collection);
	        };
	        case 4: return function(accumulator, value, index, collection) {
	          return func.call(thisArg, accumulator, value, index, collection);
	        };
	        case 5: return function(value, other, key, object, source) {
	          return func.call(thisArg, value, other, key, object, source);
	        };
	      }
	      return function() {
	        return func.apply(thisArg, arguments);
	      };
	    }

	    /**
	     * Creates a clone of the given array buffer.
	     *
	     * @private
	     * @param {ArrayBuffer} buffer The array buffer to clone.
	     * @returns {ArrayBuffer} Returns the cloned array buffer.
	     */
	    function bufferClone(buffer) {
	      var result = new ArrayBuffer(buffer.byteLength),
	          view = new Uint8Array(result);

	      view.set(new Uint8Array(buffer));
	      return result;
	    }

	    /**
	     * Creates an array that is the composition of partially applied arguments,
	     * placeholders, and provided arguments into a single array of arguments.
	     *
	     * @private
	     * @param {Array|Object} args The provided arguments.
	     * @param {Array} partials The arguments to prepend to those provided.
	     * @param {Array} holders The `partials` placeholder indexes.
	     * @returns {Array} Returns the new array of composed arguments.
	     */
	    function composeArgs(args, partials, holders) {
	      var holdersLength = holders.length,
	          argsIndex = -1,
	          argsLength = nativeMax(args.length - holdersLength, 0),
	          leftIndex = -1,
	          leftLength = partials.length,
	          result = Array(leftLength + argsLength);

	      while (++leftIndex < leftLength) {
	        result[leftIndex] = partials[leftIndex];
	      }
	      while (++argsIndex < holdersLength) {
	        result[holders[argsIndex]] = args[argsIndex];
	      }
	      while (argsLength--) {
	        result[leftIndex++] = args[argsIndex++];
	      }
	      return result;
	    }

	    /**
	     * This function is like `composeArgs` except that the arguments composition
	     * is tailored for `_.partialRight`.
	     *
	     * @private
	     * @param {Array|Object} args The provided arguments.
	     * @param {Array} partials The arguments to append to those provided.
	     * @param {Array} holders The `partials` placeholder indexes.
	     * @returns {Array} Returns the new array of composed arguments.
	     */
	    function composeArgsRight(args, partials, holders) {
	      var holdersIndex = -1,
	          holdersLength = holders.length,
	          argsIndex = -1,
	          argsLength = nativeMax(args.length - holdersLength, 0),
	          rightIndex = -1,
	          rightLength = partials.length,
	          result = Array(argsLength + rightLength);

	      while (++argsIndex < argsLength) {
	        result[argsIndex] = args[argsIndex];
	      }
	      var offset = argsIndex;
	      while (++rightIndex < rightLength) {
	        result[offset + rightIndex] = partials[rightIndex];
	      }
	      while (++holdersIndex < holdersLength) {
	        result[offset + holders[holdersIndex]] = args[argsIndex++];
	      }
	      return result;
	    }

	    /**
	     * Creates a `_.countBy`, `_.groupBy`, `_.indexBy`, or `_.partition` function.
	     *
	     * @private
	     * @param {Function} setter The function to set keys and values of the accumulator object.
	     * @param {Function} [initializer] The function to initialize the accumulator object.
	     * @returns {Function} Returns the new aggregator function.
	     */
	    function createAggregator(setter, initializer) {
	      return function(collection, iteratee, thisArg) {
	        var result = initializer ? initializer() : {};
	        iteratee = getCallback(iteratee, thisArg, 3);

	        if (isArray(collection)) {
	          var index = -1,
	              length = collection.length;

	          while (++index < length) {
	            var value = collection[index];
	            setter(result, value, iteratee(value, index, collection), collection);
	          }
	        } else {
	          baseEach(collection, function(value, key, collection) {
	            setter(result, value, iteratee(value, key, collection), collection);
	          });
	        }
	        return result;
	      };
	    }

	    /**
	     * Creates a `_.assign`, `_.defaults`, or `_.merge` function.
	     *
	     * @private
	     * @param {Function} assigner The function to assign values.
	     * @returns {Function} Returns the new assigner function.
	     */
	    function createAssigner(assigner) {
	      return restParam(function(object, sources) {
	        var index = -1,
	            length = object == null ? 0 : sources.length,
	            customizer = length > 2 ? sources[length - 2] : undefined,
	            guard = length > 2 ? sources[2] : undefined,
	            thisArg = length > 1 ? sources[length - 1] : undefined;

	        if (typeof customizer == 'function') {
	          customizer = bindCallback(customizer, thisArg, 5);
	          length -= 2;
	        } else {
	          customizer = typeof thisArg == 'function' ? thisArg : undefined;
	          length -= (customizer ? 1 : 0);
	        }
	        if (guard && isIterateeCall(sources[0], sources[1], guard)) {
	          customizer = length < 3 ? undefined : customizer;
	          length = 1;
	        }
	        while (++index < length) {
	          var source = sources[index];
	          if (source) {
	            assigner(object, source, customizer);
	          }
	        }
	        return object;
	      });
	    }

	    /**
	     * Creates a `baseEach` or `baseEachRight` function.
	     *
	     * @private
	     * @param {Function} eachFunc The function to iterate over a collection.
	     * @param {boolean} [fromRight] Specify iterating from right to left.
	     * @returns {Function} Returns the new base function.
	     */
	    function createBaseEach(eachFunc, fromRight) {
	      return function(collection, iteratee) {
	        var length = collection ? getLength(collection) : 0;
	        if (!isLength(length)) {
	          return eachFunc(collection, iteratee);
	        }
	        var index = fromRight ? length : -1,
	            iterable = toObject(collection);

	        while ((fromRight ? index-- : ++index < length)) {
	          if (iteratee(iterable[index], index, iterable) === false) {
	            break;
	          }
	        }
	        return collection;
	      };
	    }

	    /**
	     * Creates a base function for `_.forIn` or `_.forInRight`.
	     *
	     * @private
	     * @param {boolean} [fromRight] Specify iterating from right to left.
	     * @returns {Function} Returns the new base function.
	     */
	    function createBaseFor(fromRight) {
	      return function(object, iteratee, keysFunc) {
	        var iterable = toObject(object),
	            props = keysFunc(object),
	            length = props.length,
	            index = fromRight ? length : -1;

	        while ((fromRight ? index-- : ++index < length)) {
	          var key = props[index];
	          if (iteratee(iterable[key], key, iterable) === false) {
	            break;
	          }
	        }
	        return object;
	      };
	    }

	    /**
	     * Creates a function that wraps `func` and invokes it with the `this`
	     * binding of `thisArg`.
	     *
	     * @private
	     * @param {Function} func The function to bind.
	     * @param {*} [thisArg] The `this` binding of `func`.
	     * @returns {Function} Returns the new bound function.
	     */
	    function createBindWrapper(func, thisArg) {
	      var Ctor = createCtorWrapper(func);

	      function wrapper() {
	        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;
	        return fn.apply(thisArg, arguments);
	      }
	      return wrapper;
	    }

	    /**
	     * Creates a `Set` cache object to optimize linear searches of large arrays.
	     *
	     * @private
	     * @param {Array} [values] The values to cache.
	     * @returns {null|Object} Returns the new cache object if `Set` is supported, else `null`.
	     */
	    function createCache(values) {
	      return (nativeCreate && Set) ? new SetCache(values) : null;
	    }

	    /**
	     * Creates a function that produces compound words out of the words in a
	     * given string.
	     *
	     * @private
	     * @param {Function} callback The function to combine each word.
	     * @returns {Function} Returns the new compounder function.
	     */
	    function createCompounder(callback) {
	      return function(string) {
	        var index = -1,
	            array = words(deburr(string)),
	            length = array.length,
	            result = '';

	        while (++index < length) {
	          result = callback(result, array[index], index);
	        }
	        return result;
	      };
	    }

	    /**
	     * Creates a function that produces an instance of `Ctor` regardless of
	     * whether it was invoked as part of a `new` expression or by `call` or `apply`.
	     *
	     * @private
	     * @param {Function} Ctor The constructor to wrap.
	     * @returns {Function} Returns the new wrapped function.
	     */
	    function createCtorWrapper(Ctor) {
	      return function() {
	        // Use a `switch` statement to work with class constructors.
	        // See http://ecma-international.org/ecma-262/6.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist
	        // for more details.
	        var args = arguments;
	        switch (args.length) {
	          case 0: return new Ctor;
	          case 1: return new Ctor(args[0]);
	          case 2: return new Ctor(args[0], args[1]);
	          case 3: return new Ctor(args[0], args[1], args[2]);
	          case 4: return new Ctor(args[0], args[1], args[2], args[3]);
	          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);
	          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);
	          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);
	        }
	        var thisBinding = baseCreate(Ctor.prototype),
	            result = Ctor.apply(thisBinding, args);

	        // Mimic the constructor's `return` behavior.
	        // See https://es5.github.io/#x13.2.2 for more details.
	        return isObject(result) ? result : thisBinding;
	      };
	    }

	    /**
	     * Creates a `_.curry` or `_.curryRight` function.
	     *
	     * @private
	     * @param {boolean} flag The curry bit flag.
	     * @returns {Function} Returns the new curry function.
	     */
	    function createCurry(flag) {
	      function curryFunc(func, arity, guard) {
	        if (guard && isIterateeCall(func, arity, guard)) {
	          arity = undefined;
	        }
	        var result = createWrapper(func, flag, undefined, undefined, undefined, undefined, undefined, arity);
	        result.placeholder = curryFunc.placeholder;
	        return result;
	      }
	      return curryFunc;
	    }

	    /**
	     * Creates a `_.defaults` or `_.defaultsDeep` function.
	     *
	     * @private
	     * @param {Function} assigner The function to assign values.
	     * @param {Function} customizer The function to customize assigned values.
	     * @returns {Function} Returns the new defaults function.
	     */
	    function createDefaults(assigner, customizer) {
	      return restParam(function(args) {
	        var object = args[0];
	        if (object == null) {
	          return object;
	        }
	        args.push(customizer);
	        return assigner.apply(undefined, args);
	      });
	    }

	    /**
	     * Creates a `_.max` or `_.min` function.
	     *
	     * @private
	     * @param {Function} comparator The function used to compare values.
	     * @param {*} exValue The initial extremum value.
	     * @returns {Function} Returns the new extremum function.
	     */
	    function createExtremum(comparator, exValue) {
	      return function(collection, iteratee, thisArg) {
	        if (thisArg && isIterateeCall(collection, iteratee, thisArg)) {
	          iteratee = undefined;
	        }
	        iteratee = getCallback(iteratee, thisArg, 3);
	        if (iteratee.length == 1) {
	          collection = isArray(collection) ? collection : toIterable(collection);
	          var result = arrayExtremum(collection, iteratee, comparator, exValue);
	          if (!(collection.length && result === exValue)) {
	            return result;
	          }
	        }
	        return baseExtremum(collection, iteratee, comparator, exValue);
	      };
	    }

	    /**
	     * Creates a `_.find` or `_.findLast` function.
	     *
	     * @private
	     * @param {Function} eachFunc The function to iterate over a collection.
	     * @param {boolean} [fromRight] Specify iterating from right to left.
	     * @returns {Function} Returns the new find function.
	     */
	    function createFind(eachFunc, fromRight) {
	      return function(collection, predicate, thisArg) {
	        predicate = getCallback(predicate, thisArg, 3);
	        if (isArray(collection)) {
	          var index = baseFindIndex(collection, predicate, fromRight);
	          return index > -1 ? collection[index] : undefined;
	        }
	        return baseFind(collection, predicate, eachFunc);
	      };
	    }

	    /**
	     * Creates a `_.findIndex` or `_.findLastIndex` function.
	     *
	     * @private
	     * @param {boolean} [fromRight] Specify iterating from right to left.
	     * @returns {Function} Returns the new find function.
	     */
	    function createFindIndex(fromRight) {
	      return function(array, predicate, thisArg) {
	        if (!(array && array.length)) {
	          return -1;
	        }
	        predicate = getCallback(predicate, thisArg, 3);
	        return baseFindIndex(array, predicate, fromRight);
	      };
	    }

	    /**
	     * Creates a `_.findKey` or `_.findLastKey` function.
	     *
	     * @private
	     * @param {Function} objectFunc The function to iterate over an object.
	     * @returns {Function} Returns the new find function.
	     */
	    function createFindKey(objectFunc) {
	      return function(object, predicate, thisArg) {
	        predicate = getCallback(predicate, thisArg, 3);
	        return baseFind(object, predicate, objectFunc, true);
	      };
	    }

	    /**
	     * Creates a `_.flow` or `_.flowRight` function.
	     *
	     * @private
	     * @param {boolean} [fromRight] Specify iterating from right to left.
	     * @returns {Function} Returns the new flow function.
	     */
	    function createFlow(fromRight) {
	      return function() {
	        var wrapper,
	            length = arguments.length,
	            index = fromRight ? length : -1,
	            leftIndex = 0,
	            funcs = Array(length);

	        while ((fromRight ? index-- : ++index < length)) {
	          var func = funcs[leftIndex++] = arguments[index];
	          if (typeof func != 'function') {
	            throw new TypeError(FUNC_ERROR_TEXT);
	          }
	          if (!wrapper && LodashWrapper.prototype.thru && getFuncName(func) == 'wrapper') {
	            wrapper = new LodashWrapper([], true);
	          }
	        }
	        index = wrapper ? -1 : length;
	        while (++index < length) {
	          func = funcs[index];

	          var funcName = getFuncName(func),
	              data = funcName == 'wrapper' ? getData(func) : undefined;

	          if (data && isLaziable(data[0]) && data[1] == (ARY_FLAG | CURRY_FLAG | PARTIAL_FLAG | REARG_FLAG) && !data[4].length && data[9] == 1) {
	            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);
	          } else {
	            wrapper = (func.length == 1 && isLaziable(func)) ? wrapper[funcName]() : wrapper.thru(func);
	          }
	        }
	        return function() {
	          var args = arguments,
	              value = args[0];

	          if (wrapper && args.length == 1 && isArray(value) && value.length >= LARGE_ARRAY_SIZE) {
	            return wrapper.plant(value).value();
	          }
	          var index = 0,
	              result = length ? funcs[index].apply(this, args) : value;

	          while (++index < length) {
	            result = funcs[index].call(this, result);
	          }
	          return result;
	        };
	      };
	    }

	    /**
	     * Creates a function for `_.forEach` or `_.forEachRight`.
	     *
	     * @private
	     * @param {Function} arrayFunc The function to iterate over an array.
	     * @param {Function} eachFunc The function to iterate over a collection.
	     * @returns {Function} Returns the new each function.
	     */
	    function createForEach(arrayFunc, eachFunc) {
	      return function(collection, iteratee, thisArg) {
	        return (typeof iteratee == 'function' && thisArg === undefined && isArray(collection))
	          ? arrayFunc(collection, iteratee)
	          : eachFunc(collection, bindCallback(iteratee, thisArg, 3));
	      };
	    }

	    /**
	     * Creates a function for `_.forIn` or `_.forInRight`.
	     *
	     * @private
	     * @param {Function} objectFunc The function to iterate over an object.
	     * @returns {Function} Returns the new each function.
	     */
	    function createForIn(objectFunc) {
	      return function(object, iteratee, thisArg) {
	        if (typeof iteratee != 'function' || thisArg !== undefined) {
	          iteratee = bindCallback(iteratee, thisArg, 3);
	        }
	        return objectFunc(object, iteratee, keysIn);
	      };
	    }

	    /**
	     * Creates a function for `_.forOwn` or `_.forOwnRight`.
	     *
	     * @private
	     * @param {Function} objectFunc The function to iterate over an object.
	     * @returns {Function} Returns the new each function.
	     */
	    function createForOwn(objectFunc) {
	      return function(object, iteratee, thisArg) {
	        if (typeof iteratee != 'function' || thisArg !== undefined) {
	          iteratee = bindCallback(iteratee, thisArg, 3);
	        }
	        return objectFunc(object, iteratee);
	      };
	    }

	    /**
	     * Creates a function for `_.mapKeys` or `_.mapValues`.
	     *
	     * @private
	     * @param {boolean} [isMapKeys] Specify mapping keys instead of values.
	     * @returns {Function} Returns the new map function.
	     */
	    function createObjectMapper(isMapKeys) {
	      return function(object, iteratee, thisArg) {
	        var result = {};
	        iteratee = getCallback(iteratee, thisArg, 3);

	        baseForOwn(object, function(value, key, object) {
	          var mapped = iteratee(value, key, object);
	          key = isMapKeys ? mapped : key;
	          value = isMapKeys ? value : mapped;
	          result[key] = value;
	        });
	        return result;
	      };
	    }

	    /**
	     * Creates a function for `_.padLeft` or `_.padRight`.
	     *
	     * @private
	     * @param {boolean} [fromRight] Specify padding from the right.
	     * @returns {Function} Returns the new pad function.
	     */
	    function createPadDir(fromRight) {
	      return function(string, length, chars) {
	        string = baseToString(string);
	        return (fromRight ? string : '') + createPadding(string, length, chars) + (fromRight ? '' : string);
	      };
	    }

	    /**
	     * Creates a `_.partial` or `_.partialRight` function.
	     *
	     * @private
	     * @param {boolean} flag The partial bit flag.
	     * @returns {Function} Returns the new partial function.
	     */
	    function createPartial(flag) {
	      var partialFunc = restParam(function(func, partials) {
	        var holders = replaceHolders(partials, partialFunc.placeholder);
	        return createWrapper(func, flag, undefined, partials, holders);
	      });
	      return partialFunc;
	    }

	    /**
	     * Creates a function for `_.reduce` or `_.reduceRight`.
	     *
	     * @private
	     * @param {Function} arrayFunc The function to iterate over an array.
	     * @param {Function} eachFunc The function to iterate over a collection.
	     * @returns {Function} Returns the new each function.
	     */
	    function createReduce(arrayFunc, eachFunc) {
	      return function(collection, iteratee, accumulator, thisArg) {
	        var initFromArray = arguments.length < 3;
	        return (typeof iteratee == 'function' && thisArg === undefined && isArray(collection))
	          ? arrayFunc(collection, iteratee, accumulator, initFromArray)
	          : baseReduce(collection, getCallback(iteratee, thisArg, 4), accumulator, initFromArray, eachFunc);
	      };
	    }

	    /**
	     * Creates a function that wraps `func` and invokes it with optional `this`
	     * binding of, partial application, and currying.
	     *
	     * @private
	     * @param {Function|string} func The function or method name to reference.
	     * @param {number} bitmask The bitmask of flags. See `createWrapper` for more details.
	     * @param {*} [thisArg] The `this` binding of `func`.
	     * @param {Array} [partials] The arguments to prepend to those provided to the new function.
	     * @param {Array} [holders] The `partials` placeholder indexes.
	     * @param {Array} [partialsRight] The arguments to append to those provided to the new function.
	     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.
	     * @param {Array} [argPos] The argument positions of the new function.
	     * @param {number} [ary] The arity cap of `func`.
	     * @param {number} [arity] The arity of `func`.
	     * @returns {Function} Returns the new wrapped function.
	     */
	    function createHybridWrapper(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {
	      var isAry = bitmask & ARY_FLAG,
	          isBind = bitmask & BIND_FLAG,
	          isBindKey = bitmask & BIND_KEY_FLAG,
	          isCurry = bitmask & CURRY_FLAG,
	          isCurryBound = bitmask & CURRY_BOUND_FLAG,
	          isCurryRight = bitmask & CURRY_RIGHT_FLAG,
	          Ctor = isBindKey ? undefined : createCtorWrapper(func);

	      function wrapper() {
	        // Avoid `arguments` object use disqualifying optimizations by
	        // converting it to an array before providing it to other functions.
	        var length = arguments.length,
	            index = length,
	            args = Array(length);

	        while (index--) {
	          args[index] = arguments[index];
	        }
	        if (partials) {
	          args = composeArgs(args, partials, holders);
	        }
	        if (partialsRight) {
	          args = composeArgsRight(args, partialsRight, holdersRight);
	        }
	        if (isCurry || isCurryRight) {
	          var placeholder = wrapper.placeholder,
	              argsHolders = replaceHolders(args, placeholder);

	          length -= argsHolders.length;
	          if (length < arity) {
	            var newArgPos = argPos ? arrayCopy(argPos) : undefined,
	                newArity = nativeMax(arity - length, 0),
	                newsHolders = isCurry ? argsHolders : undefined,
	                newHoldersRight = isCurry ? undefined : argsHolders,
	                newPartials = isCurry ? args : undefined,
	                newPartialsRight = isCurry ? undefined : args;

	            bitmask |= (isCurry ? PARTIAL_FLAG : PARTIAL_RIGHT_FLAG);
	            bitmask &= ~(isCurry ? PARTIAL_RIGHT_FLAG : PARTIAL_FLAG);

	            if (!isCurryBound) {
	              bitmask &= ~(BIND_FLAG | BIND_KEY_FLAG);
	            }
	            var newData = [func, bitmask, thisArg, newPartials, newsHolders, newPartialsRight, newHoldersRight, newArgPos, ary, newArity],
	                result = createHybridWrapper.apply(undefined, newData);

	            if (isLaziable(func)) {
	              setData(result, newData);
	            }
	            result.placeholder = placeholder;
	            return result;
	          }
	        }
	        var thisBinding = isBind ? thisArg : this,
	            fn = isBindKey ? thisBinding[func] : func;

	        if (argPos) {
	          args = reorder(args, argPos);
	        }
	        if (isAry && ary < args.length) {
	          args.length = ary;
	        }
	        if (this && this !== root && this instanceof wrapper) {
	          fn = Ctor || createCtorWrapper(func);
	        }
	        return fn.apply(thisBinding, args);
	      }
	      return wrapper;
	    }

	    /**
	     * Creates the padding required for `string` based on the given `length`.
	     * The `chars` string is truncated if the number of characters exceeds `length`.
	     *
	     * @private
	     * @param {string} string The string to create padding for.
	     * @param {number} [length=0] The padding length.
	     * @param {string} [chars=' '] The string used as padding.
	     * @returns {string} Returns the pad for `string`.
	     */
	    function createPadding(string, length, chars) {
	      var strLength = string.length;
	      length = +length;

	      if (strLength >= length || !nativeIsFinite(length)) {
	        return '';
	      }
	      var padLength = length - strLength;
	      chars = chars == null ? ' ' : (chars + '');
	      return repeat(chars, nativeCeil(padLength / chars.length)).slice(0, padLength);
	    }

	    /**
	     * Creates a function that wraps `func` and invokes it with the optional `this`
	     * binding of `thisArg` and the `partials` prepended to those provided to
	     * the wrapper.
	     *
	     * @private
	     * @param {Function} func The function to partially apply arguments to.
	     * @param {number} bitmask The bitmask of flags. See `createWrapper` for more details.
	     * @param {*} thisArg The `this` binding of `func`.
	     * @param {Array} partials The arguments to prepend to those provided to the new function.
	     * @returns {Function} Returns the new bound function.
	     */
	    function createPartialWrapper(func, bitmask, thisArg, partials) {
	      var isBind = bitmask & BIND_FLAG,
	          Ctor = createCtorWrapper(func);

	      function wrapper() {
	        // Avoid `arguments` object use disqualifying optimizations by
	        // converting it to an array before providing it `func`.
	        var argsIndex = -1,
	            argsLength = arguments.length,
	            leftIndex = -1,
	            leftLength = partials.length,
	            args = Array(leftLength + argsLength);

	        while (++leftIndex < leftLength) {
	          args[leftIndex] = partials[leftIndex];
	        }
	        while (argsLength--) {
	          args[leftIndex++] = arguments[++argsIndex];
	        }
	        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;
	        return fn.apply(isBind ? thisArg : this, args);
	      }
	      return wrapper;
	    }

	    /**
	     * Creates a `_.ceil`, `_.floor`, or `_.round` function.
	     *
	     * @private
	     * @param {string} methodName The name of the `Math` method to use when rounding.
	     * @returns {Function} Returns the new round function.
	     */
	    function createRound(methodName) {
	      var func = Math[methodName];
	      return function(number, precision) {
	        precision = precision === undefined ? 0 : (+precision || 0);
	        if (precision) {
	          precision = pow(10, precision);
	          return func(number * precision) / precision;
	        }
	        return func(number);
	      };
	    }

	    /**
	     * Creates a `_.sortedIndex` or `_.sortedLastIndex` function.
	     *
	     * @private
	     * @param {boolean} [retHighest] Specify returning the highest qualified index.
	     * @returns {Function} Returns the new index function.
	     */
	    function createSortedIndex(retHighest) {
	      return function(array, value, iteratee, thisArg) {
	        var callback = getCallback(iteratee);
	        return (iteratee == null && callback === baseCallback)
	          ? binaryIndex(array, value, retHighest)
	          : binaryIndexBy(array, value, callback(iteratee, thisArg, 1), retHighest);
	      };
	    }

	    /**
	     * Creates a function that either curries or invokes `func` with optional
	     * `this` binding and partially applied arguments.
	     *
	     * @private
	     * @param {Function|string} func The function or method name to reference.
	     * @param {number} bitmask The bitmask of flags.
	     *  The bitmask may be composed of the following flags:
	     *     1 - `_.bind`
	     *     2 - `_.bindKey`
	     *     4 - `_.curry` or `_.curryRight` of a bound function
	     *     8 - `_.curry`
	     *    16 - `_.curryRight`
	     *    32 - `_.partial`
	     *    64 - `_.partialRight`
	     *   128 - `_.rearg`
	     *   256 - `_.ary`
	     * @param {*} [thisArg] The `this` binding of `func`.
	     * @param {Array} [partials] The arguments to be partially applied.
	     * @param {Array} [holders] The `partials` placeholder indexes.
	     * @param {Array} [argPos] The argument positions of the new function.
	     * @param {number} [ary] The arity cap of `func`.
	     * @param {number} [arity] The arity of `func`.
	     * @returns {Function} Returns the new wrapped function.
	     */
	    function createWrapper(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {
	      var isBindKey = bitmask & BIND_KEY_FLAG;
	      if (!isBindKey && typeof func != 'function') {
	        throw new TypeError(FUNC_ERROR_TEXT);
	      }
	      var length = partials ? partials.length : 0;
	      if (!length) {
	        bitmask &= ~(PARTIAL_FLAG | PARTIAL_RIGHT_FLAG);
	        partials = holders = undefined;
	      }
	      length -= (holders ? holders.length : 0);
	      if (bitmask & PARTIAL_RIGHT_FLAG) {
	        var partialsRight = partials,
	            holdersRight = holders;

	        partials = holders = undefined;
	      }
	      var data = isBindKey ? undefined : getData(func),
	          newData = [func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity];

	      if (data) {
	        mergeData(newData, data);
	        bitmask = newData[1];
	        arity = newData[9];
	      }
	      newData[9] = arity == null
	        ? (isBindKey ? 0 : func.length)
	        : (nativeMax(arity - length, 0) || 0);

	      if (bitmask == BIND_FLAG) {
	        var result = createBindWrapper(newData[0], newData[2]);
	      } else if ((bitmask == PARTIAL_FLAG || bitmask == (BIND_FLAG | PARTIAL_FLAG)) && !newData[4].length) {
	        result = createPartialWrapper.apply(undefined, newData);
	      } else {
	        result = createHybridWrapper.apply(undefined, newData);
	      }
	      var setter = data ? baseSetData : setData;
	      return setter(result, newData);
	    }

	    /**
	     * A specialized version of `baseIsEqualDeep` for arrays with support for
	     * partial deep comparisons.
	     *
	     * @private
	     * @param {Array} array The array to compare.
	     * @param {Array} other The other array to compare.
	     * @param {Function} equalFunc The function to determine equivalents of values.
	     * @param {Function} [customizer] The function to customize comparing arrays.
	     * @param {boolean} [isLoose] Specify performing partial comparisons.
	     * @param {Array} [stackA] Tracks traversed `value` objects.
	     * @param {Array} [stackB] Tracks traversed `other` objects.
	     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.
	     */
	    function equalArrays(array, other, equalFunc, customizer, isLoose, stackA, stackB) {
	      var index = -1,
	          arrLength = array.length,
	          othLength = other.length;

	      if (arrLength != othLength && !(isLoose && othLength > arrLength)) {
	        return false;
	      }
	      // Ignore non-index properties.
	      while (++index < arrLength) {
	        var arrValue = array[index],
	            othValue = other[index],
	            result = customizer ? customizer(isLoose ? othValue : arrValue, isLoose ? arrValue : othValue, index) : undefined;

	        if (result !== undefined) {
	          if (result) {
	            continue;
	          }
	          return false;
	        }
	        // Recursively compare arrays (susceptible to call stack limits).
	        if (isLoose) {
	          if (!arraySome(other, function(othValue) {
	                return arrValue === othValue || equalFunc(arrValue, othValue, customizer, isLoose, stackA, stackB);
	              })) {
	            return false;
	          }
	        } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, customizer, isLoose, stackA, stackB))) {
	          return false;
	        }
	      }
	      return true;
	    }

	    /**
	     * A specialized version of `baseIsEqualDeep` for comparing objects of
	     * the same `toStringTag`.
	     *
	     * **Note:** This function only supports comparing values with tags of
	     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
	     *
	     * @private
	     * @param {Object} object The object to compare.
	     * @param {Object} other The other object to compare.
	     * @param {string} tag The `toStringTag` of the objects to compare.
	     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
	     */
	    function equalByTag(object, other, tag) {
	      switch (tag) {
	        case boolTag:
	        case dateTag:
	          // Coerce dates and booleans to numbers, dates to milliseconds and booleans
	          // to `1` or `0` treating invalid dates coerced to `NaN` as not equal.
	          return +object == +other;

	        case errorTag:
	          return object.name == other.name && object.message == other.message;

	        case numberTag:
	          // Treat `NaN` vs. `NaN` as equal.
	          return (object != +object)
	            ? other != +other
	            : object == +other;

	        case regexpTag:
	        case stringTag:
	          // Coerce regexes to strings and treat strings primitives and string
	          // objects as equal. See https://es5.github.io/#x15.10.6.4 for more details.
	          return object == (other + '');
	      }
	      return false;
	    }

	    /**
	     * A specialized version of `baseIsEqualDeep` for objects with support for
	     * partial deep comparisons.
	     *
	     * @private
	     * @param {Object} object The object to compare.
	     * @param {Object} other The other object to compare.
	     * @param {Function} equalFunc The function to determine equivalents of values.
	     * @param {Function} [customizer] The function to customize comparing values.
	     * @param {boolean} [isLoose] Specify performing partial comparisons.
	     * @param {Array} [stackA] Tracks traversed `value` objects.
	     * @param {Array} [stackB] Tracks traversed `other` objects.
	     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
	     */
	    function equalObjects(object, other, equalFunc, customizer, isLoose, stackA, stackB) {
	      var objProps = keys(object),
	          objLength = objProps.length,
	          othProps = keys(other),
	          othLength = othProps.length;

	      if (objLength != othLength && !isLoose) {
	        return false;
	      }
	      var index = objLength;
	      while (index--) {
	        var key = objProps[index];
	        if (!(isLoose ? key in other : hasOwnProperty.call(other, key))) {
	          return false;
	        }
	      }
	      var skipCtor = isLoose;
	      while (++index < objLength) {
	        key = objProps[index];
	        var objValue = object[key],
	            othValue = other[key],
	            result = customizer ? customizer(isLoose ? othValue : objValue, isLoose? objValue : othValue, key) : undefined;

	        // Recursively compare objects (susceptible to call stack limits).
	        if (!(result === undefined ? equalFunc(objValue, othValue, customizer, isLoose, stackA, stackB) : result)) {
	          return false;
	        }
	        skipCtor || (skipCtor = key == 'constructor');
	      }
	      if (!skipCtor) {
	        var objCtor = object.constructor,
	            othCtor = other.constructor;

	        // Non `Object` object instances with different constructors are not equal.
	        if (objCtor != othCtor &&
	            ('constructor' in object && 'constructor' in other) &&
	            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&
	              typeof othCtor == 'function' && othCtor instanceof othCtor)) {
	          return false;
	        }
	      }
	      return true;
	    }

	    /**
	     * Gets the appropriate "callback" function. If the `_.callback` method is
	     * customized this function returns the custom method, otherwise it returns
	     * the `baseCallback` function. If arguments are provided the chosen function
	     * is invoked with them and its result is returned.
	     *
	     * @private
	     * @returns {Function} Returns the chosen function or its result.
	     */
	    function getCallback(func, thisArg, argCount) {
	      var result = lodash.callback || callback;
	      result = result === callback ? baseCallback : result;
	      return argCount ? result(func, thisArg, argCount) : result;
	    }

	    /**
	     * Gets metadata for `func`.
	     *
	     * @private
	     * @param {Function} func The function to query.
	     * @returns {*} Returns the metadata for `func`.
	     */
	    var getData = !metaMap ? noop : function(func) {
	      return metaMap.get(func);
	    };

	    /**
	     * Gets the name of `func`.
	     *
	     * @private
	     * @param {Function} func The function to query.
	     * @returns {string} Returns the function name.
	     */
	    function getFuncName(func) {
	      var result = func.name,
	          array = realNames[result],
	          length = array ? array.length : 0;

	      while (length--) {
	        var data = array[length],
	            otherFunc = data.func;
	        if (otherFunc == null || otherFunc == func) {
	          return data.name;
	        }
	      }
	      return result;
	    }

	    /**
	     * Gets the appropriate "indexOf" function. If the `_.indexOf` method is
	     * customized this function returns the custom method, otherwise it returns
	     * the `baseIndexOf` function. If arguments are provided the chosen function
	     * is invoked with them and its result is returned.
	     *
	     * @private
	     * @returns {Function|number} Returns the chosen function or its result.
	     */
	    function getIndexOf(collection, target, fromIndex) {
	      var result = lodash.indexOf || indexOf;
	      result = result === indexOf ? baseIndexOf : result;
	      return collection ? result(collection, target, fromIndex) : result;
	    }

	    /**
	     * Gets the "length" property value of `object`.
	     *
	     * **Note:** This function is used to avoid a [JIT bug](https://bugs.webkit.org/show_bug.cgi?id=142792)
	     * that affects Safari on at least iOS 8.1-8.3 ARM64.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @returns {*} Returns the "length" value.
	     */
	    var getLength = baseProperty('length');

	    /**
	     * Gets the propery names, values, and compare flags of `object`.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the match data of `object`.
	     */
	    function getMatchData(object) {
	      var result = pairs(object),
	          length = result.length;

	      while (length--) {
	        result[length][2] = isStrictComparable(result[length][1]);
	      }
	      return result;
	    }

	    /**
	     * Gets the native function at `key` of `object`.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @param {string} key The key of the method to get.
	     * @returns {*} Returns the function if it's native, else `undefined`.
	     */
	    function getNative(object, key) {
	      var value = object == null ? undefined : object[key];
	      return isNative(value) ? value : undefined;
	    }

	    /**
	     * Gets the view, applying any `transforms` to the `start` and `end` positions.
	     *
	     * @private
	     * @param {number} start The start of the view.
	     * @param {number} end The end of the view.
	     * @param {Array} transforms The transformations to apply to the view.
	     * @returns {Object} Returns an object containing the `start` and `end`
	     *  positions of the view.
	     */
	    function getView(start, end, transforms) {
	      var index = -1,
	          length = transforms.length;

	      while (++index < length) {
	        var data = transforms[index],
	            size = data.size;

	        switch (data.type) {
	          case 'drop':      start += size; break;
	          case 'dropRight': end -= size; break;
	          case 'take':      end = nativeMin(end, start + size); break;
	          case 'takeRight': start = nativeMax(start, end - size); break;
	        }
	      }
	      return { 'start': start, 'end': end };
	    }

	    /**
	     * Initializes an array clone.
	     *
	     * @private
	     * @param {Array} array The array to clone.
	     * @returns {Array} Returns the initialized clone.
	     */
	    function initCloneArray(array) {
	      var length = array.length,
	          result = new array.constructor(length);

	      // Add array properties assigned by `RegExp#exec`.
	      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {
	        result.index = array.index;
	        result.input = array.input;
	      }
	      return result;
	    }

	    /**
	     * Initializes an object clone.
	     *
	     * @private
	     * @param {Object} object The object to clone.
	     * @returns {Object} Returns the initialized clone.
	     */
	    function initCloneObject(object) {
	      var Ctor = object.constructor;
	      if (!(typeof Ctor == 'function' && Ctor instanceof Ctor)) {
	        Ctor = Object;
	      }
	      return new Ctor;
	    }

	    /**
	     * Initializes an object clone based on its `toStringTag`.
	     *
	     * **Note:** This function only supports cloning values with tags of
	     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
	     *
	     * @private
	     * @param {Object} object The object to clone.
	     * @param {string} tag The `toStringTag` of the object to clone.
	     * @param {boolean} [isDeep] Specify a deep clone.
	     * @returns {Object} Returns the initialized clone.
	     */
	    function initCloneByTag(object, tag, isDeep) {
	      var Ctor = object.constructor;
	      switch (tag) {
	        case arrayBufferTag:
	          return bufferClone(object);

	        case boolTag:
	        case dateTag:
	          return new Ctor(+object);

	        case float32Tag: case float64Tag:
	        case int8Tag: case int16Tag: case int32Tag:
	        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:
	          var buffer = object.buffer;
	          return new Ctor(isDeep ? bufferClone(buffer) : buffer, object.byteOffset, object.length);

	        case numberTag:
	        case stringTag:
	          return new Ctor(object);

	        case regexpTag:
	          var result = new Ctor(object.source, reFlags.exec(object));
	          result.lastIndex = object.lastIndex;
	      }
	      return result;
	    }

	    /**
	     * Invokes the method at `path` on `object`.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @param {Array|string} path The path of the method to invoke.
	     * @param {Array} args The arguments to invoke the method with.
	     * @returns {*} Returns the result of the invoked method.
	     */
	    function invokePath(object, path, args) {
	      if (object != null && !isKey(path, object)) {
	        path = toPath(path);
	        object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));
	        path = last(path);
	      }
	      var func = object == null ? object : object[path];
	      return func == null ? undefined : func.apply(object, args);
	    }

	    /**
	     * Checks if `value` is array-like.
	     *
	     * @private
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
	     */
	    function isArrayLike(value) {
	      return value != null && isLength(getLength(value));
	    }

	    /**
	     * Checks if `value` is a valid array-like index.
	     *
	     * @private
	     * @param {*} value The value to check.
	     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
	     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
	     */
	    function isIndex(value, length) {
	      value = (typeof value == 'number' || reIsUint.test(value)) ? +value : -1;
	      length = length == null ? MAX_SAFE_INTEGER : length;
	      return value > -1 && value % 1 == 0 && value < length;
	    }

	    /**
	     * Checks if the provided arguments are from an iteratee call.
	     *
	     * @private
	     * @param {*} value The potential iteratee value argument.
	     * @param {*} index The potential iteratee index or key argument.
	     * @param {*} object The potential iteratee object argument.
	     * @returns {boolean} Returns `true` if the arguments are from an iteratee call, else `false`.
	     */
	    function isIterateeCall(value, index, object) {
	      if (!isObject(object)) {
	        return false;
	      }
	      var type = typeof index;
	      if (type == 'number'
	          ? (isArrayLike(object) && isIndex(index, object.length))
	          : (type == 'string' && index in object)) {
	        var other = object[index];
	        return value === value ? (value === other) : (other !== other);
	      }
	      return false;
	    }

	    /**
	     * Checks if `value` is a property name and not a property path.
	     *
	     * @private
	     * @param {*} value The value to check.
	     * @param {Object} [object] The object to query keys on.
	     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.
	     */
	    function isKey(value, object) {
	      var type = typeof value;
	      if ((type == 'string' && reIsPlainProp.test(value)) || type == 'number') {
	        return true;
	      }
	      if (isArray(value)) {
	        return false;
	      }
	      var result = !reIsDeepProp.test(value);
	      return result || (object != null && value in toObject(object));
	    }

	    /**
	     * Checks if `func` has a lazy counterpart.
	     *
	     * @private
	     * @param {Function} func The function to check.
	     * @returns {boolean} Returns `true` if `func` has a lazy counterpart, else `false`.
	     */
	    function isLaziable(func) {
	      var funcName = getFuncName(func);
	      if (!(funcName in LazyWrapper.prototype)) {
	        return false;
	      }
	      var other = lodash[funcName];
	      if (func === other) {
	        return true;
	      }
	      var data = getData(other);
	      return !!data && func === data[0];
	    }

	    /**
	     * Checks if `value` is a valid array-like length.
	     *
	     * **Note:** This function is based on [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).
	     *
	     * @private
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
	     */
	    function isLength(value) {
	      return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
	    }

	    /**
	     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.
	     *
	     * @private
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` if suitable for strict
	     *  equality comparisons, else `false`.
	     */
	    function isStrictComparable(value) {
	      return value === value && !isObject(value);
	    }

	    /**
	     * Merges the function metadata of `source` into `data`.
	     *
	     * Merging metadata reduces the number of wrappers required to invoke a function.
	     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`
	     * may be applied regardless of execution order. Methods like `_.ary` and `_.rearg`
	     * augment function arguments, making the order in which they are executed important,
	     * preventing the merging of metadata. However, we make an exception for a safe
	     * common case where curried functions have `_.ary` and or `_.rearg` applied.
	     *
	     * @private
	     * @param {Array} data The destination metadata.
	     * @param {Array} source The source metadata.
	     * @returns {Array} Returns `data`.
	     */
	    function mergeData(data, source) {
	      var bitmask = data[1],
	          srcBitmask = source[1],
	          newBitmask = bitmask | srcBitmask,
	          isCommon = newBitmask < ARY_FLAG;

	      var isCombo =
	        (srcBitmask == ARY_FLAG && bitmask == CURRY_FLAG) ||
	        (srcBitmask == ARY_FLAG && bitmask == REARG_FLAG && data[7].length <= source[8]) ||
	        (srcBitmask == (ARY_FLAG | REARG_FLAG) && bitmask == CURRY_FLAG);

	      // Exit early if metadata can't be merged.
	      if (!(isCommon || isCombo)) {
	        return data;
	      }
	      // Use source `thisArg` if available.
	      if (srcBitmask & BIND_FLAG) {
	        data[2] = source[2];
	        // Set when currying a bound function.
	        newBitmask |= (bitmask & BIND_FLAG) ? 0 : CURRY_BOUND_FLAG;
	      }
	      // Compose partial arguments.
	      var value = source[3];
	      if (value) {
	        var partials = data[3];
	        data[3] = partials ? composeArgs(partials, value, source[4]) : arrayCopy(value);
	        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : arrayCopy(source[4]);
	      }
	      // Compose partial right arguments.
	      value = source[5];
	      if (value) {
	        partials = data[5];
	        data[5] = partials ? composeArgsRight(partials, value, source[6]) : arrayCopy(value);
	        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : arrayCopy(source[6]);
	      }
	      // Use source `argPos` if available.
	      value = source[7];
	      if (value) {
	        data[7] = arrayCopy(value);
	      }
	      // Use source `ary` if it's smaller.
	      if (srcBitmask & ARY_FLAG) {
	        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);
	      }
	      // Use source `arity` if one is not provided.
	      if (data[9] == null) {
	        data[9] = source[9];
	      }
	      // Use source `func` and merge bitmasks.
	      data[0] = source[0];
	      data[1] = newBitmask;

	      return data;
	    }

	    /**
	     * Used by `_.defaultsDeep` to customize its `_.merge` use.
	     *
	     * @private
	     * @param {*} objectValue The destination object property value.
	     * @param {*} sourceValue The source object property value.
	     * @returns {*} Returns the value to assign to the destination object.
	     */
	    function mergeDefaults(objectValue, sourceValue) {
	      return objectValue === undefined ? sourceValue : merge(objectValue, sourceValue, mergeDefaults);
	    }

	    /**
	     * A specialized version of `_.pick` which picks `object` properties specified
	     * by `props`.
	     *
	     * @private
	     * @param {Object} object The source object.
	     * @param {string[]} props The property names to pick.
	     * @returns {Object} Returns the new object.
	     */
	    function pickByArray(object, props) {
	      object = toObject(object);

	      var index = -1,
	          length = props.length,
	          result = {};

	      while (++index < length) {
	        var key = props[index];
	        if (key in object) {
	          result[key] = object[key];
	        }
	      }
	      return result;
	    }

	    /**
	     * A specialized version of `_.pick` which picks `object` properties `predicate`
	     * returns truthy for.
	     *
	     * @private
	     * @param {Object} object The source object.
	     * @param {Function} predicate The function invoked per iteration.
	     * @returns {Object} Returns the new object.
	     */
	    function pickByCallback(object, predicate) {
	      var result = {};
	      baseForIn(object, function(value, key, object) {
	        if (predicate(value, key, object)) {
	          result[key] = value;
	        }
	      });
	      return result;
	    }

	    /**
	     * Reorder `array` according to the specified indexes where the element at
	     * the first index is assigned as the first element, the element at
	     * the second index is assigned as the second element, and so on.
	     *
	     * @private
	     * @param {Array} array The array to reorder.
	     * @param {Array} indexes The arranged array indexes.
	     * @returns {Array} Returns `array`.
	     */
	    function reorder(array, indexes) {
	      var arrLength = array.length,
	          length = nativeMin(indexes.length, arrLength),
	          oldArray = arrayCopy(array);

	      while (length--) {
	        var index = indexes[length];
	        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;
	      }
	      return array;
	    }

	    /**
	     * Sets metadata for `func`.
	     *
	     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short
	     * period of time, it will trip its breaker and transition to an identity function
	     * to avoid garbage collection pauses in V8. See [V8 issue 2070](https://code.google.com/p/v8/issues/detail?id=2070)
	     * for more details.
	     *
	     * @private
	     * @param {Function} func The function to associate metadata with.
	     * @param {*} data The metadata.
	     * @returns {Function} Returns `func`.
	     */
	    var setData = (function() {
	      var count = 0,
	          lastCalled = 0;

	      return function(key, value) {
	        var stamp = now(),
	            remaining = HOT_SPAN - (stamp - lastCalled);

	        lastCalled = stamp;
	        if (remaining > 0) {
	          if (++count >= HOT_COUNT) {
	            return key;
	          }
	        } else {
	          count = 0;
	        }
	        return baseSetData(key, value);
	      };
	    }());

	    /**
	     * A fallback implementation of `Object.keys` which creates an array of the
	     * own enumerable property names of `object`.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the array of property names.
	     */
	    function shimKeys(object) {
	      var props = keysIn(object),
	          propsLength = props.length,
	          length = propsLength && object.length;

	      var allowIndexes = !!length && isLength(length) &&
	        (isArray(object) || isArguments(object));

	      var index = -1,
	          result = [];

	      while (++index < propsLength) {
	        var key = props[index];
	        if ((allowIndexes && isIndex(key, length)) || hasOwnProperty.call(object, key)) {
	          result.push(key);
	        }
	      }
	      return result;
	    }

	    /**
	     * Converts `value` to an array-like object if it's not one.
	     *
	     * @private
	     * @param {*} value The value to process.
	     * @returns {Array|Object} Returns the array-like object.
	     */
	    function toIterable(value) {
	      if (value == null) {
	        return [];
	      }
	      if (!isArrayLike(value)) {
	        return values(value);
	      }
	      return isObject(value) ? value : Object(value);
	    }

	    /**
	     * Converts `value` to an object if it's not one.
	     *
	     * @private
	     * @param {*} value The value to process.
	     * @returns {Object} Returns the object.
	     */
	    function toObject(value) {
	      return isObject(value) ? value : Object(value);
	    }

	    /**
	     * Converts `value` to property path array if it's not one.
	     *
	     * @private
	     * @param {*} value The value to process.
	     * @returns {Array} Returns the property path array.
	     */
	    function toPath(value) {
	      if (isArray(value)) {
	        return value;
	      }
	      var result = [];
	      baseToString(value).replace(rePropName, function(match, number, quote, string) {
	        result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));
	      });
	      return result;
	    }

	    /**
	     * Creates a clone of `wrapper`.
	     *
	     * @private
	     * @param {Object} wrapper The wrapper to clone.
	     * @returns {Object} Returns the cloned wrapper.
	     */
	    function wrapperClone(wrapper) {
	      return wrapper instanceof LazyWrapper
	        ? wrapper.clone()
	        : new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__, arrayCopy(wrapper.__actions__));
	    }

	    /*------------------------------------------------------------------------*/

	    /**
	     * Creates an array of elements split into groups the length of `size`.
	     * If `collection` can't be split evenly, the final chunk will be the remaining
	     * elements.
	     *
	     * @static
	     * @memberOf _
	     * @category Array
	     * @param {Array} array The array to process.
	     * @param {number} [size=1] The length of each chunk.
	     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.
	     * @returns {Array} Returns the new array containing chunks.
	     * @example
	     *
	     * _.chunk(['a', 'b', 'c', 'd'], 2);
	     * // => [['a', 'b'], ['c', 'd']]
	     *
	     * _.chunk(['a', 'b', 'c', 'd'], 3);
	     * // => [['a', 'b', 'c'], ['d']]
	     */
	    function chunk(array, size, guard) {
	      if (guard ? isIterateeCall(array, size, guard) : size == null) {
	        size = 1;
	      } else {
	        size = nativeMax(nativeFloor(size) || 1, 1);
	      }
	      var index = 0,
	          length = array ? array.length : 0,
	          resIndex = -1,
	          result = Array(nativeCeil(length / size));

	      while (index < length) {
	        result[++resIndex] = baseSlice(array, index, (index += size));
	      }
	      return result;
	    }

	    /**
	     * Creates an array with all falsey values removed. The values `false`, `null`,
	     * `0`, `""`, `undefined`, and `NaN` are falsey.
	     *
	     * @static
	     * @memberOf _
	     * @category Array
	     * @param {Array} array The array to compact.
	     * @returns {Array} Returns the new array of filtered values.
	     * @example
	     *
	     * _.compact([0, 1, false, 2, '', 3]);
	     * // => [1, 2, 3]
	     */
	    function compact(array) {
	      var index = -1,
	          length = array ? array.length : 0,
	          resIndex = -1,
	          result = [];

	      while (++index < length) {
	        var value = array[index];
	        if (value) {
	          result[++resIndex] = value;
	        }
	      }
	      return result;
	    }

	    /**
	     * Creates an array of unique `array` values not included in the other
	     * provided arrays using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)
	     * for equality comparisons.
	     *
	     * @static
	     * @memberOf _
	     * @category Array
	     * @param {Array} array The array to inspect.
	     * @param {...Array} [values] The arrays of values to exclude.
	     * @returns {Array} Returns the new array of filtered values.
	     * @example
	     *
	     * _.difference([1, 2, 3], [4, 2]);
	     * // => [1, 3]
	     */
	    var difference = restParam(function(array, values) {
	      return (isObjectLike(array) && isArrayLike(array))
	        ? baseDifference(array, baseFlatten(values, false, true))
	        : [];
	    });

	    /**
	     * Creates a slice of `array` with `n` elements dropped from the beginning.
	     *
	     * @static
	     * @memberOf _
	     * @category Array
	     * @param {Array} array The array to query.
	     * @param {number} [n=1] The number of elements to drop.
	     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.
	     * @returns {Array} Returns the slice of `array`.
	     * @example
	     *
	     * _.drop([1, 2, 3]);
	     * // => [2, 3]
	     *
	     * _.drop([1, 2, 3], 2);
	     * // => [3]
	     *
	     * _.drop([1, 2, 3], 5);
	     * // => []
	     *
	     * _.drop([1, 2, 3], 0);
	     * // => [1, 2, 3]
	     */
	    function drop(array, n, guard) {
	      var length = array ? array.length : 0;
	      if (!length) {
	        return [];
	      }
	      if (guard ? isIterateeCall(array, n, guard) : n == null) {
	        n = 1;
	      }
	      return baseSlice(array, n < 0 ? 0 : n);
	    }

	    /**
	     * Creates a slice of `array` with `n` elements dropped from the end.
	     *
	     * @static
	     * @memberOf _
	     * @category Array
	     * @param {Array} array The array to query.
	     * @param {number} [n=1] The number of elements to drop.
	     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.
	     * @returns {Array} Returns the slice of `array`.
	     * @example
	     *
	     * _.dropRight([1, 2, 3]);
	     * // => [1, 2]
	     *
	     * _.dropRight([1, 2, 3], 2);
	     * // => [1]
	     *
	     * _.dropRight([1, 2, 3], 5);
	     * // => []
	     *
	     * _.dropRight([1, 2, 3], 0);
	     * // => [1, 2, 3]
	     */
	    function dropRight(array, n, guard) {
	      var length = array ? array.length : 0;
	      if (!length) {
	        return [];
	      }
	      if (guard ? isIterateeCall(array, n, guard) : n == null) {
	        n = 1;
	      }
	      n = length - (+n || 0);
	      return baseSlice(array, 0, n < 0 ? 0 : n);
	    }

	    /**
	     * Creates a slice of `array` excluding elements dropped from the end.
	     * Elements are dropped until `predicate` returns falsey. The predicate is
	     * bound to `thisArg` and invoked with three arguments: (value, index, array).
	     *
	     * If a property name is provided for `predicate` the created `_.property`
	     * style callback returns the property value of the given element.
	     *
	     * If a value is also provided for `thisArg` the created `_.matchesProperty`
	     * style callback returns `true` for elements that have a matching property
	     * value, else `false`.
	     *
	     * If an object is provided for `predicate` the created `_.matches` style
	     * callback returns `true` for elements that match the properties of the given
	     * object, else `false`.
	     *
	     * @static
	     * @memberOf _
	     * @category Array
	     * @param {Array} array The array to query.
	     * @param {Function|Object|string} [predicate=_.identity] The function invoked
	     *  per iteration.
	     * @param {*} [thisArg] The `this` binding of `predicate`.
	     * @returns {Array} Returns the slice of `array`.
	     * @example
	     *
	     * _.dropRightWhile([1, 2, 3], function(n) {
	     *   return n > 1;
	     * });
	     * // => [1]
	     *
	     * var users = [
	     *   { 'user': 'barney',  'active': true },
	     *   { 'user': 'fred',    'active': false },
	     *   { 'user': 'pebbles', 'active': false }
	     * ];
	     *
	     * // using the `_.matches` callback shorthand
	     * _.pluck(_.dropRightWhile(users, { 'user': 'pebbles', 'active': false }), 'user');
	     * // => ['barney', 'fred']
	     *
	     * // using the `_.matchesProperty` callback shorthand
	     * _.pluck(_.dropRightWhile(users, 'active', false), 'user');
	     * // => ['barney']
	     *
	     * // using the `_.property` callback shorthand
	     * _.pluck(_.dropRightWhile(users, 'active'), 'user');
	     * // => ['barney', 'fred', 'pebbles']
	     */
	    function dropRightWhile(array, predicate, thisArg) {
	      return (array && array.length)
	        ? baseWhile(array, getCallback(predicate, thisArg, 3), true, true)
	        : [];
	    }

	    /**
	     * Creates a slice of `array` excluding elements dropped from the beginning.
	     * Elements are dropped until `predicate` returns falsey. The predicate is
	     * bound to `thisArg` and invoked with three arguments: (value, index, array).
	     *
	     * If a property name is provided for `predicate` the created `_.property`
	     * style callback returns the property value of the given element.
	     *
	     * If a value is also provided for `thisArg` the created `_.matchesProperty`
	     * style callback returns `true` for elements that have a matching property
	     * value, else `false`.
	     *
	     * If an object is provided for `predicate` the created `_.matches` style
	     * callback returns `true` for elements that have the properties of the given
	     * object, else `false`.
	     *
	     * @static
	     * @memberOf _
	     * @category Array
	     * @param {Array} array The array to query.
	     * @param {Function|Object|string} [predicate=_.identity] The function invoked
	     *  per iteration.
	     * @param {*} [thisArg] The `this` binding of `predicate`.
	     * @returns {Array} Returns the slice of `array`.
	     * @example
	     *
	     * _.dropWhile([1, 2, 3], function(n) {
	     *   return n < 3;
	     * });
	     * // => [3]
	     *
	     * var users = [
	     *   { 'user': 'barney',  'active': false },
	     *   { 'user': 'fred',    'active': false },
	     *   { 'user': 'pebbles', 'active': true }
	     * ];
	     *
	     * // using the `_.matches` callback shorthand
	     * _.pluck(_.dropWhile(users, { 'user': 'barney', 'active': false }), 'user');
	     * // => ['fred', 'pebbles']
	     *
	     * // using the `_.matchesProperty` callback shorthand
	     * _.pluck(_.dropWhile(users, 'active', false), 'user');
	     * // => ['pebbles']
	     *
	     * // using the `_.property` callback shorthand
	     * _.pluck(_.dropWhile(users, 'active'), 'user');
	     * // => ['barney', 'fred', 'pebbles']
	     */
	    function dropWhile(array, predicate, thisArg) {
	      return (array && array.length)
	        ? baseWhile(array, getCallback(predicate, thisArg, 3), true)
	        : [];
	    }

	    /**
	     * Fills elements of `array` with `value` from `start` up to, but not
	     * including, `end`.
	     *
	     * **Note:** This method mutates `array`.
	     *
	     * @static
	     * @memberOf _
	     * @category Array
	     * @param {Array} array The array to fill.
	     * @param {*} value The value to fill `array` with.
	     * @param {number} [start=0] The start position.
	     * @param {number} [end=array.length] The end position.
	     * @returns {Array} Returns `array`.
	     * @example
	     *
	     * var array = [1, 2, 3];
	     *
	     * _.fill(array, 'a');
	     * console.log(array);
	     * // => ['a', 'a', 'a']
	     *
	     * _.fill(Array(3), 2);
	     * // => [2, 2, 2]
	     *
	     * _.fill([4, 6, 8], '*', 1, 2);
	     * // => [4, '*', 8]
	     */
	    function fill(array, value, start, end) {
	      var length = array ? array.length : 0;
	      if (!length) {
	        return [];
	      }
	      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {
	        start = 0;
	        end = length;
	      }
	      return baseFill(array, value, start, end);
	    }

	    /**
	     * This method is like `_.find` except that it returns the index of the first
	     * element `predicate` returns truthy for instead of the element itself.
	     *
	     * If a property name is provided for `predicate` the created `_.property`
	     * style callback returns the property value of the given element.
	     *
	     * If a value is also provided for `thisArg` the created `_.matchesProperty`
	     * style callback returns `true` for elements that have a matching property
	     * value, else `false`.
	     *
	     * If an object is provided for `predicate` the created `_.matches` style
	     * callback returns `true` for elements that have the properties of the given
	     * object, else `false`.
	     *
	     * @static
	     * @memberOf _
	     * @category Array
	     * @param {Array} array The array to search.
	     * @param {Function|Object|string} [predicate=_.identity] The function invoked
	     *  per iteration.
	     * @param {*} [thisArg] The `this` binding of `predicate`.
	     * @returns {number} Returns the index of the found element, else `-1`.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney',  'active': false },
	     *   { 'user': 'fred',    'active': false },
	     *   { 'user': 'pebbles', 'active': true }
	     * ];
	     *
	     * _.findIndex(users, function(chr) {
	     *   return chr.user == 'barney';
	     * });
	     * // => 0
	     *
	     * // using the `_.matches` callback shorthand
	     * _.findIndex(users, { 'user': 'fred', 'active': false });
	     * // => 1
	     *
	     * // using the `_.matchesProperty` callback shorthand
	     * _.findIndex(users, 'active', false);
	     * // => 0
	     *
	     * // using the `_.property` callback shorthand
	     * _.findIndex(users, 'active');
	     * // => 2
	     */
	    var findIndex = createFindIndex();

	    /**
	     * This method is like `_.findIndex` except that it iterates over elements
	     * of `collection` from right to left.
	     *
	     * If a property name is provided for `predicate` the created `_.property`
	     * style callback returns the property value of the given element.
	     *
	     * If a value is also provided for `thisArg` the created `_.matchesProperty`
	     * style callback returns `true` for elements that have a matching property
	     * value, else `false`.
	     *
	     * If an object is provided for `predicate` the created `_.matches` style
	     * callback returns `true` for elements that have the properties of the given
	     * object, else `false`.
	     *
	     * @static
	     * @memberOf _
	     * @category Array
	     * @param {Array} array The array to search.
	     * @param {Function|Object|string} [predicate=_.identity] The function invoked
	     *  per iteration.
	     * @param {*} [thisArg] The `this` binding of `predicate`.
	     * @returns {number} Returns the index of the found element, else `-1`.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney',  'active': true },
	     *   { 'user': 'fred',    'active': false },
	     *   { 'user': 'pebbles', 'active': false }
	     * ];
	     *
	     * _.findLastIndex(users, function(chr) {
	     *   return chr.user == 'pebbles';
	     * });
	     * // => 2
	     *
	     * // using the `_.matches` callback shorthand
	     * _.findLastIndex(users, { 'user': 'barney', 'active': true });
	     * // => 0
	     *
	     * // using the `_.matchesProperty` callback shorthand
	     * _.findLastIndex(users, 'active', false);
	     * // => 2
	     *
	     * // using the `_.property` callback shorthand
	     * _.findLastIndex(users, 'active');
	     * // => 0
	     */
	    var findLastIndex = createFindIndex(true);

	    /**
	     * Gets the first element of `array`.
	     *
	     * @static
	     * @memberOf _
	     * @alias head
	     * @category Array
	     * @param {Array} array The array to query.
	     * @returns {*} Returns the first element of `array`.
	     * @example
	     *
	     * _.first([1, 2, 3]);
	     * // => 1
	     *
	     * _.first([]);
	     * // => undefined
	     */
	    function first(array) {
	      return array ? array[0] : undefined;
	    }

	    /**
	     * Flattens a nested array. If `isDeep` is `true` the array is recursively
	     * flattened, otherwise it is only flattened a single level.
	     *
	     * @static
	     * @memberOf _
	     * @category Array
	     * @param {Array} array The array to flatten.
	     * @param {boolean} [isDeep] Specify a deep flatten.
	     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.
	     * @returns {Array} Returns the new flattened array.
	     * @example
	     *
	     * _.flatten([1, [2, 3, [4]]]);
	     * // => [1, 2, 3, [4]]
	     *
	     * // using `isDeep`
	     * _.flatten([1, [2, 3, [4]]], true);
	     * // => [1, 2, 3, 4]
	     */
	    function flatten(array, isDeep, guard) {
	      var length = array ? array.length : 0;
	      if (guard && isIterateeCall(array, isDeep, guard)) {
	        isDeep = false;
	      }
	      return length ? baseFlatten(array, isDeep) : [];
	    }

	    /**
	     * Recursively flattens a nested array.
	     *
	     * @static
	     * @memberOf _
	     * @category Array
	     * @param {Array} array The array to recursively flatten.
	     * @returns {Array} Returns the new flattened array.
	     * @example
	     *
	     * _.flattenDeep([1, [2, 3, [4]]]);
	     * // => [1, 2, 3, 4]
	     */
	    function flattenDeep(array) {
	      var length = array ? array.length : 0;
	      return length ? baseFlatten(array, true) : [];
	    }

	    /**
	     * Gets the index at which the first occurrence of `value` is found in `array`
	     * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)
	     * for equality comparisons. If `fromIndex` is negative, it is used as the offset
	     * from the end of `array`. If `array` is sorted providing `true` for `fromIndex`
	     * performs a faster binary search.
	     *
	     * @static
	     * @memberOf _
	     * @category Array
	     * @param {Array} array The array to search.
	     * @param {*} value The value to search for.
	     * @param {boolean|number} [fromIndex=0] The index to search from or `true`
	     *  to perform a binary search on a sorted array.
	     * @returns {number} Returns the index of the matched value, else `-1`.
	     * @example
	     *
	     * _.indexOf([1, 2, 1, 2], 2);
	     * // => 1
	     *
	     * // using `fromIndex`
	     * _.indexOf([1, 2, 1, 2], 2, 2);
	     * // => 3
	     *
	     * // performing a binary search
	     * _.indexOf([1, 1, 2, 2], 2, true);
	     * // => 2
	     */
	    function indexOf(array, value, fromIndex) {
	      var length = array ? array.length : 0;
	      if (!length) {
	        return -1;
	      }
	      if (typeof fromIndex == 'number') {
	        fromIndex = fromIndex < 0 ? nativeMax(length + fromIndex, 0) : fromIndex;
	      } else if (fromIndex) {
	        var index = binaryIndex(array, value);
	        if (index < length &&
	            (value === value ? (value === array[index]) : (array[index] !== array[index]))) {
	          return index;
	        }
	        return -1;
	      }
	      return baseIndexOf(array, value, fromIndex || 0);
	    }

	    /**
	     * Gets all but the last element of `array`.
	     *
	     * @static
	     * @memberOf _
	     * @category Array
	     * @param {Array} array The array to query.
	     * @returns {Array} Returns the slice of `array`.
	     * @example
	     *
	     * _.initial([1, 2, 3]);
	     * // => [1, 2]
	     */
	    function initial(array) {
	      return dropRight(array, 1);
	    }

	    /**
	     * Creates an array of unique values that are included in all of the provided
	     * arrays using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)
	     * for equality comparisons.
	     *
	     * @static
	     * @memberOf _
	     * @category Array
	     * @param {...Array} [arrays] The arrays to inspect.
	     * @returns {Array} Returns the new array of shared values.
	     * @example
	     * _.intersection([1, 2], [4, 2], [2, 1]);
	     * // => [2]
	     */
	    var intersection = restParam(function(arrays) {
	      var othLength = arrays.length,
	          othIndex = othLength,
	          caches = Array(length),
	          indexOf = getIndexOf(),
	          isCommon = indexOf == baseIndexOf,
	          result = [];

	      while (othIndex--) {
	        var value = arrays[othIndex] = isArrayLike(value = arrays[othIndex]) ? value : [];
	        caches[othIndex] = (isCommon && value.length >= 120) ? createCache(othIndex && value) : null;
	      }
	      var array = arrays[0],
	          index = -1,
	          length = array ? array.length : 0,
	          seen = caches[0];

	      outer:
	      while (++index < length) {
	        value = array[index];
	        if ((seen ? cacheIndexOf(seen, value) : indexOf(result, value, 0)) < 0) {
	          var othIndex = othLength;
	          while (--othIndex) {
	            var cache = caches[othIndex];
	            if ((cache ? cacheIndexOf(cache, value) : indexOf(arrays[othIndex], value, 0)) < 0) {
	              continue outer;
	            }
	          }
	          if (seen) {
	            seen.push(value);
	          }
	          result.push(value);
	        }
	      }
	      return result;
	    });

	    /**
	     * Gets the last element of `array`.
	     *
	     * @static
	     * @memberOf _
	     * @category Array
	     * @param {Array} array The array to query.
	     * @returns {*} Returns the last element of `array`.
	     * @example
	     *
	     * _.last([1, 2, 3]);
	     * // => 3
	     */
	    function last(array) {
	      var length = array ? array.length : 0;
	      return length ? array[length - 1] : undefined;
	    }

	    /**
	     * This method is like `_.indexOf` except that it iterates over elements of
	     * `array` from right to left.
	     *
	     * @static
	     * @memberOf _
	     * @category Array
	     * @param {Array} array The array to search.
	     * @param {*} value The value to search for.
	     * @param {boolean|number} [fromIndex=array.length-1] The index to search from
	     *  or `true` to perform a binary search on a sorted array.
	     * @returns {number} Returns the index of the matched value, else `-1`.
	     * @example
	     *
	     * _.lastIndexOf([1, 2, 1, 2], 2);
	     * // => 3
	     *
	     * // using `fromIndex`
	     * _.lastIndexOf([1, 2, 1, 2], 2, 2);
	     * // => 1
	     *
	     * // performing a binary search
	     * _.lastIndexOf([1, 1, 2, 2], 2, true);
	     * // => 3
	     */
	    function lastIndexOf(array, value, fromIndex) {
	      var length = array ? array.length : 0;
	      if (!length) {
	        return -1;
	      }
	      var index = length;
	      if (typeof fromIndex == 'number') {
	        index = (fromIndex < 0 ? nativeMax(length + fromIndex, 0) : nativeMin(fromIndex || 0, length - 1)) + 1;
	      } else if (fromIndex) {
	        index = binaryIndex(array, value, true) - 1;
	        var other = array[index];
	        if (value === value ? (value === other) : (other !== other)) {
	          return index;
	        }
	        return -1;
	      }
	      if (value !== value) {
	        return indexOfNaN(array, index, true);
	      }
	      while (index--) {
	        if (array[index] === value) {
	          return index;
	        }
	      }
	      return -1;
	    }

	    /**
	     * Removes all provided values from `array` using
	     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)
	     * for equality comparisons.
	     *
	     * **Note:** Unlike `_.without`, this method mutates `array`.
	     *
	     * @static
	     * @memberOf _
	     * @category Array
	     * @param {Array} array The array to modify.
	     * @param {...*} [values] The values to remove.
	     * @returns {Array} Returns `array`.
	     * @example
	     *
	     * var array = [1, 2, 3, 1, 2, 3];
	     *
	     * _.pull(array, 2, 3);
	     * console.log(array);
	     * // => [1, 1]
	     */
	    function pull() {
	      var args = arguments,
	          array = args[0];

	      if (!(array && array.length)) {
	        return array;
	      }
	      var index = 0,
	          indexOf = getIndexOf(),
	          length = args.length;

	      while (++index < length) {
	        var fromIndex = 0,
	            value = args[index];

	        while ((fromIndex = indexOf(array, value, fromIndex)) > -1) {
	          splice.call(array, fromIndex, 1);
	        }
	      }
	      return array;
	    }

	    /**
	     * Removes elements from `array` corresponding to the given indexes and returns
	     * an array of the removed elements. Indexes may be specified as an array of
	     * indexes or as individual arguments.
	     *
	     * **Note:** Unlike `_.at`, this method mutates `array`.
	     *
	     * @static
	     * @memberOf _
	     * @category Array
	     * @param {Array} array The array to modify.
	     * @param {...(number|number[])} [indexes] The indexes of elements to remove,
	     *  specified as individual indexes or arrays of indexes.
	     * @returns {Array} Returns the new array of removed elements.
	     * @example
	     *
	     * var array = [5, 10, 15, 20];
	     * var evens = _.pullAt(array, 1, 3);
	     *
	     * console.log(array);
	     * // => [5, 15]
	     *
	     * console.log(evens);
	     * // => [10, 20]
	     */
	    var pullAt = restParam(function(array, indexes) {
	      indexes = baseFlatten(indexes);

	      var result = baseAt(array, indexes);
	      basePullAt(array, indexes.sort(baseCompareAscending));
	      return result;
	    });

	    /**
	     * Removes all elements from `array` that `predicate` returns truthy for
	     * and returns an array of the removed elements. The predicate is bound to
	     * `thisArg` and invoked with three arguments: (value, index, array).
	     *
	     * If a property name is provided for `predicate` the created `_.property`
	     * style callback returns the property value of the given element.
	     *
	     * If a value is also provided for `thisArg` the created `_.matchesProperty`
	     * style callback returns `true` for elements that have a matching property
	     * value, else `false`.
	     *
	     * If an object is provided for `predicate` the created `_.matches` style
	     * callback returns `true` for elements that have the properties of the given
	     * object, else `false`.
	     *
	     * **Note:** Unlike `_.filter`, this method mutates `array`.
	     *
	     * @static
	     * @memberOf _
	     * @category Array
	     * @param {Array} array The array to modify.
	     * @param {Function|Object|string} [predicate=_.identity] The function invoked
	     *  per iteration.
	     * @param {*} [thisArg] The `this` binding of `predicate`.
	     * @returns {Array} Returns the new array of removed elements.
	     * @example
	     *
	     * var array = [1, 2, 3, 4];
	     * var evens = _.remove(array, function(n) {
	     *   return n % 2 == 0;
	     * });
	     *
	     * console.log(array);
	     * // => [1, 3]
	     *
	     * console.log(evens);
	     * // => [2, 4]
	     */
	    function remove(array, predicate, thisArg) {
	      var result = [];
	      if (!(array && array.length)) {
	        return result;
	      }
	      var index = -1,
	          indexes = [],
	          length = array.length;

	      predicate = getCallback(predicate, thisArg, 3);
	      while (++index < length) {
	        var value = array[index];
	        if (predicate(value, index, array)) {
	          result.push(value);
	          indexes.push(index);
	        }
	      }
	      basePullAt(array, indexes);
	      return result;
	    }

	    /**
	     * Gets all but the first element of `array`.
	     *
	     * @static
	     * @memberOf _
	     * @alias tail
	     * @category Array
	     * @param {Array} array The array to query.
	     * @returns {Array} Returns the slice of `array`.
	     * @example
	     *
	     * _.rest([1, 2, 3]);
	     * // => [2, 3]
	     */
	    function rest(array) {
	      return drop(array, 1);
	    }

	    /**
	     * Creates a slice of `array` from `start` up to, but not including, `end`.
	     *
	     * **Note:** This method is used instead of `Array#slice` to support node
	     * lists in IE < 9 and to ensure dense arrays are returned.
	     *
	     * @static
	     * @memberOf _
	     * @category Array
	     * @param {Array} array The array to slice.
	     * @param {number} [start=0] The start position.
	     * @param {number} [end=array.length] The end position.
	     * @returns {Array} Returns the slice of `array`.
	     */
	    function slice(array, start, end) {
	      var length = array ? array.length : 0;
	      if (!length) {
	        return [];
	      }
	      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {
	        start = 0;
	        end = length;
	      }
	      return baseSlice(array, start, end);
	    }

	    /**
	     * Uses a binary search to determine the lowest index at which `value` should
	     * be inserted into `array` in order to maintain its sort order. If an iteratee
	     * function is provided it is invoked for `value` and each element of `array`
	     * to compute their sort ranking. The iteratee is bound to `thisArg` and
	     * invoked with one argument; (value).
	     *
	     * If a property name is provided for `iteratee` the created `_.property`
	     * style callback returns the property value of the given element.
	     *
	     * If a value is also provided for `thisArg` the created `_.matchesProperty`
	     * style callback returns `true` for elements that have a matching property
	     * value, else `false`.
	     *
	     * If an object is provided for `iteratee` the created `_.matches` style
	     * callback returns `true` for elements that have the properties of the given
	     * object, else `false`.
	     *
	     * @static
	     * @memberOf _
	     * @category Array
	     * @param {Array} array The sorted array to inspect.
	     * @param {*} value The value to evaluate.
	     * @param {Function|Object|string} [iteratee=_.identity] The function invoked
	     *  per iteration.
	     * @param {*} [thisArg] The `this` binding of `iteratee`.
	     * @returns {number} Returns the index at which `value` should be inserted
	     *  into `array`.
	     * @example
	     *
	     * _.sortedIndex([30, 50], 40);
	     * // => 1
	     *
	     * _.sortedIndex([4, 4, 5, 5], 5);
	     * // => 2
	     *
	     * var dict = { 'data': { 'thirty': 30, 'forty': 40, 'fifty': 50 } };
	     *
	     * // using an iteratee function
	     * _.sortedIndex(['thirty', 'fifty'], 'forty', function(word) {
	     *   return this.data[word];
	     * }, dict);
	     * // => 1
	     *
	     * // using the `_.property` callback shorthand
	     * _.sortedIndex([{ 'x': 30 }, { 'x': 50 }], { 'x': 40 }, 'x');
	     * // => 1
	     */
	    var sortedIndex = createSortedIndex();

	    /**
	     * This method is like `_.sortedIndex` except that it returns the highest
	     * index at which `value` should be inserted into `array` in order to
	     * maintain its sort order.
	     *
	     * @static
	     * @memberOf _
	     * @category Array
	     * @param {Array} array The sorted array to inspect.
	     * @param {*} value The value to evaluate.
	     * @param {Function|Object|string} [iteratee=_.identity] The function invoked
	     *  per iteration.
	     * @param {*} [thisArg] The `this` binding of `iteratee`.
	     * @returns {number} Returns the index at which `value` should be inserted
	     *  into `array`.
	     * @example
	     *
	     * _.sortedLastIndex([4, 4, 5, 5], 5);
	     * // => 4
	     */
	    var sortedLastIndex = createSortedIndex(true);

	    /**
	     * Creates a slice of `array` with `n` elements taken from the beginning.
	     *
	     * @static
	     * @memberOf _
	     * @category Array
	     * @param {Array} array The array to query.
	     * @param {number} [n=1] The number of elements to take.
	     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.
	     * @returns {Array} Returns the slice of `array`.
	     * @example
	     *
	     * _.take([1, 2, 3]);
	     * // => [1]
	     *
	     * _.take([1, 2, 3], 2);
	     * // => [1, 2]
	     *
	     * _.take([1, 2, 3], 5);
	     * // => [1, 2, 3]
	     *
	     * _.take([1, 2, 3], 0);
	     * // => []
	     */
	    function take(array, n, guard) {
	      var length = array ? array.length : 0;
	      if (!length) {
	        return [];
	      }
	      if (guard ? isIterateeCall(array, n, guard) : n == null) {
	        n = 1;
	      }
	      return baseSlice(array, 0, n < 0 ? 0 : n);
	    }

	    /**
	     * Creates a slice of `array` with `n` elements taken from the end.
	     *
	     * @static
	     * @memberOf _
	     * @category Array
	     * @param {Array} array The array to query.
	     * @param {number} [n=1] The number of elements to take.
	     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.
	     * @returns {Array} Returns the slice of `array`.
	     * @example
	     *
	     * _.takeRight([1, 2, 3]);
	     * // => [3]
	     *
	     * _.takeRight([1, 2, 3], 2);
	     * // => [2, 3]
	     *
	     * _.takeRight([1, 2, 3], 5);
	     * // => [1, 2, 3]
	     *
	     * _.takeRight([1, 2, 3], 0);
	     * // => []
	     */
	    function takeRight(array, n, guard) {
	      var length = array ? array.length : 0;
	      if (!length) {
	        return [];
	      }
	      if (guard ? isIterateeCall(array, n, guard) : n == null) {
	        n = 1;
	      }
	      n = length - (+n || 0);
	      return baseSlice(array, n < 0 ? 0 : n);
	    }

	    /**
	     * Creates a slice of `array` with elements taken from the end. Elements are
	     * taken until `predicate` returns falsey. The predicate is bound to `thisArg`
	     * and invoked with three arguments: (value, index, array).
	     *
	     * If a property name is provided for `predicate` the created `_.property`
	     * style callback returns the property value of the given element.
	     *
	     * If a value is also provided for `thisArg` the created `_.matchesProperty`
	     * style callback returns `true` for elements that have a matching property
	     * value, else `false`.
	     *
	     * If an object is provided for `predicate` the created `_.matches` style
	     * callback returns `true` for elements that have the properties of the given
	     * object, else `false`.
	     *
	     * @static
	     * @memberOf _
	     * @category Array
	     * @param {Array} array The array to query.
	     * @param {Function|Object|string} [predicate=_.identity] The function invoked
	     *  per iteration.
	     * @param {*} [thisArg] The `this` binding of `predicate`.
	     * @returns {Array} Returns the slice of `array`.
	     * @example
	     *
	     * _.takeRightWhile([1, 2, 3], function(n) {
	     *   return n > 1;
	     * });
	     * // => [2, 3]
	     *
	     * var users = [
	     *   { 'user': 'barney',  'active': true },
	     *   { 'user': 'fred',    'active': false },
	     *   { 'user': 'pebbles', 'active': false }
	     * ];
	     *
	     * // using the `_.matches` callback shorthand
	     * _.pluck(_.takeRightWhile(users, { 'user': 'pebbles', 'active': false }), 'user');
	     * // => ['pebbles']
	     *
	     * // using the `_.matchesProperty` callback shorthand
	     * _.pluck(_.takeRightWhile(users, 'active', false), 'user');
	     * // => ['fred', 'pebbles']
	     *
	     * // using the `_.property` callback shorthand
	     * _.pluck(_.takeRightWhile(users, 'active'), 'user');
	     * // => []
	     */
	    function takeRightWhile(array, predicate, thisArg) {
	      return (array && array.length)
	        ? baseWhile(array, getCallback(predicate, thisArg, 3), false, true)
	        : [];
	    }

	    /**
	     * Creates a slice of `array` with elements taken from the beginning. Elements
	     * are taken until `predicate` returns falsey. The predicate is bound to
	     * `thisArg` and invoked with three arguments: (value, index, array).
	     *
	     * If a property name is provided for `predicate` the created `_.property`
	     * style callback returns the property value of the given element.
	     *
	     * If a value is also provided for `thisArg` the created `_.matchesProperty`
	     * style callback returns `true` for elements that have a matching property
	     * value, else `false`.
	     *
	     * If an object is provided for `predicate` the created `_.matches` style
	     * callback returns `true` for elements that have the properties of the given
	     * object, else `false`.
	     *
	     * @static
	     * @memberOf _
	     * @category Array
	     * @param {Array} array The array to query.
	     * @param {Function|Object|string} [predicate=_.identity] The function invoked
	     *  per iteration.
	     * @param {*} [thisArg] The `this` binding of `predicate`.
	     * @returns {Array} Returns the slice of `array`.
	     * @example
	     *
	     * _.takeWhile([1, 2, 3], function(n) {
	     *   return n < 3;
	     * });
	     * // => [1, 2]
	     *
	     * var users = [
	     *   { 'user': 'barney',  'active': false },
	     *   { 'user': 'fred',    'active': false},
	     *   { 'user': 'pebbles', 'active': true }
	     * ];
	     *
	     * // using the `_.matches` callback shorthand
	     * _.pluck(_.takeWhile(users, { 'user': 'barney', 'active': false }), 'user');
	     * // => ['barney']
	     *
	     * // using the `_.matchesProperty` callback shorthand
	     * _.pluck(_.takeWhile(users, 'active', false), 'user');
	     * // => ['barney', 'fred']
	     *
	     * // using the `_.property` callback shorthand
	     * _.pluck(_.takeWhile(users, 'active'), 'user');
	     * // => []
	     */
	    function takeWhile(array, predicate, thisArg) {
	      return (array && array.length)
	        ? baseWhile(array, getCallback(predicate, thisArg, 3))
	        : [];
	    }

	    /**
	     * Creates an array of unique values, in order, from all of the provided arrays
	     * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)
	     * for equality comparisons.
	     *
	     * @static
	     * @memberOf _
	     * @category Array
	     * @param {...Array} [arrays] The arrays to inspect.
	     * @returns {Array} Returns the new array of combined values.
	     * @example
	     *
	     * _.union([1, 2], [4, 2], [2, 1]);
	     * // => [1, 2, 4]
	     */
	    var union = restParam(function(arrays) {
	      return baseUniq(baseFlatten(arrays, false, true));
	    });

	    /**
	     * Creates a duplicate-free version of an array, using
	     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)
	     * for equality comparisons, in which only the first occurence of each element
	     * is kept. Providing `true` for `isSorted` performs a faster search algorithm
	     * for sorted arrays. If an iteratee function is provided it is invoked for
	     * each element in the array to generate the criterion by which uniqueness
	     * is computed. The `iteratee` is bound to `thisArg` and invoked with three
	     * arguments: (value, index, array).
	     *
	     * If a property name is provided for `iteratee` the created `_.property`
	     * style callback returns the property value of the given element.
	     *
	     * If a value is also provided for `thisArg` the created `_.matchesProperty`
	     * style callback returns `true` for elements that have a matching property
	     * value, else `false`.
	     *
	     * If an object is provided for `iteratee` the created `_.matches` style
	     * callback returns `true` for elements that have the properties of the given
	     * object, else `false`.
	     *
	     * @static
	     * @memberOf _
	     * @alias unique
	     * @category Array
	     * @param {Array} array The array to inspect.
	     * @param {boolean} [isSorted] Specify the array is sorted.
	     * @param {Function|Object|string} [iteratee] The function invoked per iteration.
	     * @param {*} [thisArg] The `this` binding of `iteratee`.
	     * @returns {Array} Returns the new duplicate-value-free array.
	     * @example
	     *
	     * _.uniq([2, 1, 2]);
	     * // => [2, 1]
	     *
	     * // using `isSorted`
	     * _.uniq([1, 1, 2], true);
	     * // => [1, 2]
	     *
	     * // using an iteratee function
	     * _.uniq([1, 2.5, 1.5, 2], function(n) {
	     *   return this.floor(n);
	     * }, Math);
	     * // => [1, 2.5]
	     *
	     * // using the `_.property` callback shorthand
	     * _.uniq([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');
	     * // => [{ 'x': 1 }, { 'x': 2 }]
	     */
	    function uniq(array, isSorted, iteratee, thisArg) {
	      var length = array ? array.length : 0;
	      if (!length) {
	        return [];
	      }
	      if (isSorted != null && typeof isSorted != 'boolean') {
	        thisArg = iteratee;
	        iteratee = isIterateeCall(array, isSorted, thisArg) ? undefined : isSorted;
	        isSorted = false;
	      }
	      var callback = getCallback();
	      if (!(iteratee == null && callback === baseCallback)) {
	        iteratee = callback(iteratee, thisArg, 3);
	      }
	      return (isSorted && getIndexOf() == baseIndexOf)
	        ? sortedUniq(array, iteratee)
	        : baseUniq(array, iteratee);
	    }

	    /**
	     * This method is like `_.zip` except that it accepts an array of grouped
	     * elements and creates an array regrouping the elements to their pre-zip
	     * configuration.
	     *
	     * @static
	     * @memberOf _
	     * @category Array
	     * @param {Array} array The array of grouped elements to process.
	     * @returns {Array} Returns the new array of regrouped elements.
	     * @example
	     *
	     * var zipped = _.zip(['fred', 'barney'], [30, 40], [true, false]);
	     * // => [['fred', 30, true], ['barney', 40, false]]
	     *
	     * _.unzip(zipped);
	     * // => [['fred', 'barney'], [30, 40], [true, false]]
	     */
	    function unzip(array) {
	      if (!(array && array.length)) {
	        return [];
	      }
	      var index = -1,
	          length = 0;

	      array = arrayFilter(array, function(group) {
	        if (isArrayLike(group)) {
	          length = nativeMax(group.length, length);
	          return true;
	        }
	      });
	      var result = Array(length);
	      while (++index < length) {
	        result[index] = arrayMap(array, baseProperty(index));
	      }
	      return result;
	    }

	    /**
	     * This method is like `_.unzip` except that it accepts an iteratee to specify
	     * how regrouped values should be combined. The `iteratee` is bound to `thisArg`
	     * and invoked with four arguments: (accumulator, value, index, group).
	     *
	     * @static
	     * @memberOf _
	     * @category Array
	     * @param {Array} array The array of grouped elements to process.
	     * @param {Function} [iteratee] The function to combine regrouped values.
	     * @param {*} [thisArg] The `this` binding of `iteratee`.
	     * @returns {Array} Returns the new array of regrouped elements.
	     * @example
	     *
	     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);
	     * // => [[1, 10, 100], [2, 20, 200]]
	     *
	     * _.unzipWith(zipped, _.add);
	     * // => [3, 30, 300]
	     */
	    function unzipWith(array, iteratee, thisArg) {
	      var length = array ? array.length : 0;
	      if (!length) {
	        return [];
	      }
	      var result = unzip(array);
	      if (iteratee == null) {
	        return result;
	      }
	      iteratee = bindCallback(iteratee, thisArg, 4);
	      return arrayMap(result, function(group) {
	        return arrayReduce(group, iteratee, undefined, true);
	      });
	    }

	    /**
	     * Creates an array excluding all provided values using
	     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)
	     * for equality comparisons.
	     *
	     * @static
	     * @memberOf _
	     * @category Array
	     * @param {Array} array The array to filter.
	     * @param {...*} [values] The values to exclude.
	     * @returns {Array} Returns the new array of filtered values.
	     * @example
	     *
	     * _.without([1, 2, 1, 3], 1, 2);
	     * // => [3]
	     */
	    var without = restParam(function(array, values) {
	      return isArrayLike(array)
	        ? baseDifference(array, values)
	        : [];
	    });

	    /**
	     * Creates an array of unique values that is the [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)
	     * of the provided arrays.
	     *
	     * @static
	     * @memberOf _
	     * @category Array
	     * @param {...Array} [arrays] The arrays to inspect.
	     * @returns {Array} Returns the new array of values.
	     * @example
	     *
	     * _.xor([1, 2], [4, 2]);
	     * // => [1, 4]
	     */
	    function xor() {
	      var index = -1,
	          length = arguments.length;

	      while (++index < length) {
	        var array = arguments[index];
	        if (isArrayLike(array)) {
	          var result = result
	            ? arrayPush(baseDifference(result, array), baseDifference(array, result))
	            : array;
	        }
	      }
	      return result ? baseUniq(result) : [];
	    }

	    /**
	     * Creates an array of grouped elements, the first of which contains the first
	     * elements of the given arrays, the second of which contains the second elements
	     * of the given arrays, and so on.
	     *
	     * @static
	     * @memberOf _
	     * @category Array
	     * @param {...Array} [arrays] The arrays to process.
	     * @returns {Array} Returns the new array of grouped elements.
	     * @example
	     *
	     * _.zip(['fred', 'barney'], [30, 40], [true, false]);
	     * // => [['fred', 30, true], ['barney', 40, false]]
	     */
	    var zip = restParam(unzip);

	    /**
	     * The inverse of `_.pairs`; this method returns an object composed from arrays
	     * of property names and values. Provide either a single two dimensional array,
	     * e.g. `[[key1, value1], [key2, value2]]` or two arrays, one of property names
	     * and one of corresponding values.
	     *
	     * @static
	     * @memberOf _
	     * @alias object
	     * @category Array
	     * @param {Array} props The property names.
	     * @param {Array} [values=[]] The property values.
	     * @returns {Object} Returns the new object.
	     * @example
	     *
	     * _.zipObject([['fred', 30], ['barney', 40]]);
	     * // => { 'fred': 30, 'barney': 40 }
	     *
	     * _.zipObject(['fred', 'barney'], [30, 40]);
	     * // => { 'fred': 30, 'barney': 40 }
	     */
	    function zipObject(props, values) {
	      var index = -1,
	          length = props ? props.length : 0,
	          result = {};

	      if (length && !values && !isArray(props[0])) {
	        values = [];
	      }
	      while (++index < length) {
	        var key = props[index];
	        if (values) {
	          result[key] = values[index];
	        } else if (key) {
	          result[key[0]] = key[1];
	        }
	      }
	      return result;
	    }

	    /**
	     * This method is like `_.zip` except that it accepts an iteratee to specify
	     * how grouped values should be combined. The `iteratee` is bound to `thisArg`
	     * and invoked with four arguments: (accumulator, value, index, group).
	     *
	     * @static
	     * @memberOf _
	     * @category Array
	     * @param {...Array} [arrays] The arrays to process.
	     * @param {Function} [iteratee] The function to combine grouped values.
	     * @param {*} [thisArg] The `this` binding of `iteratee`.
	     * @returns {Array} Returns the new array of grouped elements.
	     * @example
	     *
	     * _.zipWith([1, 2], [10, 20], [100, 200], _.add);
	     * // => [111, 222]
	     */
	    var zipWith = restParam(function(arrays) {
	      var length = arrays.length,
	          iteratee = length > 2 ? arrays[length - 2] : undefined,
	          thisArg = length > 1 ? arrays[length - 1] : undefined;

	      if (length > 2 && typeof iteratee == 'function') {
	        length -= 2;
	      } else {
	        iteratee = (length > 1 && typeof thisArg == 'function') ? (--length, thisArg) : undefined;
	        thisArg = undefined;
	      }
	      arrays.length = length;
	      return unzipWith(arrays, iteratee, thisArg);
	    });

	    /*------------------------------------------------------------------------*/

	    /**
	     * Creates a `lodash` object that wraps `value` with explicit method
	     * chaining enabled.
	     *
	     * @static
	     * @memberOf _
	     * @category Chain
	     * @param {*} value The value to wrap.
	     * @returns {Object} Returns the new `lodash` wrapper instance.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney',  'age': 36 },
	     *   { 'user': 'fred',    'age': 40 },
	     *   { 'user': 'pebbles', 'age': 1 }
	     * ];
	     *
	     * var youngest = _.chain(users)
	     *   .sortBy('age')
	     *   .map(function(chr) {
	     *     return chr.user + ' is ' + chr.age;
	     *   })
	     *   .first()
	     *   .value();
	     * // => 'pebbles is 1'
	     */
	    function chain(value) {
	      var result = lodash(value);
	      result.__chain__ = true;
	      return result;
	    }

	    /**
	     * This method invokes `interceptor` and returns `value`. The interceptor is
	     * bound to `thisArg` and invoked with one argument; (value). The purpose of
	     * this method is to "tap into" a method chain in order to perform operations
	     * on intermediate results within the chain.
	     *
	     * @static
	     * @memberOf _
	     * @category Chain
	     * @param {*} value The value to provide to `interceptor`.
	     * @param {Function} interceptor The function to invoke.
	     * @param {*} [thisArg] The `this` binding of `interceptor`.
	     * @returns {*} Returns `value`.
	     * @example
	     *
	     * _([1, 2, 3])
	     *  .tap(function(array) {
	     *    array.pop();
	     *  })
	     *  .reverse()
	     *  .value();
	     * // => [2, 1]
	     */
	    function tap(value, interceptor, thisArg) {
	      interceptor.call(thisArg, value);
	      return value;
	    }

	    /**
	     * This method is like `_.tap` except that it returns the result of `interceptor`.
	     *
	     * @static
	     * @memberOf _
	     * @category Chain
	     * @param {*} value The value to provide to `interceptor`.
	     * @param {Function} interceptor The function to invoke.
	     * @param {*} [thisArg] The `this` binding of `interceptor`.
	     * @returns {*} Returns the result of `interceptor`.
	     * @example
	     *
	     * _('  abc  ')
	     *  .chain()
	     *  .trim()
	     *  .thru(function(value) {
	     *    return [value];
	     *  })
	     *  .value();
	     * // => ['abc']
	     */
	    function thru(value, interceptor, thisArg) {
	      return interceptor.call(thisArg, value);
	    }

	    /**
	     * Enables explicit method chaining on the wrapper object.
	     *
	     * @name chain
	     * @memberOf _
	     * @category Chain
	     * @returns {Object} Returns the new `lodash` wrapper instance.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney', 'age': 36 },
	     *   { 'user': 'fred',   'age': 40 }
	     * ];
	     *
	     * // without explicit chaining
	     * _(users).first();
	     * // => { 'user': 'barney', 'age': 36 }
	     *
	     * // with explicit chaining
	     * _(users).chain()
	     *   .first()
	     *   .pick('user')
	     *   .value();
	     * // => { 'user': 'barney' }
	     */
	    function wrapperChain() {
	      return chain(this);
	    }

	    /**
	     * Executes the chained sequence and returns the wrapped result.
	     *
	     * @name commit
	     * @memberOf _
	     * @category Chain
	     * @returns {Object} Returns the new `lodash` wrapper instance.
	     * @example
	     *
	     * var array = [1, 2];
	     * var wrapped = _(array).push(3);
	     *
	     * console.log(array);
	     * // => [1, 2]
	     *
	     * wrapped = wrapped.commit();
	     * console.log(array);
	     * // => [1, 2, 3]
	     *
	     * wrapped.last();
	     * // => 3
	     *
	     * console.log(array);
	     * // => [1, 2, 3]
	     */
	    function wrapperCommit() {
	      return new LodashWrapper(this.value(), this.__chain__);
	    }

	    /**
	     * Creates a new array joining a wrapped array with any additional arrays
	     * and/or values.
	     *
	     * @name concat
	     * @memberOf _
	     * @category Chain
	     * @param {...*} [values] The values to concatenate.
	     * @returns {Array} Returns the new concatenated array.
	     * @example
	     *
	     * var array = [1];
	     * var wrapped = _(array).concat(2, [3], [[4]]);
	     *
	     * console.log(wrapped.value());
	     * // => [1, 2, 3, [4]]
	     *
	     * console.log(array);
	     * // => [1]
	     */
	    var wrapperConcat = restParam(function(values) {
	      values = baseFlatten(values);
	      return this.thru(function(array) {
	        return arrayConcat(isArray(array) ? array : [toObject(array)], values);
	      });
	    });

	    /**
	     * Creates a clone of the chained sequence planting `value` as the wrapped value.
	     *
	     * @name plant
	     * @memberOf _
	     * @category Chain
	     * @returns {Object} Returns the new `lodash` wrapper instance.
	     * @example
	     *
	     * var array = [1, 2];
	     * var wrapped = _(array).map(function(value) {
	     *   return Math.pow(value, 2);
	     * });
	     *
	     * var other = [3, 4];
	     * var otherWrapped = wrapped.plant(other);
	     *
	     * otherWrapped.value();
	     * // => [9, 16]
	     *
	     * wrapped.value();
	     * // => [1, 4]
	     */
	    function wrapperPlant(value) {
	      var result,
	          parent = this;

	      while (parent instanceof baseLodash) {
	        var clone = wrapperClone(parent);
	        if (result) {
	          previous.__wrapped__ = clone;
	        } else {
	          result = clone;
	        }
	        var previous = clone;
	        parent = parent.__wrapped__;
	      }
	      previous.__wrapped__ = value;
	      return result;
	    }

	    /**
	     * Reverses the wrapped array so the first element becomes the last, the
	     * second element becomes the second to last, and so on.
	     *
	     * **Note:** This method mutates the wrapped array.
	     *
	     * @name reverse
	     * @memberOf _
	     * @category Chain
	     * @returns {Object} Returns the new reversed `lodash` wrapper instance.
	     * @example
	     *
	     * var array = [1, 2, 3];
	     *
	     * _(array).reverse().value()
	     * // => [3, 2, 1]
	     *
	     * console.log(array);
	     * // => [3, 2, 1]
	     */
	    function wrapperReverse() {
	      var value = this.__wrapped__;

	      var interceptor = function(value) {
	        return (wrapped && wrapped.__dir__ < 0) ? value : value.reverse();
	      };
	      if (value instanceof LazyWrapper) {
	        var wrapped = value;
	        if (this.__actions__.length) {
	          wrapped = new LazyWrapper(this);
	        }
	        wrapped = wrapped.reverse();
	        wrapped.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });
	        return new LodashWrapper(wrapped, this.__chain__);
	      }
	      return this.thru(interceptor);
	    }

	    /**
	     * Produces the result of coercing the unwrapped value to a string.
	     *
	     * @name toString
	     * @memberOf _
	     * @category Chain
	     * @returns {string} Returns the coerced string value.
	     * @example
	     *
	     * _([1, 2, 3]).toString();
	     * // => '1,2,3'
	     */
	    function wrapperToString() {
	      return (this.value() + '');
	    }

	    /**
	     * Executes the chained sequence to extract the unwrapped value.
	     *
	     * @name value
	     * @memberOf _
	     * @alias run, toJSON, valueOf
	     * @category Chain
	     * @returns {*} Returns the resolved unwrapped value.
	     * @example
	     *
	     * _([1, 2, 3]).value();
	     * // => [1, 2, 3]
	     */
	    function wrapperValue() {
	      return baseWrapperValue(this.__wrapped__, this.__actions__);
	    }

	    /*------------------------------------------------------------------------*/

	    /**
	     * Creates an array of elements corresponding to the given keys, or indexes,
	     * of `collection`. Keys may be specified as individual arguments or as arrays
	     * of keys.
	     *
	     * @static
	     * @memberOf _
	     * @category Collection
	     * @param {Array|Object|string} collection The collection to iterate over.
	     * @param {...(number|number[]|string|string[])} [props] The property names
	     *  or indexes of elements to pick, specified individually or in arrays.
	     * @returns {Array} Returns the new array of picked elements.
	     * @example
	     *
	     * _.at(['a', 'b', 'c'], [0, 2]);
	     * // => ['a', 'c']
	     *
	     * _.at(['barney', 'fred', 'pebbles'], 0, 2);
	     * // => ['barney', 'pebbles']
	     */
	    var at = restParam(function(collection, props) {
	      return baseAt(collection, baseFlatten(props));
	    });

	    /**
	     * Creates an object composed of keys generated from the results of running
	     * each element of `collection` through `iteratee`. The corresponding value
	     * of each key is the number of times the key was returned by `iteratee`.
	     * The `iteratee` is bound to `thisArg` and invoked with three arguments:
	     * (value, index|key, collection).
	     *
	     * If a property name is provided for `iteratee` the created `_.property`
	     * style callback returns the property value of the given element.
	     *
	     * If a value is also provided for `thisArg` the created `_.matchesProperty`
	     * style callback returns `true` for elements that have a matching property
	     * value, else `false`.
	     *
	     * If an object is provided for `iteratee` the created `_.matches` style
	     * callback returns `true` for elements that have the properties of the given
	     * object, else `false`.
	     *
	     * @static
	     * @memberOf _
	     * @category Collection
	     * @param {Array|Object|string} collection The collection to iterate over.
	     * @param {Function|Object|string} [iteratee=_.identity] The function invoked
	     *  per iteration.
	     * @param {*} [thisArg] The `this` binding of `iteratee`.
	     * @returns {Object} Returns the composed aggregate object.
	     * @example
	     *
	     * _.countBy([4.3, 6.1, 6.4], function(n) {
	     *   return Math.floor(n);
	     * });
	     * // => { '4': 1, '6': 2 }
	     *
	     * _.countBy([4.3, 6.1, 6.4], function(n) {
	     *   return this.floor(n);
	     * }, Math);
	     * // => { '4': 1, '6': 2 }
	     *
	     * _.countBy(['one', 'two', 'three'], 'length');
	     * // => { '3': 2, '5': 1 }
	     */
	    var countBy = createAggregator(function(result, value, key) {
	      hasOwnProperty.call(result, key) ? ++result[key] : (result[key] = 1);
	    });

	    /**
	     * Checks if `predicate` returns truthy for **all** elements of `collection`.
	     * The predicate is bound to `thisArg` and invoked with three arguments:
	     * (value, index|key, collection).
	     *
	     * If a property name is provided for `predicate` the created `_.property`
	     * style callback returns the property value of the given element.
	     *
	     * If a value is also provided for `thisArg` the created `_.matchesProperty`
	     * style callback returns `true` for elements that have a matching property
	     * value, else `false`.
	     *
	     * If an object is provided for `predicate` the created `_.matches` style
	     * callback returns `true` for elements that have the properties of the given
	     * object, else `false`.
	     *
	     * @static
	     * @memberOf _
	     * @alias all
	     * @category Collection
	     * @param {Array|Object|string} collection The collection to iterate over.
	     * @param {Function|Object|string} [predicate=_.identity] The function invoked
	     *  per iteration.
	     * @param {*} [thisArg] The `this` binding of `predicate`.
	     * @returns {boolean} Returns `true` if all elements pass the predicate check,
	     *  else `false`.
	     * @example
	     *
	     * _.every([true, 1, null, 'yes'], Boolean);
	     * // => false
	     *
	     * var users = [
	     *   { 'user': 'barney', 'active': false },
	     *   { 'user': 'fred',   'active': false }
	     * ];
	     *
	     * // using the `_.matches` callback shorthand
	     * _.every(users, { 'user': 'barney', 'active': false });
	     * // => false
	     *
	     * // using the `_.matchesProperty` callback shorthand
	     * _.every(users, 'active', false);
	     * // => true
	     *
	     * // using the `_.property` callback shorthand
	     * _.every(users, 'active');
	     * // => false
	     */
	    function every(collection, predicate, thisArg) {
	      var func = isArray(collection) ? arrayEvery : baseEvery;
	      if (thisArg && isIterateeCall(collection, predicate, thisArg)) {
	        predicate = undefined;
	      }
	      if (typeof predicate != 'function' || thisArg !== undefined) {
	        predicate = getCallback(predicate, thisArg, 3);
	      }
	      return func(collection, predicate);
	    }

	    /**
	     * Iterates over elements of `collection`, returning an array of all elements
	     * `predicate` returns truthy for. The predicate is bound to `thisArg` and
	     * invoked with three arguments: (value, index|key, collection).
	     *
	     * If a property name is provided for `predicate` the created `_.property`
	     * style callback returns the property value of the given element.
	     *
	     * If a value is also provided for `thisArg` the created `_.matchesProperty`
	     * style callback returns `true` for elements that have a matching property
	     * value, else `false`.
	     *
	     * If an object is provided for `predicate` the created `_.matches` style
	     * callback returns `true` for elements that have the properties of the given
	     * object, else `false`.
	     *
	     * @static
	     * @memberOf _
	     * @alias select
	     * @category Collection
	     * @param {Array|Object|string} collection The collection to iterate over.
	     * @param {Function|Object|string} [predicate=_.identity] The function invoked
	     *  per iteration.
	     * @param {*} [thisArg] The `this` binding of `predicate`.
	     * @returns {Array} Returns the new filtered array.
	     * @example
	     *
	     * _.filter([4, 5, 6], function(n) {
	     *   return n % 2 == 0;
	     * });
	     * // => [4, 6]
	     *
	     * var users = [
	     *   { 'user': 'barney', 'age': 36, 'active': true },
	     *   { 'user': 'fred',   'age': 40, 'active': false }
	     * ];
	     *
	     * // using the `_.matches` callback shorthand
	     * _.pluck(_.filter(users, { 'age': 36, 'active': true }), 'user');
	     * // => ['barney']
	     *
	     * // using the `_.matchesProperty` callback shorthand
	     * _.pluck(_.filter(users, 'active', false), 'user');
	     * // => ['fred']
	     *
	     * // using the `_.property` callback shorthand
	     * _.pluck(_.filter(users, 'active'), 'user');
	     * // => ['barney']
	     */
	    function filter(collection, predicate, thisArg) {
	      var func = isArray(collection) ? arrayFilter : baseFilter;
	      predicate = getCallback(predicate, thisArg, 3);
	      return func(collection, predicate);
	    }

	    /**
	     * Iterates over elements of `collection`, returning the first element
	     * `predicate` returns truthy for. The predicate is bound to `thisArg` and
	     * invoked with three arguments: (value, index|key, collection).
	     *
	     * If a property name is provided for `predicate` the created `_.property`
	     * style callback returns the property value of the given element.
	     *
	     * If a value is also provided for `thisArg` the created `_.matchesProperty`
	     * style callback returns `true` for elements that have a matching property
	     * value, else `false`.
	     *
	     * If an object is provided for `predicate` the created `_.matches` style
	     * callback returns `true` for elements that have the properties of the given
	     * object, else `false`.
	     *
	     * @static
	     * @memberOf _
	     * @alias detect
	     * @category Collection
	     * @param {Array|Object|string} collection The collection to search.
	     * @param {Function|Object|string} [predicate=_.identity] The function invoked
	     *  per iteration.
	     * @param {*} [thisArg] The `this` binding of `predicate`.
	     * @returns {*} Returns the matched element, else `undefined`.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney',  'age': 36, 'active': true },
	     *   { 'user': 'fred',    'age': 40, 'active': false },
	     *   { 'user': 'pebbles', 'age': 1,  'active': true }
	     * ];
	     *
	     * _.result(_.find(users, function(chr) {
	     *   return chr.age < 40;
	     * }), 'user');
	     * // => 'barney'
	     *
	     * // using the `_.matches` callback shorthand
	     * _.result(_.find(users, { 'age': 1, 'active': true }), 'user');
	     * // => 'pebbles'
	     *
	     * // using the `_.matchesProperty` callback shorthand
	     * _.result(_.find(users, 'active', false), 'user');
	     * // => 'fred'
	     *
	     * // using the `_.property` callback shorthand
	     * _.result(_.find(users, 'active'), 'user');
	     * // => 'barney'
	     */
	    var find = createFind(baseEach);

	    /**
	     * This method is like `_.find` except that it iterates over elements of
	     * `collection` from right to left.
	     *
	     * @static
	     * @memberOf _
	     * @category Collection
	     * @param {Array|Object|string} collection The collection to search.
	     * @param {Function|Object|string} [predicate=_.identity] The function invoked
	     *  per iteration.
	     * @param {*} [thisArg] The `this` binding of `predicate`.
	     * @returns {*} Returns the matched element, else `undefined`.
	     * @example
	     *
	     * _.findLast([1, 2, 3, 4], function(n) {
	     *   return n % 2 == 1;
	     * });
	     * // => 3
	     */
	    var findLast = createFind(baseEachRight, true);

	    /**
	     * Performs a deep comparison between each element in `collection` and the
	     * source object, returning the first element that has equivalent property
	     * values.
	     *
	     * **Note:** This method supports comparing arrays, booleans, `Date` objects,
	     * numbers, `Object` objects, regexes, and strings. Objects are compared by
	     * their own, not inherited, enumerable properties. For comparing a single
	     * own or inherited property value see `_.matchesProperty`.
	     *
	     * @static
	     * @memberOf _
	     * @category Collection
	     * @param {Array|Object|string} collection The collection to search.
	     * @param {Object} source The object of property values to match.
	     * @returns {*} Returns the matched element, else `undefined`.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney', 'age': 36, 'active': true },
	     *   { 'user': 'fred',   'age': 40, 'active': false }
	     * ];
	     *
	     * _.result(_.findWhere(users, { 'age': 36, 'active': true }), 'user');
	     * // => 'barney'
	     *
	     * _.result(_.findWhere(users, { 'age': 40, 'active': false }), 'user');
	     * // => 'fred'
	     */
	    function findWhere(collection, source) {
	      return find(collection, baseMatches(source));
	    }

	    /**
	     * Iterates over elements of `collection` invoking `iteratee` for each element.
	     * The `iteratee` is bound to `thisArg` and invoked with three arguments:
	     * (value, index|key, collection). Iteratee functions may exit iteration early
	     * by explicitly returning `false`.
	     *
	     * **Note:** As with other "Collections" methods, objects with a "length" property
	     * are iterated like arrays. To avoid this behavior `_.forIn` or `_.forOwn`
	     * may be used for object iteration.
	     *
	     * @static
	     * @memberOf _
	     * @alias each
	     * @category Collection
	     * @param {Array|Object|string} collection The collection to iterate over.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @param {*} [thisArg] The `this` binding of `iteratee`.
	     * @returns {Array|Object|string} Returns `collection`.
	     * @example
	     *
	     * _([1, 2]).forEach(function(n) {
	     *   console.log(n);
	     * }).value();
	     * // => logs each value from left to right and returns the array
	     *
	     * _.forEach({ 'a': 1, 'b': 2 }, function(n, key) {
	     *   console.log(n, key);
	     * });
	     * // => logs each value-key pair and returns the object (iteration order is not guaranteed)
	     */
	    var forEach = createForEach(arrayEach, baseEach);

	    /**
	     * This method is like `_.forEach` except that it iterates over elements of
	     * `collection` from right to left.
	     *
	     * @static
	     * @memberOf _
	     * @alias eachRight
	     * @category Collection
	     * @param {Array|Object|string} collection The collection to iterate over.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @param {*} [thisArg] The `this` binding of `iteratee`.
	     * @returns {Array|Object|string} Returns `collection`.
	     * @example
	     *
	     * _([1, 2]).forEachRight(function(n) {
	     *   console.log(n);
	     * }).value();
	     * // => logs each value from right to left and returns the array
	     */
	    var forEachRight = createForEach(arrayEachRight, baseEachRight);

	    /**
	     * Creates an object composed of keys generated from the results of running
	     * each element of `collection` through `iteratee`. The corresponding value
	     * of each key is an array of the elements responsible for generating the key.
	     * The `iteratee` is bound to `thisArg` and invoked with three arguments:
	     * (value, index|key, collection).
	     *
	     * If a property name is provided for `iteratee` the created `_.property`
	     * style callback returns the property value of the given element.
	     *
	     * If a value is also provided for `thisArg` the created `_.matchesProperty`
	     * style callback returns `true` for elements that have a matching property
	     * value, else `false`.
	     *
	     * If an object is provided for `iteratee` the created `_.matches` style
	     * callback returns `true` for elements that have the properties of the given
	     * object, else `false`.
	     *
	     * @static
	     * @memberOf _
	     * @category Collection
	     * @param {Array|Object|string} collection The collection to iterate over.
	     * @param {Function|Object|string} [iteratee=_.identity] The function invoked
	     *  per iteration.
	     * @param {*} [thisArg] The `this` binding of `iteratee`.
	     * @returns {Object} Returns the composed aggregate object.
	     * @example
	     *
	     * _.groupBy([4.2, 6.1, 6.4], function(n) {
	     *   return Math.floor(n);
	     * });
	     * // => { '4': [4.2], '6': [6.1, 6.4] }
	     *
	     * _.groupBy([4.2, 6.1, 6.4], function(n) {
	     *   return this.floor(n);
	     * }, Math);
	     * // => { '4': [4.2], '6': [6.1, 6.4] }
	     *
	     * // using the `_.property` callback shorthand
	     * _.groupBy(['one', 'two', 'three'], 'length');
	     * // => { '3': ['one', 'two'], '5': ['three'] }
	     */
	    var groupBy = createAggregator(function(result, value, key) {
	      if (hasOwnProperty.call(result, key)) {
	        result[key].push(value);
	      } else {
	        result[key] = [value];
	      }
	    });

	    /**
	     * Checks if `value` is in `collection` using
	     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)
	     * for equality comparisons. If `fromIndex` is negative, it is used as the offset
	     * from the end of `collection`.
	     *
	     * @static
	     * @memberOf _
	     * @alias contains, include
	     * @category Collection
	     * @param {Array|Object|string} collection The collection to search.
	     * @param {*} target The value to search for.
	     * @param {number} [fromIndex=0] The index to search from.
	     * @param- {Object} [guard] Enables use as a callback for functions like `_.reduce`.
	     * @returns {boolean} Returns `true` if a matching element is found, else `false`.
	     * @example
	     *
	     * _.includes([1, 2, 3], 1);
	     * // => true
	     *
	     * _.includes([1, 2, 3], 1, 2);
	     * // => false
	     *
	     * _.includes({ 'user': 'fred', 'age': 40 }, 'fred');
	     * // => true
	     *
	     * _.includes('pebbles', 'eb');
	     * // => true
	     */
	    function includes(collection, target, fromIndex, guard) {
	      var length = collection ? getLength(collection) : 0;
	      if (!isLength(length)) {
	        collection = values(collection);
	        length = collection.length;
	      }
	      if (typeof fromIndex != 'number' || (guard && isIterateeCall(target, fromIndex, guard))) {
	        fromIndex = 0;
	      } else {
	        fromIndex = fromIndex < 0 ? nativeMax(length + fromIndex, 0) : (fromIndex || 0);
	      }
	      return (typeof collection == 'string' || !isArray(collection) && isString(collection))
	        ? (fromIndex <= length && collection.indexOf(target, fromIndex) > -1)
	        : (!!length && getIndexOf(collection, target, fromIndex) > -1);
	    }

	    /**
	     * Creates an object composed of keys generated from the results of running
	     * each element of `collection` through `iteratee`. The corresponding value
	     * of each key is the last element responsible for generating the key. The
	     * iteratee function is bound to `thisArg` and invoked with three arguments:
	     * (value, index|key, collection).
	     *
	     * If a property name is provided for `iteratee` the created `_.property`
	     * style callback returns the property value of the given element.
	     *
	     * If a value is also provided for `thisArg` the created `_.matchesProperty`
	     * style callback returns `true` for elements that have a matching property
	     * value, else `false`.
	     *
	     * If an object is provided for `iteratee` the created `_.matches` style
	     * callback returns `true` for elements that have the properties of the given
	     * object, else `false`.
	     *
	     * @static
	     * @memberOf _
	     * @category Collection
	     * @param {Array|Object|string} collection The collection to iterate over.
	     * @param {Function|Object|string} [iteratee=_.identity] The function invoked
	     *  per iteration.
	     * @param {*} [thisArg] The `this` binding of `iteratee`.
	     * @returns {Object} Returns the composed aggregate object.
	     * @example
	     *
	     * var keyData = [
	     *   { 'dir': 'left', 'code': 97 },
	     *   { 'dir': 'right', 'code': 100 }
	     * ];
	     *
	     * _.indexBy(keyData, 'dir');
	     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }
	     *
	     * _.indexBy(keyData, function(object) {
	     *   return String.fromCharCode(object.code);
	     * });
	     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }
	     *
	     * _.indexBy(keyData, function(object) {
	     *   return this.fromCharCode(object.code);
	     * }, String);
	     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }
	     */
	    var indexBy = createAggregator(function(result, value, key) {
	      result[key] = value;
	    });

	    /**
	     * Invokes the method at `path` of each element in `collection`, returning
	     * an array of the results of each invoked method. Any additional arguments
	     * are provided to each invoked method. If `methodName` is a function it is
	     * invoked for, and `this` bound to, each element in `collection`.
	     *
	     * @static
	     * @memberOf _
	     * @category Collection
	     * @param {Array|Object|string} collection The collection to iterate over.
	     * @param {Array|Function|string} path The path of the method to invoke or
	     *  the function invoked per iteration.
	     * @param {...*} [args] The arguments to invoke the method with.
	     * @returns {Array} Returns the array of results.
	     * @example
	     *
	     * _.invoke([[5, 1, 7], [3, 2, 1]], 'sort');
	     * // => [[1, 5, 7], [1, 2, 3]]
	     *
	     * _.invoke([123, 456], String.prototype.split, '');
	     * // => [['1', '2', '3'], ['4', '5', '6']]
	     */
	    var invoke = restParam(function(collection, path, args) {
	      var index = -1,
	          isFunc = typeof path == 'function',
	          isProp = isKey(path),
	          result = isArrayLike(collection) ? Array(collection.length) : [];

	      baseEach(collection, function(value) {
	        var func = isFunc ? path : ((isProp && value != null) ? value[path] : undefined);
	        result[++index] = func ? func.apply(value, args) : invokePath(value, path, args);
	      });
	      return result;
	    });

	    /**
	     * Creates an array of values by running each element in `collection` through
	     * `iteratee`. The `iteratee` is bound to `thisArg` and invoked with three
	     * arguments: (value, index|key, collection).
	     *
	     * If a property name is provided for `iteratee` the created `_.property`
	     * style callback returns the property value of the given element.
	     *
	     * If a value is also provided for `thisArg` the created `_.matchesProperty`
	     * style callback returns `true` for elements that have a matching property
	     * value, else `false`.
	     *
	     * If an object is provided for `iteratee` the created `_.matches` style
	     * callback returns `true` for elements that have the properties of the given
	     * object, else `false`.
	     *
	     * Many lodash methods are guarded to work as iteratees for methods like
	     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.
	     *
	     * The guarded methods are:
	     * `ary`, `callback`, `chunk`, `clone`, `create`, `curry`, `curryRight`,
	     * `drop`, `dropRight`, `every`, `fill`, `flatten`, `invert`, `max`, `min`,
	     * `parseInt`, `slice`, `sortBy`, `take`, `takeRight`, `template`, `trim`,
	     * `trimLeft`, `trimRight`, `trunc`, `random`, `range`, `sample`, `some`,
	     * `sum`, `uniq`, and `words`
	     *
	     * @static
	     * @memberOf _
	     * @alias collect
	     * @category Collection
	     * @param {Array|Object|string} collection The collection to iterate over.
	     * @param {Function|Object|string} [iteratee=_.identity] The function invoked
	     *  per iteration.
	     * @param {*} [thisArg] The `this` binding of `iteratee`.
	     * @returns {Array} Returns the new mapped array.
	     * @example
	     *
	     * function timesThree(n) {
	     *   return n * 3;
	     * }
	     *
	     * _.map([1, 2], timesThree);
	     * // => [3, 6]
	     *
	     * _.map({ 'a': 1, 'b': 2 }, timesThree);
	     * // => [3, 6] (iteration order is not guaranteed)
	     *
	     * var users = [
	     *   { 'user': 'barney' },
	     *   { 'user': 'fred' }
	     * ];
	     *
	     * // using the `_.property` callback shorthand
	     * _.map(users, 'user');
	     * // => ['barney', 'fred']
	     */
	    function map(collection, iteratee, thisArg) {
	      var func = isArray(collection) ? arrayMap : baseMap;
	      iteratee = getCallback(iteratee, thisArg, 3);
	      return func(collection, iteratee);
	    }

	    /**
	     * Creates an array of elements split into two groups, the first of which
	     * contains elements `predicate` returns truthy for, while the second of which
	     * contains elements `predicate` returns falsey for. The predicate is bound
	     * to `thisArg` and invoked with three arguments: (value, index|key, collection).
	     *
	     * If a property name is provided for `predicate` the created `_.property`
	     * style callback returns the property value of the given element.
	     *
	     * If a value is also provided for `thisArg` the created `_.matchesProperty`
	     * style callback returns `true` for elements that have a matching property
	     * value, else `false`.
	     *
	     * If an object is provided for `predicate` the created `_.matches` style
	     * callback returns `true` for elements that have the properties of the given
	     * object, else `false`.
	     *
	     * @static
	     * @memberOf _
	     * @category Collection
	     * @param {Array|Object|string} collection The collection to iterate over.
	     * @param {Function|Object|string} [predicate=_.identity] The function invoked
	     *  per iteration.
	     * @param {*} [thisArg] The `this` binding of `predicate`.
	     * @returns {Array} Returns the array of grouped elements.
	     * @example
	     *
	     * _.partition([1, 2, 3], function(n) {
	     *   return n % 2;
	     * });
	     * // => [[1, 3], [2]]
	     *
	     * _.partition([1.2, 2.3, 3.4], function(n) {
	     *   return this.floor(n) % 2;
	     * }, Math);
	     * // => [[1.2, 3.4], [2.3]]
	     *
	     * var users = [
	     *   { 'user': 'barney',  'age': 36, 'active': false },
	     *   { 'user': 'fred',    'age': 40, 'active': true },
	     *   { 'user': 'pebbles', 'age': 1,  'active': false }
	     * ];
	     *
	     * var mapper = function(array) {
	     *   return _.pluck(array, 'user');
	     * };
	     *
	     * // using the `_.matches` callback shorthand
	     * _.map(_.partition(users, { 'age': 1, 'active': false }), mapper);
	     * // => [['pebbles'], ['barney', 'fred']]
	     *
	     * // using the `_.matchesProperty` callback shorthand
	     * _.map(_.partition(users, 'active', false), mapper);
	     * // => [['barney', 'pebbles'], ['fred']]
	     *
	     * // using the `_.property` callback shorthand
	     * _.map(_.partition(users, 'active'), mapper);
	     * // => [['fred'], ['barney', 'pebbles']]
	     */
	    var partition = createAggregator(function(result, value, key) {
	      result[key ? 0 : 1].push(value);
	    }, function() { return [[], []]; });

	    /**
	     * Gets the property value of `path` from all elements in `collection`.
	     *
	     * @static
	     * @memberOf _
	     * @category Collection
	     * @param {Array|Object|string} collection The collection to iterate over.
	     * @param {Array|string} path The path of the property to pluck.
	     * @returns {Array} Returns the property values.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney', 'age': 36 },
	     *   { 'user': 'fred',   'age': 40 }
	     * ];
	     *
	     * _.pluck(users, 'user');
	     * // => ['barney', 'fred']
	     *
	     * var userIndex = _.indexBy(users, 'user');
	     * _.pluck(userIndex, 'age');
	     * // => [36, 40] (iteration order is not guaranteed)
	     */
	    function pluck(collection, path) {
	      return map(collection, property(path));
	    }

	    /**
	     * Reduces `collection` to a value which is the accumulated result of running
	     * each element in `collection` through `iteratee`, where each successive
	     * invocation is supplied the return value of the previous. If `accumulator`
	     * is not provided the first element of `collection` is used as the initial
	     * value. The `iteratee` is bound to `thisArg` and invoked with four arguments:
	     * (accumulator, value, index|key, collection).
	     *
	     * Many lodash methods are guarded to work as iteratees for methods like
	     * `_.reduce`, `_.reduceRight`, and `_.transform`.
	     *
	     * The guarded methods are:
	     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `sortByAll`,
	     * and `sortByOrder`
	     *
	     * @static
	     * @memberOf _
	     * @alias foldl, inject
	     * @category Collection
	     * @param {Array|Object|string} collection The collection to iterate over.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @param {*} [accumulator] The initial value.
	     * @param {*} [thisArg] The `this` binding of `iteratee`.
	     * @returns {*} Returns the accumulated value.
	     * @example
	     *
	     * _.reduce([1, 2], function(total, n) {
	     *   return total + n;
	     * });
	     * // => 3
	     *
	     * _.reduce({ 'a': 1, 'b': 2 }, function(result, n, key) {
	     *   result[key] = n * 3;
	     *   return result;
	     * }, {});
	     * // => { 'a': 3, 'b': 6 } (iteration order is not guaranteed)
	     */
	    var reduce = createReduce(arrayReduce, baseEach);

	    /**
	     * This method is like `_.reduce` except that it iterates over elements of
	     * `collection` from right to left.
	     *
	     * @static
	     * @memberOf _
	     * @alias foldr
	     * @category Collection
	     * @param {Array|Object|string} collection The collection to iterate over.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @param {*} [accumulator] The initial value.
	     * @param {*} [thisArg] The `this` binding of `iteratee`.
	     * @returns {*} Returns the accumulated value.
	     * @example
	     *
	     * var array = [[0, 1], [2, 3], [4, 5]];
	     *
	     * _.reduceRight(array, function(flattened, other) {
	     *   return flattened.concat(other);
	     * }, []);
	     * // => [4, 5, 2, 3, 0, 1]
	     */
	    var reduceRight = createReduce(arrayReduceRight, baseEachRight);

	    /**
	     * The opposite of `_.filter`; this method returns the elements of `collection`
	     * that `predicate` does **not** return truthy for.
	     *
	     * @static
	     * @memberOf _
	     * @category Collection
	     * @param {Array|Object|string} collection The collection to iterate over.
	     * @param {Function|Object|string} [predicate=_.identity] The function invoked
	     *  per iteration.
	     * @param {*} [thisArg] The `this` binding of `predicate`.
	     * @returns {Array} Returns the new filtered array.
	     * @example
	     *
	     * _.reject([1, 2, 3, 4], function(n) {
	     *   return n % 2 == 0;
	     * });
	     * // => [1, 3]
	     *
	     * var users = [
	     *   { 'user': 'barney', 'age': 36, 'active': false },
	     *   { 'user': 'fred',   'age': 40, 'active': true }
	     * ];
	     *
	     * // using the `_.matches` callback shorthand
	     * _.pluck(_.reject(users, { 'age': 40, 'active': true }), 'user');
	     * // => ['barney']
	     *
	     * // using the `_.matchesProperty` callback shorthand
	     * _.pluck(_.reject(users, 'active', false), 'user');
	     * // => ['fred']
	     *
	     * // using the `_.property` callback shorthand
	     * _.pluck(_.reject(users, 'active'), 'user');
	     * // => ['barney']
	     */
	    function reject(collection, predicate, thisArg) {
	      var func = isArray(collection) ? arrayFilter : baseFilter;
	      predicate = getCallback(predicate, thisArg, 3);
	      return func(collection, function(value, index, collection) {
	        return !predicate(value, index, collection);
	      });
	    }

	    /**
	     * Gets a random element or `n` random elements from a collection.
	     *
	     * @static
	     * @memberOf _
	     * @category Collection
	     * @param {Array|Object|string} collection The collection to sample.
	     * @param {number} [n] The number of elements to sample.
	     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.
	     * @returns {*} Returns the random sample(s).
	     * @example
	     *
	     * _.sample([1, 2, 3, 4]);
	     * // => 2
	     *
	     * _.sample([1, 2, 3, 4], 2);
	     * // => [3, 1]
	     */
	    function sample(collection, n, guard) {
	      if (guard ? isIterateeCall(collection, n, guard) : n == null) {
	        collection = toIterable(collection);
	        var length = collection.length;
	        return length > 0 ? collection[baseRandom(0, length - 1)] : undefined;
	      }
	      var index = -1,
	          result = toArray(collection),
	          length = result.length,
	          lastIndex = length - 1;

	      n = nativeMin(n < 0 ? 0 : (+n || 0), length);
	      while (++index < n) {
	        var rand = baseRandom(index, lastIndex),
	            value = result[rand];

	        result[rand] = result[index];
	        result[index] = value;
	      }
	      result.length = n;
	      return result;
	    }

	    /**
	     * Creates an array of shuffled values, using a version of the
	     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).
	     *
	     * @static
	     * @memberOf _
	     * @category Collection
	     * @param {Array|Object|string} collection The collection to shuffle.
	     * @returns {Array} Returns the new shuffled array.
	     * @example
	     *
	     * _.shuffle([1, 2, 3, 4]);
	     * // => [4, 1, 3, 2]
	     */
	    function shuffle(collection) {
	      return sample(collection, POSITIVE_INFINITY);
	    }

	    /**
	     * Gets the size of `collection` by returning its length for array-like
	     * values or the number of own enumerable properties for objects.
	     *
	     * @static
	     * @memberOf _
	     * @category Collection
	     * @param {Array|Object|string} collection The collection to inspect.
	     * @returns {number} Returns the size of `collection`.
	     * @example
	     *
	     * _.size([1, 2, 3]);
	     * // => 3
	     *
	     * _.size({ 'a': 1, 'b': 2 });
	     * // => 2
	     *
	     * _.size('pebbles');
	     * // => 7
	     */
	    function size(collection) {
	      var length = collection ? getLength(collection) : 0;
	      return isLength(length) ? length : keys(collection).length;
	    }

	    /**
	     * Checks if `predicate` returns truthy for **any** element of `collection`.
	     * The function returns as soon as it finds a passing value and does not iterate
	     * over the entire collection. The predicate is bound to `thisArg` and invoked
	     * with three arguments: (value, index|key, collection).
	     *
	     * If a property name is provided for `predicate` the created `_.property`
	     * style callback returns the property value of the given element.
	     *
	     * If a value is also provided for `thisArg` the created `_.matchesProperty`
	     * style callback returns `true` for elements that have a matching property
	     * value, else `false`.
	     *
	     * If an object is provided for `predicate` the created `_.matches` style
	     * callback returns `true` for elements that have the properties of the given
	     * object, else `false`.
	     *
	     * @static
	     * @memberOf _
	     * @alias any
	     * @category Collection
	     * @param {Array|Object|string} collection The collection to iterate over.
	     * @param {Function|Object|string} [predicate=_.identity] The function invoked
	     *  per iteration.
	     * @param {*} [thisArg] The `this` binding of `predicate`.
	     * @returns {boolean} Returns `true` if any element passes the predicate check,
	     *  else `false`.
	     * @example
	     *
	     * _.some([null, 0, 'yes', false], Boolean);
	     * // => true
	     *
	     * var users = [
	     *   { 'user': 'barney', 'active': true },
	     *   { 'user': 'fred',   'active': false }
	     * ];
	     *
	     * // using the `_.matches` callback shorthand
	     * _.some(users, { 'user': 'barney', 'active': false });
	     * // => false
	     *
	     * // using the `_.matchesProperty` callback shorthand
	     * _.some(users, 'active', false);
	     * // => true
	     *
	     * // using the `_.property` callback shorthand
	     * _.some(users, 'active');
	     * // => true
	     */
	    function some(collection, predicate, thisArg) {
	      var func = isArray(collection) ? arraySome : baseSome;
	      if (thisArg && isIterateeCall(collection, predicate, thisArg)) {
	        predicate = undefined;
	      }
	      if (typeof predicate != 'function' || thisArg !== undefined) {
	        predicate = getCallback(predicate, thisArg, 3);
	      }
	      return func(collection, predicate);
	    }

	    /**
	     * Creates an array of elements, sorted in ascending order by the results of
	     * running each element in a collection through `iteratee`. This method performs
	     * a stable sort, that is, it preserves the original sort order of equal elements.
	     * The `iteratee` is bound to `thisArg` and invoked with three arguments:
	     * (value, index|key, collection).
	     *
	     * If a property name is provided for `iteratee` the created `_.property`
	     * style callback returns the property value of the given element.
	     *
	     * If a value is also provided for `thisArg` the created `_.matchesProperty`
	     * style callback returns `true` for elements that have a matching property
	     * value, else `false`.
	     *
	     * If an object is provided for `iteratee` the created `_.matches` style
	     * callback returns `true` for elements that have the properties of the given
	     * object, else `false`.
	     *
	     * @static
	     * @memberOf _
	     * @category Collection
	     * @param {Array|Object|string} collection The collection to iterate over.
	     * @param {Function|Object|string} [iteratee=_.identity] The function invoked
	     *  per iteration.
	     * @param {*} [thisArg] The `this` binding of `iteratee`.
	     * @returns {Array} Returns the new sorted array.
	     * @example
	     *
	     * _.sortBy([1, 2, 3], function(n) {
	     *   return Math.sin(n);
	     * });
	     * // => [3, 1, 2]
	     *
	     * _.sortBy([1, 2, 3], function(n) {
	     *   return this.sin(n);
	     * }, Math);
	     * // => [3, 1, 2]
	     *
	     * var users = [
	     *   { 'user': 'fred' },
	     *   { 'user': 'pebbles' },
	     *   { 'user': 'barney' }
	     * ];
	     *
	     * // using the `_.property` callback shorthand
	     * _.pluck(_.sortBy(users, 'user'), 'user');
	     * // => ['barney', 'fred', 'pebbles']
	     */
	    function sortBy(collection, iteratee, thisArg) {
	      if (collection == null) {
	        return [];
	      }
	      if (thisArg && isIterateeCall(collection, iteratee, thisArg)) {
	        iteratee = undefined;
	      }
	      var index = -1;
	      iteratee = getCallback(iteratee, thisArg, 3);

	      var result = baseMap(collection, function(value, key, collection) {
	        return { 'criteria': iteratee(value, key, collection), 'index': ++index, 'value': value };
	      });
	      return baseSortBy(result, compareAscending);
	    }

	    /**
	     * This method is like `_.sortBy` except that it can sort by multiple iteratees
	     * or property names.
	     *
	     * If a property name is provided for an iteratee the created `_.property`
	     * style callback returns the property value of the given element.
	     *
	     * If an object is provided for an iteratee the created `_.matches` style
	     * callback returns `true` for elements that have the properties of the given
	     * object, else `false`.
	     *
	     * @static
	     * @memberOf _
	     * @category Collection
	     * @param {Array|Object|string} collection The collection to iterate over.
	     * @param {...(Function|Function[]|Object|Object[]|string|string[])} iteratees
	     *  The iteratees to sort by, specified as individual values or arrays of values.
	     * @returns {Array} Returns the new sorted array.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'fred',   'age': 48 },
	     *   { 'user': 'barney', 'age': 36 },
	     *   { 'user': 'fred',   'age': 42 },
	     *   { 'user': 'barney', 'age': 34 }
	     * ];
	     *
	     * _.map(_.sortByAll(users, ['user', 'age']), _.values);
	     * // => [['barney', 34], ['barney', 36], ['fred', 42], ['fred', 48]]
	     *
	     * _.map(_.sortByAll(users, 'user', function(chr) {
	     *   return Math.floor(chr.age / 10);
	     * }), _.values);
	     * // => [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 42]]
	     */
	    var sortByAll = restParam(function(collection, iteratees) {
	      if (collection == null) {
	        return [];
	      }
	      var guard = iteratees[2];
	      if (guard && isIterateeCall(iteratees[0], iteratees[1], guard)) {
	        iteratees.length = 1;
	      }
	      return baseSortByOrder(collection, baseFlatten(iteratees), []);
	    });

	    /**
	     * This method is like `_.sortByAll` except that it allows specifying the
	     * sort orders of the iteratees to sort by. If `orders` is unspecified, all
	     * values are sorted in ascending order. Otherwise, a value is sorted in
	     * ascending order if its corresponding order is "asc", and descending if "desc".
	     *
	     * If a property name is provided for an iteratee the created `_.property`
	     * style callback returns the property value of the given element.
	     *
	     * If an object is provided for an iteratee the created `_.matches` style
	     * callback returns `true` for elements that have the properties of the given
	     * object, else `false`.
	     *
	     * @static
	     * @memberOf _
	     * @category Collection
	     * @param {Array|Object|string} collection The collection to iterate over.
	     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.
	     * @param {boolean[]} [orders] The sort orders of `iteratees`.
	     * @param- {Object} [guard] Enables use as a callback for functions like `_.reduce`.
	     * @returns {Array} Returns the new sorted array.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'fred',   'age': 48 },
	     *   { 'user': 'barney', 'age': 34 },
	     *   { 'user': 'fred',   'age': 42 },
	     *   { 'user': 'barney', 'age': 36 }
	     * ];
	     *
	     * // sort by `user` in ascending order and by `age` in descending order
	     * _.map(_.sortByOrder(users, ['user', 'age'], ['asc', 'desc']), _.values);
	     * // => [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 42]]
	     */
	    function sortByOrder(collection, iteratees, orders, guard) {
	      if (collection == null) {
	        return [];
	      }
	      if (guard && isIterateeCall(iteratees, orders, guard)) {
	        orders = undefined;
	      }
	      if (!isArray(iteratees)) {
	        iteratees = iteratees == null ? [] : [iteratees];
	      }
	      if (!isArray(orders)) {
	        orders = orders == null ? [] : [orders];
	      }
	      return baseSortByOrder(collection, iteratees, orders);
	    }

	    /**
	     * Performs a deep comparison between each element in `collection` and the
	     * source object, returning an array of all elements that have equivalent
	     * property values.
	     *
	     * **Note:** This method supports comparing arrays, booleans, `Date` objects,
	     * numbers, `Object` objects, regexes, and strings. Objects are compared by
	     * their own, not inherited, enumerable properties. For comparing a single
	     * own or inherited property value see `_.matchesProperty`.
	     *
	     * @static
	     * @memberOf _
	     * @category Collection
	     * @param {Array|Object|string} collection The collection to search.
	     * @param {Object} source The object of property values to match.
	     * @returns {Array} Returns the new filtered array.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney', 'age': 36, 'active': false, 'pets': ['hoppy'] },
	     *   { 'user': 'fred',   'age': 40, 'active': true, 'pets': ['baby puss', 'dino'] }
	     * ];
	     *
	     * _.pluck(_.where(users, { 'age': 36, 'active': false }), 'user');
	     * // => ['barney']
	     *
	     * _.pluck(_.where(users, { 'pets': ['dino'] }), 'user');
	     * // => ['fred']
	     */
	    function where(collection, source) {
	      return filter(collection, baseMatches(source));
	    }

	    /*------------------------------------------------------------------------*/

	    /**
	     * Gets the number of milliseconds that have elapsed since the Unix epoch
	     * (1 January 1970 00:00:00 UTC).
	     *
	     * @static
	     * @memberOf _
	     * @category Date
	     * @example
	     *
	     * _.defer(function(stamp) {
	     *   console.log(_.now() - stamp);
	     * }, _.now());
	     * // => logs the number of milliseconds it took for the deferred function to be invoked
	     */
	    var now = nativeNow || function() {
	      return new Date().getTime();
	    };

	    /*------------------------------------------------------------------------*/

	    /**
	     * The opposite of `_.before`; this method creates a function that invokes
	     * `func` once it is called `n` or more times.
	     *
	     * @static
	     * @memberOf _
	     * @category Function
	     * @param {number} n The number of calls before `func` is invoked.
	     * @param {Function} func The function to restrict.
	     * @returns {Function} Returns the new restricted function.
	     * @example
	     *
	     * var saves = ['profile', 'settings'];
	     *
	     * var done = _.after(saves.length, function() {
	     *   console.log('done saving!');
	     * });
	     *
	     * _.forEach(saves, function(type) {
	     *   asyncSave({ 'type': type, 'complete': done });
	     * });
	     * // => logs 'done saving!' after the two async saves have completed
	     */
	    function after(n, func) {
	      if (typeof func != 'function') {
	        if (typeof n == 'function') {
	          var temp = n;
	          n = func;
	          func = temp;
	        } else {
	          throw new TypeError(FUNC_ERROR_TEXT);
	        }
	      }
	      n = nativeIsFinite(n = +n) ? n : 0;
	      return function() {
	        if (--n < 1) {
	          return func.apply(this, arguments);
	        }
	      };
	    }

	    /**
	     * Creates a function that accepts up to `n` arguments ignoring any
	     * additional arguments.
	     *
	     * @static
	     * @memberOf _
	     * @category Function
	     * @param {Function} func The function to cap arguments for.
	     * @param {number} [n=func.length] The arity cap.
	     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.
	     * @returns {Function} Returns the new function.
	     * @example
	     *
	     * _.map(['6', '8', '10'], _.ary(parseInt, 1));
	     * // => [6, 8, 10]
	     */
	    function ary(func, n, guard) {
	      if (guard && isIterateeCall(func, n, guard)) {
	        n = undefined;
	      }
	      n = (func && n == null) ? func.length : nativeMax(+n || 0, 0);
	      return createWrapper(func, ARY_FLAG, undefined, undefined, undefined, undefined, n);
	    }

	    /**
	     * Creates a function that invokes `func`, with the `this` binding and arguments
	     * of the created function, while it is called less than `n` times. Subsequent
	     * calls to the created function return the result of the last `func` invocation.
	     *
	     * @static
	     * @memberOf _
	     * @category Function
	     * @param {number} n The number of calls at which `func` is no longer invoked.
	     * @param {Function} func The function to restrict.
	     * @returns {Function} Returns the new restricted function.
	     * @example
	     *
	     * jQuery('#add').on('click', _.before(5, addContactToList));
	     * // => allows adding up to 4 contacts to the list
	     */
	    function before(n, func) {
	      var result;
	      if (typeof func != 'function') {
	        if (typeof n == 'function') {
	          var temp = n;
	          n = func;
	          func = temp;
	        } else {
	          throw new TypeError(FUNC_ERROR_TEXT);
	        }
	      }
	      return function() {
	        if (--n > 0) {
	          result = func.apply(this, arguments);
	        }
	        if (n <= 1) {
	          func = undefined;
	        }
	        return result;
	      };
	    }

	    /**
	     * Creates a function that invokes `func` with the `this` binding of `thisArg`
	     * and prepends any additional `_.bind` arguments to those provided to the
	     * bound function.
	     *
	     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,
	     * may be used as a placeholder for partially applied arguments.
	     *
	     * **Note:** Unlike native `Function#bind` this method does not set the "length"
	     * property of bound functions.
	     *
	     * @static
	     * @memberOf _
	     * @category Function
	     * @param {Function} func The function to bind.
	     * @param {*} thisArg The `this` binding of `func`.
	     * @param {...*} [partials] The arguments to be partially applied.
	     * @returns {Function} Returns the new bound function.
	     * @example
	     *
	     * var greet = function(greeting, punctuation) {
	     *   return greeting + ' ' + this.user + punctuation;
	     * };
	     *
	     * var object = { 'user': 'fred' };
	     *
	     * var bound = _.bind(greet, object, 'hi');
	     * bound('!');
	     * // => 'hi fred!'
	     *
	     * // using placeholders
	     * var bound = _.bind(greet, object, _, '!');
	     * bound('hi');
	     * // => 'hi fred!'
	     */
	    var bind = restParam(function(func, thisArg, partials) {
	      var bitmask = BIND_FLAG;
	      if (partials.length) {
	        var holders = replaceHolders(partials, bind.placeholder);
	        bitmask |= PARTIAL_FLAG;
	      }
	      return createWrapper(func, bitmask, thisArg, partials, holders);
	    });

	    /**
	     * Binds methods of an object to the object itself, overwriting the existing
	     * method. Method names may be specified as individual arguments or as arrays
	     * of method names. If no method names are provided all enumerable function
	     * properties, own and inherited, of `object` are bound.
	     *
	     * **Note:** This method does not set the "length" property of bound functions.
	     *
	     * @static
	     * @memberOf _
	     * @category Function
	     * @param {Object} object The object to bind and assign the bound methods to.
	     * @param {...(string|string[])} [methodNames] The object method names to bind,
	     *  specified as individual method names or arrays of method names.
	     * @returns {Object} Returns `object`.
	     * @example
	     *
	     * var view = {
	     *   'label': 'docs',
	     *   'onClick': function() {
	     *     console.log('clicked ' + this.label);
	     *   }
	     * };
	     *
	     * _.bindAll(view);
	     * jQuery('#docs').on('click', view.onClick);
	     * // => logs 'clicked docs' when the element is clicked
	     */
	    var bindAll = restParam(function(object, methodNames) {
	      methodNames = methodNames.length ? baseFlatten(methodNames) : functions(object);

	      var index = -1,
	          length = methodNames.length;

	      while (++index < length) {
	        var key = methodNames[index];
	        object[key] = createWrapper(object[key], BIND_FLAG, object);
	      }
	      return object;
	    });

	    /**
	     * Creates a function that invokes the method at `object[key]` and prepends
	     * any additional `_.bindKey` arguments to those provided to the bound function.
	     *
	     * This method differs from `_.bind` by allowing bound functions to reference
	     * methods that may be redefined or don't yet exist.
	     * See [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)
	     * for more details.
	     *
	     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic
	     * builds, may be used as a placeholder for partially applied arguments.
	     *
	     * @static
	     * @memberOf _
	     * @category Function
	     * @param {Object} object The object the method belongs to.
	     * @param {string} key The key of the method.
	     * @param {...*} [partials] The arguments to be partially applied.
	     * @returns {Function} Returns the new bound function.
	     * @example
	     *
	     * var object = {
	     *   'user': 'fred',
	     *   'greet': function(greeting, punctuation) {
	     *     return greeting + ' ' + this.user + punctuation;
	     *   }
	     * };
	     *
	     * var bound = _.bindKey(object, 'greet', 'hi');
	     * bound('!');
	     * // => 'hi fred!'
	     *
	     * object.greet = function(greeting, punctuation) {
	     *   return greeting + 'ya ' + this.user + punctuation;
	     * };
	     *
	     * bound('!');
	     * // => 'hiya fred!'
	     *
	     * // using placeholders
	     * var bound = _.bindKey(object, 'greet', _, '!');
	     * bound('hi');
	     * // => 'hiya fred!'
	     */
	    var bindKey = restParam(function(object, key, partials) {
	      var bitmask = BIND_FLAG | BIND_KEY_FLAG;
	      if (partials.length) {
	        var holders = replaceHolders(partials, bindKey.placeholder);
	        bitmask |= PARTIAL_FLAG;
	      }
	      return createWrapper(key, bitmask, object, partials, holders);
	    });

	    /**
	     * Creates a function that accepts one or more arguments of `func` that when
	     * called either invokes `func` returning its result, if all `func` arguments
	     * have been provided, or returns a function that accepts one or more of the
	     * remaining `func` arguments, and so on. The arity of `func` may be specified
	     * if `func.length` is not sufficient.
	     *
	     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,
	     * may be used as a placeholder for provided arguments.
	     *
	     * **Note:** This method does not set the "length" property of curried functions.
	     *
	     * @static
	     * @memberOf _
	     * @category Function
	     * @param {Function} func The function to curry.
	     * @param {number} [arity=func.length] The arity of `func`.
	     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.
	     * @returns {Function} Returns the new curried function.
	     * @example
	     *
	     * var abc = function(a, b, c) {
	     *   return [a, b, c];
	     * };
	     *
	     * var curried = _.curry(abc);
	     *
	     * curried(1)(2)(3);
	     * // => [1, 2, 3]
	     *
	     * curried(1, 2)(3);
	     * // => [1, 2, 3]
	     *
	     * curried(1, 2, 3);
	     * // => [1, 2, 3]
	     *
	     * // using placeholders
	     * curried(1)(_, 3)(2);
	     * // => [1, 2, 3]
	     */
	    var curry = createCurry(CURRY_FLAG);

	    /**
	     * This method is like `_.curry` except that arguments are applied to `func`
	     * in the manner of `_.partialRight` instead of `_.partial`.
	     *
	     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic
	     * builds, may be used as a placeholder for provided arguments.
	     *
	     * **Note:** This method does not set the "length" property of curried functions.
	     *
	     * @static
	     * @memberOf _
	     * @category Function
	     * @param {Function} func The function to curry.
	     * @param {number} [arity=func.length] The arity of `func`.
	     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.
	     * @returns {Function} Returns the new curried function.
	     * @example
	     *
	     * var abc = function(a, b, c) {
	     *   return [a, b, c];
	     * };
	     *
	     * var curried = _.curryRight(abc);
	     *
	     * curried(3)(2)(1);
	     * // => [1, 2, 3]
	     *
	     * curried(2, 3)(1);
	     * // => [1, 2, 3]
	     *
	     * curried(1, 2, 3);
	     * // => [1, 2, 3]
	     *
	     * // using placeholders
	     * curried(3)(1, _)(2);
	     * // => [1, 2, 3]
	     */
	    var curryRight = createCurry(CURRY_RIGHT_FLAG);

	    /**
	     * Creates a debounced function that delays invoking `func` until after `wait`
	     * milliseconds have elapsed since the last time the debounced function was
	     * invoked. The debounced function comes with a `cancel` method to cancel
	     * delayed invocations. Provide an options object to indicate that `func`
	     * should be invoked on the leading and/or trailing edge of the `wait` timeout.
	     * Subsequent calls to the debounced function return the result of the last
	     * `func` invocation.
	     *
	     * **Note:** If `leading` and `trailing` options are `true`, `func` is invoked
	     * on the trailing edge of the timeout only if the the debounced function is
	     * invoked more than once during the `wait` timeout.
	     *
	     * See [David Corbacho's article](http://drupalmotion.com/article/debounce-and-throttle-visual-explanation)
	     * for details over the differences between `_.debounce` and `_.throttle`.
	     *
	     * @static
	     * @memberOf _
	     * @category Function
	     * @param {Function} func The function to debounce.
	     * @param {number} [wait=0] The number of milliseconds to delay.
	     * @param {Object} [options] The options object.
	     * @param {boolean} [options.leading=false] Specify invoking on the leading
	     *  edge of the timeout.
	     * @param {number} [options.maxWait] The maximum time `func` is allowed to be
	     *  delayed before it is invoked.
	     * @param {boolean} [options.trailing=true] Specify invoking on the trailing
	     *  edge of the timeout.
	     * @returns {Function} Returns the new debounced function.
	     * @example
	     *
	     * // avoid costly calculations while the window size is in flux
	     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));
	     *
	     * // invoke `sendMail` when the click event is fired, debouncing subsequent calls
	     * jQuery('#postbox').on('click', _.debounce(sendMail, 300, {
	     *   'leading': true,
	     *   'trailing': false
	     * }));
	     *
	     * // ensure `batchLog` is invoked once after 1 second of debounced calls
	     * var source = new EventSource('/stream');
	     * jQuery(source).on('message', _.debounce(batchLog, 250, {
	     *   'maxWait': 1000
	     * }));
	     *
	     * // cancel a debounced call
	     * var todoChanges = _.debounce(batchLog, 1000);
	     * Object.observe(models.todo, todoChanges);
	     *
	     * Object.observe(models, function(changes) {
	     *   if (_.find(changes, { 'user': 'todo', 'type': 'delete'})) {
	     *     todoChanges.cancel();
	     *   }
	     * }, ['delete']);
	     *
	     * // ...at some point `models.todo` is changed
	     * models.todo.completed = true;
	     *
	     * // ...before 1 second has passed `models.todo` is deleted
	     * // which cancels the debounced `todoChanges` call
	     * delete models.todo;
	     */
	    function debounce(func, wait, options) {
	      var args,
	          maxTimeoutId,
	          result,
	          stamp,
	          thisArg,
	          timeoutId,
	          trailingCall,
	          lastCalled = 0,
	          maxWait = false,
	          trailing = true;

	      if (typeof func != 'function') {
	        throw new TypeError(FUNC_ERROR_TEXT);
	      }
	      wait = wait < 0 ? 0 : (+wait || 0);
	      if (options === true) {
	        var leading = true;
	        trailing = false;
	      } else if (isObject(options)) {
	        leading = !!options.leading;
	        maxWait = 'maxWait' in options && nativeMax(+options.maxWait || 0, wait);
	        trailing = 'trailing' in options ? !!options.trailing : trailing;
	      }

	      function cancel() {
	        if (timeoutId) {
	          clearTimeout(timeoutId);
	        }
	        if (maxTimeoutId) {
	          clearTimeout(maxTimeoutId);
	        }
	        lastCalled = 0;
	        maxTimeoutId = timeoutId = trailingCall = undefined;
	      }

	      function complete(isCalled, id) {
	        if (id) {
	          clearTimeout(id);
	        }
	        maxTimeoutId = timeoutId = trailingCall = undefined;
	        if (isCalled) {
	          lastCalled = now();
	          result = func.apply(thisArg, args);
	          if (!timeoutId && !maxTimeoutId) {
	            args = thisArg = undefined;
	          }
	        }
	      }

	      function delayed() {
	        var remaining = wait - (now() - stamp);
	        if (remaining <= 0 || remaining > wait) {
	          complete(trailingCall, maxTimeoutId);
	        } else {
	          timeoutId = setTimeout(delayed, remaining);
	        }
	      }

	      function maxDelayed() {
	        complete(trailing, timeoutId);
	      }

	      function debounced() {
	        args = arguments;
	        stamp = now();
	        thisArg = this;
	        trailingCall = trailing && (timeoutId || !leading);

	        if (maxWait === false) {
	          var leadingCall = leading && !timeoutId;
	        } else {
	          if (!maxTimeoutId && !leading) {
	            lastCalled = stamp;
	          }
	          var remaining = maxWait - (stamp - lastCalled),
	              isCalled = remaining <= 0 || remaining > maxWait;

	          if (isCalled) {
	            if (maxTimeoutId) {
	              maxTimeoutId = clearTimeout(maxTimeoutId);
	            }
	            lastCalled = stamp;
	            result = func.apply(thisArg, args);
	          }
	          else if (!maxTimeoutId) {
	            maxTimeoutId = setTimeout(maxDelayed, remaining);
	          }
	        }
	        if (isCalled && timeoutId) {
	          timeoutId = clearTimeout(timeoutId);
	        }
	        else if (!timeoutId && wait !== maxWait) {
	          timeoutId = setTimeout(delayed, wait);
	        }
	        if (leadingCall) {
	          isCalled = true;
	          result = func.apply(thisArg, args);
	        }
	        if (isCalled && !timeoutId && !maxTimeoutId) {
	          args = thisArg = undefined;
	        }
	        return result;
	      }
	      debounced.cancel = cancel;
	      return debounced;
	    }

	    /**
	     * Defers invoking the `func` until the current call stack has cleared. Any
	     * additional arguments are provided to `func` when it is invoked.
	     *
	     * @static
	     * @memberOf _
	     * @category Function
	     * @param {Function} func The function to defer.
	     * @param {...*} [args] The arguments to invoke the function with.
	     * @returns {number} Returns the timer id.
	     * @example
	     *
	     * _.defer(function(text) {
	     *   console.log(text);
	     * }, 'deferred');
	     * // logs 'deferred' after one or more milliseconds
	     */
	    var defer = restParam(function(func, args) {
	      return baseDelay(func, 1, args);
	    });

	    /**
	     * Invokes `func` after `wait` milliseconds. Any additional arguments are
	     * provided to `func` when it is invoked.
	     *
	     * @static
	     * @memberOf _
	     * @category Function
	     * @param {Function} func The function to delay.
	     * @param {number} wait The number of milliseconds to delay invocation.
	     * @param {...*} [args] The arguments to invoke the function with.
	     * @returns {number} Returns the timer id.
	     * @example
	     *
	     * _.delay(function(text) {
	     *   console.log(text);
	     * }, 1000, 'later');
	     * // => logs 'later' after one second
	     */
	    var delay = restParam(function(func, wait, args) {
	      return baseDelay(func, wait, args);
	    });

	    /**
	     * Creates a function that returns the result of invoking the provided
	     * functions with the `this` binding of the created function, where each
	     * successive invocation is supplied the return value of the previous.
	     *
	     * @static
	     * @memberOf _
	     * @category Function
	     * @param {...Function} [funcs] Functions to invoke.
	     * @returns {Function} Returns the new function.
	     * @example
	     *
	     * function square(n) {
	     *   return n * n;
	     * }
	     *
	     * var addSquare = _.flow(_.add, square);
	     * addSquare(1, 2);
	     * // => 9
	     */
	    var flow = createFlow();

	    /**
	     * This method is like `_.flow` except that it creates a function that
	     * invokes the provided functions from right to left.
	     *
	     * @static
	     * @memberOf _
	     * @alias backflow, compose
	     * @category Function
	     * @param {...Function} [funcs] Functions to invoke.
	     * @returns {Function} Returns the new function.
	     * @example
	     *
	     * function square(n) {
	     *   return n * n;
	     * }
	     *
	     * var addSquare = _.flowRight(square, _.add);
	     * addSquare(1, 2);
	     * // => 9
	     */
	    var flowRight = createFlow(true);

	    /**
	     * Creates a function that memoizes the result of `func`. If `resolver` is
	     * provided it determines the cache key for storing the result based on the
	     * arguments provided to the memoized function. By default, the first argument
	     * provided to the memoized function is coerced to a string and used as the
	     * cache key. The `func` is invoked with the `this` binding of the memoized
	     * function.
	     *
	     * **Note:** The cache is exposed as the `cache` property on the memoized
	     * function. Its creation may be customized by replacing the `_.memoize.Cache`
	     * constructor with one whose instances implement the [`Map`](http://ecma-international.org/ecma-262/6.0/#sec-properties-of-the-map-prototype-object)
	     * method interface of `get`, `has`, and `set`.
	     *
	     * @static
	     * @memberOf _
	     * @category Function
	     * @param {Function} func The function to have its output memoized.
	     * @param {Function} [resolver] The function to resolve the cache key.
	     * @returns {Function} Returns the new memoizing function.
	     * @example
	     *
	     * var upperCase = _.memoize(function(string) {
	     *   return string.toUpperCase();
	     * });
	     *
	     * upperCase('fred');
	     * // => 'FRED'
	     *
	     * // modifying the result cache
	     * upperCase.cache.set('fred', 'BARNEY');
	     * upperCase('fred');
	     * // => 'BARNEY'
	     *
	     * // replacing `_.memoize.Cache`
	     * var object = { 'user': 'fred' };
	     * var other = { 'user': 'barney' };
	     * var identity = _.memoize(_.identity);
	     *
	     * identity(object);
	     * // => { 'user': 'fred' }
	     * identity(other);
	     * // => { 'user': 'fred' }
	     *
	     * _.memoize.Cache = WeakMap;
	     * var identity = _.memoize(_.identity);
	     *
	     * identity(object);
	     * // => { 'user': 'fred' }
	     * identity(other);
	     * // => { 'user': 'barney' }
	     */
	    function memoize(func, resolver) {
	      if (typeof func != 'function' || (resolver && typeof resolver != 'function')) {
	        throw new TypeError(FUNC_ERROR_TEXT);
	      }
	      var memoized = function() {
	        var args = arguments,
	            key = resolver ? resolver.apply(this, args) : args[0],
	            cache = memoized.cache;

	        if (cache.has(key)) {
	          return cache.get(key);
	        }
	        var result = func.apply(this, args);
	        memoized.cache = cache.set(key, result);
	        return result;
	      };
	      memoized.cache = new memoize.Cache;
	      return memoized;
	    }

	    /**
	     * Creates a function that runs each argument through a corresponding
	     * transform function.
	     *
	     * @static
	     * @memberOf _
	     * @category Function
	     * @param {Function} func The function to wrap.
	     * @param {...(Function|Function[])} [transforms] The functions to transform
	     * arguments, specified as individual functions or arrays of functions.
	     * @returns {Function} Returns the new function.
	     * @example
	     *
	     * function doubled(n) {
	     *   return n * 2;
	     * }
	     *
	     * function square(n) {
	     *   return n * n;
	     * }
	     *
	     * var modded = _.modArgs(function(x, y) {
	     *   return [x, y];
	     * }, square, doubled);
	     *
	     * modded(1, 2);
	     * // => [1, 4]
	     *
	     * modded(5, 10);
	     * // => [25, 20]
	     */
	    var modArgs = restParam(function(func, transforms) {
	      transforms = baseFlatten(transforms);
	      if (typeof func != 'function' || !arrayEvery(transforms, baseIsFunction)) {
	        throw new TypeError(FUNC_ERROR_TEXT);
	      }
	      var length = transforms.length;
	      return restParam(function(args) {
	        var index = nativeMin(args.length, length);
	        while (index--) {
	          args[index] = transforms[index](args[index]);
	        }
	        return func.apply(this, args);
	      });
	    });

	    /**
	     * Creates a function that negates the result of the predicate `func`. The
	     * `func` predicate is invoked with the `this` binding and arguments of the
	     * created function.
	     *
	     * @static
	     * @memberOf _
	     * @category Function
	     * @param {Function} predicate The predicate to negate.
	     * @returns {Function} Returns the new function.
	     * @example
	     *
	     * function isEven(n) {
	     *   return n % 2 == 0;
	     * }
	     *
	     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));
	     * // => [1, 3, 5]
	     */
	    function negate(predicate) {
	      if (typeof predicate != 'function') {
	        throw new TypeError(FUNC_ERROR_TEXT);
	      }
	      return function() {
	        return !predicate.apply(this, arguments);
	      };
	    }

	    /**
	     * Creates a function that is restricted to invoking `func` once. Repeat calls
	     * to the function return the value of the first call. The `func` is invoked
	     * with the `this` binding and arguments of the created function.
	     *
	     * @static
	     * @memberOf _
	     * @category Function
	     * @param {Function} func The function to restrict.
	     * @returns {Function} Returns the new restricted function.
	     * @example
	     *
	     * var initialize = _.once(createApplication);
	     * initialize();
	     * initialize();
	     * // `initialize` invokes `createApplication` once
	     */
	    function once(func) {
	      return before(2, func);
	    }

	    /**
	     * Creates a function that invokes `func` with `partial` arguments prepended
	     * to those provided to the new function. This method is like `_.bind` except
	     * it does **not** alter the `this` binding.
	     *
	     * The `_.partial.placeholder` value, which defaults to `_` in monolithic
	     * builds, may be used as a placeholder for partially applied arguments.
	     *
	     * **Note:** This method does not set the "length" property of partially
	     * applied functions.
	     *
	     * @static
	     * @memberOf _
	     * @category Function
	     * @param {Function} func The function to partially apply arguments to.
	     * @param {...*} [partials] The arguments to be partially applied.
	     * @returns {Function} Returns the new partially applied function.
	     * @example
	     *
	     * var greet = function(greeting, name) {
	     *   return greeting + ' ' + name;
	     * };
	     *
	     * var sayHelloTo = _.partial(greet, 'hello');
	     * sayHelloTo('fred');
	     * // => 'hello fred'
	     *
	     * // using placeholders
	     * var greetFred = _.partial(greet, _, 'fred');
	     * greetFred('hi');
	     * // => 'hi fred'
	     */
	    var partial = createPartial(PARTIAL_FLAG);

	    /**
	     * This method is like `_.partial` except that partially applied arguments
	     * are appended to those provided to the new function.
	     *
	     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic
	     * builds, may be used as a placeholder for partially applied arguments.
	     *
	     * **Note:** This method does not set the "length" property of partially
	     * applied functions.
	     *
	     * @static
	     * @memberOf _
	     * @category Function
	     * @param {Function} func The function to partially apply arguments to.
	     * @param {...*} [partials] The arguments to be partially applied.
	     * @returns {Function} Returns the new partially applied function.
	     * @example
	     *
	     * var greet = function(greeting, name) {
	     *   return greeting + ' ' + name;
	     * };
	     *
	     * var greetFred = _.partialRight(greet, 'fred');
	     * greetFred('hi');
	     * // => 'hi fred'
	     *
	     * // using placeholders
	     * var sayHelloTo = _.partialRight(greet, 'hello', _);
	     * sayHelloTo('fred');
	     * // => 'hello fred'
	     */
	    var partialRight = createPartial(PARTIAL_RIGHT_FLAG);

	    /**
	     * Creates a function that invokes `func` with arguments arranged according
	     * to the specified indexes where the argument value at the first index is
	     * provided as the first argument, the argument value at the second index is
	     * provided as the second argument, and so on.
	     *
	     * @static
	     * @memberOf _
	     * @category Function
	     * @param {Function} func The function to rearrange arguments for.
	     * @param {...(number|number[])} indexes The arranged argument indexes,
	     *  specified as individual indexes or arrays of indexes.
	     * @returns {Function} Returns the new function.
	     * @example
	     *
	     * var rearged = _.rearg(function(a, b, c) {
	     *   return [a, b, c];
	     * }, 2, 0, 1);
	     *
	     * rearged('b', 'c', 'a')
	     * // => ['a', 'b', 'c']
	     *
	     * var map = _.rearg(_.map, [1, 0]);
	     * map(function(n) {
	     *   return n * 3;
	     * }, [1, 2, 3]);
	     * // => [3, 6, 9]
	     */
	    var rearg = restParam(function(func, indexes) {
	      return createWrapper(func, REARG_FLAG, undefined, undefined, undefined, baseFlatten(indexes));
	    });

	    /**
	     * Creates a function that invokes `func` with the `this` binding of the
	     * created function and arguments from `start` and beyond provided as an array.
	     *
	     * **Note:** This method is based on the [rest parameter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/rest_parameters).
	     *
	     * @static
	     * @memberOf _
	     * @category Function
	     * @param {Function} func The function to apply a rest parameter to.
	     * @param {number} [start=func.length-1] The start position of the rest parameter.
	     * @returns {Function} Returns the new function.
	     * @example
	     *
	     * var say = _.restParam(function(what, names) {
	     *   return what + ' ' + _.initial(names).join(', ') +
	     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);
	     * });
	     *
	     * say('hello', 'fred', 'barney', 'pebbles');
	     * // => 'hello fred, barney, & pebbles'
	     */
	    function restParam(func, start) {
	      if (typeof func != 'function') {
	        throw new TypeError(FUNC_ERROR_TEXT);
	      }
	      start = nativeMax(start === undefined ? (func.length - 1) : (+start || 0), 0);
	      return function() {
	        var args = arguments,
	            index = -1,
	            length = nativeMax(args.length - start, 0),
	            rest = Array(length);

	        while (++index < length) {
	          rest[index] = args[start + index];
	        }
	        switch (start) {
	          case 0: return func.call(this, rest);
	          case 1: return func.call(this, args[0], rest);
	          case 2: return func.call(this, args[0], args[1], rest);
	        }
	        var otherArgs = Array(start + 1);
	        index = -1;
	        while (++index < start) {
	          otherArgs[index] = args[index];
	        }
	        otherArgs[start] = rest;
	        return func.apply(this, otherArgs);
	      };
	    }

	    /**
	     * Creates a function that invokes `func` with the `this` binding of the created
	     * function and an array of arguments much like [`Function#apply`](https://es5.github.io/#x15.3.4.3).
	     *
	     * **Note:** This method is based on the [spread operator](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_operator).
	     *
	     * @static
	     * @memberOf _
	     * @category Function
	     * @param {Function} func The function to spread arguments over.
	     * @returns {Function} Returns the new function.
	     * @example
	     *
	     * var say = _.spread(function(who, what) {
	     *   return who + ' says ' + what;
	     * });
	     *
	     * say(['fred', 'hello']);
	     * // => 'fred says hello'
	     *
	     * // with a Promise
	     * var numbers = Promise.all([
	     *   Promise.resolve(40),
	     *   Promise.resolve(36)
	     * ]);
	     *
	     * numbers.then(_.spread(function(x, y) {
	     *   return x + y;
	     * }));
	     * // => a Promise of 76
	     */
	    function spread(func) {
	      if (typeof func != 'function') {
	        throw new TypeError(FUNC_ERROR_TEXT);
	      }
	      return function(array) {
	        return func.apply(this, array);
	      };
	    }

	    /**
	     * Creates a throttled function that only invokes `func` at most once per
	     * every `wait` milliseconds. The throttled function comes with a `cancel`
	     * method to cancel delayed invocations. Provide an options object to indicate
	     * that `func` should be invoked on the leading and/or trailing edge of the
	     * `wait` timeout. Subsequent calls to the throttled function return the
	     * result of the last `func` call.
	     *
	     * **Note:** If `leading` and `trailing` options are `true`, `func` is invoked
	     * on the trailing edge of the timeout only if the the throttled function is
	     * invoked more than once during the `wait` timeout.
	     *
	     * See [David Corbacho's article](http://drupalmotion.com/article/debounce-and-throttle-visual-explanation)
	     * for details over the differences between `_.throttle` and `_.debounce`.
	     *
	     * @static
	     * @memberOf _
	     * @category Function
	     * @param {Function} func The function to throttle.
	     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.
	     * @param {Object} [options] The options object.
	     * @param {boolean} [options.leading=true] Specify invoking on the leading
	     *  edge of the timeout.
	     * @param {boolean} [options.trailing=true] Specify invoking on the trailing
	     *  edge of the timeout.
	     * @returns {Function} Returns the new throttled function.
	     * @example
	     *
	     * // avoid excessively updating the position while scrolling
	     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));
	     *
	     * // invoke `renewToken` when the click event is fired, but not more than once every 5 minutes
	     * jQuery('.interactive').on('click', _.throttle(renewToken, 300000, {
	     *   'trailing': false
	     * }));
	     *
	     * // cancel a trailing throttled call
	     * jQuery(window).on('popstate', throttled.cancel);
	     */
	    function throttle(func, wait, options) {
	      var leading = true,
	          trailing = true;

	      if (typeof func != 'function') {
	        throw new TypeError(FUNC_ERROR_TEXT);
	      }
	      if (options === false) {
	        leading = false;
	      } else if (isObject(options)) {
	        leading = 'leading' in options ? !!options.leading : leading;
	        trailing = 'trailing' in options ? !!options.trailing : trailing;
	      }
	      return debounce(func, wait, { 'leading': leading, 'maxWait': +wait, 'trailing': trailing });
	    }

	    /**
	     * Creates a function that provides `value` to the wrapper function as its
	     * first argument. Any additional arguments provided to the function are
	     * appended to those provided to the wrapper function. The wrapper is invoked
	     * with the `this` binding of the created function.
	     *
	     * @static
	     * @memberOf _
	     * @category Function
	     * @param {*} value The value to wrap.
	     * @param {Function} wrapper The wrapper function.
	     * @returns {Function} Returns the new function.
	     * @example
	     *
	     * var p = _.wrap(_.escape, function(func, text) {
	     *   return '<p>' + func(text) + '</p>';
	     * });
	     *
	     * p('fred, barney, & pebbles');
	     * // => '<p>fred, barney, &amp; pebbles</p>'
	     */
	    function wrap(value, wrapper) {
	      wrapper = wrapper == null ? identity : wrapper;
	      return createWrapper(wrapper, PARTIAL_FLAG, undefined, [value], []);
	    }

	    /*------------------------------------------------------------------------*/

	    /**
	     * Creates a clone of `value`. If `isDeep` is `true` nested objects are cloned,
	     * otherwise they are assigned by reference. If `customizer` is provided it is
	     * invoked to produce the cloned values. If `customizer` returns `undefined`
	     * cloning is handled by the method instead. The `customizer` is bound to
	     * `thisArg` and invoked with two argument; (value [, index|key, object]).
	     *
	     * **Note:** This method is loosely based on the
	     * [structured clone algorithm](http://www.w3.org/TR/html5/infrastructure.html#internal-structured-cloning-algorithm).
	     * The enumerable properties of `arguments` objects and objects created by
	     * constructors other than `Object` are cloned to plain `Object` objects. An
	     * empty object is returned for uncloneable values such as functions, DOM nodes,
	     * Maps, Sets, and WeakMaps.
	     *
	     * @static
	     * @memberOf _
	     * @category Lang
	     * @param {*} value The value to clone.
	     * @param {boolean} [isDeep] Specify a deep clone.
	     * @param {Function} [customizer] The function to customize cloning values.
	     * @param {*} [thisArg] The `this` binding of `customizer`.
	     * @returns {*} Returns the cloned value.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney' },
	     *   { 'user': 'fred' }
	     * ];
	     *
	     * var shallow = _.clone(users);
	     * shallow[0] === users[0];
	     * // => true
	     *
	     * var deep = _.clone(users, true);
	     * deep[0] === users[0];
	     * // => false
	     *
	     * // using a customizer callback
	     * var el = _.clone(document.body, function(value) {
	     *   if (_.isElement(value)) {
	     *     return value.cloneNode(false);
	     *   }
	     * });
	     *
	     * el === document.body
	     * // => false
	     * el.nodeName
	     * // => BODY
	     * el.childNodes.length;
	     * // => 0
	     */
	    function clone(value, isDeep, customizer, thisArg) {
	      if (isDeep && typeof isDeep != 'boolean' && isIterateeCall(value, isDeep, customizer)) {
	        isDeep = false;
	      }
	      else if (typeof isDeep == 'function') {
	        thisArg = customizer;
	        customizer = isDeep;
	        isDeep = false;
	      }
	      return typeof customizer == 'function'
	        ? baseClone(value, isDeep, bindCallback(customizer, thisArg, 1))
	        : baseClone(value, isDeep);
	    }

	    /**
	     * Creates a deep clone of `value`. If `customizer` is provided it is invoked
	     * to produce the cloned values. If `customizer` returns `undefined` cloning
	     * is handled by the method instead. The `customizer` is bound to `thisArg`
	     * and invoked with two argument; (value [, index|key, object]).
	     *
	     * **Note:** This method is loosely based on the
	     * [structured clone algorithm](http://www.w3.org/TR/html5/infrastructure.html#internal-structured-cloning-algorithm).
	     * The enumerable properties of `arguments` objects and objects created by
	     * constructors other than `Object` are cloned to plain `Object` objects. An
	     * empty object is returned for uncloneable values such as functions, DOM nodes,
	     * Maps, Sets, and WeakMaps.
	     *
	     * @static
	     * @memberOf _
	     * @category Lang
	     * @param {*} value The value to deep clone.
	     * @param {Function} [customizer] The function to customize cloning values.
	     * @param {*} [thisArg] The `this` binding of `customizer`.
	     * @returns {*} Returns the deep cloned value.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney' },
	     *   { 'user': 'fred' }
	     * ];
	     *
	     * var deep = _.cloneDeep(users);
	     * deep[0] === users[0];
	     * // => false
	     *
	     * // using a customizer callback
	     * var el = _.cloneDeep(document.body, function(value) {
	     *   if (_.isElement(value)) {
	     *     return value.cloneNode(true);
	     *   }
	     * });
	     *
	     * el === document.body
	     * // => false
	     * el.nodeName
	     * // => BODY
	     * el.childNodes.length;
	     * // => 20
	     */
	    function cloneDeep(value, customizer, thisArg) {
	      return typeof customizer == 'function'
	        ? baseClone(value, true, bindCallback(customizer, thisArg, 1))
	        : baseClone(value, true);
	    }

	    /**
	     * Checks if `value` is greater than `other`.
	     *
	     * @static
	     * @memberOf _
	     * @category Lang
	     * @param {*} value The value to compare.
	     * @param {*} other The other value to compare.
	     * @returns {boolean} Returns `true` if `value` is greater than `other`, else `false`.
	     * @example
	     *
	     * _.gt(3, 1);
	     * // => true
	     *
	     * _.gt(3, 3);
	     * // => false
	     *
	     * _.gt(1, 3);
	     * // => false
	     */
	    function gt(value, other) {
	      return value > other;
	    }

	    /**
	     * Checks if `value` is greater than or equal to `other`.
	     *
	     * @static
	     * @memberOf _
	     * @category Lang
	     * @param {*} value The value to compare.
	     * @param {*} other The other value to compare.
	     * @returns {boolean} Returns `true` if `value` is greater than or equal to `other`, else `false`.
	     * @example
	     *
	     * _.gte(3, 1);
	     * // => true
	     *
	     * _.gte(3, 3);
	     * // => true
	     *
	     * _.gte(1, 3);
	     * // => false
	     */
	    function gte(value, other) {
	      return value >= other;
	    }

	    /**
	     * Checks if `value` is classified as an `arguments` object.
	     *
	     * @static
	     * @memberOf _
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.
	     * @example
	     *
	     * _.isArguments(function() { return arguments; }());
	     * // => true
	     *
	     * _.isArguments([1, 2, 3]);
	     * // => false
	     */
	    function isArguments(value) {
	      return isObjectLike(value) && isArrayLike(value) &&
	        hasOwnProperty.call(value, 'callee') && !propertyIsEnumerable.call(value, 'callee');
	    }

	    /**
	     * Checks if `value` is classified as an `Array` object.
	     *
	     * @static
	     * @memberOf _
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.
	     * @example
	     *
	     * _.isArray([1, 2, 3]);
	     * // => true
	     *
	     * _.isArray(function() { return arguments; }());
	     * // => false
	     */
	    var isArray = nativeIsArray || function(value) {
	      return isObjectLike(value) && isLength(value.length) && objToString.call(value) == arrayTag;
	    };

	    /**
	     * Checks if `value` is classified as a boolean primitive or object.
	     *
	     * @static
	     * @memberOf _
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.
	     * @example
	     *
	     * _.isBoolean(false);
	     * // => true
	     *
	     * _.isBoolean(null);
	     * // => false
	     */
	    function isBoolean(value) {
	      return value === true || value === false || (isObjectLike(value) && objToString.call(value) == boolTag);
	    }

	    /**
	     * Checks if `value` is classified as a `Date` object.
	     *
	     * @static
	     * @memberOf _
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.
	     * @example
	     *
	     * _.isDate(new Date);
	     * // => true
	     *
	     * _.isDate('Mon April 23 2012');
	     * // => false
	     */
	    function isDate(value) {
	      return isObjectLike(value) && objToString.call(value) == dateTag;
	    }

	    /**
	     * Checks if `value` is a DOM element.
	     *
	     * @static
	     * @memberOf _
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.
	     * @example
	     *
	     * _.isElement(document.body);
	     * // => true
	     *
	     * _.isElement('<body>');
	     * // => false
	     */
	    function isElement(value) {
	      return !!value && value.nodeType === 1 && isObjectLike(value) && !isPlainObject(value);
	    }

	    /**
	     * Checks if `value` is empty. A value is considered empty unless it is an
	     * `arguments` object, array, string, or jQuery-like collection with a length
	     * greater than `0` or an object with own enumerable properties.
	     *
	     * @static
	     * @memberOf _
	     * @category Lang
	     * @param {Array|Object|string} value The value to inspect.
	     * @returns {boolean} Returns `true` if `value` is empty, else `false`.
	     * @example
	     *
	     * _.isEmpty(null);
	     * // => true
	     *
	     * _.isEmpty(true);
	     * // => true
	     *
	     * _.isEmpty(1);
	     * // => true
	     *
	     * _.isEmpty([1, 2, 3]);
	     * // => false
	     *
	     * _.isEmpty({ 'a': 1 });
	     * // => false
	     */
	    function isEmpty(value) {
	      if (value == null) {
	        return true;
	      }
	      if (isArrayLike(value) && (isArray(value) || isString(value) || isArguments(value) ||
	          (isObjectLike(value) && isFunction(value.splice)))) {
	        return !value.length;
	      }
	      return !keys(value).length;
	    }

	    /**
	     * Performs a deep comparison between two values to determine if they are
	     * equivalent. If `customizer` is provided it is invoked to compare values.
	     * If `customizer` returns `undefined` comparisons are handled by the method
	     * instead. The `customizer` is bound to `thisArg` and invoked with three
	     * arguments: (value, other [, index|key]).
	     *
	     * **Note:** This method supports comparing arrays, booleans, `Date` objects,
	     * numbers, `Object` objects, regexes, and strings. Objects are compared by
	     * their own, not inherited, enumerable properties. Functions and DOM nodes
	     * are **not** supported. Provide a customizer function to extend support
	     * for comparing other values.
	     *
	     * @static
	     * @memberOf _
	     * @alias eq
	     * @category Lang
	     * @param {*} value The value to compare.
	     * @param {*} other The other value to compare.
	     * @param {Function} [customizer] The function to customize value comparisons.
	     * @param {*} [thisArg] The `this` binding of `customizer`.
	     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
	     * @example
	     *
	     * var object = { 'user': 'fred' };
	     * var other = { 'user': 'fred' };
	     *
	     * object == other;
	     * // => false
	     *
	     * _.isEqual(object, other);
	     * // => true
	     *
	     * // using a customizer callback
	     * var array = ['hello', 'goodbye'];
	     * var other = ['hi', 'goodbye'];
	     *
	     * _.isEqual(array, other, function(value, other) {
	     *   if (_.every([value, other], RegExp.prototype.test, /^h(?:i|ello)$/)) {
	     *     return true;
	     *   }
	     * });
	     * // => true
	     */
	    function isEqual(value, other, customizer, thisArg) {
	      customizer = typeof customizer == 'function' ? bindCallback(customizer, thisArg, 3) : undefined;
	      var result = customizer ? customizer(value, other) : undefined;
	      return  result === undefined ? baseIsEqual(value, other, customizer) : !!result;
	    }

	    /**
	     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,
	     * `SyntaxError`, `TypeError`, or `URIError` object.
	     *
	     * @static
	     * @memberOf _
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.
	     * @example
	     *
	     * _.isError(new Error);
	     * // => true
	     *
	     * _.isError(Error);
	     * // => false
	     */
	    function isError(value) {
	      return isObjectLike(value) && typeof value.message == 'string' && objToString.call(value) == errorTag;
	    }

	    /**
	     * Checks if `value` is a finite primitive number.
	     *
	     * **Note:** This method is based on [`Number.isFinite`](http://ecma-international.org/ecma-262/6.0/#sec-number.isfinite).
	     *
	     * @static
	     * @memberOf _
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.
	     * @example
	     *
	     * _.isFinite(10);
	     * // => true
	     *
	     * _.isFinite('10');
	     * // => false
	     *
	     * _.isFinite(true);
	     * // => false
	     *
	     * _.isFinite(Object(10));
	     * // => false
	     *
	     * _.isFinite(Infinity);
	     * // => false
	     */
	    function isFinite(value) {
	      return typeof value == 'number' && nativeIsFinite(value);
	    }

	    /**
	     * Checks if `value` is classified as a `Function` object.
	     *
	     * @static
	     * @memberOf _
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.
	     * @example
	     *
	     * _.isFunction(_);
	     * // => true
	     *
	     * _.isFunction(/abc/);
	     * // => false
	     */
	    function isFunction(value) {
	      // The use of `Object#toString` avoids issues with the `typeof` operator
	      // in older versions of Chrome and Safari which return 'function' for regexes
	      // and Safari 8 equivalents which return 'object' for typed array constructors.
	      return isObject(value) && objToString.call(value) == funcTag;
	    }

	    /**
	     * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.
	     * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
	     *
	     * @static
	     * @memberOf _
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is an object, else `false`.
	     * @example
	     *
	     * _.isObject({});
	     * // => true
	     *
	     * _.isObject([1, 2, 3]);
	     * // => true
	     *
	     * _.isObject(1);
	     * // => false
	     */
	    function isObject(value) {
	      // Avoid a V8 JIT bug in Chrome 19-20.
	      // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.
	      var type = typeof value;
	      return !!value && (type == 'object' || type == 'function');
	    }

	    /**
	     * Performs a deep comparison between `object` and `source` to determine if
	     * `object` contains equivalent property values. If `customizer` is provided
	     * it is invoked to compare values. If `customizer` returns `undefined`
	     * comparisons are handled by the method instead. The `customizer` is bound
	     * to `thisArg` and invoked with three arguments: (value, other, index|key).
	     *
	     * **Note:** This method supports comparing properties of arrays, booleans,
	     * `Date` objects, numbers, `Object` objects, regexes, and strings. Functions
	     * and DOM nodes are **not** supported. Provide a customizer function to extend
	     * support for comparing other values.
	     *
	     * @static
	     * @memberOf _
	     * @category Lang
	     * @param {Object} object The object to inspect.
	     * @param {Object} source The object of property values to match.
	     * @param {Function} [customizer] The function to customize value comparisons.
	     * @param {*} [thisArg] The `this` binding of `customizer`.
	     * @returns {boolean} Returns `true` if `object` is a match, else `false`.
	     * @example
	     *
	     * var object = { 'user': 'fred', 'age': 40 };
	     *
	     * _.isMatch(object, { 'age': 40 });
	     * // => true
	     *
	     * _.isMatch(object, { 'age': 36 });
	     * // => false
	     *
	     * // using a customizer callback
	     * var object = { 'greeting': 'hello' };
	     * var source = { 'greeting': 'hi' };
	     *
	     * _.isMatch(object, source, function(value, other) {
	     *   return _.every([value, other], RegExp.prototype.test, /^h(?:i|ello)$/) || undefined;
	     * });
	     * // => true
	     */
	    function isMatch(object, source, customizer, thisArg) {
	      customizer = typeof customizer == 'function' ? bindCallback(customizer, thisArg, 3) : undefined;
	      return baseIsMatch(object, getMatchData(source), customizer);
	    }

	    /**
	     * Checks if `value` is `NaN`.
	     *
	     * **Note:** This method is not the same as [`isNaN`](https://es5.github.io/#x15.1.2.4)
	     * which returns `true` for `undefined` and other non-numeric values.
	     *
	     * @static
	     * @memberOf _
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.
	     * @example
	     *
	     * _.isNaN(NaN);
	     * // => true
	     *
	     * _.isNaN(new Number(NaN));
	     * // => true
	     *
	     * isNaN(undefined);
	     * // => true
	     *
	     * _.isNaN(undefined);
	     * // => false
	     */
	    function isNaN(value) {
	      // An `NaN` primitive is the only value that is not equal to itself.
	      // Perform the `toStringTag` check first to avoid errors with some host objects in IE.
	      return isNumber(value) && value != +value;
	    }

	    /**
	     * Checks if `value` is a native function.
	     *
	     * @static
	     * @memberOf _
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a native function, else `false`.
	     * @example
	     *
	     * _.isNative(Array.prototype.push);
	     * // => true
	     *
	     * _.isNative(_);
	     * // => false
	     */
	    function isNative(value) {
	      if (value == null) {
	        return false;
	      }
	      if (isFunction(value)) {
	        return reIsNative.test(fnToString.call(value));
	      }
	      return isObjectLike(value) && reIsHostCtor.test(value);
	    }

	    /**
	     * Checks if `value` is `null`.
	     *
	     * @static
	     * @memberOf _
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.
	     * @example
	     *
	     * _.isNull(null);
	     * // => true
	     *
	     * _.isNull(void 0);
	     * // => false
	     */
	    function isNull(value) {
	      return value === null;
	    }

	    /**
	     * Checks if `value` is classified as a `Number` primitive or object.
	     *
	     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are classified
	     * as numbers, use the `_.isFinite` method.
	     *
	     * @static
	     * @memberOf _
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.
	     * @example
	     *
	     * _.isNumber(8.4);
	     * // => true
	     *
	     * _.isNumber(NaN);
	     * // => true
	     *
	     * _.isNumber('8.4');
	     * // => false
	     */
	    function isNumber(value) {
	      return typeof value == 'number' || (isObjectLike(value) && objToString.call(value) == numberTag);
	    }

	    /**
	     * Checks if `value` is a plain object, that is, an object created by the
	     * `Object` constructor or one with a `[[Prototype]]` of `null`.
	     *
	     * **Note:** This method assumes objects created by the `Object` constructor
	     * have no inherited enumerable properties.
	     *
	     * @static
	     * @memberOf _
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.
	     * @example
	     *
	     * function Foo() {
	     *   this.a = 1;
	     * }
	     *
	     * _.isPlainObject(new Foo);
	     * // => false
	     *
	     * _.isPlainObject([1, 2, 3]);
	     * // => false
	     *
	     * _.isPlainObject({ 'x': 0, 'y': 0 });
	     * // => true
	     *
	     * _.isPlainObject(Object.create(null));
	     * // => true
	     */
	    function isPlainObject(value) {
	      var Ctor;

	      // Exit early for non `Object` objects.
	      if (!(isObjectLike(value) && objToString.call(value) == objectTag && !isArguments(value)) ||
	          (!hasOwnProperty.call(value, 'constructor') && (Ctor = value.constructor, typeof Ctor == 'function' && !(Ctor instanceof Ctor)))) {
	        return false;
	      }
	      // IE < 9 iterates inherited properties before own properties. If the first
	      // iterated property is an object's own property then there are no inherited
	      // enumerable properties.
	      var result;
	      // In most environments an object's own properties are iterated before
	      // its inherited properties. If the last iterated property is an object's
	      // own property then there are no inherited enumerable properties.
	      baseForIn(value, function(subValue, key) {
	        result = key;
	      });
	      return result === undefined || hasOwnProperty.call(value, result);
	    }

	    /**
	     * Checks if `value` is classified as a `RegExp` object.
	     *
	     * @static
	     * @memberOf _
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.
	     * @example
	     *
	     * _.isRegExp(/abc/);
	     * // => true
	     *
	     * _.isRegExp('/abc/');
	     * // => false
	     */
	    function isRegExp(value) {
	      return isObject(value) && objToString.call(value) == regexpTag;
	    }

	    /**
	     * Checks if `value` is classified as a `String` primitive or object.
	     *
	     * @static
	     * @memberOf _
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.
	     * @example
	     *
	     * _.isString('abc');
	     * // => true
	     *
	     * _.isString(1);
	     * // => false
	     */
	    function isString(value) {
	      return typeof value == 'string' || (isObjectLike(value) && objToString.call(value) == stringTag);
	    }

	    /**
	     * Checks if `value` is classified as a typed array.
	     *
	     * @static
	     * @memberOf _
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.
	     * @example
	     *
	     * _.isTypedArray(new Uint8Array);
	     * // => true
	     *
	     * _.isTypedArray([]);
	     * // => false
	     */
	    function isTypedArray(value) {
	      return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[objToString.call(value)];
	    }

	    /**
	     * Checks if `value` is `undefined`.
	     *
	     * @static
	     * @memberOf _
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.
	     * @example
	     *
	     * _.isUndefined(void 0);
	     * // => true
	     *
	     * _.isUndefined(null);
	     * // => false
	     */
	    function isUndefined(value) {
	      return value === undefined;
	    }

	    /**
	     * Checks if `value` is less than `other`.
	     *
	     * @static
	     * @memberOf _
	     * @category Lang
	     * @param {*} value The value to compare.
	     * @param {*} other The other value to compare.
	     * @returns {boolean} Returns `true` if `value` is less than `other`, else `false`.
	     * @example
	     *
	     * _.lt(1, 3);
	     * // => true
	     *
	     * _.lt(3, 3);
	     * // => false
	     *
	     * _.lt(3, 1);
	     * // => false
	     */
	    function lt(value, other) {
	      return value < other;
	    }

	    /**
	     * Checks if `value` is less than or equal to `other`.
	     *
	     * @static
	     * @memberOf _
	     * @category Lang
	     * @param {*} value The value to compare.
	     * @param {*} other The other value to compare.
	     * @returns {boolean} Returns `true` if `value` is less than or equal to `other`, else `false`.
	     * @example
	     *
	     * _.lte(1, 3);
	     * // => true
	     *
	     * _.lte(3, 3);
	     * // => true
	     *
	     * _.lte(3, 1);
	     * // => false
	     */
	    function lte(value, other) {
	      return value <= other;
	    }

	    /**
	     * Converts `value` to an array.
	     *
	     * @static
	     * @memberOf _
	     * @category Lang
	     * @param {*} value The value to convert.
	     * @returns {Array} Returns the converted array.
	     * @example
	     *
	     * (function() {
	     *   return _.toArray(arguments).slice(1);
	     * }(1, 2, 3));
	     * // => [2, 3]
	     */
	    function toArray(value) {
	      var length = value ? getLength(value) : 0;
	      if (!isLength(length)) {
	        return values(value);
	      }
	      if (!length) {
	        return [];
	      }
	      return arrayCopy(value);
	    }

	    /**
	     * Converts `value` to a plain object flattening inherited enumerable
	     * properties of `value` to own properties of the plain object.
	     *
	     * @static
	     * @memberOf _
	     * @category Lang
	     * @param {*} value The value to convert.
	     * @returns {Object} Returns the converted plain object.
	     * @example
	     *
	     * function Foo() {
	     *   this.b = 2;
	     * }
	     *
	     * Foo.prototype.c = 3;
	     *
	     * _.assign({ 'a': 1 }, new Foo);
	     * // => { 'a': 1, 'b': 2 }
	     *
	     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));
	     * // => { 'a': 1, 'b': 2, 'c': 3 }
	     */
	    function toPlainObject(value) {
	      return baseCopy(value, keysIn(value));
	    }

	    /*------------------------------------------------------------------------*/

	    /**
	     * Recursively merges own enumerable properties of the source object(s), that
	     * don't resolve to `undefined` into the destination object. Subsequent sources
	     * overwrite property assignments of previous sources. If `customizer` is
	     * provided it is invoked to produce the merged values of the destination and
	     * source properties. If `customizer` returns `undefined` merging is handled
	     * by the method instead. The `customizer` is bound to `thisArg` and invoked
	     * with five arguments: (objectValue, sourceValue, key, object, source).
	     *
	     * @static
	     * @memberOf _
	     * @category Object
	     * @param {Object} object The destination object.
	     * @param {...Object} [sources] The source objects.
	     * @param {Function} [customizer] The function to customize assigned values.
	     * @param {*} [thisArg] The `this` binding of `customizer`.
	     * @returns {Object} Returns `object`.
	     * @example
	     *
	     * var users = {
	     *   'data': [{ 'user': 'barney' }, { 'user': 'fred' }]
	     * };
	     *
	     * var ages = {
	     *   'data': [{ 'age': 36 }, { 'age': 40 }]
	     * };
	     *
	     * _.merge(users, ages);
	     * // => { 'data': [{ 'user': 'barney', 'age': 36 }, { 'user': 'fred', 'age': 40 }] }
	     *
	     * // using a customizer callback
	     * var object = {
	     *   'fruits': ['apple'],
	     *   'vegetables': ['beet']
	     * };
	     *
	     * var other = {
	     *   'fruits': ['banana'],
	     *   'vegetables': ['carrot']
	     * };
	     *
	     * _.merge(object, other, function(a, b) {
	     *   if (_.isArray(a)) {
	     *     return a.concat(b);
	     *   }
	     * });
	     * // => { 'fruits': ['apple', 'banana'], 'vegetables': ['beet', 'carrot'] }
	     */
	    var merge = createAssigner(baseMerge);

	    /**
	     * Assigns own enumerable properties of source object(s) to the destination
	     * object. Subsequent sources overwrite property assignments of previous sources.
	     * If `customizer` is provided it is invoked to produce the assigned values.
	     * The `customizer` is bound to `thisArg` and invoked with five arguments:
	     * (objectValue, sourceValue, key, object, source).
	     *
	     * **Note:** This method mutates `object` and is based on
	     * [`Object.assign`](http://ecma-international.org/ecma-262/6.0/#sec-object.assign).
	     *
	     * @static
	     * @memberOf _
	     * @alias extend
	     * @category Object
	     * @param {Object} object The destination object.
	     * @param {...Object} [sources] The source objects.
	     * @param {Function} [customizer] The function to customize assigned values.
	     * @param {*} [thisArg] The `this` binding of `customizer`.
	     * @returns {Object} Returns `object`.
	     * @example
	     *
	     * _.assign({ 'user': 'barney' }, { 'age': 40 }, { 'user': 'fred' });
	     * // => { 'user': 'fred', 'age': 40 }
	     *
	     * // using a customizer callback
	     * var defaults = _.partialRight(_.assign, function(value, other) {
	     *   return _.isUndefined(value) ? other : value;
	     * });
	     *
	     * defaults({ 'user': 'barney' }, { 'age': 36 }, { 'user': 'fred' });
	     * // => { 'user': 'barney', 'age': 36 }
	     */
	    var assign = createAssigner(function(object, source, customizer) {
	      return customizer
	        ? assignWith(object, source, customizer)
	        : baseAssign(object, source);
	    });

	    /**
	     * Creates an object that inherits from the given `prototype` object. If a
	     * `properties` object is provided its own enumerable properties are assigned
	     * to the created object.
	     *
	     * @static
	     * @memberOf _
	     * @category Object
	     * @param {Object} prototype The object to inherit from.
	     * @param {Object} [properties] The properties to assign to the object.
	     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.
	     * @returns {Object} Returns the new object.
	     * @example
	     *
	     * function Shape() {
	     *   this.x = 0;
	     *   this.y = 0;
	     * }
	     *
	     * function Circle() {
	     *   Shape.call(this);
	     * }
	     *
	     * Circle.prototype = _.create(Shape.prototype, {
	     *   'constructor': Circle
	     * });
	     *
	     * var circle = new Circle;
	     * circle instanceof Circle;
	     * // => true
	     *
	     * circle instanceof Shape;
	     * // => true
	     */
	    function create(prototype, properties, guard) {
	      var result = baseCreate(prototype);
	      if (guard && isIterateeCall(prototype, properties, guard)) {
	        properties = undefined;
	      }
	      return properties ? baseAssign(result, properties) : result;
	    }

	    /**
	     * Assigns own enumerable properties of source object(s) to the destination
	     * object for all destination properties that resolve to `undefined`. Once a
	     * property is set, additional values of the same property are ignored.
	     *
	     * **Note:** This method mutates `object`.
	     *
	     * @static
	     * @memberOf _
	     * @category Object
	     * @param {Object} object The destination object.
	     * @param {...Object} [sources] The source objects.
	     * @returns {Object} Returns `object`.
	     * @example
	     *
	     * _.defaults({ 'user': 'barney' }, { 'age': 36 }, { 'user': 'fred' });
	     * // => { 'user': 'barney', 'age': 36 }
	     */
	    var defaults = createDefaults(assign, assignDefaults);

	    /**
	     * This method is like `_.defaults` except that it recursively assigns
	     * default properties.
	     *
	     * **Note:** This method mutates `object`.
	     *
	     * @static
	     * @memberOf _
	     * @category Object
	     * @param {Object} object The destination object.
	     * @param {...Object} [sources] The source objects.
	     * @returns {Object} Returns `object`.
	     * @example
	     *
	     * _.defaultsDeep({ 'user': { 'name': 'barney' } }, { 'user': { 'name': 'fred', 'age': 36 } });
	     * // => { 'user': { 'name': 'barney', 'age': 36 } }
	     *
	     */
	    var defaultsDeep = createDefaults(merge, mergeDefaults);

	    /**
	     * This method is like `_.find` except that it returns the key of the first
	     * element `predicate` returns truthy for instead of the element itself.
	     *
	     * If a property name is provided for `predicate` the created `_.property`
	     * style callback returns the property value of the given element.
	     *
	     * If a value is also provided for `thisArg` the created `_.matchesProperty`
	     * style callback returns `true` for elements that have a matching property
	     * value, else `false`.
	     *
	     * If an object is provided for `predicate` the created `_.matches` style
	     * callback returns `true` for elements that have the properties of the given
	     * object, else `false`.
	     *
	     * @static
	     * @memberOf _
	     * @category Object
	     * @param {Object} object The object to search.
	     * @param {Function|Object|string} [predicate=_.identity] The function invoked
	     *  per iteration.
	     * @param {*} [thisArg] The `this` binding of `predicate`.
	     * @returns {string|undefined} Returns the key of the matched element, else `undefined`.
	     * @example
	     *
	     * var users = {
	     *   'barney':  { 'age': 36, 'active': true },
	     *   'fred':    { 'age': 40, 'active': false },
	     *   'pebbles': { 'age': 1,  'active': true }
	     * };
	     *
	     * _.findKey(users, function(chr) {
	     *   return chr.age < 40;
	     * });
	     * // => 'barney' (iteration order is not guaranteed)
	     *
	     * // using the `_.matches` callback shorthand
	     * _.findKey(users, { 'age': 1, 'active': true });
	     * // => 'pebbles'
	     *
	     * // using the `_.matchesProperty` callback shorthand
	     * _.findKey(users, 'active', false);
	     * // => 'fred'
	     *
	     * // using the `_.property` callback shorthand
	     * _.findKey(users, 'active');
	     * // => 'barney'
	     */
	    var findKey = createFindKey(baseForOwn);

	    /**
	     * This method is like `_.findKey` except that it iterates over elements of
	     * a collection in the opposite order.
	     *
	     * If a property name is provided for `predicate` the created `_.property`
	     * style callback returns the property value of the given element.
	     *
	     * If a value is also provided for `thisArg` the created `_.matchesProperty`
	     * style callback returns `true` for elements that have a matching property
	     * value, else `false`.
	     *
	     * If an object is provided for `predicate` the created `_.matches` style
	     * callback returns `true` for elements that have the properties of the given
	     * object, else `false`.
	     *
	     * @static
	     * @memberOf _
	     * @category Object
	     * @param {Object} object The object to search.
	     * @param {Function|Object|string} [predicate=_.identity] The function invoked
	     *  per iteration.
	     * @param {*} [thisArg] The `this` binding of `predicate`.
	     * @returns {string|undefined} Returns the key of the matched element, else `undefined`.
	     * @example
	     *
	     * var users = {
	     *   'barney':  { 'age': 36, 'active': true },
	     *   'fred':    { 'age': 40, 'active': false },
	     *   'pebbles': { 'age': 1,  'active': true }
	     * };
	     *
	     * _.findLastKey(users, function(chr) {
	     *   return chr.age < 40;
	     * });
	     * // => returns `pebbles` assuming `_.findKey` returns `barney`
	     *
	     * // using the `_.matches` callback shorthand
	     * _.findLastKey(users, { 'age': 36, 'active': true });
	     * // => 'barney'
	     *
	     * // using the `_.matchesProperty` callback shorthand
	     * _.findLastKey(users, 'active', false);
	     * // => 'fred'
	     *
	     * // using the `_.property` callback shorthand
	     * _.findLastKey(users, 'active');
	     * // => 'pebbles'
	     */
	    var findLastKey = createFindKey(baseForOwnRight);

	    /**
	     * Iterates over own and inherited enumerable properties of an object invoking
	     * `iteratee` for each property. The `iteratee` is bound to `thisArg` and invoked
	     * with three arguments: (value, key, object). Iteratee functions may exit
	     * iteration early by explicitly returning `false`.
	     *
	     * @static
	     * @memberOf _
	     * @category Object
	     * @param {Object} object The object to iterate over.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @param {*} [thisArg] The `this` binding of `iteratee`.
	     * @returns {Object} Returns `object`.
	     * @example
	     *
	     * function Foo() {
	     *   this.a = 1;
	     *   this.b = 2;
	     * }
	     *
	     * Foo.prototype.c = 3;
	     *
	     * _.forIn(new Foo, function(value, key) {
	     *   console.log(key);
	     * });
	     * // => logs 'a', 'b', and 'c' (iteration order is not guaranteed)
	     */
	    var forIn = createForIn(baseFor);

	    /**
	     * This method is like `_.forIn` except that it iterates over properties of
	     * `object` in the opposite order.
	     *
	     * @static
	     * @memberOf _
	     * @category Object
	     * @param {Object} object The object to iterate over.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @param {*} [thisArg] The `this` binding of `iteratee`.
	     * @returns {Object} Returns `object`.
	     * @example
	     *
	     * function Foo() {
	     *   this.a = 1;
	     *   this.b = 2;
	     * }
	     *
	     * Foo.prototype.c = 3;
	     *
	     * _.forInRight(new Foo, function(value, key) {
	     *   console.log(key);
	     * });
	     * // => logs 'c', 'b', and 'a' assuming `_.forIn ` logs 'a', 'b', and 'c'
	     */
	    var forInRight = createForIn(baseForRight);

	    /**
	     * Iterates over own enumerable properties of an object invoking `iteratee`
	     * for each property. The `iteratee` is bound to `thisArg` and invoked with
	     * three arguments: (value, key, object). Iteratee functions may exit iteration
	     * early by explicitly returning `false`.
	     *
	     * @static
	     * @memberOf _
	     * @category Object
	     * @param {Object} object The object to iterate over.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @param {*} [thisArg] The `this` binding of `iteratee`.
	     * @returns {Object} Returns `object`.
	     * @example
	     *
	     * function Foo() {
	     *   this.a = 1;
	     *   this.b = 2;
	     * }
	     *
	     * Foo.prototype.c = 3;
	     *
	     * _.forOwn(new Foo, function(value, key) {
	     *   console.log(key);
	     * });
	     * // => logs 'a' and 'b' (iteration order is not guaranteed)
	     */
	    var forOwn = createForOwn(baseForOwn);

	    /**
	     * This method is like `_.forOwn` except that it iterates over properties of
	     * `object` in the opposite order.
	     *
	     * @static
	     * @memberOf _
	     * @category Object
	     * @param {Object} object The object to iterate over.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @param {*} [thisArg] The `this` binding of `iteratee`.
	     * @returns {Object} Returns `object`.
	     * @example
	     *
	     * function Foo() {
	     *   this.a = 1;
	     *   this.b = 2;
	     * }
	     *
	     * Foo.prototype.c = 3;
	     *
	     * _.forOwnRight(new Foo, function(value, key) {
	     *   console.log(key);
	     * });
	     * // => logs 'b' and 'a' assuming `_.forOwn` logs 'a' and 'b'
	     */
	    var forOwnRight = createForOwn(baseForOwnRight);

	    /**
	     * Creates an array of function property names from all enumerable properties,
	     * own and inherited, of `object`.
	     *
	     * @static
	     * @memberOf _
	     * @alias methods
	     * @category Object
	     * @param {Object} object The object to inspect.
	     * @returns {Array} Returns the new array of property names.
	     * @example
	     *
	     * _.functions(_);
	     * // => ['after', 'ary', 'assign', ...]
	     */
	    function functions(object) {
	      return baseFunctions(object, keysIn(object));
	    }

	    /**
	     * Gets the property value at `path` of `object`. If the resolved value is
	     * `undefined` the `defaultValue` is used in its place.
	     *
	     * @static
	     * @memberOf _
	     * @category Object
	     * @param {Object} object The object to query.
	     * @param {Array|string} path The path of the property to get.
	     * @param {*} [defaultValue] The value returned if the resolved value is `undefined`.
	     * @returns {*} Returns the resolved value.
	     * @example
	     *
	     * var object = { 'a': [{ 'b': { 'c': 3 } }] };
	     *
	     * _.get(object, 'a[0].b.c');
	     * // => 3
	     *
	     * _.get(object, ['a', '0', 'b', 'c']);
	     * // => 3
	     *
	     * _.get(object, 'a.b.c', 'default');
	     * // => 'default'
	     */
	    function get(object, path, defaultValue) {
	      var result = object == null ? undefined : baseGet(object, toPath(path), path + '');
	      return result === undefined ? defaultValue : result;
	    }

	    /**
	     * Checks if `path` is a direct property.
	     *
	     * @static
	     * @memberOf _
	     * @category Object
	     * @param {Object} object The object to query.
	     * @param {Array|string} path The path to check.
	     * @returns {boolean} Returns `true` if `path` is a direct property, else `false`.
	     * @example
	     *
	     * var object = { 'a': { 'b': { 'c': 3 } } };
	     *
	     * _.has(object, 'a');
	     * // => true
	     *
	     * _.has(object, 'a.b.c');
	     * // => true
	     *
	     * _.has(object, ['a', 'b', 'c']);
	     * // => true
	     */
	    function has(object, path) {
	      if (object == null) {
	        return false;
	      }
	      var result = hasOwnProperty.call(object, path);
	      if (!result && !isKey(path)) {
	        path = toPath(path);
	        object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));
	        if (object == null) {
	          return false;
	        }
	        path = last(path);
	        result = hasOwnProperty.call(object, path);
	      }
	      return result || (isLength(object.length) && isIndex(path, object.length) &&
	        (isArray(object) || isArguments(object)));
	    }

	    /**
	     * Creates an object composed of the inverted keys and values of `object`.
	     * If `object` contains duplicate values, subsequent values overwrite property
	     * assignments of previous values unless `multiValue` is `true`.
	     *
	     * @static
	     * @memberOf _
	     * @category Object
	     * @param {Object} object The object to invert.
	     * @param {boolean} [multiValue] Allow multiple values per key.
	     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.
	     * @returns {Object} Returns the new inverted object.
	     * @example
	     *
	     * var object = { 'a': 1, 'b': 2, 'c': 1 };
	     *
	     * _.invert(object);
	     * // => { '1': 'c', '2': 'b' }
	     *
	     * // with `multiValue`
	     * _.invert(object, true);
	     * // => { '1': ['a', 'c'], '2': ['b'] }
	     */
	    function invert(object, multiValue, guard) {
	      if (guard && isIterateeCall(object, multiValue, guard)) {
	        multiValue = undefined;
	      }
	      var index = -1,
	          props = keys(object),
	          length = props.length,
	          result = {};

	      while (++index < length) {
	        var key = props[index],
	            value = object[key];

	        if (multiValue) {
	          if (hasOwnProperty.call(result, value)) {
	            result[value].push(key);
	          } else {
	            result[value] = [key];
	          }
	        }
	        else {
	          result[value] = key;
	        }
	      }
	      return result;
	    }

	    /**
	     * Creates an array of the own enumerable property names of `object`.
	     *
	     * **Note:** Non-object values are coerced to objects. See the
	     * [ES spec](http://ecma-international.org/ecma-262/6.0/#sec-object.keys)
	     * for more details.
	     *
	     * @static
	     * @memberOf _
	     * @category Object
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the array of property names.
	     * @example
	     *
	     * function Foo() {
	     *   this.a = 1;
	     *   this.b = 2;
	     * }
	     *
	     * Foo.prototype.c = 3;
	     *
	     * _.keys(new Foo);
	     * // => ['a', 'b'] (iteration order is not guaranteed)
	     *
	     * _.keys('hi');
	     * // => ['0', '1']
	     */
	    var keys = !nativeKeys ? shimKeys : function(object) {
	      var Ctor = object == null ? undefined : object.constructor;
	      if ((typeof Ctor == 'function' && Ctor.prototype === object) ||
	          (typeof object != 'function' && isArrayLike(object))) {
	        return shimKeys(object);
	      }
	      return isObject(object) ? nativeKeys(object) : [];
	    };

	    /**
	     * Creates an array of the own and inherited enumerable property names of `object`.
	     *
	     * **Note:** Non-object values are coerced to objects.
	     *
	     * @static
	     * @memberOf _
	     * @category Object
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the array of property names.
	     * @example
	     *
	     * function Foo() {
	     *   this.a = 1;
	     *   this.b = 2;
	     * }
	     *
	     * Foo.prototype.c = 3;
	     *
	     * _.keysIn(new Foo);
	     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)
	     */
	    function keysIn(object) {
	      if (object == null) {
	        return [];
	      }
	      if (!isObject(object)) {
	        object = Object(object);
	      }
	      var length = object.length;
	      length = (length && isLength(length) &&
	        (isArray(object) || isArguments(object)) && length) || 0;

	      var Ctor = object.constructor,
	          index = -1,
	          isProto = typeof Ctor == 'function' && Ctor.prototype === object,
	          result = Array(length),
	          skipIndexes = length > 0;

	      while (++index < length) {
	        result[index] = (index + '');
	      }
	      for (var key in object) {
	        if (!(skipIndexes && isIndex(key, length)) &&
	            !(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {
	          result.push(key);
	        }
	      }
	      return result;
	    }

	    /**
	     * The opposite of `_.mapValues`; this method creates an object with the
	     * same values as `object` and keys generated by running each own enumerable
	     * property of `object` through `iteratee`.
	     *
	     * @static
	     * @memberOf _
	     * @category Object
	     * @param {Object} object The object to iterate over.
	     * @param {Function|Object|string} [iteratee=_.identity] The function invoked
	     *  per iteration.
	     * @param {*} [thisArg] The `this` binding of `iteratee`.
	     * @returns {Object} Returns the new mapped object.
	     * @example
	     *
	     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {
	     *   return key + value;
	     * });
	     * // => { 'a1': 1, 'b2': 2 }
	     */
	    var mapKeys = createObjectMapper(true);

	    /**
	     * Creates an object with the same keys as `object` and values generated by
	     * running each own enumerable property of `object` through `iteratee`. The
	     * iteratee function is bound to `thisArg` and invoked with three arguments:
	     * (value, key, object).
	     *
	     * If a property name is provided for `iteratee` the created `_.property`
	     * style callback returns the property value of the given element.
	     *
	     * If a value is also provided for `thisArg` the created `_.matchesProperty`
	     * style callback returns `true` for elements that have a matching property
	     * value, else `false`.
	     *
	     * If an object is provided for `iteratee` the created `_.matches` style
	     * callback returns `true` for elements that have the properties of the given
	     * object, else `false`.
	     *
	     * @static
	     * @memberOf _
	     * @category Object
	     * @param {Object} object The object to iterate over.
	     * @param {Function|Object|string} [iteratee=_.identity] The function invoked
	     *  per iteration.
	     * @param {*} [thisArg] The `this` binding of `iteratee`.
	     * @returns {Object} Returns the new mapped object.
	     * @example
	     *
	     * _.mapValues({ 'a': 1, 'b': 2 }, function(n) {
	     *   return n * 3;
	     * });
	     * // => { 'a': 3, 'b': 6 }
	     *
	     * var users = {
	     *   'fred':    { 'user': 'fred',    'age': 40 },
	     *   'pebbles': { 'user': 'pebbles', 'age': 1 }
	     * };
	     *
	     * // using the `_.property` callback shorthand
	     * _.mapValues(users, 'age');
	     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)
	     */
	    var mapValues = createObjectMapper();

	    /**
	     * The opposite of `_.pick`; this method creates an object composed of the
	     * own and inherited enumerable properties of `object` that are not omitted.
	     *
	     * @static
	     * @memberOf _
	     * @category Object
	     * @param {Object} object The source object.
	     * @param {Function|...(string|string[])} [predicate] The function invoked per
	     *  iteration or property names to omit, specified as individual property
	     *  names or arrays of property names.
	     * @param {*} [thisArg] The `this` binding of `predicate`.
	     * @returns {Object} Returns the new object.
	     * @example
	     *
	     * var object = { 'user': 'fred', 'age': 40 };
	     *
	     * _.omit(object, 'age');
	     * // => { 'user': 'fred' }
	     *
	     * _.omit(object, _.isNumber);
	     * // => { 'user': 'fred' }
	     */
	    var omit = restParam(function(object, props) {
	      if (object == null) {
	        return {};
	      }
	      if (typeof props[0] != 'function') {
	        var props = arrayMap(baseFlatten(props), String);
	        return pickByArray(object, baseDifference(keysIn(object), props));
	      }
	      var predicate = bindCallback(props[0], props[1], 3);
	      return pickByCallback(object, function(value, key, object) {
	        return !predicate(value, key, object);
	      });
	    });

	    /**
	     * Creates a two dimensional array of the key-value pairs for `object`,
	     * e.g. `[[key1, value1], [key2, value2]]`.
	     *
	     * @static
	     * @memberOf _
	     * @category Object
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the new array of key-value pairs.
	     * @example
	     *
	     * _.pairs({ 'barney': 36, 'fred': 40 });
	     * // => [['barney', 36], ['fred', 40]] (iteration order is not guaranteed)
	     */
	    function pairs(object) {
	      object = toObject(object);

	      var index = -1,
	          props = keys(object),
	          length = props.length,
	          result = Array(length);

	      while (++index < length) {
	        var key = props[index];
	        result[index] = [key, object[key]];
	      }
	      return result;
	    }

	    /**
	     * Creates an object composed of the picked `object` properties. Property
	     * names may be specified as individual arguments or as arrays of property
	     * names. If `predicate` is provided it is invoked for each property of `object`
	     * picking the properties `predicate` returns truthy for. The predicate is
	     * bound to `thisArg` and invoked with three arguments: (value, key, object).
	     *
	     * @static
	     * @memberOf _
	     * @category Object
	     * @param {Object} object The source object.
	     * @param {Function|...(string|string[])} [predicate] The function invoked per
	     *  iteration or property names to pick, specified as individual property
	     *  names or arrays of property names.
	     * @param {*} [thisArg] The `this` binding of `predicate`.
	     * @returns {Object} Returns the new object.
	     * @example
	     *
	     * var object = { 'user': 'fred', 'age': 40 };
	     *
	     * _.pick(object, 'user');
	     * // => { 'user': 'fred' }
	     *
	     * _.pick(object, _.isString);
	     * // => { 'user': 'fred' }
	     */
	    var pick = restParam(function(object, props) {
	      if (object == null) {
	        return {};
	      }
	      return typeof props[0] == 'function'
	        ? pickByCallback(object, bindCallback(props[0], props[1], 3))
	        : pickByArray(object, baseFlatten(props));
	    });

	    /**
	     * This method is like `_.get` except that if the resolved value is a function
	     * it is invoked with the `this` binding of its parent object and its result
	     * is returned.
	     *
	     * @static
	     * @memberOf _
	     * @category Object
	     * @param {Object} object The object to query.
	     * @param {Array|string} path The path of the property to resolve.
	     * @param {*} [defaultValue] The value returned if the resolved value is `undefined`.
	     * @returns {*} Returns the resolved value.
	     * @example
	     *
	     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };
	     *
	     * _.result(object, 'a[0].b.c1');
	     * // => 3
	     *
	     * _.result(object, 'a[0].b.c2');
	     * // => 4
	     *
	     * _.result(object, 'a.b.c', 'default');
	     * // => 'default'
	     *
	     * _.result(object, 'a.b.c', _.constant('default'));
	     * // => 'default'
	     */
	    function result(object, path, defaultValue) {
	      var result = object == null ? undefined : object[path];
	      if (result === undefined) {
	        if (object != null && !isKey(path, object)) {
	          path = toPath(path);
	          object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));
	          result = object == null ? undefined : object[last(path)];
	        }
	        result = result === undefined ? defaultValue : result;
	      }
	      return isFunction(result) ? result.call(object) : result;
	    }

	    /**
	     * Sets the property value of `path` on `object`. If a portion of `path`
	     * does not exist it is created.
	     *
	     * @static
	     * @memberOf _
	     * @category Object
	     * @param {Object} object The object to augment.
	     * @param {Array|string} path The path of the property to set.
	     * @param {*} value The value to set.
	     * @returns {Object} Returns `object`.
	     * @example
	     *
	     * var object = { 'a': [{ 'b': { 'c': 3 } }] };
	     *
	     * _.set(object, 'a[0].b.c', 4);
	     * console.log(object.a[0].b.c);
	     * // => 4
	     *
	     * _.set(object, 'x[0].y.z', 5);
	     * console.log(object.x[0].y.z);
	     * // => 5
	     */
	    function set(object, path, value) {
	      if (object == null) {
	        return object;
	      }
	      var pathKey = (path + '');
	      path = (object[pathKey] != null || isKey(path, object)) ? [pathKey] : toPath(path);

	      var index = -1,
	          length = path.length,
	          lastIndex = length - 1,
	          nested = object;

	      while (nested != null && ++index < length) {
	        var key = path[index];
	        if (isObject(nested)) {
	          if (index == lastIndex) {
	            nested[key] = value;
	          } else if (nested[key] == null) {
	            nested[key] = isIndex(path[index + 1]) ? [] : {};
	          }
	        }
	        nested = nested[key];
	      }
	      return object;
	    }

	    /**
	     * An alternative to `_.reduce`; this method transforms `object` to a new
	     * `accumulator` object which is the result of running each of its own enumerable
	     * properties through `iteratee`, with each invocation potentially mutating
	     * the `accumulator` object. The `iteratee` is bound to `thisArg` and invoked
	     * with four arguments: (accumulator, value, key, object). Iteratee functions
	     * may exit iteration early by explicitly returning `false`.
	     *
	     * @static
	     * @memberOf _
	     * @category Object
	     * @param {Array|Object} object The object to iterate over.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @param {*} [accumulator] The custom accumulator value.
	     * @param {*} [thisArg] The `this` binding of `iteratee`.
	     * @returns {*} Returns the accumulated value.
	     * @example
	     *
	     * _.transform([2, 3, 4], function(result, n) {
	     *   result.push(n *= n);
	     *   return n % 2 == 0;
	     * });
	     * // => [4, 9]
	     *
	     * _.transform({ 'a': 1, 'b': 2 }, function(result, n, key) {
	     *   result[key] = n * 3;
	     * });
	     * // => { 'a': 3, 'b': 6 }
	     */
	    function transform(object, iteratee, accumulator, thisArg) {
	      var isArr = isArray(object) || isTypedArray(object);
	      iteratee = getCallback(iteratee, thisArg, 4);

	      if (accumulator == null) {
	        if (isArr || isObject(object)) {
	          var Ctor = object.constructor;
	          if (isArr) {
	            accumulator = isArray(object) ? new Ctor : [];
	          } else {
	            accumulator = baseCreate(isFunction(Ctor) ? Ctor.prototype : undefined);
	          }
	        } else {
	          accumulator = {};
	        }
	      }
	      (isArr ? arrayEach : baseForOwn)(object, function(value, index, object) {
	        return iteratee(accumulator, value, index, object);
	      });
	      return accumulator;
	    }

	    /**
	     * Creates an array of the own enumerable property values of `object`.
	     *
	     * **Note:** Non-object values are coerced to objects.
	     *
	     * @static
	     * @memberOf _
	     * @category Object
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the array of property values.
	     * @example
	     *
	     * function Foo() {
	     *   this.a = 1;
	     *   this.b = 2;
	     * }
	     *
	     * Foo.prototype.c = 3;
	     *
	     * _.values(new Foo);
	     * // => [1, 2] (iteration order is not guaranteed)
	     *
	     * _.values('hi');
	     * // => ['h', 'i']
	     */
	    function values(object) {
	      return baseValues(object, keys(object));
	    }

	    /**
	     * Creates an array of the own and inherited enumerable property values
	     * of `object`.
	     *
	     * **Note:** Non-object values are coerced to objects.
	     *
	     * @static
	     * @memberOf _
	     * @category Object
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the array of property values.
	     * @example
	     *
	     * function Foo() {
	     *   this.a = 1;
	     *   this.b = 2;
	     * }
	     *
	     * Foo.prototype.c = 3;
	     *
	     * _.valuesIn(new Foo);
	     * // => [1, 2, 3] (iteration order is not guaranteed)
	     */
	    function valuesIn(object) {
	      return baseValues(object, keysIn(object));
	    }

	    /*------------------------------------------------------------------------*/

	    /**
	     * Checks if `n` is between `start` and up to but not including, `end`. If
	     * `end` is not specified it is set to `start` with `start` then set to `0`.
	     *
	     * @static
	     * @memberOf _
	     * @category Number
	     * @param {number} n The number to check.
	     * @param {number} [start=0] The start of the range.
	     * @param {number} end The end of the range.
	     * @returns {boolean} Returns `true` if `n` is in the range, else `false`.
	     * @example
	     *
	     * _.inRange(3, 2, 4);
	     * // => true
	     *
	     * _.inRange(4, 8);
	     * // => true
	     *
	     * _.inRange(4, 2);
	     * // => false
	     *
	     * _.inRange(2, 2);
	     * // => false
	     *
	     * _.inRange(1.2, 2);
	     * // => true
	     *
	     * _.inRange(5.2, 4);
	     * // => false
	     */
	    function inRange(value, start, end) {
	      start = +start || 0;
	      if (end === undefined) {
	        end = start;
	        start = 0;
	      } else {
	        end = +end || 0;
	      }
	      return value >= nativeMin(start, end) && value < nativeMax(start, end);
	    }

	    /**
	     * Produces a random number between `min` and `max` (inclusive). If only one
	     * argument is provided a number between `0` and the given number is returned.
	     * If `floating` is `true`, or either `min` or `max` are floats, a floating-point
	     * number is returned instead of an integer.
	     *
	     * @static
	     * @memberOf _
	     * @category Number
	     * @param {number} [min=0] The minimum possible value.
	     * @param {number} [max=1] The maximum possible value.
	     * @param {boolean} [floating] Specify returning a floating-point number.
	     * @returns {number} Returns the random number.
	     * @example
	     *
	     * _.random(0, 5);
	     * // => an integer between 0 and 5
	     *
	     * _.random(5);
	     * // => also an integer between 0 and 5
	     *
	     * _.random(5, true);
	     * // => a floating-point number between 0 and 5
	     *
	     * _.random(1.2, 5.2);
	     * // => a floating-point number between 1.2 and 5.2
	     */
	    function random(min, max, floating) {
	      if (floating && isIterateeCall(min, max, floating)) {
	        max = floating = undefined;
	      }
	      var noMin = min == null,
	          noMax = max == null;

	      if (floating == null) {
	        if (noMax && typeof min == 'boolean') {
	          floating = min;
	          min = 1;
	        }
	        else if (typeof max == 'boolean') {
	          floating = max;
	          noMax = true;
	        }
	      }
	      if (noMin && noMax) {
	        max = 1;
	        noMax = false;
	      }
	      min = +min || 0;
	      if (noMax) {
	        max = min;
	        min = 0;
	      } else {
	        max = +max || 0;
	      }
	      if (floating || min % 1 || max % 1) {
	        var rand = nativeRandom();
	        return nativeMin(min + (rand * (max - min + parseFloat('1e-' + ((rand + '').length - 1)))), max);
	      }
	      return baseRandom(min, max);
	    }

	    /*------------------------------------------------------------------------*/

	    /**
	     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).
	     *
	     * @static
	     * @memberOf _
	     * @category String
	     * @param {string} [string=''] The string to convert.
	     * @returns {string} Returns the camel cased string.
	     * @example
	     *
	     * _.camelCase('Foo Bar');
	     * // => 'fooBar'
	     *
	     * _.camelCase('--foo-bar');
	     * // => 'fooBar'
	     *
	     * _.camelCase('__foo_bar__');
	     * // => 'fooBar'
	     */
	    var camelCase = createCompounder(function(result, word, index) {
	      word = word.toLowerCase();
	      return result + (index ? (word.charAt(0).toUpperCase() + word.slice(1)) : word);
	    });

	    /**
	     * Capitalizes the first character of `string`.
	     *
	     * @static
	     * @memberOf _
	     * @category String
	     * @param {string} [string=''] The string to capitalize.
	     * @returns {string} Returns the capitalized string.
	     * @example
	     *
	     * _.capitalize('fred');
	     * // => 'Fred'
	     */
	    function capitalize(string) {
	      string = baseToString(string);
	      return string && (string.charAt(0).toUpperCase() + string.slice(1));
	    }

	    /**
	     * Deburrs `string` by converting [latin-1 supplementary letters](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)
	     * to basic latin letters and removing [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).
	     *
	     * @static
	     * @memberOf _
	     * @category String
	     * @param {string} [string=''] The string to deburr.
	     * @returns {string} Returns the deburred string.
	     * @example
	     *
	     * _.deburr('déjà vu');
	     * // => 'deja vu'
	     */
	    function deburr(string) {
	      string = baseToString(string);
	      return string && string.replace(reLatin1, deburrLetter).replace(reComboMark, '');
	    }

	    /**
	     * Checks if `string` ends with the given target string.
	     *
	     * @static
	     * @memberOf _
	     * @category String
	     * @param {string} [string=''] The string to search.
	     * @param {string} [target] The string to search for.
	     * @param {number} [position=string.length] The position to search from.
	     * @returns {boolean} Returns `true` if `string` ends with `target`, else `false`.
	     * @example
	     *
	     * _.endsWith('abc', 'c');
	     * // => true
	     *
	     * _.endsWith('abc', 'b');
	     * // => false
	     *
	     * _.endsWith('abc', 'b', 2);
	     * // => true
	     */
	    function endsWith(string, target, position) {
	      string = baseToString(string);
	      target = (target + '');

	      var length = string.length;
	      position = position === undefined
	        ? length
	        : nativeMin(position < 0 ? 0 : (+position || 0), length);

	      position -= target.length;
	      return position >= 0 && string.indexOf(target, position) == position;
	    }

	    /**
	     * Converts the characters "&", "<", ">", '"', "'", and "\`", in `string` to
	     * their corresponding HTML entities.
	     *
	     * **Note:** No other characters are escaped. To escape additional characters
	     * use a third-party library like [_he_](https://mths.be/he).
	     *
	     * Though the ">" character is escaped for symmetry, characters like
	     * ">" and "/" don't need escaping in HTML and have no special meaning
	     * unless they're part of a tag or unquoted attribute value.
	     * See [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)
	     * (under "semi-related fun fact") for more details.
	     *
	     * Backticks are escaped because in Internet Explorer < 9, they can break out
	     * of attribute values or HTML comments. See [#59](https://html5sec.org/#59),
	     * [#102](https://html5sec.org/#102), [#108](https://html5sec.org/#108), and
	     * [#133](https://html5sec.org/#133) of the [HTML5 Security Cheatsheet](https://html5sec.org/)
	     * for more details.
	     *
	     * When working with HTML you should always [quote attribute values](http://wonko.com/post/html-escaping)
	     * to reduce XSS vectors.
	     *
	     * @static
	     * @memberOf _
	     * @category String
	     * @param {string} [string=''] The string to escape.
	     * @returns {string} Returns the escaped string.
	     * @example
	     *
	     * _.escape('fred, barney, & pebbles');
	     * // => 'fred, barney, &amp; pebbles'
	     */
	    function escape(string) {
	      // Reset `lastIndex` because in IE < 9 `String#replace` does not.
	      string = baseToString(string);
	      return (string && reHasUnescapedHtml.test(string))
	        ? string.replace(reUnescapedHtml, escapeHtmlChar)
	        : string;
	    }

	    /**
	     * Escapes the `RegExp` special characters "\", "/", "^", "$", ".", "|", "?",
	     * "*", "+", "(", ")", "[", "]", "{" and "}" in `string`.
	     *
	     * @static
	     * @memberOf _
	     * @category String
	     * @param {string} [string=''] The string to escape.
	     * @returns {string} Returns the escaped string.
	     * @example
	     *
	     * _.escapeRegExp('[lodash](https://lodash.com/)');
	     * // => '\[lodash\]\(https:\/\/lodash\.com\/\)'
	     */
	    function escapeRegExp(string) {
	      string = baseToString(string);
	      return (string && reHasRegExpChars.test(string))
	        ? string.replace(reRegExpChars, escapeRegExpChar)
	        : (string || '(?:)');
	    }

	    /**
	     * Converts `string` to [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).
	     *
	     * @static
	     * @memberOf _
	     * @category String
	     * @param {string} [string=''] The string to convert.
	     * @returns {string} Returns the kebab cased string.
	     * @example
	     *
	     * _.kebabCase('Foo Bar');
	     * // => 'foo-bar'
	     *
	     * _.kebabCase('fooBar');
	     * // => 'foo-bar'
	     *
	     * _.kebabCase('__foo_bar__');
	     * // => 'foo-bar'
	     */
	    var kebabCase = createCompounder(function(result, word, index) {
	      return result + (index ? '-' : '') + word.toLowerCase();
	    });

	    /**
	     * Pads `string` on the left and right sides if it's shorter than `length`.
	     * Padding characters are truncated if they can't be evenly divided by `length`.
	     *
	     * @static
	     * @memberOf _
	     * @category String
	     * @param {string} [string=''] The string to pad.
	     * @param {number} [length=0] The padding length.
	     * @param {string} [chars=' '] The string used as padding.
	     * @returns {string} Returns the padded string.
	     * @example
	     *
	     * _.pad('abc', 8);
	     * // => '  abc   '
	     *
	     * _.pad('abc', 8, '_-');
	     * // => '_-abc_-_'
	     *
	     * _.pad('abc', 3);
	     * // => 'abc'
	     */
	    function pad(string, length, chars) {
	      string = baseToString(string);
	      length = +length;

	      var strLength = string.length;
	      if (strLength >= length || !nativeIsFinite(length)) {
	        return string;
	      }
	      var mid = (length - strLength) / 2,
	          leftLength = nativeFloor(mid),
	          rightLength = nativeCeil(mid);

	      chars = createPadding('', rightLength, chars);
	      return chars.slice(0, leftLength) + string + chars;
	    }

	    /**
	     * Pads `string` on the left side if it's shorter than `length`. Padding
	     * characters are truncated if they exceed `length`.
	     *
	     * @static
	     * @memberOf _
	     * @category String
	     * @param {string} [string=''] The string to pad.
	     * @param {number} [length=0] The padding length.
	     * @param {string} [chars=' '] The string used as padding.
	     * @returns {string} Returns the padded string.
	     * @example
	     *
	     * _.padLeft('abc', 6);
	     * // => '   abc'
	     *
	     * _.padLeft('abc', 6, '_-');
	     * // => '_-_abc'
	     *
	     * _.padLeft('abc', 3);
	     * // => 'abc'
	     */
	    var padLeft = createPadDir();

	    /**
	     * Pads `string` on the right side if it's shorter than `length`. Padding
	     * characters are truncated if they exceed `length`.
	     *
	     * @static
	     * @memberOf _
	     * @category String
	     * @param {string} [string=''] The string to pad.
	     * @param {number} [length=0] The padding length.
	     * @param {string} [chars=' '] The string used as padding.
	     * @returns {string} Returns the padded string.
	     * @example
	     *
	     * _.padRight('abc', 6);
	     * // => 'abc   '
	     *
	     * _.padRight('abc', 6, '_-');
	     * // => 'abc_-_'
	     *
	     * _.padRight('abc', 3);
	     * // => 'abc'
	     */
	    var padRight = createPadDir(true);

	    /**
	     * Converts `string` to an integer of the specified radix. If `radix` is
	     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a hexadecimal,
	     * in which case a `radix` of `16` is used.
	     *
	     * **Note:** This method aligns with the [ES5 implementation](https://es5.github.io/#E)
	     * of `parseInt`.
	     *
	     * @static
	     * @memberOf _
	     * @category String
	     * @param {string} string The string to convert.
	     * @param {number} [radix] The radix to interpret `value` by.
	     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.
	     * @returns {number} Returns the converted integer.
	     * @example
	     *
	     * _.parseInt('08');
	     * // => 8
	     *
	     * _.map(['6', '08', '10'], _.parseInt);
	     * // => [6, 8, 10]
	     */
	    function parseInt(string, radix, guard) {
	      // Firefox < 21 and Opera < 15 follow ES3 for `parseInt`.
	      // Chrome fails to trim leading <BOM> whitespace characters.
	      // See https://code.google.com/p/v8/issues/detail?id=3109 for more details.
	      if (guard ? isIterateeCall(string, radix, guard) : radix == null) {
	        radix = 0;
	      } else if (radix) {
	        radix = +radix;
	      }
	      string = trim(string);
	      return nativeParseInt(string, radix || (reHasHexPrefix.test(string) ? 16 : 10));
	    }

	    /**
	     * Repeats the given string `n` times.
	     *
	     * @static
	     * @memberOf _
	     * @category String
	     * @param {string} [string=''] The string to repeat.
	     * @param {number} [n=0] The number of times to repeat the string.
	     * @returns {string} Returns the repeated string.
	     * @example
	     *
	     * _.repeat('*', 3);
	     * // => '***'
	     *
	     * _.repeat('abc', 2);
	     * // => 'abcabc'
	     *
	     * _.repeat('abc', 0);
	     * // => ''
	     */
	    function repeat(string, n) {
	      var result = '';
	      string = baseToString(string);
	      n = +n;
	      if (n < 1 || !string || !nativeIsFinite(n)) {
	        return result;
	      }
	      // Leverage the exponentiation by squaring algorithm for a faster repeat.
	      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.
	      do {
	        if (n % 2) {
	          result += string;
	        }
	        n = nativeFloor(n / 2);
	        string += string;
	      } while (n);

	      return result;
	    }

	    /**
	     * Converts `string` to [snake case](https://en.wikipedia.org/wiki/Snake_case).
	     *
	     * @static
	     * @memberOf _
	     * @category String
	     * @param {string} [string=''] The string to convert.
	     * @returns {string} Returns the snake cased string.
	     * @example
	     *
	     * _.snakeCase('Foo Bar');
	     * // => 'foo_bar'
	     *
	     * _.snakeCase('fooBar');
	     * // => 'foo_bar'
	     *
	     * _.snakeCase('--foo-bar');
	     * // => 'foo_bar'
	     */
	    var snakeCase = createCompounder(function(result, word, index) {
	      return result + (index ? '_' : '') + word.toLowerCase();
	    });

	    /**
	     * Converts `string` to [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).
	     *
	     * @static
	     * @memberOf _
	     * @category String
	     * @param {string} [string=''] The string to convert.
	     * @returns {string} Returns the start cased string.
	     * @example
	     *
	     * _.startCase('--foo-bar');
	     * // => 'Foo Bar'
	     *
	     * _.startCase('fooBar');
	     * // => 'Foo Bar'
	     *
	     * _.startCase('__foo_bar__');
	     * // => 'Foo Bar'
	     */
	    var startCase = createCompounder(function(result, word, index) {
	      return result + (index ? ' ' : '') + (word.charAt(0).toUpperCase() + word.slice(1));
	    });

	    /**
	     * Checks if `string` starts with the given target string.
	     *
	     * @static
	     * @memberOf _
	     * @category String
	     * @param {string} [string=''] The string to search.
	     * @param {string} [target] The string to search for.
	     * @param {number} [position=0] The position to search from.
	     * @returns {boolean} Returns `true` if `string` starts with `target`, else `false`.
	     * @example
	     *
	     * _.startsWith('abc', 'a');
	     * // => true
	     *
	     * _.startsWith('abc', 'b');
	     * // => false
	     *
	     * _.startsWith('abc', 'b', 1);
	     * // => true
	     */
	    function startsWith(string, target, position) {
	      string = baseToString(string);
	      position = position == null
	        ? 0
	        : nativeMin(position < 0 ? 0 : (+position || 0), string.length);

	      return string.lastIndexOf(target, position) == position;
	    }

	    /**
	     * Creates a compiled template function that can interpolate data properties
	     * in "interpolate" delimiters, HTML-escape interpolated data properties in
	     * "escape" delimiters, and execute JavaScript in "evaluate" delimiters. Data
	     * properties may be accessed as free variables in the template. If a setting
	     * object is provided it takes precedence over `_.templateSettings` values.
	     *
	     * **Note:** In the development build `_.template` utilizes
	     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)
	     * for easier debugging.
	     *
	     * For more information on precompiling templates see
	     * [lodash's custom builds documentation](https://lodash.com/custom-builds).
	     *
	     * For more information on Chrome extension sandboxes see
	     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).
	     *
	     * @static
	     * @memberOf _
	     * @category String
	     * @param {string} [string=''] The template string.
	     * @param {Object} [options] The options object.
	     * @param {RegExp} [options.escape] The HTML "escape" delimiter.
	     * @param {RegExp} [options.evaluate] The "evaluate" delimiter.
	     * @param {Object} [options.imports] An object to import into the template as free variables.
	     * @param {RegExp} [options.interpolate] The "interpolate" delimiter.
	     * @param {string} [options.sourceURL] The sourceURL of the template's compiled source.
	     * @param {string} [options.variable] The data object variable name.
	     * @param- {Object} [otherOptions] Enables the legacy `options` param signature.
	     * @returns {Function} Returns the compiled template function.
	     * @example
	     *
	     * // using the "interpolate" delimiter to create a compiled template
	     * var compiled = _.template('hello <%= user %>!');
	     * compiled({ 'user': 'fred' });
	     * // => 'hello fred!'
	     *
	     * // using the HTML "escape" delimiter to escape data property values
	     * var compiled = _.template('<b><%- value %></b>');
	     * compiled({ 'value': '<script>' });
	     * // => '<b>&lt;script&gt;</b>'
	     *
	     * // using the "evaluate" delimiter to execute JavaScript and generate HTML
	     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');
	     * compiled({ 'users': ['fred', 'barney'] });
	     * // => '<li>fred</li><li>barney</li>'
	     *
	     * // using the internal `print` function in "evaluate" delimiters
	     * var compiled = _.template('<% print("hello " + user); %>!');
	     * compiled({ 'user': 'barney' });
	     * // => 'hello barney!'
	     *
	     * // using the ES delimiter as an alternative to the default "interpolate" delimiter
	     * var compiled = _.template('hello ${ user }!');
	     * compiled({ 'user': 'pebbles' });
	     * // => 'hello pebbles!'
	     *
	     * // using custom template delimiters
	     * _.templateSettings.interpolate = /{{([\s\S]+?)}}/g;
	     * var compiled = _.template('hello {{ user }}!');
	     * compiled({ 'user': 'mustache' });
	     * // => 'hello mustache!'
	     *
	     * // using backslashes to treat delimiters as plain text
	     * var compiled = _.template('<%= "\\<%- value %\\>" %>');
	     * compiled({ 'value': 'ignored' });
	     * // => '<%- value %>'
	     *
	     * // using the `imports` option to import `jQuery` as `jq`
	     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';
	     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });
	     * compiled({ 'users': ['fred', 'barney'] });
	     * // => '<li>fred</li><li>barney</li>'
	     *
	     * // using the `sourceURL` option to specify a custom sourceURL for the template
	     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });
	     * compiled(data);
	     * // => find the source of "greeting.jst" under the Sources tab or Resources panel of the web inspector
	     *
	     * // using the `variable` option to ensure a with-statement isn't used in the compiled template
	     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });
	     * compiled.source;
	     * // => function(data) {
	     * //   var __t, __p = '';
	     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';
	     * //   return __p;
	     * // }
	     *
	     * // using the `source` property to inline compiled templates for meaningful
	     * // line numbers in error messages and a stack trace
	     * fs.writeFileSync(path.join(cwd, 'jst.js'), '\
	     *   var JST = {\
	     *     "main": ' + _.template(mainText).source + '\
	     *   };\
	     * ');
	     */
	    function template(string, options, otherOptions) {
	      // Based on John Resig's `tmpl` implementation (http://ejohn.org/blog/javascript-micro-templating/)
	      // and Laura Doktorova's doT.js (https://github.com/olado/doT).
	      var settings = lodash.templateSettings;

	      if (otherOptions && isIterateeCall(string, options, otherOptions)) {
	        options = otherOptions = undefined;
	      }
	      string = baseToString(string);
	      options = assignWith(baseAssign({}, otherOptions || options), settings, assignOwnDefaults);

	      var imports = assignWith(baseAssign({}, options.imports), settings.imports, assignOwnDefaults),
	          importsKeys = keys(imports),
	          importsValues = baseValues(imports, importsKeys);

	      var isEscaping,
	          isEvaluating,
	          index = 0,
	          interpolate = options.interpolate || reNoMatch,
	          source = "__p += '";

	      // Compile the regexp to match each delimiter.
	      var reDelimiters = RegExp(
	        (options.escape || reNoMatch).source + '|' +
	        interpolate.source + '|' +
	        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +
	        (options.evaluate || reNoMatch).source + '|$'
	      , 'g');

	      // Use a sourceURL for easier debugging.
	      var sourceURL = '//# sourceURL=' +
	        ('sourceURL' in options
	          ? options.sourceURL
	          : ('lodash.templateSources[' + (++templateCounter) + ']')
	        ) + '\n';

	      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {
	        interpolateValue || (interpolateValue = esTemplateValue);

	        // Escape characters that can't be included in string literals.
	        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);

	        // Replace delimiters with snippets.
	        if (escapeValue) {
	          isEscaping = true;
	          source += "' +\n__e(" + escapeValue + ") +\n'";
	        }
	        if (evaluateValue) {
	          isEvaluating = true;
	          source += "';\n" + evaluateValue + ";\n__p += '";
	        }
	        if (interpolateValue) {
	          source += "' +\n((__t = (" + interpolateValue + ")) == null ? '' : __t) +\n'";
	        }
	        index = offset + match.length;

	        // The JS engine embedded in Adobe products requires returning the `match`
	        // string in order to produce the correct `offset` value.
	        return match;
	      });

	      source += "';\n";

	      // If `variable` is not specified wrap a with-statement around the generated
	      // code to add the data object to the top of the scope chain.
	      var variable = options.variable;
	      if (!variable) {
	        source = 'with (obj) {\n' + source + '\n}\n';
	      }
	      // Cleanup code by stripping empty strings.
	      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)
	        .replace(reEmptyStringMiddle, '$1')
	        .replace(reEmptyStringTrailing, '$1;');

	      // Frame code as the function body.
	      source = 'function(' + (variable || 'obj') + ') {\n' +
	        (variable
	          ? ''
	          : 'obj || (obj = {});\n'
	        ) +
	        "var __t, __p = ''" +
	        (isEscaping
	           ? ', __e = _.escape'
	           : ''
	        ) +
	        (isEvaluating
	          ? ', __j = Array.prototype.join;\n' +
	            "function print() { __p += __j.call(arguments, '') }\n"
	          : ';\n'
	        ) +
	        source +
	        'return __p\n}';

	      var result = attempt(function() {
	        return Function(importsKeys, sourceURL + 'return ' + source).apply(undefined, importsValues);
	      });

	      // Provide the compiled function's source by its `toString` method or
	      // the `source` property as a convenience for inlining compiled templates.
	      result.source = source;
	      if (isError(result)) {
	        throw result;
	      }
	      return result;
	    }

	    /**
	     * Removes leading and trailing whitespace or specified characters from `string`.
	     *
	     * @static
	     * @memberOf _
	     * @category String
	     * @param {string} [string=''] The string to trim.
	     * @param {string} [chars=whitespace] The characters to trim.
	     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.
	     * @returns {string} Returns the trimmed string.
	     * @example
	     *
	     * _.trim('  abc  ');
	     * // => 'abc'
	     *
	     * _.trim('-_-abc-_-', '_-');
	     * // => 'abc'
	     *
	     * _.map(['  foo  ', '  bar  '], _.trim);
	     * // => ['foo', 'bar']
	     */
	    function trim(string, chars, guard) {
	      var value = string;
	      string = baseToString(string);
	      if (!string) {
	        return string;
	      }
	      if (guard ? isIterateeCall(value, chars, guard) : chars == null) {
	        return string.slice(trimmedLeftIndex(string), trimmedRightIndex(string) + 1);
	      }
	      chars = (chars + '');
	      return string.slice(charsLeftIndex(string, chars), charsRightIndex(string, chars) + 1);
	    }

	    /**
	     * Removes leading whitespace or specified characters from `string`.
	     *
	     * @static
	     * @memberOf _
	     * @category String
	     * @param {string} [string=''] The string to trim.
	     * @param {string} [chars=whitespace] The characters to trim.
	     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.
	     * @returns {string} Returns the trimmed string.
	     * @example
	     *
	     * _.trimLeft('  abc  ');
	     * // => 'abc  '
	     *
	     * _.trimLeft('-_-abc-_-', '_-');
	     * // => 'abc-_-'
	     */
	    function trimLeft(string, chars, guard) {
	      var value = string;
	      string = baseToString(string);
	      if (!string) {
	        return string;
	      }
	      if (guard ? isIterateeCall(value, chars, guard) : chars == null) {
	        return string.slice(trimmedLeftIndex(string));
	      }
	      return string.slice(charsLeftIndex(string, (chars + '')));
	    }

	    /**
	     * Removes trailing whitespace or specified characters from `string`.
	     *
	     * @static
	     * @memberOf _
	     * @category String
	     * @param {string} [string=''] The string to trim.
	     * @param {string} [chars=whitespace] The characters to trim.
	     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.
	     * @returns {string} Returns the trimmed string.
	     * @example
	     *
	     * _.trimRight('  abc  ');
	     * // => '  abc'
	     *
	     * _.trimRight('-_-abc-_-', '_-');
	     * // => '-_-abc'
	     */
	    function trimRight(string, chars, guard) {
	      var value = string;
	      string = baseToString(string);
	      if (!string) {
	        return string;
	      }
	      if (guard ? isIterateeCall(value, chars, guard) : chars == null) {
	        return string.slice(0, trimmedRightIndex(string) + 1);
	      }
	      return string.slice(0, charsRightIndex(string, (chars + '')) + 1);
	    }

	    /**
	     * Truncates `string` if it's longer than the given maximum string length.
	     * The last characters of the truncated string are replaced with the omission
	     * string which defaults to "...".
	     *
	     * @static
	     * @memberOf _
	     * @category String
	     * @param {string} [string=''] The string to truncate.
	     * @param {Object|number} [options] The options object or maximum string length.
	     * @param {number} [options.length=30] The maximum string length.
	     * @param {string} [options.omission='...'] The string to indicate text is omitted.
	     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.
	     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.
	     * @returns {string} Returns the truncated string.
	     * @example
	     *
	     * _.trunc('hi-diddly-ho there, neighborino');
	     * // => 'hi-diddly-ho there, neighbo...'
	     *
	     * _.trunc('hi-diddly-ho there, neighborino', 24);
	     * // => 'hi-diddly-ho there, n...'
	     *
	     * _.trunc('hi-diddly-ho there, neighborino', {
	     *   'length': 24,
	     *   'separator': ' '
	     * });
	     * // => 'hi-diddly-ho there,...'
	     *
	     * _.trunc('hi-diddly-ho there, neighborino', {
	     *   'length': 24,
	     *   'separator': /,? +/
	     * });
	     * // => 'hi-diddly-ho there...'
	     *
	     * _.trunc('hi-diddly-ho there, neighborino', {
	     *   'omission': ' [...]'
	     * });
	     * // => 'hi-diddly-ho there, neig [...]'
	     */
	    function trunc(string, options, guard) {
	      if (guard && isIterateeCall(string, options, guard)) {
	        options = undefined;
	      }
	      var length = DEFAULT_TRUNC_LENGTH,
	          omission = DEFAULT_TRUNC_OMISSION;

	      if (options != null) {
	        if (isObject(options)) {
	          var separator = 'separator' in options ? options.separator : separator;
	          length = 'length' in options ? (+options.length || 0) : length;
	          omission = 'omission' in options ? baseToString(options.omission) : omission;
	        } else {
	          length = +options || 0;
	        }
	      }
	      string = baseToString(string);
	      if (length >= string.length) {
	        return string;
	      }
	      var end = length - omission.length;
	      if (end < 1) {
	        return omission;
	      }
	      var result = string.slice(0, end);
	      if (separator == null) {
	        return result + omission;
	      }
	      if (isRegExp(separator)) {
	        if (string.slice(end).search(separator)) {
	          var match,
	              newEnd,
	              substring = string.slice(0, end);

	          if (!separator.global) {
	            separator = RegExp(separator.source, (reFlags.exec(separator) || '') + 'g');
	          }
	          separator.lastIndex = 0;
	          while ((match = separator.exec(substring))) {
	            newEnd = match.index;
	          }
	          result = result.slice(0, newEnd == null ? end : newEnd);
	        }
	      } else if (string.indexOf(separator, end) != end) {
	        var index = result.lastIndexOf(separator);
	        if (index > -1) {
	          result = result.slice(0, index);
	        }
	      }
	      return result + omission;
	    }

	    /**
	     * The inverse of `_.escape`; this method converts the HTML entities
	     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, `&#39;`, and `&#96;` in `string` to their
	     * corresponding characters.
	     *
	     * **Note:** No other HTML entities are unescaped. To unescape additional HTML
	     * entities use a third-party library like [_he_](https://mths.be/he).
	     *
	     * @static
	     * @memberOf _
	     * @category String
	     * @param {string} [string=''] The string to unescape.
	     * @returns {string} Returns the unescaped string.
	     * @example
	     *
	     * _.unescape('fred, barney, &amp; pebbles');
	     * // => 'fred, barney, & pebbles'
	     */
	    function unescape(string) {
	      string = baseToString(string);
	      return (string && reHasEscapedHtml.test(string))
	        ? string.replace(reEscapedHtml, unescapeHtmlChar)
	        : string;
	    }

	    /**
	     * Splits `string` into an array of its words.
	     *
	     * @static
	     * @memberOf _
	     * @category String
	     * @param {string} [string=''] The string to inspect.
	     * @param {RegExp|string} [pattern] The pattern to match words.
	     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.
	     * @returns {Array} Returns the words of `string`.
	     * @example
	     *
	     * _.words('fred, barney, & pebbles');
	     * // => ['fred', 'barney', 'pebbles']
	     *
	     * _.words('fred, barney, & pebbles', /[^, ]+/g);
	     * // => ['fred', 'barney', '&', 'pebbles']
	     */
	    function words(string, pattern, guard) {
	      if (guard && isIterateeCall(string, pattern, guard)) {
	        pattern = undefined;
	      }
	      string = baseToString(string);
	      return string.match(pattern || reWords) || [];
	    }

	    /*------------------------------------------------------------------------*/

	    /**
	     * Attempts to invoke `func`, returning either the result or the caught error
	     * object. Any additional arguments are provided to `func` when it is invoked.
	     *
	     * @static
	     * @memberOf _
	     * @category Utility
	     * @param {Function} func The function to attempt.
	     * @returns {*} Returns the `func` result or error object.
	     * @example
	     *
	     * // avoid throwing errors for invalid selectors
	     * var elements = _.attempt(function(selector) {
	     *   return document.querySelectorAll(selector);
	     * }, '>_>');
	     *
	     * if (_.isError(elements)) {
	     *   elements = [];
	     * }
	     */
	    var attempt = restParam(function(func, args) {
	      try {
	        return func.apply(undefined, args);
	      } catch(e) {
	        return isError(e) ? e : new Error(e);
	      }
	    });

	    /**
	     * Creates a function that invokes `func` with the `this` binding of `thisArg`
	     * and arguments of the created function. If `func` is a property name the
	     * created callback returns the property value for a given element. If `func`
	     * is an object the created callback returns `true` for elements that contain
	     * the equivalent object properties, otherwise it returns `false`.
	     *
	     * @static
	     * @memberOf _
	     * @alias iteratee
	     * @category Utility
	     * @param {*} [func=_.identity] The value to convert to a callback.
	     * @param {*} [thisArg] The `this` binding of `func`.
	     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.
	     * @returns {Function} Returns the callback.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney', 'age': 36 },
	     *   { 'user': 'fred',   'age': 40 }
	     * ];
	     *
	     * // wrap to create custom callback shorthands
	     * _.callback = _.wrap(_.callback, function(callback, func, thisArg) {
	     *   var match = /^(.+?)__([gl]t)(.+)$/.exec(func);
	     *   if (!match) {
	     *     return callback(func, thisArg);
	     *   }
	     *   return function(object) {
	     *     return match[2] == 'gt'
	     *       ? object[match[1]] > match[3]
	     *       : object[match[1]] < match[3];
	     *   };
	     * });
	     *
	     * _.filter(users, 'age__gt36');
	     * // => [{ 'user': 'fred', 'age': 40 }]
	     */
	    function callback(func, thisArg, guard) {
	      if (guard && isIterateeCall(func, thisArg, guard)) {
	        thisArg = undefined;
	      }
	      return isObjectLike(func)
	        ? matches(func)
	        : baseCallback(func, thisArg);
	    }

	    /**
	     * Creates a function that returns `value`.
	     *
	     * @static
	     * @memberOf _
	     * @category Utility
	     * @param {*} value The value to return from the new function.
	     * @returns {Function} Returns the new function.
	     * @example
	     *
	     * var object = { 'user': 'fred' };
	     * var getter = _.constant(object);
	     *
	     * getter() === object;
	     * // => true
	     */
	    function constant(value) {
	      return function() {
	        return value;
	      };
	    }

	    /**
	     * This method returns the first argument provided to it.
	     *
	     * @static
	     * @memberOf _
	     * @category Utility
	     * @param {*} value Any value.
	     * @returns {*} Returns `value`.
	     * @example
	     *
	     * var object = { 'user': 'fred' };
	     *
	     * _.identity(object) === object;
	     * // => true
	     */
	    function identity(value) {
	      return value;
	    }

	    /**
	     * Creates a function that performs a deep comparison between a given object
	     * and `source`, returning `true` if the given object has equivalent property
	     * values, else `false`.
	     *
	     * **Note:** This method supports comparing arrays, booleans, `Date` objects,
	     * numbers, `Object` objects, regexes, and strings. Objects are compared by
	     * their own, not inherited, enumerable properties. For comparing a single
	     * own or inherited property value see `_.matchesProperty`.
	     *
	     * @static
	     * @memberOf _
	     * @category Utility
	     * @param {Object} source The object of property values to match.
	     * @returns {Function} Returns the new function.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney', 'age': 36, 'active': true },
	     *   { 'user': 'fred',   'age': 40, 'active': false }
	     * ];
	     *
	     * _.filter(users, _.matches({ 'age': 40, 'active': false }));
	     * // => [{ 'user': 'fred', 'age': 40, 'active': false }]
	     */
	    function matches(source) {
	      return baseMatches(baseClone(source, true));
	    }

	    /**
	     * Creates a function that compares the property value of `path` on a given
	     * object to `value`.
	     *
	     * **Note:** This method supports comparing arrays, booleans, `Date` objects,
	     * numbers, `Object` objects, regexes, and strings. Objects are compared by
	     * their own, not inherited, enumerable properties.
	     *
	     * @static
	     * @memberOf _
	     * @category Utility
	     * @param {Array|string} path The path of the property to get.
	     * @param {*} srcValue The value to match.
	     * @returns {Function} Returns the new function.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney' },
	     *   { 'user': 'fred' }
	     * ];
	     *
	     * _.find(users, _.matchesProperty('user', 'fred'));
	     * // => { 'user': 'fred' }
	     */
	    function matchesProperty(path, srcValue) {
	      return baseMatchesProperty(path, baseClone(srcValue, true));
	    }

	    /**
	     * Creates a function that invokes the method at `path` on a given object.
	     * Any additional arguments are provided to the invoked method.
	     *
	     * @static
	     * @memberOf _
	     * @category Utility
	     * @param {Array|string} path The path of the method to invoke.
	     * @param {...*} [args] The arguments to invoke the method with.
	     * @returns {Function} Returns the new function.
	     * @example
	     *
	     * var objects = [
	     *   { 'a': { 'b': { 'c': _.constant(2) } } },
	     *   { 'a': { 'b': { 'c': _.constant(1) } } }
	     * ];
	     *
	     * _.map(objects, _.method('a.b.c'));
	     * // => [2, 1]
	     *
	     * _.invoke(_.sortBy(objects, _.method(['a', 'b', 'c'])), 'a.b.c');
	     * // => [1, 2]
	     */
	    var method = restParam(function(path, args) {
	      return function(object) {
	        return invokePath(object, path, args);
	      };
	    });

	    /**
	     * The opposite of `_.method`; this method creates a function that invokes
	     * the method at a given path on `object`. Any additional arguments are
	     * provided to the invoked method.
	     *
	     * @static
	     * @memberOf _
	     * @category Utility
	     * @param {Object} object The object to query.
	     * @param {...*} [args] The arguments to invoke the method with.
	     * @returns {Function} Returns the new function.
	     * @example
	     *
	     * var array = _.times(3, _.constant),
	     *     object = { 'a': array, 'b': array, 'c': array };
	     *
	     * _.map(['a[2]', 'c[0]'], _.methodOf(object));
	     * // => [2, 0]
	     *
	     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));
	     * // => [2, 0]
	     */
	    var methodOf = restParam(function(object, args) {
	      return function(path) {
	        return invokePath(object, path, args);
	      };
	    });

	    /**
	     * Adds all own enumerable function properties of a source object to the
	     * destination object. If `object` is a function then methods are added to
	     * its prototype as well.
	     *
	     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to
	     * avoid conflicts caused by modifying the original.
	     *
	     * @static
	     * @memberOf _
	     * @category Utility
	     * @param {Function|Object} [object=lodash] The destination object.
	     * @param {Object} source The object of functions to add.
	     * @param {Object} [options] The options object.
	     * @param {boolean} [options.chain=true] Specify whether the functions added
	     *  are chainable.
	     * @returns {Function|Object} Returns `object`.
	     * @example
	     *
	     * function vowels(string) {
	     *   return _.filter(string, function(v) {
	     *     return /[aeiou]/i.test(v);
	     *   });
	     * }
	     *
	     * _.mixin({ 'vowels': vowels });
	     * _.vowels('fred');
	     * // => ['e']
	     *
	     * _('fred').vowels().value();
	     * // => ['e']
	     *
	     * _.mixin({ 'vowels': vowels }, { 'chain': false });
	     * _('fred').vowels();
	     * // => ['e']
	     */
	    function mixin(object, source, options) {
	      if (options == null) {
	        var isObj = isObject(source),
	            props = isObj ? keys(source) : undefined,
	            methodNames = (props && props.length) ? baseFunctions(source, props) : undefined;

	        if (!(methodNames ? methodNames.length : isObj)) {
	          methodNames = false;
	          options = source;
	          source = object;
	          object = this;
	        }
	      }
	      if (!methodNames) {
	        methodNames = baseFunctions(source, keys(source));
	      }
	      var chain = true,
	          index = -1,
	          isFunc = isFunction(object),
	          length = methodNames.length;

	      if (options === false) {
	        chain = false;
	      } else if (isObject(options) && 'chain' in options) {
	        chain = options.chain;
	      }
	      while (++index < length) {
	        var methodName = methodNames[index],
	            func = source[methodName];

	        object[methodName] = func;
	        if (isFunc) {
	          object.prototype[methodName] = (function(func) {
	            return function() {
	              var chainAll = this.__chain__;
	              if (chain || chainAll) {
	                var result = object(this.__wrapped__),
	                    actions = result.__actions__ = arrayCopy(this.__actions__);

	                actions.push({ 'func': func, 'args': arguments, 'thisArg': object });
	                result.__chain__ = chainAll;
	                return result;
	              }
	              return func.apply(object, arrayPush([this.value()], arguments));
	            };
	          }(func));
	        }
	      }
	      return object;
	    }

	    /**
	     * Reverts the `_` variable to its previous value and returns a reference to
	     * the `lodash` function.
	     *
	     * @static
	     * @memberOf _
	     * @category Utility
	     * @returns {Function} Returns the `lodash` function.
	     * @example
	     *
	     * var lodash = _.noConflict();
	     */
	    function noConflict() {
	      root._ = oldDash;
	      return this;
	    }

	    /**
	     * A no-operation function that returns `undefined` regardless of the
	     * arguments it receives.
	     *
	     * @static
	     * @memberOf _
	     * @category Utility
	     * @example
	     *
	     * var object = { 'user': 'fred' };
	     *
	     * _.noop(object) === undefined;
	     * // => true
	     */
	    function noop() {
	      // No operation performed.
	    }

	    /**
	     * Creates a function that returns the property value at `path` on a
	     * given object.
	     *
	     * @static
	     * @memberOf _
	     * @category Utility
	     * @param {Array|string} path The path of the property to get.
	     * @returns {Function} Returns the new function.
	     * @example
	     *
	     * var objects = [
	     *   { 'a': { 'b': { 'c': 2 } } },
	     *   { 'a': { 'b': { 'c': 1 } } }
	     * ];
	     *
	     * _.map(objects, _.property('a.b.c'));
	     * // => [2, 1]
	     *
	     * _.pluck(_.sortBy(objects, _.property(['a', 'b', 'c'])), 'a.b.c');
	     * // => [1, 2]
	     */
	    function property(path) {
	      return isKey(path) ? baseProperty(path) : basePropertyDeep(path);
	    }

	    /**
	     * The opposite of `_.property`; this method creates a function that returns
	     * the property value at a given path on `object`.
	     *
	     * @static
	     * @memberOf _
	     * @category Utility
	     * @param {Object} object The object to query.
	     * @returns {Function} Returns the new function.
	     * @example
	     *
	     * var array = [0, 1, 2],
	     *     object = { 'a': array, 'b': array, 'c': array };
	     *
	     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));
	     * // => [2, 0]
	     *
	     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));
	     * // => [2, 0]
	     */
	    function propertyOf(object) {
	      return function(path) {
	        return baseGet(object, toPath(path), path + '');
	      };
	    }

	    /**
	     * Creates an array of numbers (positive and/or negative) progressing from
	     * `start` up to, but not including, `end`. If `end` is not specified it is
	     * set to `start` with `start` then set to `0`. If `end` is less than `start`
	     * a zero-length range is created unless a negative `step` is specified.
	     *
	     * @static
	     * @memberOf _
	     * @category Utility
	     * @param {number} [start=0] The start of the range.
	     * @param {number} end The end of the range.
	     * @param {number} [step=1] The value to increment or decrement by.
	     * @returns {Array} Returns the new array of numbers.
	     * @example
	     *
	     * _.range(4);
	     * // => [0, 1, 2, 3]
	     *
	     * _.range(1, 5);
	     * // => [1, 2, 3, 4]
	     *
	     * _.range(0, 20, 5);
	     * // => [0, 5, 10, 15]
	     *
	     * _.range(0, -4, -1);
	     * // => [0, -1, -2, -3]
	     *
	     * _.range(1, 4, 0);
	     * // => [1, 1, 1]
	     *
	     * _.range(0);
	     * // => []
	     */
	    function range(start, end, step) {
	      if (step && isIterateeCall(start, end, step)) {
	        end = step = undefined;
	      }
	      start = +start || 0;
	      step = step == null ? 1 : (+step || 0);

	      if (end == null) {
	        end = start;
	        start = 0;
	      } else {
	        end = +end || 0;
	      }
	      // Use `Array(length)` so engines like Chakra and V8 avoid slower modes.
	      // See https://youtu.be/XAqIpGU8ZZk#t=17m25s for more details.
	      var index = -1,
	          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),
	          result = Array(length);

	      while (++index < length) {
	        result[index] = start;
	        start += step;
	      }
	      return result;
	    }

	    /**
	     * Invokes the iteratee function `n` times, returning an array of the results
	     * of each invocation. The `iteratee` is bound to `thisArg` and invoked with
	     * one argument; (index).
	     *
	     * @static
	     * @memberOf _
	     * @category Utility
	     * @param {number} n The number of times to invoke `iteratee`.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @param {*} [thisArg] The `this` binding of `iteratee`.
	     * @returns {Array} Returns the array of results.
	     * @example
	     *
	     * var diceRolls = _.times(3, _.partial(_.random, 1, 6, false));
	     * // => [3, 6, 4]
	     *
	     * _.times(3, function(n) {
	     *   mage.castSpell(n);
	     * });
	     * // => invokes `mage.castSpell(n)` three times with `n` of `0`, `1`, and `2`
	     *
	     * _.times(3, function(n) {
	     *   this.cast(n);
	     * }, mage);
	     * // => also invokes `mage.castSpell(n)` three times
	     */
	    function times(n, iteratee, thisArg) {
	      n = nativeFloor(n);

	      // Exit early to avoid a JSC JIT bug in Safari 8
	      // where `Array(0)` is treated as `Array(1)`.
	      if (n < 1 || !nativeIsFinite(n)) {
	        return [];
	      }
	      var index = -1,
	          result = Array(nativeMin(n, MAX_ARRAY_LENGTH));

	      iteratee = bindCallback(iteratee, thisArg, 1);
	      while (++index < n) {
	        if (index < MAX_ARRAY_LENGTH) {
	          result[index] = iteratee(index);
	        } else {
	          iteratee(index);
	        }
	      }
	      return result;
	    }

	    /**
	     * Generates a unique ID. If `prefix` is provided the ID is appended to it.
	     *
	     * @static
	     * @memberOf _
	     * @category Utility
	     * @param {string} [prefix] The value to prefix the ID with.
	     * @returns {string} Returns the unique ID.
	     * @example
	     *
	     * _.uniqueId('contact_');
	     * // => 'contact_104'
	     *
	     * _.uniqueId();
	     * // => '105'
	     */
	    function uniqueId(prefix) {
	      var id = ++idCounter;
	      return baseToString(prefix) + id;
	    }

	    /*------------------------------------------------------------------------*/

	    /**
	     * Adds two numbers.
	     *
	     * @static
	     * @memberOf _
	     * @category Math
	     * @param {number} augend The first number to add.
	     * @param {number} addend The second number to add.
	     * @returns {number} Returns the sum.
	     * @example
	     *
	     * _.add(6, 4);
	     * // => 10
	     */
	    function add(augend, addend) {
	      return (+augend || 0) + (+addend || 0);
	    }

	    /**
	     * Calculates `n` rounded up to `precision`.
	     *
	     * @static
	     * @memberOf _
	     * @category Math
	     * @param {number} n The number to round up.
	     * @param {number} [precision=0] The precision to round up to.
	     * @returns {number} Returns the rounded up number.
	     * @example
	     *
	     * _.ceil(4.006);
	     * // => 5
	     *
	     * _.ceil(6.004, 2);
	     * // => 6.01
	     *
	     * _.ceil(6040, -2);
	     * // => 6100
	     */
	    var ceil = createRound('ceil');

	    /**
	     * Calculates `n` rounded down to `precision`.
	     *
	     * @static
	     * @memberOf _
	     * @category Math
	     * @param {number} n The number to round down.
	     * @param {number} [precision=0] The precision to round down to.
	     * @returns {number} Returns the rounded down number.
	     * @example
	     *
	     * _.floor(4.006);
	     * // => 4
	     *
	     * _.floor(0.046, 2);
	     * // => 0.04
	     *
	     * _.floor(4060, -2);
	     * // => 4000
	     */
	    var floor = createRound('floor');

	    /**
	     * Gets the maximum value of `collection`. If `collection` is empty or falsey
	     * `-Infinity` is returned. If an iteratee function is provided it is invoked
	     * for each value in `collection` to generate the criterion by which the value
	     * is ranked. The `iteratee` is bound to `thisArg` and invoked with three
	     * arguments: (value, index, collection).
	     *
	     * If a property name is provided for `iteratee` the created `_.property`
	     * style callback returns the property value of the given element.
	     *
	     * If a value is also provided for `thisArg` the created `_.matchesProperty`
	     * style callback returns `true` for elements that have a matching property
	     * value, else `false`.
	     *
	     * If an object is provided for `iteratee` the created `_.matches` style
	     * callback returns `true` for elements that have the properties of the given
	     * object, else `false`.
	     *
	     * @static
	     * @memberOf _
	     * @category Math
	     * @param {Array|Object|string} collection The collection to iterate over.
	     * @param {Function|Object|string} [iteratee] The function invoked per iteration.
	     * @param {*} [thisArg] The `this` binding of `iteratee`.
	     * @returns {*} Returns the maximum value.
	     * @example
	     *
	     * _.max([4, 2, 8, 6]);
	     * // => 8
	     *
	     * _.max([]);
	     * // => -Infinity
	     *
	     * var users = [
	     *   { 'user': 'barney', 'age': 36 },
	     *   { 'user': 'fred',   'age': 40 }
	     * ];
	     *
	     * _.max(users, function(chr) {
	     *   return chr.age;
	     * });
	     * // => { 'user': 'fred', 'age': 40 }
	     *
	     * // using the `_.property` callback shorthand
	     * _.max(users, 'age');
	     * // => { 'user': 'fred', 'age': 40 }
	     */
	    var max = createExtremum(gt, NEGATIVE_INFINITY);

	    /**
	     * Gets the minimum value of `collection`. If `collection` is empty or falsey
	     * `Infinity` is returned. If an iteratee function is provided it is invoked
	     * for each value in `collection` to generate the criterion by which the value
	     * is ranked. The `iteratee` is bound to `thisArg` and invoked with three
	     * arguments: (value, index, collection).
	     *
	     * If a property name is provided for `iteratee` the created `_.property`
	     * style callback returns the property value of the given element.
	     *
	     * If a value is also provided for `thisArg` the created `_.matchesProperty`
	     * style callback returns `true` for elements that have a matching property
	     * value, else `false`.
	     *
	     * If an object is provided for `iteratee` the created `_.matches` style
	     * callback returns `true` for elements that have the properties of the given
	     * object, else `false`.
	     *
	     * @static
	     * @memberOf _
	     * @category Math
	     * @param {Array|Object|string} collection The collection to iterate over.
	     * @param {Function|Object|string} [iteratee] The function invoked per iteration.
	     * @param {*} [thisArg] The `this` binding of `iteratee`.
	     * @returns {*} Returns the minimum value.
	     * @example
	     *
	     * _.min([4, 2, 8, 6]);
	     * // => 2
	     *
	     * _.min([]);
	     * // => Infinity
	     *
	     * var users = [
	     *   { 'user': 'barney', 'age': 36 },
	     *   { 'user': 'fred',   'age': 40 }
	     * ];
	     *
	     * _.min(users, function(chr) {
	     *   return chr.age;
	     * });
	     * // => { 'user': 'barney', 'age': 36 }
	     *
	     * // using the `_.property` callback shorthand
	     * _.min(users, 'age');
	     * // => { 'user': 'barney', 'age': 36 }
	     */
	    var min = createExtremum(lt, POSITIVE_INFINITY);

	    /**
	     * Calculates `n` rounded to `precision`.
	     *
	     * @static
	     * @memberOf _
	     * @category Math
	     * @param {number} n The number to round.
	     * @param {number} [precision=0] The precision to round to.
	     * @returns {number} Returns the rounded number.
	     * @example
	     *
	     * _.round(4.006);
	     * // => 4
	     *
	     * _.round(4.006, 2);
	     * // => 4.01
	     *
	     * _.round(4060, -2);
	     * // => 4100
	     */
	    var round = createRound('round');

	    /**
	     * Gets the sum of the values in `collection`.
	     *
	     * @static
	     * @memberOf _
	     * @category Math
	     * @param {Array|Object|string} collection The collection to iterate over.
	     * @param {Function|Object|string} [iteratee] The function invoked per iteration.
	     * @param {*} [thisArg] The `this` binding of `iteratee`.
	     * @returns {number} Returns the sum.
	     * @example
	     *
	     * _.sum([4, 6]);
	     * // => 10
	     *
	     * _.sum({ 'a': 4, 'b': 6 });
	     * // => 10
	     *
	     * var objects = [
	     *   { 'n': 4 },
	     *   { 'n': 6 }
	     * ];
	     *
	     * _.sum(objects, function(object) {
	     *   return object.n;
	     * });
	     * // => 10
	     *
	     * // using the `_.property` callback shorthand
	     * _.sum(objects, 'n');
	     * // => 10
	     */
	    function sum(collection, iteratee, thisArg) {
	      if (thisArg && isIterateeCall(collection, iteratee, thisArg)) {
	        iteratee = undefined;
	      }
	      iteratee = getCallback(iteratee, thisArg, 3);
	      return iteratee.length == 1
	        ? arraySum(isArray(collection) ? collection : toIterable(collection), iteratee)
	        : baseSum(collection, iteratee);
	    }

	    /*------------------------------------------------------------------------*/

	    // Ensure wrappers are instances of `baseLodash`.
	    lodash.prototype = baseLodash.prototype;

	    LodashWrapper.prototype = baseCreate(baseLodash.prototype);
	    LodashWrapper.prototype.constructor = LodashWrapper;

	    LazyWrapper.prototype = baseCreate(baseLodash.prototype);
	    LazyWrapper.prototype.constructor = LazyWrapper;

	    // Add functions to the `Map` cache.
	    MapCache.prototype['delete'] = mapDelete;
	    MapCache.prototype.get = mapGet;
	    MapCache.prototype.has = mapHas;
	    MapCache.prototype.set = mapSet;

	    // Add functions to the `Set` cache.
	    SetCache.prototype.push = cachePush;

	    // Assign cache to `_.memoize`.
	    memoize.Cache = MapCache;

	    // Add functions that return wrapped values when chaining.
	    lodash.after = after;
	    lodash.ary = ary;
	    lodash.assign = assign;
	    lodash.at = at;
	    lodash.before = before;
	    lodash.bind = bind;
	    lodash.bindAll = bindAll;
	    lodash.bindKey = bindKey;
	    lodash.callback = callback;
	    lodash.chain = chain;
	    lodash.chunk = chunk;
	    lodash.compact = compact;
	    lodash.constant = constant;
	    lodash.countBy = countBy;
	    lodash.create = create;
	    lodash.curry = curry;
	    lodash.curryRight = curryRight;
	    lodash.debounce = debounce;
	    lodash.defaults = defaults;
	    lodash.defaultsDeep = defaultsDeep;
	    lodash.defer = defer;
	    lodash.delay = delay;
	    lodash.difference = difference;
	    lodash.drop = drop;
	    lodash.dropRight = dropRight;
	    lodash.dropRightWhile = dropRightWhile;
	    lodash.dropWhile = dropWhile;
	    lodash.fill = fill;
	    lodash.filter = filter;
	    lodash.flatten = flatten;
	    lodash.flattenDeep = flattenDeep;
	    lodash.flow = flow;
	    lodash.flowRight = flowRight;
	    lodash.forEach = forEach;
	    lodash.forEachRight = forEachRight;
	    lodash.forIn = forIn;
	    lodash.forInRight = forInRight;
	    lodash.forOwn = forOwn;
	    lodash.forOwnRight = forOwnRight;
	    lodash.functions = functions;
	    lodash.groupBy = groupBy;
	    lodash.indexBy = indexBy;
	    lodash.initial = initial;
	    lodash.intersection = intersection;
	    lodash.invert = invert;
	    lodash.invoke = invoke;
	    lodash.keys = keys;
	    lodash.keysIn = keysIn;
	    lodash.map = map;
	    lodash.mapKeys = mapKeys;
	    lodash.mapValues = mapValues;
	    lodash.matches = matches;
	    lodash.matchesProperty = matchesProperty;
	    lodash.memoize = memoize;
	    lodash.merge = merge;
	    lodash.method = method;
	    lodash.methodOf = methodOf;
	    lodash.mixin = mixin;
	    lodash.modArgs = modArgs;
	    lodash.negate = negate;
	    lodash.omit = omit;
	    lodash.once = once;
	    lodash.pairs = pairs;
	    lodash.partial = partial;
	    lodash.partialRight = partialRight;
	    lodash.partition = partition;
	    lodash.pick = pick;
	    lodash.pluck = pluck;
	    lodash.property = property;
	    lodash.propertyOf = propertyOf;
	    lodash.pull = pull;
	    lodash.pullAt = pullAt;
	    lodash.range = range;
	    lodash.rearg = rearg;
	    lodash.reject = reject;
	    lodash.remove = remove;
	    lodash.rest = rest;
	    lodash.restParam = restParam;
	    lodash.set = set;
	    lodash.shuffle = shuffle;
	    lodash.slice = slice;
	    lodash.sortBy = sortBy;
	    lodash.sortByAll = sortByAll;
	    lodash.sortByOrder = sortByOrder;
	    lodash.spread = spread;
	    lodash.take = take;
	    lodash.takeRight = takeRight;
	    lodash.takeRightWhile = takeRightWhile;
	    lodash.takeWhile = takeWhile;
	    lodash.tap = tap;
	    lodash.throttle = throttle;
	    lodash.thru = thru;
	    lodash.times = times;
	    lodash.toArray = toArray;
	    lodash.toPlainObject = toPlainObject;
	    lodash.transform = transform;
	    lodash.union = union;
	    lodash.uniq = uniq;
	    lodash.unzip = unzip;
	    lodash.unzipWith = unzipWith;
	    lodash.values = values;
	    lodash.valuesIn = valuesIn;
	    lodash.where = where;
	    lodash.without = without;
	    lodash.wrap = wrap;
	    lodash.xor = xor;
	    lodash.zip = zip;
	    lodash.zipObject = zipObject;
	    lodash.zipWith = zipWith;

	    // Add aliases.
	    lodash.backflow = flowRight;
	    lodash.collect = map;
	    lodash.compose = flowRight;
	    lodash.each = forEach;
	    lodash.eachRight = forEachRight;
	    lodash.extend = assign;
	    lodash.iteratee = callback;
	    lodash.methods = functions;
	    lodash.object = zipObject;
	    lodash.select = filter;
	    lodash.tail = rest;
	    lodash.unique = uniq;

	    // Add functions to `lodash.prototype`.
	    mixin(lodash, lodash);

	    /*------------------------------------------------------------------------*/

	    // Add functions that return unwrapped values when chaining.
	    lodash.add = add;
	    lodash.attempt = attempt;
	    lodash.camelCase = camelCase;
	    lodash.capitalize = capitalize;
	    lodash.ceil = ceil;
	    lodash.clone = clone;
	    lodash.cloneDeep = cloneDeep;
	    lodash.deburr = deburr;
	    lodash.endsWith = endsWith;
	    lodash.escape = escape;
	    lodash.escapeRegExp = escapeRegExp;
	    lodash.every = every;
	    lodash.find = find;
	    lodash.findIndex = findIndex;
	    lodash.findKey = findKey;
	    lodash.findLast = findLast;
	    lodash.findLastIndex = findLastIndex;
	    lodash.findLastKey = findLastKey;
	    lodash.findWhere = findWhere;
	    lodash.first = first;
	    lodash.floor = floor;
	    lodash.get = get;
	    lodash.gt = gt;
	    lodash.gte = gte;
	    lodash.has = has;
	    lodash.identity = identity;
	    lodash.includes = includes;
	    lodash.indexOf = indexOf;
	    lodash.inRange = inRange;
	    lodash.isArguments = isArguments;
	    lodash.isArray = isArray;
	    lodash.isBoolean = isBoolean;
	    lodash.isDate = isDate;
	    lodash.isElement = isElement;
	    lodash.isEmpty = isEmpty;
	    lodash.isEqual = isEqual;
	    lodash.isError = isError;
	    lodash.isFinite = isFinite;
	    lodash.isFunction = isFunction;
	    lodash.isMatch = isMatch;
	    lodash.isNaN = isNaN;
	    lodash.isNative = isNative;
	    lodash.isNull = isNull;
	    lodash.isNumber = isNumber;
	    lodash.isObject = isObject;
	    lodash.isPlainObject = isPlainObject;
	    lodash.isRegExp = isRegExp;
	    lodash.isString = isString;
	    lodash.isTypedArray = isTypedArray;
	    lodash.isUndefined = isUndefined;
	    lodash.kebabCase = kebabCase;
	    lodash.last = last;
	    lodash.lastIndexOf = lastIndexOf;
	    lodash.lt = lt;
	    lodash.lte = lte;
	    lodash.max = max;
	    lodash.min = min;
	    lodash.noConflict = noConflict;
	    lodash.noop = noop;
	    lodash.now = now;
	    lodash.pad = pad;
	    lodash.padLeft = padLeft;
	    lodash.padRight = padRight;
	    lodash.parseInt = parseInt;
	    lodash.random = random;
	    lodash.reduce = reduce;
	    lodash.reduceRight = reduceRight;
	    lodash.repeat = repeat;
	    lodash.result = result;
	    lodash.round = round;
	    lodash.runInContext = runInContext;
	    lodash.size = size;
	    lodash.snakeCase = snakeCase;
	    lodash.some = some;
	    lodash.sortedIndex = sortedIndex;
	    lodash.sortedLastIndex = sortedLastIndex;
	    lodash.startCase = startCase;
	    lodash.startsWith = startsWith;
	    lodash.sum = sum;
	    lodash.template = template;
	    lodash.trim = trim;
	    lodash.trimLeft = trimLeft;
	    lodash.trimRight = trimRight;
	    lodash.trunc = trunc;
	    lodash.unescape = unescape;
	    lodash.uniqueId = uniqueId;
	    lodash.words = words;

	    // Add aliases.
	    lodash.all = every;
	    lodash.any = some;
	    lodash.contains = includes;
	    lodash.eq = isEqual;
	    lodash.detect = find;
	    lodash.foldl = reduce;
	    lodash.foldr = reduceRight;
	    lodash.head = first;
	    lodash.include = includes;
	    lodash.inject = reduce;

	    mixin(lodash, (function() {
	      var source = {};
	      baseForOwn(lodash, function(func, methodName) {
	        if (!lodash.prototype[methodName]) {
	          source[methodName] = func;
	        }
	      });
	      return source;
	    }()), false);

	    /*------------------------------------------------------------------------*/

	    // Add functions capable of returning wrapped and unwrapped values when chaining.
	    lodash.sample = sample;

	    lodash.prototype.sample = function(n) {
	      if (!this.__chain__ && n == null) {
	        return sample(this.value());
	      }
	      return this.thru(function(value) {
	        return sample(value, n);
	      });
	    };

	    /*------------------------------------------------------------------------*/

	    /**
	     * The semantic version number.
	     *
	     * @static
	     * @memberOf _
	     * @type string
	     */
	    lodash.VERSION = VERSION;

	    // Assign default placeholders.
	    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {
	      lodash[methodName].placeholder = lodash;
	    });

	    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.
	    arrayEach(['drop', 'take'], function(methodName, index) {
	      LazyWrapper.prototype[methodName] = function(n) {
	        var filtered = this.__filtered__;
	        if (filtered && !index) {
	          return new LazyWrapper(this);
	        }
	        n = n == null ? 1 : nativeMax(nativeFloor(n) || 0, 0);

	        var result = this.clone();
	        if (filtered) {
	          result.__takeCount__ = nativeMin(result.__takeCount__, n);
	        } else {
	          result.__views__.push({ 'size': n, 'type': methodName + (result.__dir__ < 0 ? 'Right' : '') });
	        }
	        return result;
	      };

	      LazyWrapper.prototype[methodName + 'Right'] = function(n) {
	        return this.reverse()[methodName](n).reverse();
	      };
	    });

	    // Add `LazyWrapper` methods that accept an `iteratee` value.
	    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {
	      var type = index + 1,
	          isFilter = type != LAZY_MAP_FLAG;

	      LazyWrapper.prototype[methodName] = function(iteratee, thisArg) {
	        var result = this.clone();
	        result.__iteratees__.push({ 'iteratee': getCallback(iteratee, thisArg, 1), 'type': type });
	        result.__filtered__ = result.__filtered__ || isFilter;
	        return result;
	      };
	    });

	    // Add `LazyWrapper` methods for `_.first` and `_.last`.
	    arrayEach(['first', 'last'], function(methodName, index) {
	      var takeName = 'take' + (index ? 'Right' : '');

	      LazyWrapper.prototype[methodName] = function() {
	        return this[takeName](1).value()[0];
	      };
	    });

	    // Add `LazyWrapper` methods for `_.initial` and `_.rest`.
	    arrayEach(['initial', 'rest'], function(methodName, index) {
	      var dropName = 'drop' + (index ? '' : 'Right');

	      LazyWrapper.prototype[methodName] = function() {
	        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);
	      };
	    });

	    // Add `LazyWrapper` methods for `_.pluck` and `_.where`.
	    arrayEach(['pluck', 'where'], function(methodName, index) {
	      var operationName = index ? 'filter' : 'map',
	          createCallback = index ? baseMatches : property;

	      LazyWrapper.prototype[methodName] = function(value) {
	        return this[operationName](createCallback(value));
	      };
	    });

	    LazyWrapper.prototype.compact = function() {
	      return this.filter(identity);
	    };

	    LazyWrapper.prototype.reject = function(predicate, thisArg) {
	      predicate = getCallback(predicate, thisArg, 1);
	      return this.filter(function(value) {
	        return !predicate(value);
	      });
	    };

	    LazyWrapper.prototype.slice = function(start, end) {
	      start = start == null ? 0 : (+start || 0);

	      var result = this;
	      if (result.__filtered__ && (start > 0 || end < 0)) {
	        return new LazyWrapper(result);
	      }
	      if (start < 0) {
	        result = result.takeRight(-start);
	      } else if (start) {
	        result = result.drop(start);
	      }
	      if (end !== undefined) {
	        end = (+end || 0);
	        result = end < 0 ? result.dropRight(-end) : result.take(end - start);
	      }
	      return result;
	    };

	    LazyWrapper.prototype.takeRightWhile = function(predicate, thisArg) {
	      return this.reverse().takeWhile(predicate, thisArg).reverse();
	    };

	    LazyWrapper.prototype.toArray = function() {
	      return this.take(POSITIVE_INFINITY);
	    };

	    // Add `LazyWrapper` methods to `lodash.prototype`.
	    baseForOwn(LazyWrapper.prototype, function(func, methodName) {
	      var checkIteratee = /^(?:filter|map|reject)|While$/.test(methodName),
	          retUnwrapped = /^(?:first|last)$/.test(methodName),
	          lodashFunc = lodash[retUnwrapped ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName];

	      if (!lodashFunc) {
	        return;
	      }
	      lodash.prototype[methodName] = function() {
	        var args = retUnwrapped ? [1] : arguments,
	            chainAll = this.__chain__,
	            value = this.__wrapped__,
	            isHybrid = !!this.__actions__.length,
	            isLazy = value instanceof LazyWrapper,
	            iteratee = args[0],
	            useLazy = isLazy || isArray(value);

	        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {
	          // Avoid lazy use if the iteratee has a "length" value other than `1`.
	          isLazy = useLazy = false;
	        }
	        var interceptor = function(value) {
	          return (retUnwrapped && chainAll)
	            ? lodashFunc(value, 1)[0]
	            : lodashFunc.apply(undefined, arrayPush([value], args));
	        };

	        var action = { 'func': thru, 'args': [interceptor], 'thisArg': undefined },
	            onlyLazy = isLazy && !isHybrid;

	        if (retUnwrapped && !chainAll) {
	          if (onlyLazy) {
	            value = value.clone();
	            value.__actions__.push(action);
	            return func.call(value);
	          }
	          return lodashFunc.call(undefined, this.value())[0];
	        }
	        if (!retUnwrapped && useLazy) {
	          value = onlyLazy ? value : new LazyWrapper(this);
	          var result = func.apply(value, args);
	          result.__actions__.push(action);
	          return new LodashWrapper(result, chainAll);
	        }
	        return this.thru(interceptor);
	      };
	    });

	    // Add `Array` and `String` methods to `lodash.prototype`.
	    arrayEach(['join', 'pop', 'push', 'replace', 'shift', 'sort', 'splice', 'split', 'unshift'], function(methodName) {
	      var func = (/^(?:replace|split)$/.test(methodName) ? stringProto : arrayProto)[methodName],
	          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',
	          retUnwrapped = /^(?:join|pop|replace|shift)$/.test(methodName);

	      lodash.prototype[methodName] = function() {
	        var args = arguments;
	        if (retUnwrapped && !this.__chain__) {
	          return func.apply(this.value(), args);
	        }
	        return this[chainName](function(value) {
	          return func.apply(value, args);
	        });
	      };
	    });

	    // Map minified function names to their real names.
	    baseForOwn(LazyWrapper.prototype, function(func, methodName) {
	      var lodashFunc = lodash[methodName];
	      if (lodashFunc) {
	        var key = lodashFunc.name,
	            names = realNames[key] || (realNames[key] = []);

	        names.push({ 'name': methodName, 'func': lodashFunc });
	      }
	    });

	    realNames[createHybridWrapper(undefined, BIND_KEY_FLAG).name] = [{ 'name': 'wrapper', 'func': undefined }];

	    // Add functions to the lazy wrapper.
	    LazyWrapper.prototype.clone = lazyClone;
	    LazyWrapper.prototype.reverse = lazyReverse;
	    LazyWrapper.prototype.value = lazyValue;

	    // Add chaining functions to the `lodash` wrapper.
	    lodash.prototype.chain = wrapperChain;
	    lodash.prototype.commit = wrapperCommit;
	    lodash.prototype.concat = wrapperConcat;
	    lodash.prototype.plant = wrapperPlant;
	    lodash.prototype.reverse = wrapperReverse;
	    lodash.prototype.toString = wrapperToString;
	    lodash.prototype.run = lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;

	    // Add function aliases to the `lodash` wrapper.
	    lodash.prototype.collect = lodash.prototype.map;
	    lodash.prototype.head = lodash.prototype.first;
	    lodash.prototype.select = lodash.prototype.filter;
	    lodash.prototype.tail = lodash.prototype.rest;

	    return lodash;
	  }

	  /*--------------------------------------------------------------------------*/

	  // Export lodash.
	  var _ = runInContext();

	  // Some AMD build optimizers like r.js check for condition patterns like the following:
	  if (true) {
	    // Expose lodash to the global object when an AMD loader is present to avoid
	    // errors in cases where lodash is loaded by a script tag and not intended
	    // as an AMD module. See http://requirejs.org/docs/errors.html#mismatch for
	    // more details.
	    root._ = _;

	    // Define as an anonymous module so, through path mapping, it can be
	    // referenced as the "underscore" module.
	    !(__WEBPACK_AMD_DEFINE_RESULT__ = function() {
	      return _;
	    }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	  }
	  // Check for `exports` after `define` in case a build optimizer adds an `exports` object.
	  else if (freeExports && freeModule) {
	    // Export for Node.js or RingoJS.
	    if (moduleExports) {
	      (freeModule.exports = _)._ = _;
	    }
	    // Export for Rhino with CommonJS support.
	    else {
	      freeExports._ = _;
	    }
	  }
	  else {
	    // Export for a browser or Rhino.
	    root._ = _;
	  }
	}.call(this));

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(180)(module), (function() { return this; }())))

/***/ }),
/* 638 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _axios = __webpack_require__(253);

	var _axios2 = _interopRequireDefault(_axios);

	var _form_new_password = __webpack_require__(639);

	var _form_new_password2 = _interopRequireDefault(_form_new_password);

	var _modal = __webpack_require__(320);

	var _modal2 = _interopRequireDefault(_modal);

	var _spinner = __webpack_require__(321);

	var _spinner2 = _interopRequireDefault(_spinner);

	var _loading_text = __webpack_require__(322);

	var _loading_text2 = _interopRequireDefault(_loading_text);

	var _alert = __webpack_require__(568);

	var _alert2 = _interopRequireDefault(_alert);

	var _logo = __webpack_require__(630);

	var _logo2 = _interopRequireDefault(_logo);

	var _config = __webpack_require__(279);

	var _config2 = _interopRequireDefault(_config);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // 3rd Party


	// Internal Modules


	var NewPasswordPage = function (_Component) {
	    _inherits(NewPasswordPage, _Component);

	    function NewPasswordPage(props) {
	        _classCallCheck(this, NewPasswordPage);

	        var _this = _possibleConstructorReturn(this, (NewPasswordPage.__proto__ || Object.getPrototypeOf(NewPasswordPage)).call(this, props));

	        _this.state = {
	            submitting: false,
	            successMsg: '',
	            errorMsg: ''
	        };
	        return _this;
	    }

	    _createClass(NewPasswordPage, [{
	        key: 'render',
	        value: function render() {
	            return _react2.default.createElement(
	                'div',
	                { className: 'container h-100' },
	                _react2.default.createElement(
	                    'div',
	                    { className: 'row align-items-center justify-content-center h-100' },
	                    _react2.default.createElement(
	                        'div',
	                        { className: 'col-md-4' },
	                        _react2.default.createElement(_logo2.default, null),
	                        _react2.default.createElement(_form_new_password2.default, { onSubmit: this.onSubmit.bind(this) })
	                    ),
	                    this.state.submitting && _react2.default.createElement(
	                        _modal2.default,
	                        null,
	                        _react2.default.createElement(
	                            'div',
	                            { className: 'd-flex justify-content-center align-items-center' },
	                            _react2.default.createElement(
	                                'div',
	                                { className: 'mr-3' },
	                                _react2.default.createElement(_spinner2.default, null)
	                            ),
	                            _react2.default.createElement(_loading_text2.default, { message: 'A registar' })
	                        )
	                    ),
	                    this.state.successMsg && _react2.default.createElement(
	                        _alert2.default,
	                        { type: 'success', timeout: 2, timeoutCallback: this.resetStateOrRedirect.bind(this) },
	                        _react2.default.createElement(
	                            'strong',
	                            null,
	                            this.state.successMsg
	                        ),
	                        ' ',
	                        'A redireccionar para login...'
	                    ) || this.state.errorMsg && _react2.default.createElement(
	                        _alert2.default,
	                        { type: 'danger', timeout: 4, timeoutCallback: this.resetStateOrRedirect.bind(this) },
	                        _react2.default.createElement(
	                            'strong',
	                            null,
	                            this.state.errorMsg
	                        )
	                    )
	                )
	            );
	        }
	    }, {
	        key: 'resetStateOrRedirect',
	        value: function resetStateOrRedirect() {
	            if (this.state.successMsg) this.props.history.push('/login');else this.setState({ successMsg: '', errorMsg: '' });
	        }
	    }, {
	        key: 'onSubmit',
	        value: function onSubmit(values) {
	            var _this2 = this;

	            console.log('Submitting...', values);
	            var _props$match$params = this.props.match.params,
	                key = _props$match$params.key,
	                code = _props$match$params.code;


	            this.setState({ submitting: true });
	            (0, _axios2.default)({
	                method: 'post',
	                responseType: 'json',
	                url: _config2.default + '/login/resetPassword/' + key + '/' + code,
	                data: values
	            }).then(function (response) {
	                console.log('Password reset', response);
	                _this2.setState({ submitting: false, successMsg: 'Sucesso!' });
	            }).catch(function (error) {
	                console.log('Could not reset password', error);
	                _this2.setState({ submitting: false, errorMsg: error.response.data.output });
	            });
	        }
	    }]);

	    return NewPasswordPage;
	}(_react.Component);

	exports.default = NewPasswordPage;

/***/ }),
/* 639 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _reduxForm = __webpack_require__(332);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // 3rd Party


	var NewPasswordForm = function (_Component) {
	    _inherits(NewPasswordForm, _Component);

	    function NewPasswordForm() {
	        _classCallCheck(this, NewPasswordForm);

	        return _possibleConstructorReturn(this, (NewPasswordForm.__proto__ || Object.getPrototypeOf(NewPasswordForm)).apply(this, arguments));
	    }

	    _createClass(NewPasswordForm, [{
	        key: 'renderInput',
	        value: function renderInput(_ref) {
	            var input = _ref.input,
	                placeholder = _ref.placeholder,
	                type = _ref.type,
	                _ref$meta = _ref.meta,
	                touched = _ref$meta.touched,
	                error = _ref$meta.error;

	            return _react2.default.createElement(
	                'div',
	                { className: 'form-group' + (touched ? error ? ' has-danger' : ' has-success' : '') },
	                _react2.default.createElement(
	                    'div',
	                    { className: 'input-group input-group-lg' },
	                    _react2.default.createElement('input', _extends({
	                        className: 'form-control' + (touched ? error ? ' form-control-danger' : ' form-control-success' : ''),
	                        type: type,
	                        placeholder: placeholder
	                    }, input))
	                ),
	                _react2.default.createElement(
	                    'small',
	                    { className: 'form-control-feedback' },
	                    touched ? error : ''
	                )
	            );
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            // reduxForm injected props
	            var _props = this.props,
	                handleSubmit = _props.handleSubmit,
	                pristine = _props.pristine,
	                reset = _props.reset,
	                submitting = _props.submitting;


	            return _react2.default.createElement(
	                'form',
	                { noValidate: true, onSubmit: handleSubmit(this.props.onSubmit) },
	                _react2.default.createElement(_reduxForm.Field, {
	                    name: 'password',
	                    type: 'password',
	                    placeholder: 'Password',
	                    component: this.renderInput
	                }),
	                _react2.default.createElement(_reduxForm.Field, {
	                    name: 'password_confirm',
	                    type: 'password',
	                    placeholder: 'Confirmar Password',
	                    component: this.renderInput
	                }),
	                _react2.default.createElement(
	                    'button',
	                    {
	                        type: 'submit',
	                        className: 'btn btn-success form-control mt-2',
	                        disabled: pristine || submitting
	                    },
	                    'Alterar'
	                )
	            );
	        }
	    }]);

	    return NewPasswordForm;
	}(_react.Component);

	function validate(values) {
	    var errors = {};

	    if (!values.password) {
	        errors.password = 'Obrigatório';
	    } else if (values.password.length < 6) {
	        errors.password = 'Password demasiado curta';
	    }

	    if (!values.password_confirm) {
	        errors.password_confirm = 'Obrigatório';
	    } else if (values.password_confirm !== values.password) {
	        errors.password_confirm = 'As passwords devem coincidir';
	    }

	    return errors;
	}

	exports.default = (0, _reduxForm.reduxForm)({
	    form: 'NewPassword',
	    validate: validate
	})(NewPasswordForm);

/***/ }),
/* 640 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _axios = __webpack_require__(253);

	var _axios2 = _interopRequireDefault(_axios);

	var _modal = __webpack_require__(320);

	var _modal2 = _interopRequireDefault(_modal);

	var _spinner = __webpack_require__(321);

	var _spinner2 = _interopRequireDefault(_spinner);

	var _loading_text = __webpack_require__(322);

	var _loading_text2 = _interopRequireDefault(_loading_text);

	var _alert = __webpack_require__(568);

	var _alert2 = _interopRequireDefault(_alert);

	var _config = __webpack_require__(279);

	var _config2 = _interopRequireDefault(_config);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var ConfirmAccountPage = function (_Component) {
	    _inherits(ConfirmAccountPage, _Component);

	    function ConfirmAccountPage(props) {
	        _classCallCheck(this, ConfirmAccountPage);

	        var _this = _possibleConstructorReturn(this, (ConfirmAccountPage.__proto__ || Object.getPrototypeOf(ConfirmAccountPage)).call(this, props));

	        _this.state = {
	            errorMsg: '',
	            successMsg: ''
	        };
	        return _this;
	    }

	    _createClass(ConfirmAccountPage, [{
	        key: 'componentWillMount',
	        value: function componentWillMount() {
	            var _this2 = this;

	            var _props$match$params = this.props.match.params,
	                key = _props$match$params.key,
	                code = _props$match$params.code;


	            _axios2.default.get(_config2.default + '/register/confirm/' + key + '/' + code).then(function (response) {
	                console.log('Confirmed!', response);
	                _this2.setState({ successMsg: 'Conta confirmada!' });
	            }).catch(function (error) {
	                console.log('Could not confirm...', error);
	                _this2.setState({ errorMsg: 'Não foi possível verificar a conta' });
	            });
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            return _react2.default.createElement(
	                'div',
	                { className: 'h-100' },
	                !this.state.errorMsg && !this.state.successMsg && _react2.default.createElement(
	                    _modal2.default,
	                    null,
	                    _react2.default.createElement(
	                        'div',
	                        { className: 'd-flex justify-content-center align-items-center' },
	                        _react2.default.createElement(
	                            'div',
	                            { className: 'mr-3' },
	                            _react2.default.createElement(_spinner2.default, null)
	                        ),
	                        _react2.default.createElement(_loading_text2.default, { message: 'A confirmar conta' })
	                    )
	                ),
	                this.state.successMsg && _react2.default.createElement(
	                    _alert2.default,
	                    { type: 'success', timeout: 2, timeoutCallback: this.resetStateOrRedirect.bind(this) },
	                    _react2.default.createElement(
	                        'strong',
	                        null,
	                        this.state.successMsg
	                    ),
	                    ' ',
	                    'A redireccionar para login...'
	                ) || this.state.errorMsg && _react2.default.createElement(
	                    _alert2.default,
	                    { type: 'danger', timeout: 9999999999999999999, timeoutCallback: this.resetStateOrRedirect.bind(this) },
	                    _react2.default.createElement(
	                        'strong',
	                        null,
	                        this.state.errorMsg
	                    )
	                )
	            );
	        }
	    }, {
	        key: 'resetStateOrRedirect',
	        value: function resetStateOrRedirect() {
	            if (this.state.successMsg) this.props.history.push('/login');else this.setState({ successMsg: '', errorMsg: '' });
	        }
	    }]);

	    return ConfirmAccountPage;
	}(_react.Component);

	exports.default = ConfirmAccountPage;

/***/ }),
/* 641 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _redux = __webpack_require__(166);

	var _reduxForm = __webpack_require__(332);

	var _reducer_token = __webpack_require__(642);

	var _reducer_token2 = _interopRequireDefault(_reducer_token);

	var _reducer_report_types = __webpack_require__(643);

	var _reducer_report_types2 = _interopRequireDefault(_reducer_report_types);

	var _reducer_selected_type = __webpack_require__(644);

	var _reducer_selected_type2 = _interopRequireDefault(_reducer_selected_type);

	var _reducer_workers = __webpack_require__(645);

	var _reducer_workers2 = _interopRequireDefault(_reducer_workers);

	var _reducer_admin_info = __webpack_require__(646);

	var _reducer_admin_info2 = _interopRequireDefault(_reducer_admin_info);

	var _reducer_reports_by_type = __webpack_require__(647);

	var _reducer_reports_by_type2 = _interopRequireDefault(_reducer_reports_by_type);

	var _reducer_end_account = __webpack_require__(648);

	var _reducer_end_account2 = _interopRequireDefault(_reducer_end_account);

	var _reducer_load_notifications = __webpack_require__(649);

	var _reducer_load_notifications2 = _interopRequireDefault(_reducer_load_notifications);

	var _reducer_reports = __webpack_require__(650);

	var _reducer_reports2 = _interopRequireDefault(_reducer_reports);

	var _reducer_new_report_location = __webpack_require__(651);

	var _reducer_new_report_location2 = _interopRequireDefault(_reducer_new_report_location);

	var _reducer_new_report_types = __webpack_require__(652);

	var _reducer_new_report_types2 = _interopRequireDefault(_reducer_new_report_types);

	var _reducer_worker_reports = __webpack_require__(653);

	var _reducer_worker_reports2 = _interopRequireDefault(_reducer_worker_reports);

	var _reducer_select_report = __webpack_require__(654);

	var _reducer_select_report2 = _interopRequireDefault(_reducer_select_report);

	var _reducer_search_location = __webpack_require__(655);

	var _reducer_search_location2 = _interopRequireDefault(_reducer_search_location);

	var _reducer_interval_report = __webpack_require__(656);

	var _reducer_interval_report2 = _interopRequireDefault(_reducer_interval_report);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/*
	    Objecto que representa a store do Redux.

	    Define-se aqui quais as propriedades (items) da store (estado global da aplicação).

	    Faz o mapping entre propriedades e os seus reducers.
	*/
	var rootReducer = (0, _redux.combineReducers)({
	    // generic store properties
	    form: _reduxForm.reducer,
	    token: _reducer_token2.default,
	    // basic store properties
	    reports: _reducer_reports2.default,
	    newReportLocation: _reducer_new_report_location2.default,
	    newReportTypes: _reducer_new_report_types2.default,
	    searchLocation: _reducer_search_location2.default,
	    intervalReport: _reducer_interval_report2.default,
	    // core store properties
	    reportTypes: _reducer_report_types2.default,
	    selectedReportType: _reducer_selected_type2.default,
	    workers: _reducer_workers2.default,
	    generalAdminInfo: _reducer_admin_info2.default,
	    reportsByType: _reducer_reports_by_type2.default,
	    endAccounts: _reducer_end_account2.default,
	    notificationList: _reducer_load_notifications2.default,
	    workerReports: _reducer_worker_reports2.default,
	    selectedWorkerReports: _reducer_select_report2.default
	});

	// Internal Modules
	// 3rd Party
	exports.default = rootReducer;

/***/ }),
/* 642 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; // Internal Modules


	exports.default = function () {
	    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;
	    var action = arguments[1];

	    switch (action.type) {
	        case _actions_token.LOGIN + '_PENDING':
	            {
	                return _extends({}, state, {
	                    loggingIn: true
	                });
	            }
	        case _actions_token.LOGIN + '_REJECTED':
	            {
	                var error = _extends({}, action.payload);
	                return _extends({}, state, {
	                    loggingIn: false,
	                    token: null,
	                    error: action.payload
	                });
	            }
	        case _actions_token.LOGIN + '_FULFILLED':
	            {
	                // Save token to localstorage
	                localStorage.setItem('token', JSON.stringify(action.payload.data));

	                return _extends({}, state, {
	                    loggingIn: false,
	                    error: null,
	                    token: action.payload.data
	                });
	            }
	        case _actions_token.LOGOUT + '_PENDING':
	            {
	                return _extends({}, state, {
	                    loggingOut: true
	                });
	            }
	        // Mesmo comportamento em caso de erro ou sucesso
	        case _actions_token.LOGOUT + '_REJECTED':
	        case _actions_token.LOGOUT + '_FULFILLED':
	            {
	                // Remove token from localstorage
	                localStorage.removeItem('token');

	                return _extends({}, state, {
	                    loggingOut: false,
	                    token: null
	                });
	            }
	        case _actions_token.FETCHED_TOKEN_FROM_LOCALSTORAGE:
	            {
	                if (action.payload && validToken(action.payload)) {
	                    return _extends({}, state, {
	                        token: action.payload
	                    });
	                }
	                return _extends({}, state);
	            }
	        case _actions_network.RESET_NETWORK_STATUSES:
	            {
	                return _extends({}, state, {
	                    error: null,
	                    loggingIn: false,
	                    loggingOut: false
	                });
	            }
	    }
	    return state;
	};

	var _actions_token = __webpack_require__(323);

	var _actions_network = __webpack_require__(634);

	var initialState = {
	    loggingIn: false,
	    loggingOut: false,
	    error: null,
	    token: null
	};

	// Checks whether fetched token is valid
	function validToken(token) {
	    if (!token) return false;
	    if (Date.now() > token.expirationDate) {
	        localStorage.removeItem('token');
	        return false;
	    }
	    return true;
	}

/***/ }),
/* 643 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	exports.default = function () {
	    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
	    var action = arguments[1];

	    switch (action.type) {
	        case _actions_report_types.LOAD_TYPES:
	            {
	                var data = action.payload;
	                console.log("data", data.data);
	                return data.data;
	            }
	    }
	    return state;
	};

	var _actions_report_types = __webpack_require__(583);

/***/ }),
/* 644 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	exports.default = function () {
	    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
	    var action = arguments[1];

	    switch (action.type) {
	        case _actions_report_types.SELECTED_TYPE:
	            {
	                var data = action.payload;
	                console.log(data);
	                return data;
	            }
	    }
	    return state;
	};

	var _actions_report_types = __webpack_require__(583);

/***/ }),
/* 645 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	exports.default = function () {
	    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
	    var action = arguments[1];

	    switch (action.type) {
	        case _actions_workers.LOAD_WORKERS_SUCCESS:
	            {
	                var data = action.payload;
	                if (data.data) {
	                    return data.data;
	                }
	            }
	    }
	    return state;
	};

	var _actions_workers = __webpack_require__(586);

/***/ }),
/* 646 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	exports.default = function () {
	    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
	    var action = arguments[1];

	    switch (action.type) {
	        case _actions_workers.LOAD_ADMIN_INFO:
	            {
	                var data = action.payload;
	                console.log(data.data);
	                return data.data;
	            }
	    }
	    return state;
	};

	var _actions_workers = __webpack_require__(586);

/***/ }),
/* 647 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	exports.default = function () {
	    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
	    var action = arguments[1];

	    switch (action.type) {
	        case _actions_reports.LOAD_REPORTS_BY_TYPE:
	            {
	                var data = action.payload;
	                console.log(data.data);
	                return data.data;
	            }
	    }
	    return state;
	};

	var _actions_reports = __webpack_require__(327);

/***/ }),
/* 648 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	exports.default = function () {
	    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
	    var action = arguments[1];

	    switch (action.type) {
	        case _actions_end_users.LOAD_END_USERS:
	            {
	                var data = action.payload;
	                if (data.data) {
	                    console.log("users", data.data);
	                    return data.data;
	                }
	            }
	    }
	    return state;
	};

	var _actions_end_users = __webpack_require__(610);

/***/ }),
/* 649 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	exports.default = function () {
	    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
	    var action = arguments[1];

	    switch (action.type) {
	        case _actions_notifications.LOAD_NOTIFICATIONS:
	            {
	                var data = action.payload;
	                console.log("notifications", data.data);
	                return data.data;
	            }
	    }
	    return state;
	};

	var _actions_notifications = __webpack_require__(324);

/***/ }),
/* 650 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	exports.default = function () {
	    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;
	    var action = arguments[1];

	    switch (action.type) {
	        case _actions_reports.GET_REPORTS_REPLACE:
	            {
	                var reports = action.payload;
	                var reportsRep = buildReportsObject(reports);
	                return _extends({}, state, {
	                    reports: reportsRep,
	                    fetching: true
	                });
	            }
	        case _actions_reports.GET_REPORTS_ADD:
	            {
	                var addedReports = action.payload;
	                if (addedReports.length > 0) {
	                    var addedReportsAsObject = buildReportsObject(addedReports);
	                    var _reports = Object.assign({}, state.reports, addedReportsAsObject);
	                    return _extends({}, state, {
	                        reports: _reports
	                    });
	                } else {
	                    return _extends({}, state, {
	                        fetching: false
	                    });
	                }
	            }
	        case _actions_reports.SET_HIDDEN:
	            {
	                return _extends({}, state, { hidden: true });
	            }
	        case _actions_reports.UNSET_HIDDEN:
	            {
	                return _extends({}, state, { hidden: false });
	            }
	        case _actions_reports.COMPARE_SUGGESTIONS:
	            {
	                var suggestions = action.payload;
	                if (!suggestions || suggestions.length === 0) return state;

	                var missing = [];
	                var _iteratorNormalCompletion = true;
	                var _didIteratorError = false;
	                var _iteratorError = undefined;

	                try {
	                    for (var _iterator = suggestions[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
	                        var suggestion = _step.value;

	                        if (!state.reports[suggestion.id]) {
	                            missing.push(suggestion);
	                        }
	                    }
	                } catch (err) {
	                    _didIteratorError = true;
	                    _iteratorError = err;
	                } finally {
	                    try {
	                        if (!_iteratorNormalCompletion && _iterator.return) {
	                            _iterator.return();
	                        }
	                    } finally {
	                        if (_didIteratorError) {
	                            throw _iteratorError;
	                        }
	                    }
	                }

	                if (missing.length > 0) {
	                    console.log('Something missing on reports from suggestions:', missing);
	                    var _addedReportsAsObject = buildReportsObject(missing);
	                    var _reports2 = Object.assign({}, state.reports, _addedReportsAsObject);
	                    return _extends({}, state, {
	                        reports: _reports2
	                    });
	                } else {
	                    console.log('Nothing missing on reports from suggestions');
	                    return state;
	                }
	            }
	        case _actions_reports.ADD_STATE_FILTER:
	            {
	                var reportState = action.payload;

	                var newState = _extends({}, state, {
	                    stateFilters: [].concat(_toConsumableArray(state.stateFilters), [reportState])
	                });
	                console.log('New filter:', newState.stateFilters);

	                return newState;
	            }
	        case _actions_reports.REMOVE_STATE_FILTER:
	            {
	                var _reportState = action.payload;
	                var i = state.stateFilters.findIndex(function (element) {
	                    return element === _reportState;
	                });

	                var _newState = _extends({}, state, {
	                    stateFilters: [].concat(_toConsumableArray(state.stateFilters.slice(0, i)), _toConsumableArray(state.stateFilters.slice(i + 1)))
	                });
	                console.log('New filter:', _newState.stateFilters);

	                return _newState;
	            }
	        case _actions_reports.TOGGLE_FOLLOW:
	            {
	                var report = state.reports[action.payload];
	                console.log('Report to change:', report);

	                var changedReport = {
	                    report: _extends({}, report.report, {
	                        isFollowing: !report.report.isFollowing
	                    }),
	                    marker: report.marker
	                };
	                console.log('Changed report:', changedReport);

	                var _reports3 = _extends({}, state.reports, _defineProperty({}, action.payload, changedReport));
	                console.log('NEW STATE', _reports3);

	                return _extends({}, state, {
	                    reports: _reports3
	                });
	            }
	    }
	    return state;
	};

	var _actions_reports = __webpack_require__(327);

	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

	function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

	//
	var markerColors = {
	    "Pendente": "959595",
	    "Em Resolução": "FCF004",
	    "Resolvido": "00FF00",
	    "Rejeitado": "FF0000"
	};

	var ownMarkerIcons = {
	    "Pendente": "icon_pendente.png",
	    "Em Resolução": "icon_resolucao.png",
	    "Resolvido": "icon_resolvido.png",
	    "Rejeitado": "icon_rejeitado.png"
	};

	//
	function buildReportsObject(reports) {
	    var user = JSON.parse(localStorage.getItem('token')).user;
	    var obj = {};
	    for (var i in reports) {
	        var report = reports[i];
	        var id = report.id;
	        obj[id] = { report: report };
	        var icon = void 0;
	        if (user === report.user) {
	            icon = {
	                url: "/img/" + ownMarkerIcons[report.statusDescription],
	                scaledSize: new google.maps.Size(35, 50)
	                //origin: new google.maps.Point(0,0),
	                //anchor: new google.maps.Point(0, 0)
	            };
	        } else {
	            icon = "https://chart.apis.google.com/chart?chst=d_map_pin_letter&chld=%E2%80%A2|" + markerColors[report.statusDescription];
	        }
	        /*const icon = user === report.user ?
	            `/img/${ownMarkerIcons[report.statusDescription]}` :
	            `https://chart.apis.google.com/chart?chst=d_map_pin_letter&chld=%E2%80%A2|${markerColors[report.statusDescription]}`;*/
	        obj[id].marker = new google.maps.Marker({
	            icon: icon,
	            position: { lat: report.lat, lng: report.lng }
	        });
	    }
	    return obj;
	}

	var initialState = {
	    reports: null,
	    fetching: false,
	    hidden: false,
	    stateFilters: ['Pendente', 'Rejeitado', 'Resolvido', 'Em Resolução']
	};

/***/ }),
/* 651 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	exports.default = function () {
	    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
	    var action = arguments[1];

	    switch (action.type) {
	        case _actions_reports.SET_NEW_REPORT_LOCATION:
	            {
	                console.log('Set location reducer', action.payload);
	                return action.payload;
	            }
	        case _actions_reports.UNSET_NEW_REPORT_LOCATION:
	            {
	                return null;
	            }
	    }
	    return state;
	};

	var _actions_reports = __webpack_require__(327);

/***/ }),
/* 652 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	exports.default = function () {
	    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
	    var action = arguments[1];

	    switch (action.type) {
	        case _actions_reports.GET_NEW_REPORT_TYPES + '_FULFILLED':
	            {
	                console.log('REDUCER - Got new report types', action.payload.data);
	                return action.payload.data;
	            }
	    }
	    return state;
	};

	var _actions_reports = __webpack_require__(327);

/***/ }),
/* 653 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	exports.default = function () {
	    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;
	    var action = arguments[1];

	    switch (action.type) {
	        case _actions_workers.LOAD_WORKER_REPORTS:
	            {
	                var data = action.payload;
	                console.log("data", data.data);
	                return _extends({}, state, {
	                    allReports: data.data,
	                    reports: data.data,
	                    fetching: true
	                });
	            }
	        case _actions_reports.ADD_STATE_FILTER:
	            {
	                var reportState = action.payload;

	                console.log("REPORTS", state.reports);

	                var reports = state.reports;
	                for (var r in state.allReports) {
	                    if (state.allReports[r].statusDescription === reportState) {
	                        reports.push(state.allReports[r]);
	                    }
	                }

	                var newState = _extends({}, state, {
	                    reports: reports,
	                    stateFilters: [].concat(_toConsumableArray(state.stateFilters), [reportState])
	                });
	                console.log('New filter:', newState.stateFilters);

	                return newState;
	            }
	        case _actions_reports.REMOVE_STATE_FILTER:
	            {
	                var _reportState = action.payload;
	                var i = state.stateFilters.findIndex(function (element) {
	                    return element === _reportState;
	                });

	                var _reports = [];
	                for (var r in state.reports) {
	                    if (state.reports[r].statusDescription !== _reportState) {
	                        _reports.push(state.reports[r]);
	                    }
	                }

	                var _newState = _extends({}, state, {
	                    reports: _reports,
	                    stateFilters: [].concat(_toConsumableArray(state.stateFilters.slice(0, i)), _toConsumableArray(state.stateFilters.slice(i + 1)))
	                });
	                console.log('New filter:', _newState.stateFilters);

	                return _newState;
	            }
	    }
	    return state;
	};

	var _actions_workers = __webpack_require__(586);

	var _actions_reports = __webpack_require__(327);

	function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

	var initialState = {
	    allReports: [],
	    reports: [],
	    fetching: false,
	    hidden: false,
	    stateFilters: ['Pendente', 'Rejeitado', 'Resolvido', 'Em Resolução']
	};

/***/ }),
/* 654 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	exports.default = function () {
	    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
	    var action = arguments[1];

	    switch (action.type) {
	        case _actions_reports.SELECT_REPORT_ITEM:
	            {
	                return [].concat(_toConsumableArray(state), [action.payload]);
	            }
	        case _actions_reports.UNSELECT_REPORT_ITEM:
	            {
	                return [].concat(_toConsumableArray(state.slice(0, action.payload)), _toConsumableArray(state.slice(action.payload + 1)));
	            }
	        case _actions_reports.CLEAR_SELECTED_REPORTS:
	            {
	                return [];
	            }

	    }
	    return state;
	};

	var _actions_reports = __webpack_require__(327);

	function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

/***/ }),
/* 655 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	exports.default = function () {
	    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
	    var action = arguments[1];

	    switch (action.type) {
	        case _actions_search_location.SEARCH_LOCATION:
	            {
	                return action.payload;
	            }
	    }
	    return state;
	};

	var _actions_search_location = __webpack_require__(325);

/***/ }),
/* 656 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	exports.default = function () {
	    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
	    var action = arguments[1];

	    switch (action.type) {
	        case _actions_interval_reports.SET_INTERVAL_REPORTS:
	            {
	                return action.payload;
	            }
	        case _actions_interval_reports.UNSET_INTERVAL_REPORTS:
	            {
	                window.clearInterval(state);
	                return null;
	            }
	    }
	    return state;
	};

	var _actions_interval_reports = __webpack_require__(326);

/***/ })
/******/ ]);